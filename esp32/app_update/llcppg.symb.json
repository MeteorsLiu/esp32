[
  {
    "mangle": "esp_ota_abort",
    "c++": "esp_ota_abort(esp_ota_handle_t)",
    "go": "EspOtaHandleT.EspOtaAbort"
  },
  {
    "mangle": "esp_ota_begin",
    "c++": "esp_ota_begin(const esp_partition_t *, size_t, esp_ota_handle_t *)",
    "go": "EspOtaBegin"
  },
  {
    "mangle": "esp_ota_check_rollback_is_possible",
    "c++": "esp_ota_check_rollback_is_possible()",
    "go": "EspOtaCheckRollbackIsPossible"
  },
  {
    "mangle": "esp_ota_end",
    "c++": "esp_ota_end(esp_ota_handle_t)",
    "go": "EspOtaHandleT.EspOtaEnd"
  },
  {
    "mangle": "esp_ota_erase_last_boot_app_partition",
    "c++": "esp_ota_erase_last_boot_app_partition()",
    "go": "EspOtaEraseLastBootAppPartition"
  },
  {
    "mangle": "esp_ota_get_app_description",
    "c++": "esp_ota_get_app_description()",
    "go": "EspOtaGetAppDescription"
  },
  {
    "mangle": "esp_ota_get_app_elf_sha256",
    "c++": "esp_ota_get_app_elf_sha256(char *, size_t)",
    "go": "EspOtaGetAppElfSha256"
  },
  {
    "mangle": "esp_ota_get_app_partition_count",
    "c++": "esp_ota_get_app_partition_count()",
    "go": "EspOtaGetAppPartitionCount"
  },
  {
    "mangle": "esp_ota_get_boot_partition",
    "c++": "esp_ota_get_boot_partition()",
    "go": "EspOtaGetBootPartition"
  },
  {
    "mangle": "esp_ota_get_bootloader_description",
    "c++": "esp_ota_get_bootloader_description(const esp_partition_t *, esp_bootloader_desc_t *)",
    "go": "EspOtaGetBootloaderDescription"
  },
  {
    "mangle": "esp_ota_get_last_invalid_partition",
    "c++": "esp_ota_get_last_invalid_partition()",
    "go": "EspOtaGetLastInvalidPartition"
  },
  {
    "mangle": "esp_ota_get_next_update_partition",
    "c++": "esp_ota_get_next_update_partition(const esp_partition_t *)",
    "go": "EspOtaGetNextUpdatePartition"
  },
  {
    "mangle": "esp_ota_get_partition_description",
    "c++": "esp_ota_get_partition_description(const esp_partition_t *, esp_app_desc_t *)",
    "go": "EspOtaGetPartitionDescription"
  },
  {
    "mangle": "esp_ota_get_running_partition",
    "c++": "esp_ota_get_running_partition()",
    "go": "EspOtaGetRunningPartition"
  },
  {
    "mangle": "esp_ota_get_state_partition",
    "c++": "esp_ota_get_state_partition(const esp_partition_t *, esp_ota_img_states_t *)",
    "go": "EspOtaGetStatePartition"
  },
  {
    "mangle": "esp_ota_mark_app_invalid_rollback_and_reboot",
    "c++": "esp_ota_mark_app_invalid_rollback_and_reboot()",
    "go": "EspOtaMarkAppInvalidRollbackAndReboot"
  },
  {
    "mangle": "esp_ota_mark_app_valid_cancel_rollback",
    "c++": "esp_ota_mark_app_valid_cancel_rollback()",
    "go": "EspOtaMarkAppValidCancelRollback"
  },
  {
    "mangle": "esp_ota_resume",
    "c++": "esp_ota_resume(const esp_partition_t *, const size_t, const size_t, esp_ota_handle_t *)",
    "go": "EspOtaResume"
  },
  {
    "mangle": "esp_ota_set_boot_partition",
    "c++": "esp_ota_set_boot_partition(const esp_partition_t *)",
    "go": "EspOtaSetBootPartition"
  },
  {
    "mangle": "esp_ota_write",
    "c++": "esp_ota_write(esp_ota_handle_t, const void *, size_t)",
    "go": "EspOtaHandleT.EspOtaWrite"
  },
  {
    "mangle": "esp_ota_write_with_offset",
    "c++": "esp_ota_write_with_offset(esp_ota_handle_t, const void *, size_t, uint32_t)",
    "go": "EspOtaHandleT.EspOtaWriteWithOffset"
  }
]