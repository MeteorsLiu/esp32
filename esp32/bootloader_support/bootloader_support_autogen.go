package bootloader_support

import (
	"github.com/goplus/lib/c"
	_ "unsafe"
)

const X_NEWLIB_VERSION_H__ = 1
const X_NEWLIB_VERSION = "4.3.0"
const X__NEWLIB__ = 4
const X__NEWLIB_MINOR__ = 3
const X__NEWLIB_PATCHLEVEL__ = 0
const X_DEFAULT_SOURCE = 1
const X_POSIX_SOURCE = 1
const X_ATFILE_SOURCE = 1
const X__ATFILE_VISIBLE = 1
const X__BSD_VISIBLE = 1
const X__GNU_VISIBLE = 0
const X__ISO_C_VISIBLE = 2011
const X__LARGEFILE_VISIBLE = 0
const X__MISC_VISIBLE = 1
const X__POSIX_VISIBLE = 200809
const X__SVID_VISIBLE = 1
const X__XSI_VISIBLE = 0
const X__SSP_FORTIFY_LEVEL = 0
const X_POSIX_THREADS = 1
const X_POSIX_TIMEOUTS = 1
const X_POSIX_TIMERS = 1
const X_UNIX98_THREAD_MUTEX_ATTRIBUTES = 1
const X__have_longlong64 = 1
const X__have_long32 = 1
const X___int8_t_defined = 1
const X___int16_t_defined = 1
const X___int32_t_defined = 1
const X___int64_t_defined = 1
const X___int_least8_t_defined = 1
const X___int_least16_t_defined = 1
const X___int_least32_t_defined = 1
const X___int_least64_t_defined = 1
const X__INT8 = "hh"
const X__INT16 = "h"
const X__INT64 = "ll"
const X__FAST8 = "hh"
const X__FAST16 = "h"
const X__FAST64 = "ll"
const X__LEAST8 = "hh"
const X__LEAST16 = "h"
const X__LEAST64 = "ll"
const X__int8_t_defined = 1
const X__int16_t_defined = 1
const X__int32_t_defined = 1
const X__int64_t_defined = 1
const X__int_least8_t_defined = 1
const X__int_least16_t_defined = 1
const X__int_least32_t_defined = 1
const X__int_least64_t_defined = 1
const X__int_fast8_t_defined = 1
const X__int_fast16_t_defined = 1
const X__int_fast32_t_defined = 1
const X__int_fast64_t_defined = 1
const X__bool_true_false_are_defined = 1
const True = 1
const False = 0
const CONFIG_SOC_BROWNOUT_RESET_SUPPORTED = "Not determined"
const CONFIG_SOC_TWAI_BRP_DIV_SUPPORTED = "Not determined"
const CONFIG_SOC_DPORT_WORKAROUND = "Not determined"
const CONFIG_SOC_CAPS_ECO_VER_MAX = 301
const CONFIG_SOC_ADC_SUPPORTED = 1
const CONFIG_SOC_DAC_SUPPORTED = 1
const CONFIG_SOC_UART_SUPPORTED = 1
const CONFIG_SOC_MCPWM_SUPPORTED = 1
const CONFIG_SOC_GPTIMER_SUPPORTED = 1
const CONFIG_SOC_SDMMC_HOST_SUPPORTED = 1
const CONFIG_SOC_BT_SUPPORTED = 1
const CONFIG_SOC_PCNT_SUPPORTED = 1
const CONFIG_SOC_PHY_SUPPORTED = 1
const CONFIG_SOC_WIFI_SUPPORTED = 1
const CONFIG_SOC_SDIO_SLAVE_SUPPORTED = 1
const CONFIG_SOC_TWAI_SUPPORTED = 1
const CONFIG_SOC_EFUSE_SUPPORTED = 1
const CONFIG_SOC_EMAC_SUPPORTED = 1
const CONFIG_SOC_ULP_SUPPORTED = 1
const CONFIG_SOC_CCOMP_TIMER_SUPPORTED = 1
const CONFIG_SOC_RTC_FAST_MEM_SUPPORTED = 1
const CONFIG_SOC_RTC_SLOW_MEM_SUPPORTED = 1
const CONFIG_SOC_RTC_MEM_SUPPORTED = 1
const CONFIG_SOC_I2S_SUPPORTED = 1
const CONFIG_SOC_RMT_SUPPORTED = 1
const CONFIG_SOC_SDM_SUPPORTED = 1
const CONFIG_SOC_GPSPI_SUPPORTED = 1
const CONFIG_SOC_LEDC_SUPPORTED = 1
const CONFIG_SOC_I2C_SUPPORTED = 1
const CONFIG_SOC_SUPPORT_COEXISTENCE = 1
const CONFIG_SOC_AES_SUPPORTED = 1
const CONFIG_SOC_MPI_SUPPORTED = 1
const CONFIG_SOC_SHA_SUPPORTED = 1
const CONFIG_SOC_FLASH_ENC_SUPPORTED = 1
const CONFIG_SOC_SECURE_BOOT_SUPPORTED = 1
const CONFIG_SOC_TOUCH_SENSOR_SUPPORTED = 1
const CONFIG_SOC_BOD_SUPPORTED = 1
const CONFIG_SOC_ULP_FSM_SUPPORTED = 1
const CONFIG_SOC_CLK_TREE_SUPPORTED = 1
const CONFIG_SOC_MPU_SUPPORTED = 1
const CONFIG_SOC_WDT_SUPPORTED = 1
const CONFIG_SOC_SPI_FLASH_SUPPORTED = 1
const CONFIG_SOC_RNG_SUPPORTED = 1
const CONFIG_SOC_LIGHT_SLEEP_SUPPORTED = 1
const CONFIG_SOC_DEEP_SLEEP_SUPPORTED = 1
const CONFIG_SOC_LP_PERIPH_SHARE_INTERRUPT = 1
const CONFIG_SOC_PM_SUPPORTED = 1
const CONFIG_SOC_DPORT_WORKAROUND_DIS_INTERRUPT_LVL = 5
const CONFIG_SOC_XTAL_SUPPORT_26M = 1
const CONFIG_SOC_XTAL_SUPPORT_40M = 1
const CONFIG_SOC_XTAL_SUPPORT_AUTO_DETECT = 1
const CONFIG_SOC_ADC_RTC_CTRL_SUPPORTED = 1
const CONFIG_SOC_ADC_DIG_CTRL_SUPPORTED = 1
const CONFIG_SOC_ADC_DMA_SUPPORTED = 1
const CONFIG_SOC_ADC_PERIPH_NUM = 2
const CONFIG_SOC_ADC_MAX_CHANNEL_NUM = 10
const CONFIG_SOC_ADC_ATTEN_NUM = 4
const CONFIG_SOC_ADC_DIGI_CONTROLLER_NUM = 2
const CONFIG_SOC_ADC_PATT_LEN_MAX = 16
const CONFIG_SOC_ADC_DIGI_MIN_BITWIDTH = 9
const CONFIG_SOC_ADC_DIGI_MAX_BITWIDTH = 12
const CONFIG_SOC_ADC_DIGI_RESULT_BYTES = 2
const CONFIG_SOC_ADC_DIGI_DATA_BYTES_PER_CONV = 4
const CONFIG_SOC_ADC_DIGI_MONITOR_NUM = 0
const CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_HIGH = 2
const CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_LOW = 20
const CONFIG_SOC_ADC_RTC_MIN_BITWIDTH = 9
const CONFIG_SOC_ADC_RTC_MAX_BITWIDTH = 12
const CONFIG_SOC_ADC_SHARED_POWER = 1
const CONFIG_SOC_SHARED_IDCACHE_SUPPORTED = 1
const CONFIG_SOC_IDCACHE_PER_CORE = 1
const CONFIG_SOC_CPU_CORES_NUM = 2
const CONFIG_SOC_CPU_INTR_NUM = 32
const CONFIG_SOC_CPU_HAS_FPU = 1
const CONFIG_SOC_HP_CPU_HAS_MULTIPLE_CORES = 1
const CONFIG_SOC_CPU_BREAKPOINTS_NUM = 2
const CONFIG_SOC_CPU_WATCHPOINTS_NUM = 2
const CONFIG_SOC_CPU_WATCHPOINT_MAX_REGION_SIZE = 64
const CONFIG_SOC_DAC_CHAN_NUM = 2
const CONFIG_SOC_DAC_RESOLUTION = 8
const CONFIG_SOC_DAC_DMA_16BIT_ALIGN = 1
const CONFIG_SOC_GPIO_PORT = 1
const CONFIG_SOC_GPIO_PIN_COUNT = 40
const CONFIG_SOC_GPIO_VALID_GPIO_MASK = 0xFFFFFFFFFF
const CONFIG_SOC_GPIO_IN_RANGE_MAX = 39
const CONFIG_SOC_GPIO_OUT_RANGE_MAX = 33
const CONFIG_SOC_GPIO_VALID_DIGITAL_IO_PAD_MASK = 0xEF0FEA
const CONFIG_SOC_GPIO_CLOCKOUT_BY_IO_MUX = 1
const CONFIG_SOC_GPIO_CLOCKOUT_CHANNEL_NUM = 3
const CONFIG_SOC_GPIO_SUPPORT_HOLD_IO_IN_DSLP = 1
const CONFIG_SOC_I2C_NUM = 2
const CONFIG_SOC_HP_I2C_NUM = 2
const CONFIG_SOC_I2C_FIFO_LEN = 32
const CONFIG_SOC_I2C_CMD_REG_NUM = 16
const CONFIG_SOC_I2C_SUPPORT_SLAVE = 1
const CONFIG_SOC_I2C_SUPPORT_APB = 1
const CONFIG_SOC_I2C_SUPPORT_10BIT_ADDR = 1
const CONFIG_SOC_I2C_STOP_INDEPENDENT = 1
const CONFIG_SOC_I2S_NUM = 2
const CONFIG_SOC_I2S_HW_VERSION_1 = 1
const CONFIG_SOC_I2S_SUPPORTS_APLL = 1
const CONFIG_SOC_I2S_SUPPORTS_PLL_F160M = 1
const CONFIG_SOC_I2S_SUPPORTS_PDM = 1
const CONFIG_SOC_I2S_SUPPORTS_PDM_TX = 1
const CONFIG_SOC_I2S_PDM_MAX_TX_LINES = 1
const CONFIG_SOC_I2S_SUPPORTS_PDM_RX = 1
const CONFIG_SOC_I2S_PDM_MAX_RX_LINES = 1
const CONFIG_SOC_I2S_SUPPORTS_ADC_DAC = 1
const CONFIG_SOC_I2S_SUPPORTS_ADC = 1
const CONFIG_SOC_I2S_SUPPORTS_DAC = 1
const CONFIG_SOC_I2S_SUPPORTS_LCD_CAMERA = 1
const CONFIG_SOC_I2S_MAX_DATA_WIDTH = 24
const CONFIG_SOC_I2S_TRANS_SIZE_ALIGN_WORD = 1
const CONFIG_SOC_I2S_LCD_I80_VARIANT = 1
const CONFIG_SOC_LCD_I80_SUPPORTED = 1
const CONFIG_SOC_LCD_I80_BUSES = 2
const CONFIG_SOC_LCD_I80_BUS_WIDTH = 24
const CONFIG_SOC_LEDC_HAS_TIMER_SPECIFIC_MUX = 1
const CONFIG_SOC_LEDC_SUPPORT_APB_CLOCK = 1
const CONFIG_SOC_LEDC_SUPPORT_REF_TICK = 1
const CONFIG_SOC_LEDC_SUPPORT_HS_MODE = 1
const CONFIG_SOC_LEDC_TIMER_NUM = 4
const CONFIG_SOC_LEDC_CHANNEL_NUM = 8
const CONFIG_SOC_LEDC_TIMER_BIT_WIDTH = 20
const CONFIG_SOC_MCPWM_GROUPS = 2
const CONFIG_SOC_MCPWM_TIMERS_PER_GROUP = 3
const CONFIG_SOC_MCPWM_OPERATORS_PER_GROUP = 3
const CONFIG_SOC_MCPWM_COMPARATORS_PER_OPERATOR = 2
const CONFIG_SOC_MCPWM_GENERATORS_PER_OPERATOR = 2
const CONFIG_SOC_MCPWM_TRIGGERS_PER_OPERATOR = 2
const CONFIG_SOC_MCPWM_GPIO_FAULTS_PER_GROUP = 3
const CONFIG_SOC_MCPWM_CAPTURE_TIMERS_PER_GROUP = 1
const CONFIG_SOC_MCPWM_CAPTURE_CHANNELS_PER_TIMER = 3
const CONFIG_SOC_MCPWM_GPIO_SYNCHROS_PER_GROUP = 3
const CONFIG_SOC_MMU_PERIPH_NUM = 2
const CONFIG_SOC_MMU_LINEAR_ADDRESS_REGION_NUM = 3
const CONFIG_SOC_MPU_MIN_REGION_SIZE = 0x20000000
const CONFIG_SOC_MPU_REGIONS_MAX_NUM = 8
const CONFIG_SOC_PCNT_GROUPS = 1
const CONFIG_SOC_PCNT_UNITS_PER_GROUP = 8
const CONFIG_SOC_PCNT_CHANNELS_PER_UNIT = 2
const CONFIG_SOC_PCNT_THRES_POINT_PER_UNIT = 2
const CONFIG_SOC_RMT_GROUPS = 1
const CONFIG_SOC_RMT_TX_CANDIDATES_PER_GROUP = 8
const CONFIG_SOC_RMT_RX_CANDIDATES_PER_GROUP = 8
const CONFIG_SOC_RMT_CHANNELS_PER_GROUP = 8
const CONFIG_SOC_RMT_MEM_WORDS_PER_CHANNEL = 64
const CONFIG_SOC_RMT_SUPPORT_REF_TICK = 1
const CONFIG_SOC_RMT_SUPPORT_APB = 1
const CONFIG_SOC_RMT_CHANNEL_CLK_INDEPENDENT = 1
const CONFIG_SOC_RTCIO_PIN_COUNT = 18
const CONFIG_SOC_RTCIO_INPUT_OUTPUT_SUPPORTED = 1
const CONFIG_SOC_RTCIO_HOLD_SUPPORTED = 1
const CONFIG_SOC_RTCIO_WAKE_SUPPORTED = 1
const CONFIG_SOC_SDM_GROUPS = 1
const CONFIG_SOC_SDM_CHANNELS_PER_GROUP = 8
const CONFIG_SOC_SDM_CLK_SUPPORT_APB = 1
const CONFIG_SOC_SPI_HD_BOTH_INOUT_SUPPORTED = 1
const CONFIG_SOC_SPI_AS_CS_SUPPORTED = 1
const CONFIG_SOC_SPI_PERIPH_NUM = 3
const CONFIG_SOC_SPI_DMA_CHAN_NUM = 2
const CONFIG_SOC_SPI_MAX_CS_NUM = 3
const CONFIG_SOC_SPI_SUPPORT_CLK_APB = 1
const CONFIG_SOC_SPI_MAXIMUM_BUFFER_SIZE = 64
const CONFIG_SOC_SPI_MAX_PRE_DIVIDER = 8192
const CONFIG_SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED = 1
const CONFIG_SOC_TIMER_GROUPS = 2
const CONFIG_SOC_TIMER_GROUP_TIMERS_PER_GROUP = 2
const CONFIG_SOC_TIMER_GROUP_COUNTER_BIT_WIDTH = 64
const CONFIG_SOC_TIMER_GROUP_TOTAL_TIMERS = 4
const CONFIG_SOC_TIMER_GROUP_SUPPORT_APB = 1
const CONFIG_SOC_LP_TIMER_BIT_WIDTH_LO = 32
const CONFIG_SOC_LP_TIMER_BIT_WIDTH_HI = 16
const CONFIG_SOC_TOUCH_SENSOR_VERSION = 1
const CONFIG_SOC_TOUCH_SENSOR_NUM = 10
const CONFIG_SOC_TOUCH_SAMPLE_CFG_NUM = 1
const CONFIG_SOC_TWAI_CONTROLLER_NUM = 1
const CONFIG_SOC_TWAI_BRP_MIN = 2
const CONFIG_SOC_TWAI_CLK_SUPPORT_APB = 1
const CONFIG_SOC_TWAI_SUPPORT_MULTI_ADDRESS_LAYOUT = 1
const CONFIG_SOC_UART_NUM = 3
const CONFIG_SOC_UART_HP_NUM = 3
const CONFIG_SOC_UART_SUPPORT_APB_CLK = 1
const CONFIG_SOC_UART_SUPPORT_REF_TICK = 1
const CONFIG_SOC_UART_FIFO_LEN = 128
const CONFIG_SOC_UART_BITRATE_MAX = 5000000
const CONFIG_SOC_SPIRAM_SUPPORTED = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_CONFIG_GPIO_BY_EFUSE = 1
const CONFIG_SOC_SHA_SUPPORT_PARALLEL_ENG = 1
const CONFIG_SOC_SHA_ENDIANNESS_BE = 1
const CONFIG_SOC_SHA_SUPPORT_SHA1 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA256 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA384 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512 = 1
const CONFIG_SOC_MPI_MEM_BLOCKS_NUM = 4
const CONFIG_SOC_MPI_OPERATIONS_NUM = 1
const CONFIG_SOC_RSA_MAX_BIT_LEN = 4096
const CONFIG_SOC_AES_SUPPORT_AES_128 = 1
const CONFIG_SOC_AES_SUPPORT_AES_192 = 1
const CONFIG_SOC_AES_SUPPORT_AES_256 = 1
const CONFIG_SOC_SECURE_BOOT_V1 = 1
const CONFIG_SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 1
const CONFIG_SOC_FLASH_ENCRYPTED_XTS_AES_BLOCK_MAX = 32
const CONFIG_SOC_PHY_DIG_REGS_MEM_SIZE = 21
const CONFIG_SOC_PM_SUPPORT_EXT0_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_EXT1_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_EXT_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_TOUCH_SENSOR_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_RTC_PERIPH_PD = 1
const CONFIG_SOC_PM_SUPPORT_RTC_FAST_MEM_PD = 1
const CONFIG_SOC_PM_SUPPORT_RTC_SLOW_MEM_PD = 1
const CONFIG_SOC_PM_SUPPORT_RC_FAST_PD = 1
const CONFIG_SOC_PM_SUPPORT_VDDSDIO_PD = 1
const CONFIG_SOC_PM_SUPPORT_MODEM_PD = 1
const CONFIG_SOC_CONFIGURABLE_VDDSDIO_SUPPORTED = 1
const CONFIG_SOC_PM_MODEM_PD_BY_SW = 1
const CONFIG_SOC_CLK_APLL_SUPPORTED = 1
const CONFIG_SOC_CLK_RC_FAST_D256_SUPPORTED = 1
const CONFIG_SOC_RTC_SLOW_CLK_SUPPORT_RC_FAST_D256 = 1
const CONFIG_SOC_CLK_RC_FAST_SUPPORT_CALIBRATION = 1
const CONFIG_SOC_CLK_XTAL32K_SUPPORTED = 1
const CONFIG_SOC_SDMMC_USE_IOMUX = 1
const CONFIG_SOC_SDMMC_NUM_SLOTS = 2
const CONFIG_SOC_WIFI_WAPI_SUPPORT = 1
const CONFIG_SOC_WIFI_CSI_SUPPORT = 1
const CONFIG_SOC_WIFI_MESH_SUPPORT = 1
const CONFIG_SOC_WIFI_SUPPORT_VARIABLE_BEACON_WINDOW = 1
const CONFIG_SOC_WIFI_NAN_SUPPORT = 1
const CONFIG_SOC_BLE_SUPPORTED = 1
const CONFIG_SOC_BLE_MESH_SUPPORTED = 1
const CONFIG_SOC_BT_CLASSIC_SUPPORTED = 1
const CONFIG_SOC_BLUFI_SUPPORTED = 1
const CONFIG_SOC_BT_H2C_ENC_KEY_CTRL_ENH_VSC_SUPPORTED = 1
const CONFIG_SOC_ULP_HAS_ADC = 1
const CONFIG_SOC_PHY_COMBO_MODULE = 1
const CONFIG_SOC_EMAC_RMII_CLK_OUT_INTERNAL_LOOPBACK = 1
const CONFIG_IDF_CMAKE = 1
const CONFIG_IDF_TOOLCHAIN = "gcc"
const CONFIG_IDF_TOOLCHAIN_GCC = 1
const CONFIG_IDF_TARGET_ARCH_XTENSA = 1
const CONFIG_IDF_TARGET_ARCH = "xtensa"
const CONFIG_IDF_TARGET = "esp32"
const CONFIG_IDF_INIT_VERSION = "5.4.2"
const CONFIG_IDF_TARGET_ESP32 = 1
const CONFIG_IDF_FIRMWARE_CHIP_ID = 0x0000
const CONFIG_APP_BUILD_TYPE_APP_2NDBOOT = 1
const CONFIG_APP_BUILD_GENERATE_BINARIES = 1
const CONFIG_APP_BUILD_BOOTLOADER = 1
const CONFIG_APP_BUILD_USE_FLASH_SECTIONS = 1
const CONFIG_BOOTLOADER_COMPILE_TIME_DATE = 1
const CONFIG_BOOTLOADER_PROJECT_VER = 1
const CONFIG_BOOTLOADER_OFFSET_IN_FLASH = 0x1000
const CONFIG_BOOTLOADER_COMPILER_OPTIMIZATION_SIZE = 1
const CONFIG_BOOTLOADER_LOG_LEVEL_INFO = 1
const CONFIG_BOOTLOADER_LOG_LEVEL = 3
const CONFIG_BOOTLOADER_LOG_TIMESTAMP_SOURCE_CPU_TICKS = 1
const CONFIG_BOOTLOADER_FLASH_XMC_SUPPORT = 1
const CONFIG_BOOTLOADER_VDDSDIO_BOOST_1_9V = 1
const CONFIG_BOOTLOADER_REGION_PROTECTION_ENABLE = 1
const CONFIG_BOOTLOADER_WDT_ENABLE = 1
const CONFIG_BOOTLOADER_WDT_TIME_MS = 9000
const CONFIG_BOOTLOADER_RESERVE_RTC_SIZE = 0x0
const CONFIG_SECURE_BOOT_V1_SUPPORTED = 1
const CONFIG_APP_COMPILE_TIME_DATE = 1
const CONFIG_APP_RETRIEVE_LEN_ELF_SHA = 9
const CONFIG_ESP_ROM_HAS_CRC_LE = 1
const CONFIG_ESP_ROM_HAS_CRC_BE = 1
const CONFIG_ESP_ROM_HAS_MZ_CRC32 = 1
const CONFIG_ESP_ROM_HAS_JPEG_DECODE = 1
const CONFIG_ESP_ROM_HAS_UART_BUF_SWITCH = 1
const CONFIG_ESP_ROM_NEEDS_SWSETUP_WORKAROUND = 1
const CONFIG_ESP_ROM_HAS_NEWLIB = 1
const CONFIG_ESP_ROM_HAS_NEWLIB_NANO_FORMAT = 1
const CONFIG_ESP_ROM_HAS_NEWLIB_32BIT_TIME = 1
const CONFIG_ESP_ROM_HAS_SW_FLOAT = 1
const CONFIG_ESP_ROM_SUPPORT_DEEP_SLEEP_WAKEUP_STUB = 1
const CONFIG_ESP_ROM_HAS_OUTPUT_PUTC_FUNC = 1
const CONFIG_ESPTOOLPY_FLASHMODE_DIO = 1
const CONFIG_ESPTOOLPY_FLASH_SAMPLE_MODE_STR = 1
const CONFIG_ESPTOOLPY_FLASHMODE = "dio"
const CONFIG_ESPTOOLPY_FLASHFREQ_40M = 1
const CONFIG_ESPTOOLPY_FLASHFREQ = "40m"
const CONFIG_ESPTOOLPY_FLASHSIZE_2MB = 1
const CONFIG_ESPTOOLPY_FLASHSIZE = "2MB"
const CONFIG_ESPTOOLPY_BEFORE_RESET = 1
const CONFIG_ESPTOOLPY_BEFORE = "default_reset"
const CONFIG_ESPTOOLPY_AFTER_RESET = 1
const CONFIG_ESPTOOLPY_AFTER = "hard_reset"
const CONFIG_ESPTOOLPY_MONITOR_BAUD = 115200
const CONFIG_PARTITION_TABLE_SINGLE_APP = 1
const CONFIG_PARTITION_TABLE_CUSTOM_FILENAME = "partitions.csv"
const CONFIG_PARTITION_TABLE_FILENAME = "partitions_singleapp.csv"
const CONFIG_PARTITION_TABLE_OFFSET = 0x8000
const CONFIG_PARTITION_TABLE_MD5 = 1
const CONFIG_COMPILER_OPTIMIZATION_DEBUG = 1
const CONFIG_COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE = 1
const CONFIG_COMPILER_ASSERT_NDEBUG_EVALUATE = 1
const CONFIG_COMPILER_FLOAT_LIB_FROM_GCCLIB = 1
const CONFIG_COMPILER_OPTIMIZATION_ASSERTION_LEVEL = 2
const CONFIG_COMPILER_HIDE_PATHS_MACROS = 1
const CONFIG_COMPILER_STACK_CHECK_MODE_NONE = 1
const CONFIG_COMPILER_DISABLE_DEFAULT_ERRORS = 1
const CONFIG_COMPILER_RT_LIB_GCCLIB = 1
const CONFIG_COMPILER_RT_LIB_NAME = "gcc"
const CONFIG_COMPILER_ORPHAN_SECTIONS_WARNING = 1
const CONFIG_APPTRACE_DEST_NONE = 1
const CONFIG_APPTRACE_DEST_UART_NONE = 1
const CONFIG_APPTRACE_UART_TASK_PRIO = 1
const CONFIG_APPTRACE_LOCK_ENABLE = 1
const CONFIG_TWAI_ERRATA_FIX_BUS_OFF_REC = 1
const CONFIG_TWAI_ERRATA_FIX_TX_INTR_LOST = 1
const CONFIG_TWAI_ERRATA_FIX_RX_FRAME_INVALID = 1
const CONFIG_TWAI_ERRATA_FIX_RX_FIFO_CORRUPT = 1
const CONFIG_TWAI_ERRATA_FIX_LISTEN_ONLY_DOM = 1
const CONFIG_ADC_DISABLE_DAC = 1
const CONFIG_ADC_CAL_EFUSE_TP_ENABLE = 1
const CONFIG_ADC_CAL_EFUSE_VREF_ENABLE = 1
const CONFIG_ADC_CAL_LUT_ENABLE = 1
const CONFIG_EFUSE_CODE_SCHEME_COMPAT_3_4 = 1
const CONFIG_EFUSE_MAX_BLK_LEN = 192
const CONFIG_ESP_TLS_USING_MBEDTLS = 1
const CONFIG_ADC_CALI_EFUSE_TP_ENABLE = 1
const CONFIG_ADC_CALI_EFUSE_VREF_ENABLE = 1
const CONFIG_ADC_CALI_LUT_ENABLE = 1
const CONFIG_ADC_DISABLE_DAC_OUTPUT = 1
const CONFIG_ESP_COEX_ENABLED = 1
const CONFIG_ESP_ERR_TO_NAME_LOOKUP = 1
const CONFIG_DAC_DMA_AUTO_16BIT_ALIGN = 1
const CONFIG_GPTIMER_ISR_HANDLER_IN_IRAM = 1
const CONFIG_GPTIMER_OBJ_CACHE_SAFE = 1
const CONFIG_SPI_MASTER_ISR_IN_IRAM = 1
const CONFIG_SPI_SLAVE_ISR_IN_IRAM = 1
const CONFIG_ETH_ENABLED = 1
const CONFIG_ETH_USE_ESP32_EMAC = 1
const CONFIG_ETH_PHY_INTERFACE_RMII = 1
const CONFIG_ETH_RMII_CLK_INPUT = 1
const CONFIG_ETH_RMII_CLK_IN_GPIO = 0
const CONFIG_ETH_DMA_BUFFER_SIZE = 512
const CONFIG_ETH_DMA_RX_BUFFER_NUM = 10
const CONFIG_ETH_DMA_TX_BUFFER_NUM = 10
const CONFIG_ETH_USE_SPI_ETHERNET = 1
const CONFIG_ESP_EVENT_POST_FROM_ISR = 1
const CONFIG_ESP_EVENT_POST_FROM_IRAM_ISR = 1
const CONFIG_ESP_GDBSTUB_ENABLED = 1
const CONFIG_ESP_GDBSTUB_SUPPORT_TASKS = 1
const CONFIG_ESP_GDBSTUB_MAX_TASKS = 32
const CONFIG_ESPHID_TASK_SIZE_BT = 2048
const CONFIG_ESPHID_TASK_SIZE_BLE = 4096
const CONFIG_ESP_HTTP_CLIENT_ENABLE_HTTPS = 1
const CONFIG_ESP_HTTP_CLIENT_EVENT_POST_TIMEOUT = 2000
const CONFIG_HTTPD_MAX_REQ_HDR_LEN = 512
const CONFIG_HTTPD_MAX_URI_LEN = 512
const CONFIG_HTTPD_ERR_RESP_NO_DELAY = 1
const CONFIG_HTTPD_PURGE_BUF_LEN = 32
const CONFIG_HTTPD_SERVER_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP_HTTPS_OTA_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP_HTTPS_SERVER_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP32_REV_MIN_0 = 1
const CONFIG_ESP32_REV_MIN = 0
const CONFIG_ESP32_REV_MIN_FULL = 0
const CONFIG_ESP_REV_MIN_FULL = 0
const CONFIG_ESP32_REV_MAX_FULL = 399
const CONFIG_ESP_REV_MAX_FULL = 399
const CONFIG_ESP_EFUSE_BLOCK_REV_MIN_FULL = 0
const CONFIG_ESP_EFUSE_BLOCK_REV_MAX_FULL = 99
const CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_STA = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_AP = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_BT = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_ETH = 1
const CONFIG_ESP_MAC_UNIVERSAL_MAC_ADDRESSES_FOUR = 1
const CONFIG_ESP_MAC_UNIVERSAL_MAC_ADDRESSES = 4
const CONFIG_ESP32_UNIVERSAL_MAC_ADDRESSES_FOUR = 1
const CONFIG_ESP32_UNIVERSAL_MAC_ADDRESSES = 4
const CONFIG_ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND = 1
const CONFIG_ESP_SLEEP_RTC_BUS_ISO_WORKAROUND = 1
const CONFIG_ESP_SLEEP_WAIT_FLASH_READY_EXTRA_DELAY = 2000
const CONFIG_ESP_SLEEP_GPIO_ENABLE_INTERNAL_RESISTORS = 1
const CONFIG_RTC_CLK_SRC_INT_RC = 1
const CONFIG_RTC_CLK_CAL_CYCLES = 1024
const CONFIG_XTAL_FREQ_40 = 1
const CONFIG_XTAL_FREQ = 40
const CONFIG_ESP_SPI_BUS_LOCK_ISR_FUNCS_IN_IRAM = 1
const CONFIG_ESP_NETIF_IP_LOST_TIMER_INTERVAL = 120
const CONFIG_ESP_NETIF_TCPIP_LWIP = 1
const CONFIG_ESP_NETIF_USES_TCPIP_WITH_BSD_API = 1
const CONFIG_ESP_NETIF_REPORT_DATA_TRAFFIC = 1
const CONFIG_ESP_PHY_ENABLED = 1
const CONFIG_ESP_PHY_CALIBRATION_AND_DATA_STORAGE = 1
const CONFIG_ESP_PHY_MAX_WIFI_TX_POWER = 20
const CONFIG_ESP_PHY_MAX_TX_POWER = 20
const CONFIG_ESP_PHY_RF_CAL_PARTIAL = 1
const CONFIG_ESP_PHY_CALIBRATION_MODE = 0
const CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_160 = 1
const CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ = 160
const CONFIG_ESP32_TRACEMEM_RESERVE_DRAM = 0x0
const CONFIG_ESP_SYSTEM_PANIC_PRINT_REBOOT = 1
const CONFIG_ESP_SYSTEM_PANIC_REBOOT_DELAY_SECONDS = 0
const CONFIG_ESP_SYSTEM_EVENT_QUEUE_SIZE = 32
const CONFIG_ESP_SYSTEM_EVENT_TASK_STACK_SIZE = 2304
const CONFIG_ESP_MAIN_TASK_STACK_SIZE = 3584
const CONFIG_ESP_MAIN_TASK_AFFINITY_CPU0 = 1
const CONFIG_ESP_MAIN_TASK_AFFINITY = 0x0
const CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE = 2048
const CONFIG_ESP_CONSOLE_UART_DEFAULT = 1
const CONFIG_ESP_CONSOLE_UART = 1
const CONFIG_ESP_CONSOLE_UART_NUM = 0
const CONFIG_ESP_CONSOLE_ROM_SERIAL_PORT_NUM = 0
const CONFIG_ESP_CONSOLE_UART_BAUDRATE = 115200
const CONFIG_ESP_INT_WDT = 1
const CONFIG_ESP_INT_WDT_TIMEOUT_MS = 300
const CONFIG_ESP_INT_WDT_CHECK_CPU1 = 1
const CONFIG_ESP_TASK_WDT_EN = 1
const CONFIG_ESP_TASK_WDT_INIT = 1
const CONFIG_ESP_TASK_WDT_TIMEOUT_S = 5
const CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0 = 1
const CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1 = 1
const CONFIG_ESP_DEBUG_OCDAWARE = 1
const CONFIG_ESP_SYSTEM_CHECK_INT_LEVEL_4 = 1
const CONFIG_ESP_BROWNOUT_DET = 1
const CONFIG_ESP_BROWNOUT_DET_LVL_SEL_0 = 1
const CONFIG_ESP_BROWNOUT_DET_LVL = 0
const CONFIG_ESP_SYSTEM_BROWNOUT_INTR = 1
const CONFIG_ESP_IPC_TASK_STACK_SIZE = 1024
const CONFIG_ESP_IPC_USES_CALLERS_PRIORITY = 1
const CONFIG_ESP_IPC_ISR_ENABLE = 1
const CONFIG_ESP_TIME_FUNCS_USE_RTC_TIMER = 1
const CONFIG_ESP_TIME_FUNCS_USE_ESP_TIMER = 1
const CONFIG_ESP_TIMER_TASK_STACK_SIZE = 3584
const CONFIG_ESP_TIMER_INTERRUPT_LEVEL = 1
const CONFIG_ESP_TIMER_TASK_AFFINITY = 0x0
const CONFIG_ESP_TIMER_TASK_AFFINITY_CPU0 = 1
const CONFIG_ESP_TIMER_ISR_AFFINITY_CPU0 = 1
const CONFIG_ESP_TIMER_IMPL_TG0_LAC = 1
const CONFIG_ESP_WIFI_ENABLED = 1
const CONFIG_ESP_WIFI_STATIC_RX_BUFFER_NUM = 10
const CONFIG_ESP_WIFI_DYNAMIC_RX_BUFFER_NUM = 32
const CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER = 1
const CONFIG_ESP_WIFI_TX_BUFFER_TYPE = 1
const CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER_NUM = 32
const CONFIG_ESP_WIFI_STATIC_RX_MGMT_BUFFER = 1
const CONFIG_ESP_WIFI_DYNAMIC_RX_MGMT_BUF = 0
const CONFIG_ESP_WIFI_RX_MGMT_BUF_NUM_DEF = 5
const CONFIG_ESP_WIFI_AMPDU_TX_ENABLED = 1
const CONFIG_ESP_WIFI_TX_BA_WIN = 6
const CONFIG_ESP_WIFI_AMPDU_RX_ENABLED = 1
const CONFIG_ESP_WIFI_RX_BA_WIN = 6
const CONFIG_ESP_WIFI_NVS_ENABLED = 1
const CONFIG_ESP_WIFI_TASK_PINNED_TO_CORE_0 = 1
const CONFIG_ESP_WIFI_SOFTAP_BEACON_MAX_LEN = 752
const CONFIG_ESP_WIFI_MGMT_SBUF_NUM = 32
const CONFIG_ESP_WIFI_IRAM_OPT = 1
const CONFIG_ESP_WIFI_RX_IRAM_OPT = 1
const CONFIG_ESP_WIFI_ENABLE_WPA3_SAE = 1
const CONFIG_ESP_WIFI_ENABLE_SAE_PK = 1
const CONFIG_ESP_WIFI_SOFTAP_SAE_SUPPORT = 1
const CONFIG_ESP_WIFI_ENABLE_WPA3_OWE_STA = 1
const CONFIG_ESP_WIFI_SLP_DEFAULT_MIN_ACTIVE_TIME = 50
const CONFIG_ESP_WIFI_SLP_DEFAULT_MAX_ACTIVE_TIME = 10
const CONFIG_ESP_WIFI_SLP_DEFAULT_WAIT_BROADCAST_DATA_TIME = 15
const CONFIG_ESP_WIFI_STA_DISCONNECTED_PM_ENABLE = 1
const CONFIG_ESP_WIFI_GMAC_SUPPORT = 1
const CONFIG_ESP_WIFI_SOFTAP_SUPPORT = 1
const CONFIG_ESP_WIFI_ESPNOW_MAX_ENCRYPT_NUM = 7
const CONFIG_ESP_WIFI_MBEDTLS_CRYPTO = 1
const CONFIG_ESP_WIFI_MBEDTLS_TLS_CLIENT = 1
const CONFIG_ESP_WIFI_ENTERPRISE_SUPPORT = 1
const CONFIG_ESP_COREDUMP_ENABLE_TO_NONE = 1
const CONFIG_FATFS_VOLUME_COUNT = 2
const CONFIG_FATFS_LFN_NONE = 1
const CONFIG_FATFS_SECTOR_4096 = 1
const CONFIG_FATFS_CODEPAGE_437 = 1
const CONFIG_FATFS_CODEPAGE = 437
const CONFIG_FATFS_FS_LOCK = 0
const CONFIG_FATFS_TIMEOUT_MS = 10000
const CONFIG_FATFS_PER_FILE_CACHE = 1
const CONFIG_FATFS_USE_STRFUNC_NONE = 1
const CONFIG_FATFS_VFS_FSTAT_BLKSIZE = 0
const CONFIG_FATFS_LINK_LOCK = 1
const CONFIG_FATFS_DONT_TRUST_FREE_CLUSTER_CNT = 0
const CONFIG_FATFS_DONT_TRUST_LAST_ALLOC = 0
const CONFIG_FREERTOS_HZ = 100
const CONFIG_FREERTOS_CHECK_STACKOVERFLOW_CANARY = 1
const CONFIG_FREERTOS_THREAD_LOCAL_STORAGE_POINTERS = 1
const CONFIG_FREERTOS_IDLE_TASK_STACKSIZE = 1536
const CONFIG_FREERTOS_MAX_TASK_NAME_LEN = 16
const CONFIG_FREERTOS_USE_TIMERS = 1
const CONFIG_FREERTOS_TIMER_SERVICE_TASK_NAME = "Tmr Svc"
const CONFIG_FREERTOS_TIMER_TASK_NO_AFFINITY = 1
const CONFIG_FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY = 0x7FFFFFFF
const CONFIG_FREERTOS_TIMER_TASK_PRIORITY = 1
const CONFIG_FREERTOS_TIMER_TASK_STACK_DEPTH = 2048
const CONFIG_FREERTOS_TIMER_QUEUE_LENGTH = 10
const CONFIG_FREERTOS_QUEUE_REGISTRY_SIZE = 0
const CONFIG_FREERTOS_TASK_NOTIFICATION_ARRAY_ENTRIES = 1
const CONFIG_FREERTOS_TASK_FUNCTION_WRAPPER = 1
const CONFIG_FREERTOS_TLSP_DELETION_CALLBACKS = 1
const CONFIG_FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER = 1
const CONFIG_FREERTOS_ISR_STACKSIZE = 1536
const CONFIG_FREERTOS_INTERRUPT_BACKTRACE = 1
const CONFIG_FREERTOS_TICK_SUPPORT_CORETIMER = 1
const CONFIG_FREERTOS_CORETIMER_0 = 1
const CONFIG_FREERTOS_SYSTICK_USES_CCOUNT = 1
const CONFIG_FREERTOS_PORT = 1
const CONFIG_FREERTOS_NO_AFFINITY = 0x7FFFFFFF
const CONFIG_FREERTOS_SUPPORT_STATIC_ALLOCATION = 1
const CONFIG_FREERTOS_DEBUG_OCDAWARE = 1
const CONFIG_FREERTOS_ENABLE_TASK_SNAPSHOT = 1
const CONFIG_FREERTOS_PLACE_SNAPSHOT_FUNS_INTO_FLASH = 1
const CONFIG_FREERTOS_NUMBER_OF_CORES = 2
const CONFIG_HAL_ASSERTION_EQUALS_SYSTEM = 1
const CONFIG_HAL_DEFAULT_ASSERTION_LEVEL = 2
const CONFIG_HAL_SPI_MASTER_FUNC_IN_IRAM = 1
const CONFIG_HAL_SPI_SLAVE_FUNC_IN_IRAM = 1
const CONFIG_HEAP_POISONING_DISABLED = 1
const CONFIG_HEAP_TRACING_OFF = 1
const CONFIG_LOG_DEFAULT_LEVEL_INFO = 1
const CONFIG_LOG_DEFAULT_LEVEL = 3
const CONFIG_LOG_MAXIMUM_EQUALS_DEFAULT = 1
const CONFIG_LOG_MAXIMUM_LEVEL = 3
const CONFIG_LOG_DYNAMIC_LEVEL_CONTROL = 1
const CONFIG_LOG_TAG_LEVEL_IMPL_CACHE_AND_LINKED_LIST = 1
const CONFIG_LOG_TAG_LEVEL_CACHE_BINARY_MIN_HEAP = 1
const CONFIG_LOG_TAG_LEVEL_IMPL_CACHE_SIZE = 31
const CONFIG_LOG_TIMESTAMP_SOURCE_RTOS = 1
const CONFIG_LWIP_ENABLE = 1
const CONFIG_LWIP_LOCAL_HOSTNAME = "espressif"
const CONFIG_LWIP_TCPIP_TASK_PRIO = 18
const CONFIG_LWIP_DNS_SUPPORT_MDNS_QUERIES = 1
const CONFIG_LWIP_TIMERS_ONDEMAND = 1
const CONFIG_LWIP_ND6 = 1
const CONFIG_LWIP_MAX_SOCKETS = 10
const CONFIG_LWIP_SO_REUSE = 1
const CONFIG_LWIP_SO_REUSE_RXTOALL = 1
const CONFIG_LWIP_IP_DEFAULT_TTL = 64
const CONFIG_LWIP_IP4_FRAG = 1
const CONFIG_LWIP_IP6_FRAG = 1
const CONFIG_LWIP_IP_REASS_MAX_PBUFS = 10
const CONFIG_LWIP_ESP_GRATUITOUS_ARP = 1
const CONFIG_LWIP_GARP_TMR_INTERVAL = 60
const CONFIG_LWIP_ESP_MLDV6_REPORT = 1
const CONFIG_LWIP_MLDV6_TMR_INTERVAL = 40
const CONFIG_LWIP_TCPIP_RECVMBOX_SIZE = 32
const CONFIG_LWIP_DHCP_DOES_ARP_CHECK = 1
const CONFIG_LWIP_DHCP_DISABLE_VENDOR_CLASS_ID = 1
const CONFIG_LWIP_DHCP_OPTIONS_LEN = 68
const CONFIG_LWIP_NUM_NETIF_CLIENT_DATA = 0
const CONFIG_LWIP_DHCP_COARSE_TIMER_SECS = 1
const CONFIG_LWIP_DHCPS = 1
const CONFIG_LWIP_DHCPS_LEASE_UNIT = 60
const CONFIG_LWIP_DHCPS_MAX_STATION_NUM = 8
const CONFIG_LWIP_DHCPS_STATIC_ENTRIES = 1
const CONFIG_LWIP_DHCPS_ADD_DNS = 1
const CONFIG_LWIP_IPV4 = 1
const CONFIG_LWIP_IPV6 = 1
const CONFIG_LWIP_IPV6_NUM_ADDRESSES = 3
const CONFIG_LWIP_NETIF_LOOPBACK = 1
const CONFIG_LWIP_LOOPBACK_MAX_PBUFS = 8
const CONFIG_LWIP_MAX_ACTIVE_TCP = 16
const CONFIG_LWIP_MAX_LISTENING_TCP = 16
const CONFIG_LWIP_TCP_HIGH_SPEED_RETRANSMISSION = 1
const CONFIG_LWIP_TCP_MAXRTX = 12
const CONFIG_LWIP_TCP_SYNMAXRTX = 12
const CONFIG_LWIP_TCP_MSS = 1440
const CONFIG_LWIP_TCP_TMR_INTERVAL = 250
const CONFIG_LWIP_TCP_MSL = 60000
const CONFIG_LWIP_TCP_FIN_WAIT_TIMEOUT = 20000
const CONFIG_LWIP_TCP_SND_BUF_DEFAULT = 5760
const CONFIG_LWIP_TCP_WND_DEFAULT = 5760
const CONFIG_LWIP_TCP_RECVMBOX_SIZE = 6
const CONFIG_LWIP_TCP_ACCEPTMBOX_SIZE = 6
const CONFIG_LWIP_TCP_QUEUE_OOSEQ = 1
const CONFIG_LWIP_TCP_OOSEQ_TIMEOUT = 6
const CONFIG_LWIP_TCP_OOSEQ_MAX_PBUFS = 4
const CONFIG_LWIP_TCP_OVERSIZE_MSS = 1
const CONFIG_LWIP_TCP_RTO_TIME = 1500
const CONFIG_LWIP_MAX_UDP_PCBS = 16
const CONFIG_LWIP_UDP_RECVMBOX_SIZE = 6
const CONFIG_LWIP_CHECKSUM_CHECK_ICMP = 1
const CONFIG_LWIP_TCPIP_TASK_STACK_SIZE = 3072
const CONFIG_LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY = 1
const CONFIG_LWIP_TCPIP_TASK_AFFINITY = 0x7FFFFFFF
const CONFIG_LWIP_IPV6_MEMP_NUM_ND6_QUEUE = 3
const CONFIG_LWIP_IPV6_ND6_NUM_NEIGHBORS = 5
const CONFIG_LWIP_IPV6_ND6_NUM_PREFIXES = 5
const CONFIG_LWIP_IPV6_ND6_NUM_ROUTERS = 3
const CONFIG_LWIP_IPV6_ND6_NUM_DESTINATIONS = 10
const CONFIG_LWIP_ICMP = 1
const CONFIG_LWIP_MAX_RAW_PCBS = 16
const CONFIG_LWIP_SNTP_MAX_SERVERS = 1
const CONFIG_LWIP_SNTP_UPDATE_DELAY = 3600000
const CONFIG_LWIP_SNTP_STARTUP_DELAY = 1
const CONFIG_LWIP_SNTP_MAXIMUM_STARTUP_DELAY = 5000
const CONFIG_LWIP_DNS_MAX_HOST_IP = 1
const CONFIG_LWIP_DNS_MAX_SERVERS = 3
const CONFIG_LWIP_BRIDGEIF_MAX_PORTS = 7
const CONFIG_LWIP_ESP_LWIP_ASSERT = 1
const CONFIG_LWIP_HOOK_TCP_ISN_DEFAULT = 1
const CONFIG_LWIP_HOOK_IP6_ROUTE_NONE = 1
const CONFIG_LWIP_HOOK_ND6_GET_GW_NONE = 1
const CONFIG_LWIP_HOOK_IP6_SELECT_SRC_ADDR_NONE = 1
const CONFIG_LWIP_HOOK_NETCONN_EXT_RESOLVE_NONE = 1
const CONFIG_LWIP_HOOK_DNS_EXT_RESOLVE_NONE = 1
const CONFIG_LWIP_HOOK_IP6_INPUT_DEFAULT = 1
const CONFIG_MBEDTLS_INTERNAL_MEM_ALLOC = 1
const CONFIG_MBEDTLS_ASYMMETRIC_CONTENT_LEN = 1
const CONFIG_MBEDTLS_SSL_IN_CONTENT_LEN = 16384
const CONFIG_MBEDTLS_SSL_OUT_CONTENT_LEN = 4096
const CONFIG_MBEDTLS_SSL_KEEP_PEER_CERTIFICATE = 1
const CONFIG_MBEDTLS_PKCS7_C = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS = 200
const CONFIG_MBEDTLS_CMAC_C = 1
const CONFIG_MBEDTLS_HARDWARE_AES = 1
const CONFIG_MBEDTLS_GCM_SUPPORT_NON_AES_CIPHER = 1
const CONFIG_MBEDTLS_HARDWARE_MPI = 1
const CONFIG_MBEDTLS_HARDWARE_SHA = 1
const CONFIG_MBEDTLS_ROM_MD5 = 1
const CONFIG_MBEDTLS_HAVE_TIME = 1
const CONFIG_MBEDTLS_ECDSA_DETERMINISTIC = 1
const CONFIG_MBEDTLS_SHA1_C = 1
const CONFIG_MBEDTLS_SHA512_C = 1
const CONFIG_MBEDTLS_TLS_SERVER_AND_CLIENT = 1
const CONFIG_MBEDTLS_TLS_SERVER = 1
const CONFIG_MBEDTLS_TLS_CLIENT = 1
const CONFIG_MBEDTLS_TLS_ENABLED = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_RSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_RSA = 1
const CONFIG_MBEDTLS_SSL_RENEGOTIATION = 1
const CONFIG_MBEDTLS_SSL_PROTO_TLS1_2 = 1
const CONFIG_MBEDTLS_SSL_ALPN = 1
const CONFIG_MBEDTLS_CLIENT_SSL_SESSION_TICKETS = 1
const CONFIG_MBEDTLS_SERVER_SSL_SESSION_TICKETS = 1
const CONFIG_MBEDTLS_AES_C = 1
const CONFIG_MBEDTLS_CCM_C = 1
const CONFIG_MBEDTLS_GCM_C = 1
const CONFIG_MBEDTLS_PEM_PARSE_C = 1
const CONFIG_MBEDTLS_PEM_WRITE_C = 1
const CONFIG_MBEDTLS_X509_CRL_PARSE_C = 1
const CONFIG_MBEDTLS_X509_CSR_PARSE_C = 1
const CONFIG_MBEDTLS_ECP_C = 1
const CONFIG_MBEDTLS_PK_PARSE_EC_EXTENDED = 1
const CONFIG_MBEDTLS_PK_PARSE_EC_COMPRESSED = 1
const CONFIG_MBEDTLS_ECDH_C = 1
const CONFIG_MBEDTLS_ECDSA_C = 1
const CONFIG_MBEDTLS_ECP_DP_SECP192R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP224R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP256R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP384R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP521R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP192K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP224K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP256K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP256R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP384R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP512R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_CURVE25519_ENABLED = 1
const CONFIG_MBEDTLS_ECP_NIST_OPTIM = 1
const CONFIG_MBEDTLS_ERROR_STRINGS = 1
const CONFIG_MBEDTLS_FS_IO = 1
const CONFIG_MQTT_PROTOCOL_311 = 1
const CONFIG_MQTT_TRANSPORT_SSL = 1
const CONFIG_MQTT_TRANSPORT_WEBSOCKET = 1
const CONFIG_MQTT_TRANSPORT_WEBSOCKET_SECURE = 1
const CONFIG_NEWLIB_STDOUT_LINE_ENDING_CRLF = 1
const CONFIG_NEWLIB_STDIN_LINE_ENDING_CR = 1
const CONFIG_NEWLIB_TIME_SYSCALL_USE_RTC_HRT = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_0 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_1 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_2 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_PATCH_VERSION = 1
const CONFIG_PTHREAD_TASK_PRIO_DEFAULT = 5
const CONFIG_PTHREAD_TASK_STACK_SIZE_DEFAULT = 3072
const CONFIG_PTHREAD_STACK_MIN = 768
const CONFIG_PTHREAD_DEFAULT_CORE_NO_AFFINITY = 1
const CONFIG_PTHREAD_TASK_NAME_DEFAULT = "pthread"
const CONFIG_MMU_PAGE_SIZE_64KB = 1
const CONFIG_MMU_PAGE_MODE = "64KB"
const CONFIG_MMU_PAGE_SIZE = 0x10000
const CONFIG_SPI_FLASH_BROWNOUT_RESET_XMC = 1
const CONFIG_SPI_FLASH_BROWNOUT_RESET = 1
const CONFIG_SPI_FLASH_SUSPEND_TSUS_VAL_US = 50
const CONFIG_SPI_FLASH_ROM_DRIVER_PATCH = 1
const CONFIG_SPI_FLASH_DANGEROUS_WRITE_ABORTS = 1
const CONFIG_SPI_FLASH_YIELD_DURING_ERASE = 1
const CONFIG_SPI_FLASH_ERASE_YIELD_DURATION_MS = 20
const CONFIG_SPI_FLASH_ERASE_YIELD_TICKS = 1
const CONFIG_SPI_FLASH_WRITE_CHUNK_SIZE = 8192
const CONFIG_SPI_FLASH_VENDOR_XMC_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_GD_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_ISSI_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_MXIC_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_WINBOND_SUPPORTED = 1
const CONFIG_SPI_FLASH_SUPPORT_ISSI_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_MXIC_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_GD_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_WINBOND_CHIP = 1
const CONFIG_SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE = 1
const CONFIG_SPIFFS_MAX_PARTITIONS = 3
const CONFIG_SPIFFS_CACHE = 1
const CONFIG_SPIFFS_CACHE_WR = 1
const CONFIG_SPIFFS_PAGE_CHECK = 1
const CONFIG_SPIFFS_GC_MAX_RUNS = 10
const CONFIG_SPIFFS_PAGE_SIZE = 256
const CONFIG_SPIFFS_OBJ_NAME_LEN = 32
const CONFIG_SPIFFS_USE_MAGIC = 1
const CONFIG_SPIFFS_USE_MAGIC_LENGTH = 1
const CONFIG_SPIFFS_META_LENGTH = 4
const CONFIG_SPIFFS_USE_MTIME = 1
const CONFIG_WS_TRANSPORT = 1
const CONFIG_WS_BUFFER_SIZE = 1024
const CONFIG_UNITY_ENABLE_FLOAT = 1
const CONFIG_UNITY_ENABLE_DOUBLE = 1
const CONFIG_UNITY_ENABLE_IDF_TEST_RUNNER = 1
const CONFIG_VFS_SUPPORT_IO = 1
const CONFIG_VFS_SUPPORT_DIR = 1
const CONFIG_VFS_SUPPORT_SELECT = 1
const CONFIG_VFS_SUPPRESS_SELECT_DEBUG_OUTPUT = 1
const CONFIG_VFS_SUPPORT_TERMIOS = 1
const CONFIG_VFS_MAX_COUNT = 8
const CONFIG_VFS_SEMIHOSTFS_MAX_MOUNT_POINTS = 1
const CONFIG_VFS_INITIALIZE_DEV_NULL = 1
const CONFIG_WL_SECTOR_SIZE_4096 = 1
const CONFIG_WL_SECTOR_SIZE = 4096
const CONFIG_WIFI_PROV_SCAN_MAX_ENTRIES = 16
const CONFIG_WIFI_PROV_AUTOSTOP_TIMEOUT = 30
const CONFIG_WIFI_PROV_STA_ALL_CHANNEL_SCAN = 1
const X__OBSOLETE_MATH_DEFAULT = 1
const X__NEWLIB_H__ = 1
const X_ATEXIT_DYNAMIC_ALLOC = 1
const X_FSEEK_OPTIMIZATION = 1
const X_FVWRITE_IN_STREAMIO = 1
const X_HAVE_INITFINI_ARRAY = 1
const X_HAVE_LONG_DOUBLE = 1
const X_ICONV_ENABLED = 1
const X_LDBL_EQ_DBL = 1
const X_MB_LEN_MAX = 1
const X_NANO_MALLOC = 1
const X_REENT_CHECK_VERIFY = 1
const X_RETARGETABLE_LOCKING = 1
const X_UNBUF_STREAM_OPT = 1
const X_WANT_IO_C99_FORMATS = 1
const X_WANT_IO_LONG_LONG = 1
const X_WANT_IO_POS_ARGS = 1
const X_WANT_REENT_BACKWARD_BINARY_COMPAT = 1
const X_WANT_REENT_SMALL = 1
const X_WANT_USE_GDTOA = 1
const X__BUFSIZ__ = 128
const X__RAND_MAX = 0x7fffffff
const X_NULL = 0
const X_ATEXIT_SIZE = 32
const X_REENT_EMERGENCY_SIZE = 25
const X_REENT_ASCTIME_SIZE = 26
const X_REENT_SIGNAL_SIZE = 24
const X__GNUCLIKE_ASM = 3
const X__GNUCLIKE___TYPEOF = 1
const X__GNUCLIKE___SECTION = 1
const X__GNUCLIKE_CTOR_SECTION_HANDLING = 1
const X__GNUCLIKE_BUILTIN_CONSTANT_P = 1
const X__GNUCLIKE_BUILTIN_VARARGS = 1
const X__GNUCLIKE_BUILTIN_STDARG = 1
const X__GNUCLIKE_BUILTIN_VAALIST = 1
const X__GNUC_VA_LIST_COMPATIBILITY = 1
const X__GNUCLIKE_BUILTIN_NEXT_ARG = 1
const X__GNUCLIKE_BUILTIN_MEMCPY = 1
const X__CC_SUPPORTS_INLINE = 1
const X__CC_SUPPORTS___INLINE = 1
const X__CC_SUPPORTS___INLINE__ = 1
const X__CC_SUPPORTS___FUNC__ = 1
const X__CC_SUPPORTS_WARNING = 1
const X__CC_SUPPORTS_VARADIC_XXX = 1
const X__CC_SUPPORTS_DYNAMIC_ARRAY_INIT = 1
const EXIT_FAILURE = 1
const EXIT_SUCCESS = 0
const X__SLBF = 0x0001
const X__SNBF = 0x0002
const X__SRD = 0x0004
const X__SWR = 0x0008
const X__SRW = 0x0010
const X__SEOF = 0x0020
const X__SERR = 0x0040
const X__SMBF = 0x0080
const X__SAPP = 0x0100
const X__SSTR = 0x0200
const X__SOPT = 0x0400
const X__SNPT = 0x0800
const X__SOFF = 0x1000
const X__SORD = 0x2000
const X__SL64 = 0x8000
const X__SNLK = 0x0001
const X__SWID = 0x2000
const X_IOFBF = 0
const X_IOLBF = 1
const X_IONBF = 2
const FOPEN_MAX = 20
const FILENAME_MAX = 1024
const P_tmpdir = "/tmp"
const SEEK_SET = 0
const SEEK_CUR = 1
const SEEK_END = 2
const TMP_MAX = 26
const L_ctermid = 16
const ESP_OK = 0
const ESP_ERR_NO_MEM = 0x101
const ESP_ERR_INVALID_ARG = 0x102
const ESP_ERR_INVALID_STATE = 0x103
const ESP_ERR_INVALID_SIZE = 0x104
const ESP_ERR_NOT_FOUND = 0x105
const ESP_ERR_NOT_SUPPORTED = 0x106
const ESP_ERR_TIMEOUT = 0x107
const ESP_ERR_INVALID_RESPONSE = 0x108
const ESP_ERR_INVALID_CRC = 0x109
const ESP_ERR_INVALID_VERSION = 0x10A
const ESP_ERR_INVALID_MAC = 0x10B
const ESP_ERR_NOT_FINISHED = 0x10C
const ESP_ERR_NOT_ALLOWED = 0x10D
const ESP_ERR_WIFI_BASE = 0x3000
const ESP_ERR_MESH_BASE = 0x4000
const ESP_ERR_FLASH_BASE = 0x6000
const ESP_ERR_HW_CRYPTO_BASE = 0xc000
const ESP_ERR_MEMPROT_BASE = 0xd000
const SOC_CAPS_ECO_VER_MAX = 301
const SOC_ADC_SUPPORTED = 1
const SOC_DAC_SUPPORTED = 1
const SOC_UART_SUPPORTED = 1
const SOC_MCPWM_SUPPORTED = 1
const SOC_GPTIMER_SUPPORTED = 1
const SOC_SDMMC_HOST_SUPPORTED = 1
const SOC_BT_SUPPORTED = 1
const SOC_PCNT_SUPPORTED = 1
const SOC_PHY_SUPPORTED = 1
const SOC_WIFI_SUPPORTED = 1
const SOC_SDIO_SLAVE_SUPPORTED = 1
const SOC_TWAI_SUPPORTED = 1
const SOC_EFUSE_SUPPORTED = 1
const SOC_EMAC_SUPPORTED = 1
const SOC_ULP_SUPPORTED = 1
const SOC_CCOMP_TIMER_SUPPORTED = 1
const SOC_RTC_FAST_MEM_SUPPORTED = 1
const SOC_RTC_SLOW_MEM_SUPPORTED = 1
const SOC_RTC_MEM_SUPPORTED = 1
const SOC_I2S_SUPPORTED = 1
const SOC_RMT_SUPPORTED = 1
const SOC_SDM_SUPPORTED = 1
const SOC_GPSPI_SUPPORTED = 1
const SOC_LEDC_SUPPORTED = 1
const SOC_I2C_SUPPORTED = 1
const SOC_SUPPORT_COEXISTENCE = 1
const SOC_AES_SUPPORTED = 1
const SOC_MPI_SUPPORTED = 1
const SOC_SHA_SUPPORTED = 1
const SOC_FLASH_ENC_SUPPORTED = 1
const SOC_SECURE_BOOT_SUPPORTED = 1
const SOC_TOUCH_SENSOR_SUPPORTED = 1
const SOC_BOD_SUPPORTED = 1
const SOC_ULP_FSM_SUPPORTED = 1
const SOC_CLK_TREE_SUPPORTED = 1
const SOC_MPU_SUPPORTED = 1
const SOC_WDT_SUPPORTED = 1
const SOC_SPI_FLASH_SUPPORTED = 1
const SOC_RNG_SUPPORTED = 1
const SOC_LIGHT_SLEEP_SUPPORTED = 1
const SOC_DEEP_SLEEP_SUPPORTED = 1
const SOC_LP_PERIPH_SHARE_INTERRUPT = 1
const SOC_PM_SUPPORTED = 1
const SOC_DPORT_WORKAROUND = 1
const SOC_XTAL_SUPPORT_26M = 1
const SOC_XTAL_SUPPORT_40M = 1
const SOC_XTAL_SUPPORT_AUTO_DETECT = 1
const SOC_ADC_RTC_CTRL_SUPPORTED = 1
const SOC_ADC_DIG_CTRL_SUPPORTED = 1
const SOC_ADC_DMA_SUPPORTED = 1
const SOC_ADC_SHARED_POWER = 1
const SOC_SHARED_IDCACHE_SUPPORTED = 1
const SOC_IDCACHE_PER_CORE = 1
const SOC_CPU_CORES_NUM = 2
const SOC_CPU_INTR_NUM = 32
const SOC_CPU_HAS_FPU = 1
const SOC_HP_CPU_HAS_MULTIPLE_CORES = 1
const SOC_CPU_BREAKPOINTS_NUM = 2
const SOC_CPU_WATCHPOINTS_NUM = 2
const SOC_CPU_WATCHPOINT_MAX_REGION_SIZE = 64
const SOC_DAC_CHAN_NUM = 2
const SOC_DAC_RESOLUTION = 8
const SOC_DAC_DMA_16BIT_ALIGN = 1
const SOC_GPIO_PIN_COUNT = 40
const SOC_GPIO_IN_RANGE_MAX = 39
const SOC_GPIO_OUT_RANGE_MAX = 33
const SOC_MMU_PERIPH_NUM = 2
const SOC_MMU_LINEAR_ADDRESS_REGION_NUM = 3
const SOC_MPU_CONFIGURABLE_REGIONS_SUPPORTED = 0
const SOC_MPU_REGIONS_MAX_NUM = 8
const SOC_MPU_REGION_RO_SUPPORTED = 0
const SOC_MPU_REGION_WO_SUPPORTED = 0
const SOC_RMT_TX_CANDIDATES_PER_GROUP = 8
const SOC_RMT_RX_CANDIDATES_PER_GROUP = 8
const SOC_RMT_CHANNELS_PER_GROUP = 8
const SOC_RMT_MEM_WORDS_PER_CHANNEL = 64
const SOC_RMT_SUPPORT_REF_TICK = 1
const SOC_RMT_SUPPORT_APB = 1
const SOC_RMT_CHANNEL_CLK_INDEPENDENT = 1
const SOC_RTCIO_PIN_COUNT = 18
const SOC_RTCIO_INPUT_OUTPUT_SUPPORTED = 1
const SOC_RTCIO_HOLD_SUPPORTED = 1
const SOC_RTCIO_WAKE_SUPPORTED = 1
const SOC_SDM_CHANNELS_PER_GROUP = 8
const SOC_SDM_CLK_SUPPORT_APB = 1
const SOC_SPI_HD_BOTH_INOUT_SUPPORTED = 1
const SOC_SPI_AS_CS_SUPPORTED = 1
const SOC_SPI_PERIPH_NUM = 3
const SOC_SPI_DMA_CHAN_NUM = 2
const SOC_SPI_MAX_CS_NUM = 3
const SOC_SPI_SUPPORT_CLK_APB = 1
const SOC_SPI_MAXIMUM_BUFFER_SIZE = 64
const SOC_SPI_MAX_PRE_DIVIDER = 8192
const SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED = 1
const SOC_LP_TIMER_BIT_WIDTH_LO = 32
const SOC_LP_TIMER_BIT_WIDTH_HI = 16
const SOC_TWAI_BRP_MIN = 2
const SOC_TWAI_BRP_MAX = 128
const SOC_TWAI_CLK_SUPPORT_APB = 1
const SOC_TWAI_SUPPORT_MULTI_ADDRESS_LAYOUT = 1
const SOC_SPIRAM_SUPPORTED = 1
const SOC_SECURE_BOOT_V1 = 1
const SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 1
const SOC_SDMMC_USE_IOMUX = 1
const SOC_SDMMC_NUM_SLOTS = 2
const BIT31 = 0x80000000
const BIT30 = 0x40000000
const BIT29 = 0x20000000
const BIT28 = 0x10000000
const BIT27 = 0x08000000
const BIT26 = 0x04000000
const BIT25 = 0x02000000
const BIT24 = 0x01000000
const BIT23 = 0x00800000
const BIT22 = 0x00400000
const BIT21 = 0x00200000
const BIT20 = 0x00100000
const BIT19 = 0x00080000
const BIT18 = 0x00040000
const BIT17 = 0x00020000
const BIT16 = 0x00010000
const BIT15 = 0x00008000
const BIT14 = 0x00004000
const BIT13 = 0x00002000
const BIT12 = 0x00001000
const BIT11 = 0x00000800
const BIT10 = 0x00000400
const BIT9 = 0x00000200
const BIT8 = 0x00000100
const BIT7 = 0x00000080
const BIT6 = 0x00000040
const BIT5 = 0x00000020
const BIT4 = 0x00000010
const BIT3 = 0x00000008
const BIT2 = 0x00000004
const BIT1 = 0x00000002
const BIT0 = 0x00000001
const DR_REG_DPORT_BASE = 0x3ff00000
const DR_REG_AES_BASE = 0x3ff01000
const DR_REG_RSA_BASE = 0x3ff02000
const DR_REG_SHA_BASE = 0x3ff03000
const DR_REG_FLASH_MMU_TABLE_PRO = 0x3ff10000
const DR_REG_FLASH_MMU_TABLE_APP = 0x3ff12000
const DR_REG_DPORT_END = 0x3ff13FFC
const DR_REG_UART_BASE = 0x3ff40000
const DR_REG_SPI1_BASE = 0x3ff42000
const DR_REG_SPI0_BASE = 0x3ff43000
const DR_REG_GPIO_BASE = 0x3ff44000
const DR_REG_GPIO_SD_BASE = 0x3ff44f00
const DR_REG_FE2_BASE = 0x3ff45000
const DR_REG_FE_BASE = 0x3ff46000
const DR_REG_FRC_TIMER_BASE = 0x3ff47000
const DR_REG_RTCCNTL_BASE = 0x3ff48000
const DR_REG_RTCIO_BASE = 0x3ff48400
const DR_REG_SENS_BASE = 0x3ff48800
const DR_REG_RTC_I2C_BASE = 0x3ff48C00
const DR_REG_IO_MUX_BASE = 0x3ff49000
const DR_REG_HINF_BASE = 0x3ff4B000
const DR_REG_UHCI1_BASE = 0x3ff4C000
const DR_REG_I2S_BASE = 0x3ff4F000
const DR_REG_UART1_BASE = 0x3ff50000
const DR_REG_BT_BASE = 0x3ff51000
const DR_REG_I2C_EXT_BASE = 0x3ff53000
const DR_REG_UHCI0_BASE = 0x3ff54000
const DR_REG_SLCHOST_BASE = 0x3ff55000
const DR_REG_RMT_BASE = 0x3ff56000
const DR_REG_PCNT_BASE = 0x3ff57000
const DR_REG_SLC_BASE = 0x3ff58000
const DR_REG_LEDC_BASE = 0x3ff59000
const DR_REG_EFUSE_BASE = 0x3ff5A000
const DR_REG_SPI_ENCRYPT_BASE = 0x3ff5B000
const DR_REG_NRX_BASE = 0x3ff5CC00
const DR_REG_BB_BASE = 0x3ff5D000
const DR_REG_PWM0_BASE = 0x3ff5E000
const DR_REG_TIMERGROUP0_BASE = 0x3ff5F000
const DR_REG_TIMERGROUP1_BASE = 0x3ff60000
const DR_REG_RTCMEM0_BASE = 0x3ff61000
const DR_REG_RTCMEM1_BASE = 0x3ff62000
const DR_REG_RTCMEM2_BASE = 0x3ff63000
const DR_REG_SPI2_BASE = 0x3ff64000
const DR_REG_SPI3_BASE = 0x3ff65000
const DR_REG_SYSCON_BASE = 0x3ff66000
const DR_REG_APB_CTRL_BASE = 0x3ff66000
const DR_REG_I2C1_EXT_BASE = 0x3ff67000
const DR_REG_SDMMC_BASE = 0x3ff68000
const DR_REG_EMAC_BASE = 0x3ff69000
const DR_REG_CAN_BASE = 0x3ff6B000
const DR_REG_PWM1_BASE = 0x3ff6C000
const DR_REG_I2S1_BASE = 0x3ff6D000
const DR_REG_UART2_BASE = 0x3ff6E000
const SOC_MAX_CONTIGUOUS_RAM_SIZE = 0x400000
const SPI_CLK_DIV = 4
const TICKS_PER_US_ROM = 26
const SOC_DROM_LOW = 0x3F400000
const SOC_DROM_HIGH = 0x3F800000
const SOC_DRAM_LOW = 0x3FFAE000
const SOC_DRAM_HIGH = 0x40000000
const SOC_IROM_LOW = 0x400D0000
const SOC_IROM_HIGH = 0x40400000
const SOC_IROM_MASK_LOW = 0x40000000
const SOC_IROM_MASK_HIGH = 0x40070000
const SOC_CACHE_PRO_LOW = 0x40070000
const SOC_CACHE_PRO_HIGH = 0x40078000
const SOC_CACHE_APP_LOW = 0x40078000
const SOC_CACHE_APP_HIGH = 0x40080000
const SOC_IRAM_LOW = 0x40080000
const SOC_IRAM_HIGH = 0x400AA000
const SOC_RTC_IRAM_LOW = 0x400C0000
const SOC_RTC_IRAM_HIGH = 0x400C2000
const SOC_RTC_DRAM_LOW = 0x3FF80000
const SOC_RTC_DRAM_HIGH = 0x3FF82000
const SOC_RTC_DATA_LOW = 0x50000000
const SOC_RTC_DATA_HIGH = 0x50002000
const SOC_EXTRAM_DATA_LOW = 0x3F800000
const SOC_EXTRAM_DATA_HIGH = 0x3FC00000
const SOC_DIRAM_IRAM_LOW = 0x400A0000
const SOC_DIRAM_IRAM_HIGH = 0x400C0000
const SOC_DIRAM_DRAM_LOW = 0x3FFE0000
const SOC_DIRAM_DRAM_HIGH = 0x40000000
const SOC_DIRAM_INVERTED = 1
const SOC_DMA_LOW = 0x3FFAE000
const SOC_DMA_HIGH = 0x40000000
const SOC_BYTE_ACCESSIBLE_LOW = 0x3FF90000
const SOC_BYTE_ACCESSIBLE_HIGH = 0x40000000
const SOC_MEM_INTERNAL_LOW = 0x3FF90000
const SOC_MEM_INTERNAL_HIGH = 0x400C2000
const SOC_ROM_STACK_START = 0x3ffe3f20
const ETS_WMAC_INUM = 0
const ETS_BT_HOST_INUM = 1
const ETS_WBB_INUM = 4
const ETS_T1_WDT_INUM = 24
const ETS_MEMACCESS_ERR_INUM = 25
const ETS_IPC_ISR_INUM = 28
const ETS_SLC_INUM = 1
const ETS_UART0_INUM = 5
const ETS_UART1_INUM = 5
const ETS_INVALID_INUM = 6
const SOC_IRAM0_CACHE_ADDRESS_LOW = 0x400D0000
const SOC_IRAM0_CACHE_ADDRESS_HIGH = 0x40400000
const SOC_IRAM1_CACHE_ADDRESS_LOW = 0x40400000
const SOC_IRAM1_CACHE_ADDRESS_HIGH = 0x40800000
const SOC_IROM0_CACHE_ADDRESS_LOW = 0x40800000
const SOC_IROM0_CACHE_ADDRESS_HIGH = 0x40C00000
const SOC_DRAM1_CACHE_ADDRESS_LOW = 0x3F800000
const SOC_DRAM1_CACHE_ADDRESS_HIGH = 0x3FC00000
const SOC_DROM0_CACHE_ADDRESS_LOW = 0x3F400000
const SOC_DROM0_CACHE_ADDRESS_HIGH = 0x3F800000
const SOC_MMU_MAX_PADDR_PAGE_NUM = 256
const SOC_MMU_VADDR_MASK = 0x3FFFFF
const SOC_MMU_ENTRY_NUM = 384
const SOC_MMU_DBUS_VADDR_BASE = 0x3E000000
const SOC_MMU_IBUS_VADDR_BASE = 0x40000000
const SOC_MMU_LINEAR_ADDR_MASK = 0x1FFFFFF
const EFUSE_WRITE_OP_CODE = 0x5a5a
const EFUSE_READ_OP_CODE = 0x5aa5
const EFUSE_RD_CHIP_VER_PKG_ESP32D0WDQ6 = 0
const EFUSE_RD_CHIP_VER_PKG_ESP32D0WDQ5 = 1
const EFUSE_RD_CHIP_VER_PKG_ESP32D2WDQ5 = 2
const EFUSE_RD_CHIP_VER_PKG_ESP32PICOD2 = 4
const EFUSE_RD_CHIP_VER_PKG_ESP32U4WDH = 4
const EFUSE_RD_CHIP_VER_PKG_ESP32PICOD4 = 5
const EFUSE_RD_CHIP_VER_PKG_ESP32PICOV302 = 6
const EFUSE_RD_CHIP_VER_PKG_ESP32D0WDR2V3 = 7
const EFUSE_CODING_SCHEME_VAL_NONE = 0x0
const EFUSE_CODING_SCHEME_VAL_34 = 0x1
const EFUSE_CODING_SCHEME_VAL_REPEAT = 0x2
const EFUSE_RD_EFUSE_WR_DIS_S = 0
const EFUSE_RD_EFUSE_RD_DIS_S = 16
const EFUSE_RD_FLASH_CRYPT_CNT_S = 20
const EFUSE_RD_UART_DOWNLOAD_DIS_S = 27
const EFUSE_RESERVED_0_28_S = 28
const EFUSE_RD_MAC_S = 0
const EFUSE_RD_MAC_1_S = 0
const EFUSE_RD_MAC_CRC_S = 16
const EFUSE_RD_RESERVE_0_88_S = 24
const EFUSE_RD_DISABLE_APP_CPU_S = 0
const EFUSE_RD_DISABLE_BT_S = 1
const EFUSE_RD_CHIP_PACKAGE_4BIT_S = 2
const EFUSE_RD_DIS_CACHE_S = 3
const EFUSE_RD_SPI_PAD_CONFIG_HD_S = 4
const EFUSE_RD_CHIP_PACKAGE_S = 9
const EFUSE_RD_CHIP_CPU_FREQ_LOW_S = 12
const EFUSE_RD_CHIP_CPU_FREQ_RATED_S = 13
const EFUSE_RD_BLK3_PART_RESERVE_S = 14
const EFUSE_RD_CHIP_VER_REV1_S = 15
const EFUSE_RD_RESERVE_0_112_S = 16
const EFUSE_RD_CLK8M_FREQ_S = 0
const EFUSE_RD_ADC_VREF_S = 8
const EFUSE_RD_RESERVE_0_141_S = 13
const EFUSE_RD_XPD_SDIO_REG_S = 14
const EFUSE_RD_XPD_SDIO_TIEH_S = 15
const EFUSE_RD_XPD_SDIO_FORCE_S = 16
const EFUSE_RD_RESERVE_0_145_S = 17
const EFUSE_RD_SPI_PAD_CONFIG_CLK_S = 0
const EFUSE_RD_SPI_PAD_CONFIG_Q_S = 5
const EFUSE_RD_SPI_PAD_CONFIG_D_S = 10
const EFUSE_RD_SPI_PAD_CONFIG_CS0_S = 15
const EFUSE_RD_CHIP_VER_REV2_S = 20
const EFUSE_RD_RESERVE_0_181_S = 21
const EFUSE_RD_VOL_LEVEL_HP_INV_S = 22
const EFUSE_RD_WAFER_VERSION_MINOR_S = 24
const EFUSE_RD_RESERVE_0_186_S = 26
const EFUSE_RD_FLASH_CRYPT_CONFIG_S = 28
const EFUSE_RD_CODING_SCHEME_S = 0
const EFUSE_RD_CONSOLE_DEBUG_DISABLE_S = 2
const EFUSE_RD_DISABLE_SDIO_HOST_S = 3
const EFUSE_RD_ABS_DONE_0_S = 4
const EFUSE_RD_ABS_DONE_1_S = 5
const EFUSE_RD_JTAG_DISABLE_S = 6
const EFUSE_RD_DISABLE_DL_ENCRYPT_S = 7
const EFUSE_RD_DISABLE_DL_DECRYPT_S = 8
const EFUSE_RD_DISABLE_DL_CACHE_S = 9
const EFUSE_RD_KEY_STATUS_S = 10
const EFUSE_RD_RESERVE_0_203_S = 11
const EFUSE_WR_DIS_S = 0
const EFUSE_RD_DIS_S = 16
const EFUSE_FLASH_CRYPT_CNT_S = 20
const EFUSE_WIFI_MAC_CRC_LOW_S = 0
const EFUSE_WIFI_MAC_CRC_HIGH_S = 0
const EFUSE_DISABLE_APP_CPU_S = 0
const EFUSE_DISABLE_BT_S = 1
const EFUSE_CHIP_PACKAGE_4BIT_S = 2
const EFUSE_DIS_CACHE_S = 3
const EFUSE_SPI_PAD_CONFIG_HD_S = 4
const EFUSE_CHIP_PACKAGE_S = 9
const EFUSE_CHIP_CPU_FREQ_LOW_S = 12
const EFUSE_CHIP_CPU_FREQ_RATED_S = 13
const EFUSE_BLK3_PART_RESERVE_S = 14
const EFUSE_CHIP_VER_REV1_S = 15
const EFUSE_RESERVE_0_112_S = 16
const EFUSE_CLK8M_FREQ_S = 0
const EFUSE_ADC_VREF_S = 8
const EFUSE_RESERVE_0_141_S = 13
const EFUSE_XPD_SDIO_REG_S = 14
const EFUSE_XPD_SDIO_TIEH_S = 15
const EFUSE_XPD_SDIO_FORCE_S = 16
const EFUSE_RESERVE_0_145_S = 17
const EFUSE_SPI_PAD_CONFIG_CLK_S = 0
const EFUSE_SPI_PAD_CONFIG_Q_S = 5
const EFUSE_SPI_PAD_CONFIG_D_S = 10
const EFUSE_SPI_PAD_CONFIG_CS0_S = 15
const EFUSE_CHIP_VER_REV2_S = 20
const EFUSE_RESERVE_0_181_S = 21
const EFUSE_VOL_LEVEL_HP_INV_S = 22
const EFUSE_WAFER_VERSION_MINOR_S = 24
const EFUSE_RESERVE_0_186_S = 26
const EFUSE_FLASH_CRYPT_CONFIG_S = 28
const EFUSE_CODING_SCHEME_S = 0
const EFUSE_CONSOLE_DEBUG_DISABLE_S = 2
const EFUSE_DISABLE_SDIO_HOST_S = 3
const EFUSE_ABS_DONE_0_S = 4
const EFUSE_ABS_DONE_1_S = 5
const EFUSE_DISABLE_JTAG_S = 6
const EFUSE_DISABLE_DL_ENCRYPT_S = 7
const EFUSE_DISABLE_DL_DECRYPT_S = 8
const EFUSE_DISABLE_DL_CACHE_S = 9
const EFUSE_KEY_STATUS_S = 10
const EFUSE_RD_BLOCK1_S = 0
const EFUSE_RD_BLOCK1_1_S = 0
const EFUSE_RD_BLOCK1_2_S = 0
const EFUSE_RD_BLOCK1_3_S = 0
const EFUSE_RD_BLOCK1_4_S = 0
const EFUSE_RD_BLOCK1_5_S = 0
const EFUSE_RD_BLOCK1_6_S = 0
const EFUSE_RD_BLOCK1_7_S = 0
const EFUSE_RD_BLOCK2_S = 0
const EFUSE_RD_BLOCK2_1_S = 0
const EFUSE_RD_BLOCK2_2_S = 0
const EFUSE_RD_BLOCK2_3_S = 0
const EFUSE_RD_BLOCK2_4_S = 0
const EFUSE_RD_BLOCK2_5_S = 0
const EFUSE_RD_BLOCK2_6_S = 0
const EFUSE_RD_BLOCK2_7_S = 0
const EFUSE_RD_CUSTOM_MAC_CRC_S = 0
const EFUSE_RD_CUSTOM_MAC_S = 8
const EFUSE_RD_CUSTOM_MAC_1_S = 0
const EFUSE_RESERVED_3_56_S = 24
const EFUSE_RD_BLK3_RESERVED_2_S = 0
const EFUSE_RD_ADC1_TP_LOW_S = 0
const EFUSE_RD_ADC1_TP_HIGH_S = 7
const EFUSE_RD_ADC2_TP_LOW_S = 16
const EFUSE_RD_ADC2_TP_HIGH_S = 23
const EFUSE_RD_SECURE_VERSION_S = 0
const EFUSE_RESERVED_3_160_S = 0
const EFUSE_RD_MAC_VERSION_S = 24
const EFUSE_RD_BLK3_RESERVED_6_S = 0
const EFUSE_RD_BLK3_RESERVED_7_S = 0
const EFUSE_BLK1_DIN0_S = 0
const EFUSE_BLK1_DIN1_S = 0
const EFUSE_BLK1_DIN2_S = 0
const EFUSE_BLK1_DIN3_S = 0
const EFUSE_BLK1_DIN4_S = 0
const EFUSE_BLK1_DIN5_S = 0
const EFUSE_BLK1_DIN6_S = 0
const EFUSE_BLK1_DIN7_S = 0
const EFUSE_BLK2_DIN0_S = 0
const EFUSE_BLK2_DIN1_S = 0
const EFUSE_BLK2_DIN2_S = 0
const EFUSE_BLK2_DIN3_S = 0
const EFUSE_BLK2_DIN4_S = 0
const EFUSE_BLK2_DIN5_S = 0
const EFUSE_BLK2_DIN6_S = 0
const EFUSE_BLK2_DIN7_S = 0
const EFUSE_BLK3_DIN0_S = 0
const EFUSE_BLK3_DIN1_S = 0
const EFUSE_BLK3_DIN2_S = 0
const EFUSE_ADC1_TP_LOW_S = 0
const EFUSE_ADC1_TP_HIGH_S = 7
const EFUSE_ADC2_TP_LOW_S = 16
const EFUSE_ADC2_TP_HIGH_S = 23
const EFUSE_SECURE_VERSION_S = 0
const EFUSE_BLK3_DIN5_S = 0
const EFUSE_BLK3_DIN6_S = 0
const EFUSE_BLK3_DIN7_S = 0
const EFUSE_CLK_SEL0_S = 0
const EFUSE_CLK_SEL1_S = 8
const EFUSE_CLK_EN_S = 16
const EFUSE_OP_CODE_S = 0
const EFUSE_FORCE_NO_WR_RD_DIS_S = 16
const EFUSE_DEBUG_S = 0
const EFUSE_READ_CMD_S = 0
const EFUSE_PGM_CMD_S = 1
const EFUSE_READ_DONE_INT_RAW_S = 0
const EFUSE_PGM_DONE_INT_RAW_S = 1
const EFUSE_READ_DONE_INT_ST_S = 0
const EFUSE_PGM_DONE_INT_ST_S = 1
const EFUSE_READ_DONE_INT_ENA_S = 0
const EFUSE_PGM_DONE_INT_ENA_S = 1
const EFUSE_READ_DONE_INT_CLR_S = 0
const EFUSE_PGM_DONE_INT_CLR_S = 1
const EFUSE_DAC_CLK_DIV_S = 0
const EFUSE_DAC_CLK_PAD_SEL_S = 8
const EFUSE_DEC_WARNINGS_S = 0
const EFUSE_DATE_S = 0
const MACSTR = "%02x:%02x:%02x:%02x:%02x:%02x"
const SECURE_BOOT_NUM_BLOCKS = 0
const SPI_FLASH_SEC_SIZE = 4096
const FLASH_ID_GD25LQ32C = 0xC86016
const SPI_FLASH_OPI_FLAG = 16
const MSPI_FUNC_NUM = 1
const MSPI_IOMUX_PIN_NUM_CLK = 6
const MSPI_IOMUX_PIN_NUM_MISO = 7
const MSPI_IOMUX_PIN_NUM_MOSI = 8
const MSPI_IOMUX_PIN_NUM_HD = 9
const MSPI_IOMUX_PIN_NUM_WP = 10
const MSPI_IOMUX_PIN_NUM_CS0 = 11
const SPI_D2WD_PIN_NUM_MISO = 17
const SPI_D2WD_PIN_NUM_MOSI = 8
const SPI_D2WD_PIN_NUM_CLK = 6
const SPI_D2WD_PIN_NUM_CS = 16
const SPI_D2WD_PIN_NUM_WP = 7
const SPI_D2WD_PIN_NUM_HD = 11
const HSPI_FUNC_NUM = 1
const HSPI_IOMUX_PIN_NUM_MISO = 12
const HSPI_IOMUX_PIN_NUM_MOSI = 13
const HSPI_IOMUX_PIN_NUM_CLK = 14
const HSPI_IOMUX_PIN_NUM_CS = 15
const HSPI_IOMUX_PIN_NUM_WP = 2
const HSPI_IOMUX_PIN_NUM_HD = 4
const VSPI_FUNC_NUM = 1
const VSPI_IOMUX_PIN_NUM_MISO = 19
const VSPI_IOMUX_PIN_NUM_MOSI = 23
const VSPI_IOMUX_PIN_NUM_CLK = 18
const VSPI_IOMUX_PIN_NUM_CS = 5
const VSPI_IOMUX_PIN_NUM_WP = 22
const VSPI_IOMUX_PIN_NUM_HD = 21
const SPI_FLASH_READ_V = 0x1
const SPI_FLASH_READ_S = 31
const SPI_FLASH_WREN_V = 0x1
const SPI_FLASH_WREN_S = 30
const SPI_FLASH_WRDI_V = 0x1
const SPI_FLASH_WRDI_S = 29
const SPI_FLASH_RDID_V = 0x1
const SPI_FLASH_RDID_S = 28
const SPI_FLASH_RDSR_V = 0x1
const SPI_FLASH_RDSR_S = 27
const SPI_FLASH_WRSR_V = 0x1
const SPI_FLASH_WRSR_S = 26
const SPI_FLASH_PP_V = 0x1
const SPI_FLASH_PP_S = 25
const SPI_FLASH_SE_V = 0x1
const SPI_FLASH_SE_S = 24
const SPI_FLASH_BE_V = 0x1
const SPI_FLASH_BE_S = 23
const SPI_FLASH_CE_V = 0x1
const SPI_FLASH_CE_S = 22
const SPI_FLASH_DP_V = 0x1
const SPI_FLASH_DP_S = 21
const SPI_FLASH_RES_V = 0x1
const SPI_FLASH_RES_S = 20
const SPI_FLASH_HPM_V = 0x1
const SPI_FLASH_HPM_S = 19
const SPI_USR_V = 0x1
const SPI_USR_S = 18
const SPI_FLASH_PES_V = 0x1
const SPI_FLASH_PES_S = 17
const SPI_FLASH_PER_V = 0x1
const SPI_FLASH_PER_S = 16
const SPI_WR_BIT_ORDER_V = 0x1
const SPI_WR_BIT_ORDER_S = 26
const SPI_RD_BIT_ORDER_V = 0x1
const SPI_RD_BIT_ORDER_S = 25
const SPI_FREAD_QIO_V = 0x1
const SPI_FREAD_QIO_S = 24
const SPI_FREAD_DIO_V = 0x1
const SPI_FREAD_DIO_S = 23
const SPI_WRSR_2B_V = 0x1
const SPI_WRSR_2B_S = 22
const SPI_WP_REG_V = 0x1
const SPI_WP_REG_S = 21
const SPI_FREAD_QUAD_V = 0x1
const SPI_FREAD_QUAD_S = 20
const SPI_RESANDRES_V = 0x1
const SPI_RESANDRES_S = 15
const SPI_FREAD_DUAL_V = 0x1
const SPI_FREAD_DUAL_S = 14
const SPI_FASTRD_MODE_V = 0x1
const SPI_FASTRD_MODE_S = 13
const SPI_WAIT_FLASH_IDLE_EN_V = 0x1
const SPI_WAIT_FLASH_IDLE_EN_S = 12
const SPI_TX_CRC_EN_V = 0x1
const SPI_TX_CRC_EN_S = 11
const SPI_FCS_CRC_EN_V = 0x1
const SPI_FCS_CRC_EN_S = 10
const SPI_CS_HOLD_DELAY = 0x0000000F
const SPI_CS_HOLD_DELAY_V = 0xF
const SPI_CS_HOLD_DELAY_S = 28
const SPI_CS_HOLD_DELAY_RES = 0x00000FFF
const SPI_CS_HOLD_DELAY_RES_V = 0xFFF
const SPI_CS_HOLD_DELAY_RES_S = 16
const SPI_STATUS_EXT = 0x000000FF
const SPI_STATUS_EXT_V = 0xFF
const SPI_STATUS_EXT_S = 24
const SPI_WB_MODE = 0x000000FF
const SPI_WB_MODE_V = 0xFF
const SPI_WB_MODE_S = 16
const SPI_STATUS = 0x0000FFFF
const SPI_STATUS_V = 0xFFFF
const SPI_STATUS_S = 0
const SPI_CS_DELAY_NUM = 0x0000000F
const SPI_CS_DELAY_NUM_V = 0xF
const SPI_CS_DELAY_NUM_S = 28
const SPI_CS_DELAY_MODE = 0x00000003
const SPI_CS_DELAY_MODE_V = 0x3
const SPI_CS_DELAY_MODE_S = 26
const SPI_MOSI_DELAY_NUM = 0x00000007
const SPI_MOSI_DELAY_NUM_V = 0x7
const SPI_MOSI_DELAY_NUM_S = 23
const SPI_MOSI_DELAY_MODE = 0x00000003
const SPI_MOSI_DELAY_MODE_V = 0x3
const SPI_MOSI_DELAY_MODE_S = 21
const SPI_MISO_DELAY_NUM = 0x00000007
const SPI_MISO_DELAY_NUM_V = 0x7
const SPI_MISO_DELAY_NUM_S = 18
const SPI_MISO_DELAY_MODE = 0x00000003
const SPI_MISO_DELAY_MODE_V = 0x3
const SPI_MISO_DELAY_MODE_S = 16
const SPI_HOLD_TIME = 0x0000000F
const SPI_HOLD_TIME_V = 0xF
const SPI_HOLD_TIME_S = 4
const SPI_SETUP_TIME = 0x0000000F
const SPI_SETUP_TIME_V = 0xF
const SPI_SETUP_TIME_S = 0
const SPI_CLK_EQU_SYSCLK_V = 0x1
const SPI_CLK_EQU_SYSCLK_S = 31
const SPI_CLKDIV_PRE = 0x00001FFF
const SPI_CLKDIV_PRE_V = 0x1FFF
const SPI_CLKDIV_PRE_S = 18
const SPI_CLKCNT_N = 0x0000003F
const SPI_CLKCNT_N_V = 0x3F
const SPI_CLKCNT_N_S = 12
const SPI_CLKCNT_H = 0x0000003F
const SPI_CLKCNT_H_V = 0x3F
const SPI_CLKCNT_H_S = 6
const SPI_CLKCNT_L = 0x0000003F
const SPI_CLKCNT_L_V = 0x3F
const SPI_CLKCNT_L_S = 0
const SPI_USR_COMMAND_V = 0x1
const SPI_USR_COMMAND_S = 31
const SPI_USR_ADDR_V = 0x1
const SPI_USR_ADDR_S = 30
const SPI_USR_DUMMY_V = 0x1
const SPI_USR_DUMMY_S = 29
const SPI_USR_MISO_V = 0x1
const SPI_USR_MISO_S = 28
const SPI_USR_MOSI_V = 0x1
const SPI_USR_MOSI_S = 27
const SPI_USR_DUMMY_IDLE_V = 0x1
const SPI_USR_DUMMY_IDLE_S = 26
const SPI_USR_MOSI_HIGHPART_V = 0x1
const SPI_USR_MOSI_HIGHPART_S = 25
const SPI_USR_MISO_HIGHPART_V = 0x1
const SPI_USR_MISO_HIGHPART_S = 24
const SPI_USR_PREP_HOLD_V = 0x1
const SPI_USR_PREP_HOLD_S = 23
const SPI_USR_CMD_HOLD_V = 0x1
const SPI_USR_CMD_HOLD_S = 22
const SPI_USR_ADDR_HOLD_V = 0x1
const SPI_USR_ADDR_HOLD_S = 21
const SPI_USR_DUMMY_HOLD_V = 0x1
const SPI_USR_DUMMY_HOLD_S = 20
const SPI_USR_DIN_HOLD_V = 0x1
const SPI_USR_DIN_HOLD_S = 19
const SPI_USR_DOUT_HOLD_V = 0x1
const SPI_USR_DOUT_HOLD_S = 18
const SPI_USR_HOLD_POL_V = 0x1
const SPI_USR_HOLD_POL_S = 17
const SPI_SIO_V = 0x1
const SPI_SIO_S = 16
const SPI_FWRITE_QIO_V = 0x1
const SPI_FWRITE_QIO_S = 15
const SPI_FWRITE_DIO_V = 0x1
const SPI_FWRITE_DIO_S = 14
const SPI_FWRITE_QUAD_V = 0x1
const SPI_FWRITE_QUAD_S = 13
const SPI_FWRITE_DUAL_V = 0x1
const SPI_FWRITE_DUAL_S = 12
const SPI_WR_BYTE_ORDER_V = 0x1
const SPI_WR_BYTE_ORDER_S = 11
const SPI_RD_BYTE_ORDER_V = 0x1
const SPI_RD_BYTE_ORDER_S = 10
const SPI_CK_OUT_EDGE_V = 0x1
const SPI_CK_OUT_EDGE_S = 7
const SPI_CK_I_EDGE_V = 0x1
const SPI_CK_I_EDGE_S = 6
const SPI_CS_SETUP_V = 0x1
const SPI_CS_SETUP_S = 5
const SPI_CS_HOLD_V = 0x1
const SPI_CS_HOLD_S = 4
const SPI_DOUTDIN_V = 0x1
const SPI_DOUTDIN_S = 0
const SPI_USR_ADDR_BITLEN = 0x0000003F
const SPI_USR_ADDR_BITLEN_V = 0x3F
const SPI_USR_ADDR_BITLEN_S = 26
const SPI_USR_DUMMY_CYCLELEN = 0x000000FF
const SPI_USR_DUMMY_CYCLELEN_V = 0xFF
const SPI_USR_DUMMY_CYCLELEN_S = 0
const SPI_USR_COMMAND_BITLEN = 0x0000000F
const SPI_USR_COMMAND_BITLEN_V = 0xF
const SPI_USR_COMMAND_BITLEN_S = 28
const SPI_USR_COMMAND_VALUE = 0x0000FFFF
const SPI_USR_COMMAND_VALUE_V = 0xFFFF
const SPI_USR_COMMAND_VALUE_S = 0
const SPI_USR_MOSI_DBITLEN = 0x00FFFFFF
const SPI_USR_MOSI_DBITLEN_V = 0xFFFFFF
const SPI_USR_MOSI_DBITLEN_S = 0
const SPI_USR_MISO_DBITLEN = 0x00FFFFFF
const SPI_USR_MISO_DBITLEN_V = 0xFFFFFF
const SPI_USR_MISO_DBITLEN_S = 0
const SPI_SLV_WR_ST = 0xFFFFFFFF
const SPI_SLV_WR_ST_V = 0xFFFFFFFF
const SPI_SLV_WR_ST_S = 0
const SPI_CS_KEEP_ACTIVE_V = 0x1
const SPI_CS_KEEP_ACTIVE_S = 30
const SPI_CK_IDLE_EDGE_V = 0x1
const SPI_CK_IDLE_EDGE_S = 29
const SPI_MASTER_CK_SEL = 0x00000007
const SPI_MASTER_CK_SEL_V = 0x07
const SPI_MASTER_CK_SEL_S = 11
const SPI_MASTER_CS_POL = 0x00000007
const SPI_MASTER_CS_POL_V = 0x7
const SPI_MASTER_CS_POL_S = 6
const SPI_CK_DIS_V = 0x1
const SPI_CK_DIS_S = 5
const SPI_CS2_DIS_V = 0x1
const SPI_CS2_DIS_S = 2
const SPI_CS1_DIS_V = 0x1
const SPI_CS1_DIS_S = 1
const SPI_CS0_DIS_V = 0x1
const SPI_CS0_DIS_S = 0
const SPI_SYNC_RESET_V = 0x1
const SPI_SYNC_RESET_S = 31
const SPI_SLAVE_MODE_V = 0x1
const SPI_SLAVE_MODE_S = 30
const SPI_SLV_WR_RD_BUF_EN_V = 0x1
const SPI_SLV_WR_RD_BUF_EN_S = 29
const SPI_SLV_WR_RD_STA_EN_V = 0x1
const SPI_SLV_WR_RD_STA_EN_S = 28
const SPI_SLV_CMD_DEFINE_V = 0x1
const SPI_SLV_CMD_DEFINE_S = 27
const SPI_TRANS_CNT = 0x0000000F
const SPI_TRANS_CNT_V = 0xF
const SPI_TRANS_CNT_S = 23
const SPI_SLV_LAST_STATE = 0x00000007
const SPI_SLV_LAST_STATE_V = 0x7
const SPI_SLV_LAST_STATE_S = 20
const SPI_SLV_LAST_COMMAND = 0x00000007
const SPI_SLV_LAST_COMMAND_V = 0x7
const SPI_SLV_LAST_COMMAND_S = 17
const SPI_CS_I_MODE = 0x00000003
const SPI_CS_I_MODE_V = 0x3
const SPI_CS_I_MODE_S = 10
const SPI_INT_EN = 0x0000001F
const SPI_INT_EN_V = 0x1F
const SPI_INT_EN_S = 5
const SPI_TRANS_DONE_V = 0x1
const SPI_TRANS_DONE_S = 4
const SPI_SLV_WR_STA_DONE_V = 0x1
const SPI_SLV_WR_STA_DONE_S = 3
const SPI_SLV_RD_STA_DONE_V = 0x1
const SPI_SLV_RD_STA_DONE_S = 2
const SPI_SLV_WR_BUF_DONE_V = 0x1
const SPI_SLV_WR_BUF_DONE_S = 1
const SPI_SLV_RD_BUF_DONE_V = 0x1
const SPI_SLV_RD_BUF_DONE_S = 0
const SPI_SLV_STATUS_BITLEN = 0x0000001F
const SPI_SLV_STATUS_BITLEN_V = 0x1F
const SPI_SLV_STATUS_BITLEN_S = 27
const SPI_SLV_STATUS_FAST_EN_V = 0x1
const SPI_SLV_STATUS_FAST_EN_S = 26
const SPI_SLV_STATUS_READBACK_V = 0x1
const SPI_SLV_STATUS_READBACK_S = 25
const SPI_SLV_RD_ADDR_BITLEN = 0x0000003F
const SPI_SLV_RD_ADDR_BITLEN_V = 0x3F
const SPI_SLV_RD_ADDR_BITLEN_S = 10
const SPI_SLV_WR_ADDR_BITLEN = 0x0000003F
const SPI_SLV_WR_ADDR_BITLEN_V = 0x3F
const SPI_SLV_WR_ADDR_BITLEN_S = 4
const SPI_SLV_WRSTA_DUMMY_EN_V = 0x1
const SPI_SLV_WRSTA_DUMMY_EN_S = 3
const SPI_SLV_RDSTA_DUMMY_EN_V = 0x1
const SPI_SLV_RDSTA_DUMMY_EN_S = 2
const SPI_SLV_WRBUF_DUMMY_EN_V = 0x1
const SPI_SLV_WRBUF_DUMMY_EN_S = 1
const SPI_SLV_RDBUF_DUMMY_EN_V = 0x1
const SPI_SLV_RDBUF_DUMMY_EN_S = 0
const SPI_SLV_WRBUF_DUMMY_CYCLELEN = 0x000000FF
const SPI_SLV_WRBUF_DUMMY_CYCLELEN_V = 0xFF
const SPI_SLV_WRBUF_DUMMY_CYCLELEN_S = 24
const SPI_SLV_RDBUF_DUMMY_CYCLELEN = 0x000000FF
const SPI_SLV_RDBUF_DUMMY_CYCLELEN_V = 0xFF
const SPI_SLV_RDBUF_DUMMY_CYCLELEN_S = 16
const SPI_SLV_WRSTA_DUMMY_CYCLELEN = 0x000000FF
const SPI_SLV_WRSTA_DUMMY_CYCLELEN_V = 0xFF
const SPI_SLV_WRSTA_DUMMY_CYCLELEN_S = 8
const SPI_SLV_RDSTA_DUMMY_CYCLELEN = 0x000000FF
const SPI_SLV_RDSTA_DUMMY_CYCLELEN_V = 0xFF
const SPI_SLV_RDSTA_DUMMY_CYCLELEN_S = 0
const SPI_SLV_WRSTA_CMD_VALUE = 0x000000FF
const SPI_SLV_WRSTA_CMD_VALUE_V = 0xFF
const SPI_SLV_WRSTA_CMD_VALUE_S = 24
const SPI_SLV_RDSTA_CMD_VALUE = 0x000000FF
const SPI_SLV_RDSTA_CMD_VALUE_V = 0xFF
const SPI_SLV_RDSTA_CMD_VALUE_S = 16
const SPI_SLV_WRBUF_CMD_VALUE = 0x000000FF
const SPI_SLV_WRBUF_CMD_VALUE_V = 0xFF
const SPI_SLV_WRBUF_CMD_VALUE_S = 8
const SPI_SLV_RDBUF_CMD_VALUE = 0x000000FF
const SPI_SLV_RDBUF_CMD_VALUE_V = 0xFF
const SPI_SLV_RDBUF_CMD_VALUE_S = 0
const SPI_SLV_WRBUF_DBITLEN = 0x00FFFFFF
const SPI_SLV_WRBUF_DBITLEN_V = 0xFFFFFF
const SPI_SLV_WRBUF_DBITLEN_S = 0
const SPI_SLV_RDBUF_DBITLEN = 0x00FFFFFF
const SPI_SLV_RDBUF_DBITLEN_V = 0xFFFFFF
const SPI_SLV_RDBUF_DBITLEN_S = 0
const SPI_CACHE_FLASH_PES_EN_V = 0x1
const SPI_CACHE_FLASH_PES_EN_S = 3
const SPI_CACHE_FLASH_USR_CMD_V = 0x1
const SPI_CACHE_FLASH_USR_CMD_S = 2
const SPI_CACHE_USR_CMD_4BYTE_V = 0x1
const SPI_CACHE_USR_CMD_4BYTE_S = 1
const SPI_CACHE_REQ_EN_V = 0x1
const SPI_CACHE_REQ_EN_S = 0
const SPI_CACHE_SRAM_USR_WCMD_V = 0x1
const SPI_CACHE_SRAM_USR_WCMD_S = 28
const SPI_SRAM_ADDR_BITLEN = 0x0000003F
const SPI_SRAM_ADDR_BITLEN_V = 0x3F
const SPI_SRAM_ADDR_BITLEN_S = 22
const SPI_SRAM_DUMMY_CYCLELEN = 0x000000FF
const SPI_SRAM_DUMMY_CYCLELEN_V = 0xFF
const SPI_SRAM_DUMMY_CYCLELEN_S = 14
const SPI_SRAM_BYTES_LEN = 0x000000FF
const SPI_SRAM_BYTES_LEN_V = 0xFF
const SPI_SRAM_BYTES_LEN_S = 6
const SPI_CACHE_SRAM_USR_RCMD_V = 0x1
const SPI_CACHE_SRAM_USR_RCMD_S = 5
const SPI_USR_RD_SRAM_DUMMY_V = 0x1
const SPI_USR_RD_SRAM_DUMMY_S = 4
const SPI_USR_WR_SRAM_DUMMY_V = 0x1
const SPI_USR_WR_SRAM_DUMMY_S = 3
const SPI_USR_SRAM_QIO_V = 0x1
const SPI_USR_SRAM_QIO_S = 2
const SPI_USR_SRAM_DIO_V = 0x1
const SPI_USR_SRAM_DIO_S = 1
const SPI_SRAM_RSTIO_V = 0x1
const SPI_SRAM_RSTIO_S = 4
const SPI_SRAM_QIO_V = 0x1
const SPI_SRAM_QIO_S = 1
const SPI_SRAM_DIO_V = 0x1
const SPI_SRAM_DIO_S = 0
const SPI_CACHE_SRAM_USR_RD_CMD_BITLEN = 0x0000000F
const SPI_CACHE_SRAM_USR_RD_CMD_BITLEN_V = 0xF
const SPI_CACHE_SRAM_USR_RD_CMD_BITLEN_S = 28
const SPI_CACHE_SRAM_USR_RD_CMD_VALUE = 0x0000FFFF
const SPI_CACHE_SRAM_USR_RD_CMD_VALUE_V = 0xFFFF
const SPI_CACHE_SRAM_USR_RD_CMD_VALUE_S = 0
const SPI_CACHE_SRAM_USR_WR_CMD_BITLEN = 0x0000000F
const SPI_CACHE_SRAM_USR_WR_CMD_BITLEN_V = 0xF
const SPI_CACHE_SRAM_USR_WR_CMD_BITLEN_S = 28
const SPI_CACHE_SRAM_USR_WR_CMD_VALUE = 0x0000FFFF
const SPI_CACHE_SRAM_USR_WR_CMD_VALUE_V = 0xFFFF
const SPI_CACHE_SRAM_USR_WR_CMD_VALUE_S = 0
const SPI_SLV_RDATA_BIT = 0x00FFFFFF
const SPI_SLV_RDATA_BIT_V = 0xFFFFFF
const SPI_SLV_RDATA_BIT_S = 0
const SPI_BUF0 = 0xFFFFFFFF
const SPI_BUF0_V = 0xFFFFFFFF
const SPI_BUF0_S = 0
const SPI_BUF1 = 0xFFFFFFFF
const SPI_BUF1_V = 0xFFFFFFFF
const SPI_BUF1_S = 0
const SPI_BUF2 = 0xFFFFFFFF
const SPI_BUF2_V = 0xFFFFFFFF
const SPI_BUF2_S = 0
const SPI_BUF3 = 0xFFFFFFFF
const SPI_BUF3_V = 0xFFFFFFFF
const SPI_BUF3_S = 0
const SPI_BUF4 = 0xFFFFFFFF
const SPI_BUF4_V = 0xFFFFFFFF
const SPI_BUF4_S = 0
const SPI_BUF5 = 0xFFFFFFFF
const SPI_BUF5_V = 0xFFFFFFFF
const SPI_BUF5_S = 0
const SPI_BUF6 = 0xFFFFFFFF
const SPI_BUF6_V = 0xFFFFFFFF
const SPI_BUF6_S = 0
const SPI_BUF7 = 0xFFFFFFFF
const SPI_BUF7_V = 0xFFFFFFFF
const SPI_BUF7_S = 0
const SPI_BUF8 = 0xFFFFFFFF
const SPI_BUF8_V = 0xFFFFFFFF
const SPI_BUF8_S = 0
const SPI_BUF9 = 0xFFFFFFFF
const SPI_BUF9_V = 0xFFFFFFFF
const SPI_BUF9_S = 0
const SPI_BUF10 = 0xFFFFFFFF
const SPI_BUF10_V = 0xFFFFFFFF
const SPI_BUF10_S = 0
const SPI_BUF11 = 0xFFFFFFFF
const SPI_BUF11_V = 0xFFFFFFFF
const SPI_BUF11_S = 0
const SPI_BUF12 = 0xFFFFFFFF
const SPI_BUF12_V = 0xFFFFFFFF
const SPI_BUF12_S = 0
const SPI_BUF13 = 0xFFFFFFFF
const SPI_BUF13_V = 0xFFFFFFFF
const SPI_BUF13_S = 0
const SPI_BUF14 = 0xFFFFFFFF
const SPI_BUF14_V = 0xFFFFFFFF
const SPI_BUF14_S = 0
const SPI_BUF15 = 0xFFFFFFFF
const SPI_BUF15_V = 0xFFFFFFFF
const SPI_BUF15_S = 0
const SPI_TX_CRC_DATA = 0xFFFFFFFF
const SPI_TX_CRC_DATA_V = 0xFFFFFFFF
const SPI_TX_CRC_DATA_S = 0
const SPI_T_PP_ENA_V = 0x1
const SPI_T_PP_ENA_S = 31
const SPI_T_PP_SHIFT = 0x0000000F
const SPI_T_PP_SHIFT_V = 0xF
const SPI_T_PP_SHIFT_S = 16
const SPI_T_PP_TIME = 0x00000FFF
const SPI_T_PP_TIME_V = 0xFFF
const SPI_T_PP_TIME_S = 0
const SPI_T_ERASE_ENA_V = 0x1
const SPI_T_ERASE_ENA_S = 31
const SPI_T_ERASE_SHIFT = 0x0000000F
const SPI_T_ERASE_SHIFT_V = 0xF
const SPI_T_ERASE_SHIFT_S = 16
const SPI_T_ERASE_TIME = 0x00000FFF
const SPI_T_ERASE_TIME_V = 0xFFF
const SPI_T_ERASE_TIME_S = 0
const SPI_ST = 0x00000007
const SPI_ST_V = 0x7
const SPI_ST_S = 0
const SPI_INT_HOLD_ENA = 0x00000003
const SPI_INT_HOLD_ENA_V = 0x3
const SPI_INT_HOLD_ENA_S = 0
const SPI_DMA_CONTINUE_V = 0x1
const SPI_DMA_CONTINUE_S = 16
const SPI_DMA_TX_STOP_V = 0x1
const SPI_DMA_TX_STOP_S = 15
const SPI_DMA_RX_STOP_V = 0x1
const SPI_DMA_RX_STOP_S = 14
const SPI_OUT_DATA_BURST_EN_V = 0x1
const SPI_OUT_DATA_BURST_EN_S = 12
const SPI_INDSCR_BURST_EN_V = 0x1
const SPI_INDSCR_BURST_EN_S = 11
const SPI_OUTDSCR_BURST_EN_V = 0x1
const SPI_OUTDSCR_BURST_EN_S = 10
const SPI_OUT_EOF_MODE_V = 0x1
const SPI_OUT_EOF_MODE_S = 9
const SPI_OUT_AUTO_WRBACK_V = 0x1
const SPI_OUT_AUTO_WRBACK_S = 8
const SPI_OUT_LOOP_TEST_V = 0x1
const SPI_OUT_LOOP_TEST_S = 7
const SPI_IN_LOOP_TEST_V = 0x1
const SPI_IN_LOOP_TEST_S = 6
const SPI_AHBM_RST_V = 0x1
const SPI_AHBM_RST_S = 5
const SPI_AHBM_FIFO_RST_V = 0x1
const SPI_AHBM_FIFO_RST_S = 4
const SPI_OUT_RST_V = 0x1
const SPI_OUT_RST_S = 3
const SPI_IN_RST_V = 0x1
const SPI_IN_RST_S = 2
const SPI_OUTLINK_RESTART_V = 0x1
const SPI_OUTLINK_RESTART_S = 30
const SPI_OUTLINK_START_V = 0x1
const SPI_OUTLINK_START_S = 29
const SPI_OUTLINK_STOP_V = 0x1
const SPI_OUTLINK_STOP_S = 28
const SPI_OUTLINK_ADDR = 0x000FFFFF
const SPI_OUTLINK_ADDR_V = 0xFFFFF
const SPI_OUTLINK_ADDR_S = 0
const SPI_INLINK_RESTART_V = 0x1
const SPI_INLINK_RESTART_S = 30
const SPI_INLINK_START_V = 0x1
const SPI_INLINK_START_S = 29
const SPI_INLINK_STOP_V = 0x1
const SPI_INLINK_STOP_S = 28
const SPI_INLINK_AUTO_RET_V = 0x1
const SPI_INLINK_AUTO_RET_S = 20
const SPI_INLINK_ADDR = 0x000FFFFF
const SPI_INLINK_ADDR_V = 0xFFFFF
const SPI_INLINK_ADDR_S = 0
const SPI_DMA_TX_EN_V = 0x1
const SPI_DMA_TX_EN_S = 1
const SPI_DMA_RX_EN_V = 0x1
const SPI_DMA_RX_EN_S = 0
const SPI_OUT_TOTAL_EOF_INT_ENA_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_ENA_S = 8
const SPI_OUT_EOF_INT_ENA_V = 0x1
const SPI_OUT_EOF_INT_ENA_S = 7
const SPI_OUT_DONE_INT_ENA_V = 0x1
const SPI_OUT_DONE_INT_ENA_S = 6
const SPI_IN_SUC_EOF_INT_ENA_V = 0x1
const SPI_IN_SUC_EOF_INT_ENA_S = 5
const SPI_IN_ERR_EOF_INT_ENA_V = 0x1
const SPI_IN_ERR_EOF_INT_ENA_S = 4
const SPI_IN_DONE_INT_ENA_V = 0x1
const SPI_IN_DONE_INT_ENA_S = 3
const SPI_INLINK_DSCR_ERROR_INT_ENA_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_ENA_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_ENA_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_ENA_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_ENA_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_ENA_S = 0
const SPI_OUT_TOTAL_EOF_INT_RAW_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_RAW_S = 8
const SPI_OUT_EOF_INT_RAW_V = 0x1
const SPI_OUT_EOF_INT_RAW_S = 7
const SPI_OUT_DONE_INT_RAW_V = 0x1
const SPI_OUT_DONE_INT_RAW_S = 6
const SPI_IN_SUC_EOF_INT_RAW_V = 0x1
const SPI_IN_SUC_EOF_INT_RAW_S = 5
const SPI_IN_ERR_EOF_INT_RAW_V = 0x1
const SPI_IN_ERR_EOF_INT_RAW_S = 4
const SPI_IN_DONE_INT_RAW_V = 0x1
const SPI_IN_DONE_INT_RAW_S = 3
const SPI_INLINK_DSCR_ERROR_INT_RAW_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_RAW_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_RAW_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_RAW_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_RAW_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_RAW_S = 0
const SPI_OUT_TOTAL_EOF_INT_ST_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_ST_S = 8
const SPI_OUT_EOF_INT_ST_V = 0x1
const SPI_OUT_EOF_INT_ST_S = 7
const SPI_OUT_DONE_INT_ST_V = 0x1
const SPI_OUT_DONE_INT_ST_S = 6
const SPI_IN_SUC_EOF_INT_ST_V = 0x1
const SPI_IN_SUC_EOF_INT_ST_S = 5
const SPI_IN_ERR_EOF_INT_ST_V = 0x1
const SPI_IN_ERR_EOF_INT_ST_S = 4
const SPI_IN_DONE_INT_ST_V = 0x1
const SPI_IN_DONE_INT_ST_S = 3
const SPI_INLINK_DSCR_ERROR_INT_ST_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_ST_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_ST_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_ST_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_ST_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_ST_S = 0
const SPI_OUT_TOTAL_EOF_INT_CLR_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_CLR_S = 8
const SPI_OUT_EOF_INT_CLR_V = 0x1
const SPI_OUT_EOF_INT_CLR_S = 7
const SPI_OUT_DONE_INT_CLR_V = 0x1
const SPI_OUT_DONE_INT_CLR_S = 6
const SPI_IN_SUC_EOF_INT_CLR_V = 0x1
const SPI_IN_SUC_EOF_INT_CLR_S = 5
const SPI_IN_ERR_EOF_INT_CLR_V = 0x1
const SPI_IN_ERR_EOF_INT_CLR_S = 4
const SPI_IN_DONE_INT_CLR_V = 0x1
const SPI_IN_DONE_INT_CLR_S = 3
const SPI_INLINK_DSCR_ERROR_INT_CLR_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_CLR_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_CLR_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_CLR_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_CLR_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_CLR_S = 0
const SPI_DMA_IN_ERR_EOF_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_IN_ERR_EOF_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_IN_ERR_EOF_DES_ADDR_S = 0
const SPI_DMA_IN_SUC_EOF_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_IN_SUC_EOF_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_IN_SUC_EOF_DES_ADDR_S = 0
const SPI_DMA_INLINK_DSCR = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_V = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_S = 0
const SPI_DMA_INLINK_DSCR_BF0 = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF0_V = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF0_S = 0
const SPI_DMA_INLINK_DSCR_BF1 = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF1_V = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF1_S = 0
const SPI_DMA_OUT_EOF_BFR_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_BFR_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_BFR_DES_ADDR_S = 0
const SPI_DMA_OUT_EOF_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_DES_ADDR_S = 0
const SPI_DMA_OUTLINK_DSCR = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_V = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_S = 0
const SPI_DMA_OUTLINK_DSCR_BF0 = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF0_V = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF0_S = 0
const SPI_DMA_OUTLINK_DSCR_BF1 = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF1_V = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF1_S = 0
const SPI_DMA_OUT_STATUS = 0xFFFFFFFF
const SPI_DMA_OUT_STATUS_V = 0xFFFFFFFF
const SPI_DMA_OUT_STATUS_S = 0
const SPI_DMA_IN_STATUS = 0xFFFFFFFF
const SPI_DMA_IN_STATUS_V = 0xFFFFFFFF
const SPI_DMA_IN_STATUS_S = 0
const SPI_DATE = 0x0FFFFFFF
const SPI_DATE_V = 0xFFFFFFF
const SPI_DATE_S = 0
const SPICLK_IN_IDX = 0
const SPICLK_OUT_IDX = 0
const SPIQ_IN_IDX = 1
const SPIQ_OUT_IDX = 1
const SPID_IN_IDX = 2
const SPID_OUT_IDX = 2
const SPIHD_IN_IDX = 3
const SPIHD_OUT_IDX = 3
const SPIWP_IN_IDX = 4
const SPIWP_OUT_IDX = 4
const SPICS0_IN_IDX = 5
const SPICS0_OUT_IDX = 5
const SPICS1_IN_IDX = 6
const SPICS1_OUT_IDX = 6
const SPICS2_IN_IDX = 7
const SPICS2_OUT_IDX = 7
const HSPICLK_IN_IDX = 8
const HSPICLK_OUT_IDX = 8
const HSPIQ_IN_IDX = 9
const HSPIQ_OUT_IDX = 9
const HSPID_IN_IDX = 10
const HSPID_OUT_IDX = 10
const HSPICS0_IN_IDX = 11
const HSPICS0_OUT_IDX = 11
const HSPIHD_IN_IDX = 12
const HSPIHD_OUT_IDX = 12
const HSPIWP_IN_IDX = 13
const HSPIWP_OUT_IDX = 13
const U0RXD_IN_IDX = 14
const U0TXD_OUT_IDX = 14
const U0CTS_IN_IDX = 15
const U0RTS_OUT_IDX = 15
const U0DSR_IN_IDX = 16
const U0DTR_OUT_IDX = 16
const U1RXD_IN_IDX = 17
const U1TXD_OUT_IDX = 17
const U1CTS_IN_IDX = 18
const U1RTS_OUT_IDX = 18
const I2CM_SCL_O_IDX = 19
const I2CM_SDA_I_IDX = 20
const I2CM_SDA_O_IDX = 20
const EXT_I2C_SCL_O_IDX = 21
const EXT_I2C_SDA_O_IDX = 22
const EXT_I2C_SDA_I_IDX = 22
const I2S0O_BCK_IN_IDX = 23
const I2S0O_BCK_OUT_IDX = 23
const I2S1O_BCK_IN_IDX = 24
const I2S1O_BCK_OUT_IDX = 24
const I2S0O_WS_IN_IDX = 25
const I2S0O_WS_OUT_IDX = 25
const I2S1O_WS_IN_IDX = 26
const I2S1O_WS_OUT_IDX = 26
const I2S0I_BCK_IN_IDX = 27
const I2S0I_BCK_OUT_IDX = 27
const I2S0I_WS_IN_IDX = 28
const I2S0I_WS_OUT_IDX = 28
const I2CEXT0_SCL_IN_IDX = 29
const I2CEXT0_SCL_OUT_IDX = 29
const I2CEXT0_SDA_IN_IDX = 30
const I2CEXT0_SDA_OUT_IDX = 30
const PWM0_SYNC0_IN_IDX = 31
const SDIO_TOHOST_INT_OUT_IDX = 31
const PWM0_SYNC1_IN_IDX = 32
const PWM0_OUT0A_IDX = 32
const PWM0_SYNC2_IN_IDX = 33
const PWM0_OUT0B_IDX = 33
const PWM0_F0_IN_IDX = 34
const PWM0_OUT1A_IDX = 34
const PWM0_F1_IN_IDX = 35
const PWM0_OUT1B_IDX = 35
const PWM0_F2_IN_IDX = 36
const PWM0_OUT2A_IDX = 36
const GPIO_BT_ACTIVE_IDX = 37
const PWM0_OUT2B_IDX = 37
const GPIO_BT_PRIORITY_IDX = 38
const PCNT_SIG_CH0_IN0_IDX = 39
const PCNT_SIG_CH1_IN0_IDX = 40
const GPIO_WLAN_ACTIVE_IDX = 40
const PCNT_CTRL_CH0_IN0_IDX = 41
const BB_DIAG0_IDX = 41
const PCNT_CTRL_CH1_IN0_IDX = 42
const BB_DIAG1_IDX = 42
const PCNT_SIG_CH0_IN1_IDX = 43
const BB_DIAG2_IDX = 43
const PCNT_SIG_CH1_IN1_IDX = 44
const BB_DIAG3_IDX = 44
const PCNT_CTRL_CH0_IN1_IDX = 45
const BB_DIAG4_IDX = 45
const PCNT_CTRL_CH1_IN1_IDX = 46
const BB_DIAG5_IDX = 46
const PCNT_SIG_CH0_IN2_IDX = 47
const BB_DIAG6_IDX = 47
const PCNT_SIG_CH1_IN2_IDX = 48
const BB_DIAG7_IDX = 48
const PCNT_CTRL_CH0_IN2_IDX = 49
const BB_DIAG8_IDX = 49
const PCNT_CTRL_CH1_IN2_IDX = 50
const BB_DIAG9_IDX = 50
const PCNT_SIG_CH0_IN3_IDX = 51
const BB_DIAG10_IDX = 51
const PCNT_SIG_CH1_IN3_IDX = 52
const BB_DIAG11_IDX = 52
const PCNT_CTRL_CH0_IN3_IDX = 53
const BB_DIAG12_IDX = 53
const PCNT_CTRL_CH1_IN3_IDX = 54
const BB_DIAG13_IDX = 54
const PCNT_SIG_CH0_IN4_IDX = 55
const BB_DIAG14_IDX = 55
const PCNT_SIG_CH1_IN4_IDX = 56
const BB_DIAG15_IDX = 56
const PCNT_CTRL_CH0_IN4_IDX = 57
const BB_DIAG16_IDX = 57
const PCNT_CTRL_CH1_IN4_IDX = 58
const BB_DIAG17_IDX = 58
const BB_DIAG18_IDX = 59
const BB_DIAG19_IDX = 60
const HSPICS1_IN_IDX = 61
const HSPICS1_OUT_IDX = 61
const HSPICS2_IN_IDX = 62
const HSPICS2_OUT_IDX = 62
const VSPICLK_IN_IDX = 63
const VSPICLK_OUT_IDX = 63
const VSPIQ_IN_IDX = 64
const VSPIQ_OUT_IDX = 64
const VSPID_IN_IDX = 65
const VSPID_OUT_IDX = 65
const VSPIHD_IN_IDX = 66
const VSPIHD_OUT_IDX = 66
const VSPIWP_IN_IDX = 67
const VSPIWP_OUT_IDX = 67
const VSPICS0_IN_IDX = 68
const VSPICS0_OUT_IDX = 68
const VSPICS1_IN_IDX = 69
const VSPICS1_OUT_IDX = 69
const VSPICS2_IN_IDX = 70
const VSPICS2_OUT_IDX = 70
const PCNT_SIG_CH0_IN5_IDX = 71
const LEDC_HS_SIG_OUT0_IDX = 71
const PCNT_SIG_CH1_IN5_IDX = 72
const LEDC_HS_SIG_OUT1_IDX = 72
const PCNT_CTRL_CH0_IN5_IDX = 73
const LEDC_HS_SIG_OUT2_IDX = 73
const PCNT_CTRL_CH1_IN5_IDX = 74
const LEDC_HS_SIG_OUT3_IDX = 74
const PCNT_SIG_CH0_IN6_IDX = 75
const LEDC_HS_SIG_OUT4_IDX = 75
const PCNT_SIG_CH1_IN6_IDX = 76
const LEDC_HS_SIG_OUT5_IDX = 76
const PCNT_CTRL_CH0_IN6_IDX = 77
const LEDC_HS_SIG_OUT6_IDX = 77
const PCNT_CTRL_CH1_IN6_IDX = 78
const LEDC_HS_SIG_OUT7_IDX = 78
const PCNT_SIG_CH0_IN7_IDX = 79
const LEDC_LS_SIG_OUT0_IDX = 79
const PCNT_SIG_CH1_IN7_IDX = 80
const LEDC_LS_SIG_OUT1_IDX = 80
const PCNT_CTRL_CH0_IN7_IDX = 81
const LEDC_LS_SIG_OUT2_IDX = 81
const PCNT_CTRL_CH1_IN7_IDX = 82
const LEDC_LS_SIG_OUT3_IDX = 82
const RMT_SIG_IN0_IDX = 83
const LEDC_LS_SIG_OUT4_IDX = 83
const RMT_SIG_IN1_IDX = 84
const LEDC_LS_SIG_OUT5_IDX = 84
const RMT_SIG_IN2_IDX = 85
const LEDC_LS_SIG_OUT6_IDX = 85
const RMT_SIG_IN3_IDX = 86
const LEDC_LS_SIG_OUT7_IDX = 86
const RMT_SIG_IN4_IDX = 87
const RMT_SIG_OUT0_IDX = 87
const RMT_SIG_IN5_IDX = 88
const RMT_SIG_OUT1_IDX = 88
const RMT_SIG_IN6_IDX = 89
const RMT_SIG_OUT2_IDX = 89
const RMT_SIG_IN7_IDX = 90
const RMT_SIG_OUT3_IDX = 90
const RMT_SIG_OUT4_IDX = 91
const RMT_SIG_OUT5_IDX = 92
const EXT_ADC_START_IDX = 93
const RMT_SIG_OUT6_IDX = 93
const TWAI_RX_IDX = 94
const RMT_SIG_OUT7_IDX = 94
const I2CEXT1_SCL_IN_IDX = 95
const I2CEXT1_SCL_OUT_IDX = 95
const I2CEXT1_SDA_IN_IDX = 96
const I2CEXT1_SDA_OUT_IDX = 96
const HOST_CARD_DETECT_N_1_IDX = 97
const HOST_CCMD_OD_PULLUP_EN_N_IDX = 97
const HOST_CARD_DETECT_N_2_IDX = 98
const HOST_RST_N_1_IDX = 98
const HOST_CARD_WRITE_PRT_1_IDX = 99
const HOST_RST_N_2_IDX = 99
const HOST_CARD_WRITE_PRT_2_IDX = 100
const GPIO_SD0_OUT_IDX = 100
const HOST_CARD_INT_N_1_IDX = 101
const GPIO_SD1_OUT_IDX = 101
const HOST_CARD_INT_N_2_IDX = 102
const GPIO_SD2_OUT_IDX = 102
const PWM1_SYNC0_IN_IDX = 103
const GPIO_SD3_OUT_IDX = 103
const PWM1_SYNC1_IN_IDX = 104
const GPIO_SD4_OUT_IDX = 104
const PWM1_SYNC2_IN_IDX = 105
const GPIO_SD5_OUT_IDX = 105
const PWM1_F0_IN_IDX = 106
const GPIO_SD6_OUT_IDX = 106
const PWM1_F1_IN_IDX = 107
const GPIO_SD7_OUT_IDX = 107
const PWM1_F2_IN_IDX = 108
const PWM1_OUT0A_IDX = 108
const PWM0_CAP0_IN_IDX = 109
const PWM1_OUT0B_IDX = 109
const PWM0_CAP1_IN_IDX = 110
const PWM1_OUT1A_IDX = 110
const PWM0_CAP2_IN_IDX = 111
const PWM1_OUT1B_IDX = 111
const PWM1_CAP0_IN_IDX = 112
const PWM1_OUT2A_IDX = 112
const PWM1_CAP1_IN_IDX = 113
const PWM1_OUT2B_IDX = 113
const PWM1_CAP2_IN_IDX = 114
const TWAI_TX_IDX = 123
const TWAI_BUS_OFF_ON_IDX = 124
const TWAI_CLKOUT_IDX = 125
const SPID4_IN_IDX = 128
const SPID4_OUT_IDX = 128
const SPID5_IN_IDX = 129
const SPID5_OUT_IDX = 129
const SPID6_IN_IDX = 130
const SPID6_OUT_IDX = 130
const SPID7_IN_IDX = 131
const SPID7_OUT_IDX = 131
const HSPID4_IN_IDX = 132
const HSPID4_OUT_IDX = 132
const HSPID5_IN_IDX = 133
const HSPID5_OUT_IDX = 133
const HSPID6_IN_IDX = 134
const HSPID6_OUT_IDX = 134
const HSPID7_IN_IDX = 135
const HSPID7_OUT_IDX = 135
const VSPID4_IN_IDX = 136
const VSPID4_OUT_IDX = 136
const VSPID5_IN_IDX = 137
const VSPID5_OUT_IDX = 137
const VSPID6_IN_IDX = 138
const VSPID6_OUT_IDX = 138
const VSPID7_IN_IDX = 139
const VSPID7_OUT_IDX = 139
const I2S0I_DATA_IN0_IDX = 140
const I2S0O_DATA_OUT0_IDX = 140
const I2S0I_DATA_IN1_IDX = 141
const I2S0O_DATA_OUT1_IDX = 141
const I2S0I_DATA_IN2_IDX = 142
const I2S0O_DATA_OUT2_IDX = 142
const I2S0I_DATA_IN3_IDX = 143
const I2S0O_DATA_OUT3_IDX = 143
const I2S0I_DATA_IN4_IDX = 144
const I2S0O_DATA_OUT4_IDX = 144
const I2S0I_DATA_IN5_IDX = 145
const I2S0O_DATA_OUT5_IDX = 145
const I2S0I_DATA_IN6_IDX = 146
const I2S0O_DATA_OUT6_IDX = 146
const I2S0I_DATA_IN7_IDX = 147
const I2S0O_DATA_OUT7_IDX = 147
const I2S0I_DATA_IN8_IDX = 148
const I2S0O_DATA_OUT8_IDX = 148
const I2S0I_DATA_IN9_IDX = 149
const I2S0O_DATA_OUT9_IDX = 149
const I2S0I_DATA_IN10_IDX = 150
const I2S0O_DATA_OUT10_IDX = 150
const I2S0I_DATA_IN11_IDX = 151
const I2S0O_DATA_OUT11_IDX = 151
const I2S0I_DATA_IN12_IDX = 152
const I2S0O_DATA_OUT12_IDX = 152
const I2S0I_DATA_IN13_IDX = 153
const I2S0O_DATA_OUT13_IDX = 153
const I2S0I_DATA_IN14_IDX = 154
const I2S0O_DATA_OUT14_IDX = 154
const I2S0I_DATA_IN15_IDX = 155
const I2S0O_DATA_OUT15_IDX = 155
const I2S0O_DATA_OUT16_IDX = 156
const I2S0O_DATA_OUT17_IDX = 157
const I2S0O_DATA_OUT18_IDX = 158
const I2S0O_DATA_OUT19_IDX = 159
const I2S0O_DATA_OUT20_IDX = 160
const I2S0O_DATA_OUT21_IDX = 161
const I2S0O_DATA_OUT22_IDX = 162
const I2S0O_DATA_OUT23_IDX = 163
const I2S1I_BCK_IN_IDX = 164
const I2S1I_BCK_OUT_IDX = 164
const I2S1I_WS_IN_IDX = 165
const I2S1I_WS_OUT_IDX = 165
const I2S1I_DATA_IN0_IDX = 166
const I2S1O_DATA_OUT0_IDX = 166
const I2S1I_DATA_IN1_IDX = 167
const I2S1O_DATA_OUT1_IDX = 167
const I2S1I_DATA_IN2_IDX = 168
const I2S1O_DATA_OUT2_IDX = 168
const I2S1I_DATA_IN3_IDX = 169
const I2S1O_DATA_OUT3_IDX = 169
const I2S1I_DATA_IN4_IDX = 170
const I2S1O_DATA_OUT4_IDX = 170
const I2S1I_DATA_IN5_IDX = 171
const I2S1O_DATA_OUT5_IDX = 171
const I2S1I_DATA_IN6_IDX = 172
const I2S1O_DATA_OUT6_IDX = 172
const I2S1I_DATA_IN7_IDX = 173
const I2S1O_DATA_OUT7_IDX = 173
const I2S1I_DATA_IN8_IDX = 174
const I2S1O_DATA_OUT8_IDX = 174
const I2S1I_DATA_IN9_IDX = 175
const I2S1O_DATA_OUT9_IDX = 175
const I2S1I_DATA_IN10_IDX = 176
const I2S1O_DATA_OUT10_IDX = 176
const I2S1I_DATA_IN11_IDX = 177
const I2S1O_DATA_OUT11_IDX = 177
const I2S1I_DATA_IN12_IDX = 178
const I2S1O_DATA_OUT12_IDX = 178
const I2S1I_DATA_IN13_IDX = 179
const I2S1O_DATA_OUT13_IDX = 179
const I2S1I_DATA_IN14_IDX = 180
const I2S1O_DATA_OUT14_IDX = 180
const I2S1I_DATA_IN15_IDX = 181
const I2S1O_DATA_OUT15_IDX = 181
const I2S1O_DATA_OUT16_IDX = 182
const I2S1O_DATA_OUT17_IDX = 183
const I2S1O_DATA_OUT18_IDX = 184
const I2S1O_DATA_OUT19_IDX = 185
const I2S1O_DATA_OUT20_IDX = 186
const I2S1O_DATA_OUT21_IDX = 187
const I2S1O_DATA_OUT22_IDX = 188
const I2S1O_DATA_OUT23_IDX = 189
const I2S0I_H_SYNC_IDX = 190
const I2S0I_V_SYNC_IDX = 191
const I2S0I_H_ENABLE_IDX = 192
const I2S1I_H_SYNC_IDX = 193
const I2S1I_V_SYNC_IDX = 194
const I2S1I_H_ENABLE_IDX = 195
const U2RXD_IN_IDX = 198
const U2TXD_OUT_IDX = 198
const U2CTS_IN_IDX = 199
const U2RTS_OUT_IDX = 199
const EMAC_MDC_I_IDX = 200
const EMAC_MDC_O_IDX = 200
const EMAC_MDI_I_IDX = 201
const EMAC_MDO_O_IDX = 201
const EMAC_CRS_I_IDX = 202
const EMAC_CRS_O_IDX = 202
const EMAC_COL_I_IDX = 203
const EMAC_COL_O_IDX = 203
const PCMFSYNC_IN_IDX = 204
const BT_AUDIO0_IRQ_IDX = 204
const PCMCLK_IN_IDX = 205
const BT_AUDIO1_IRQ_IDX = 205
const PCMDIN_IDX = 206
const BT_AUDIO2_IRQ_IDX = 206
const BLE_AUDIO0_IRQ_IDX = 207
const BLE_AUDIO1_IRQ_IDX = 208
const BLE_AUDIO2_IRQ_IDX = 209
const PCMFSYNC_OUT_IDX = 210
const PCMCLK_OUT_IDX = 211
const PCMDOUT_IDX = 212
const BLE_AUDIO_SYNC0_P_IDX = 213
const BLE_AUDIO_SYNC1_P_IDX = 214
const BLE_AUDIO_SYNC2_P_IDX = 215
const ANT_SEL0_IDX = 216
const ANT_SEL1_IDX = 217
const ANT_SEL2_IDX = 218
const ANT_SEL3_IDX = 219
const ANT_SEL4_IDX = 220
const ANT_SEL5_IDX = 221
const ANT_SEL6_IDX = 222
const ANT_SEL7_IDX = 223
const SIG_IN_FUNC224_IDX = 224
const SIG_IN_FUNC225_IDX = 225
const SIG_IN_FUNC226_IDX = 226
const SIG_IN_FUNC227_IDX = 227
const SIG_IN_FUNC228_IDX = 228
const SIG_GPIO_OUT_IDX = 256
const SOC_CLK_RC_FAST_FREQ_APPROX = 8500000
const SOC_CLK_RC_SLOW_FREQ_APPROX = 150000
const SOC_CLK_XTAL32K_FREQ_APPROX = 32768
const ARG_MAX = 65536
const CHILD_MAX = 40
const LINK_MAX = 32767
const MAX_CANON = 255
const MAX_INPUT = 255
const NAME_MAX = 255
const NGROUPS_MAX = 16
const OPEN_MAX = 64
const PATH_MAX = 1024
const PIPE_BUF = 512
const IOV_MAX = 1024
const BC_BASE_MAX = 99
const BC_DIM_MAX = 2048
const BC_SCALE_MAX = 99
const BC_STRING_MAX = 1000
const COLL_WEIGHTS_MAX = 0
const EXPR_NEST_MAX = 32
const LINE_MAX = 2048
const RE_DUP_MAX = 255
const X_LITTLE_ENDIAN = 1234
const X_BIG_ENDIAN = 4321
const X_PDP_ENDIAN = 3412
const X_QUAD_HIGHWORD = 1
const X_QUAD_LOWWORD = 0
const NBBY = 8
const SPI_FLASH_HAL_MAX_WRITE_BYTES = 64
const SPI_FLASH_HAL_MAX_READ_BYTES = 64

type PtrdiffT c.Int
type WcharT c.Int

type MaxAlignT struct {
	X__clangMaxAlignNonce1 c.LongLong
	X__clangMaxAlignNonce2 c.Double
}
type X__int8T c.Char
type X__uint8T c.Char
type X__int16T int16
type X__uint16T uint16
type X__int32T c.Int
type X__uint32T c.Uint
type X__int64T c.LongLong
type X__uint64T c.UlongLong
type X__intLeast8T c.Char
type X__uintLeast8T c.Char
type X__intLeast16T int16
type X__uintLeast16T uint16
type X__intLeast32T c.Int
type X__uintLeast32T c.Uint
type X__intLeast64T c.LongLong
type X__uintLeast64T c.UlongLong
type X__intmaxT c.LongLong
type X__uintmaxT c.UlongLong
type X__intptrT c.Int
type X__uintptrT c.Uint
type IntLeast8T X__intLeast8T
type UintLeast8T X__uintLeast8T
type IntLeast16T X__intLeast16T
type UintLeast16T X__uintLeast16T
type IntLeast32T X__intLeast32T
type UintLeast32T X__uintLeast32T
type IntLeast64T X__intLeast64T
type UintLeast64T X__uintLeast64T
type IntFast8T c.Char
type UintFast8T c.Char
type IntFast16T int16
type UintFast16T uint16
type IntFast32T c.Int
type UintFast32T c.Uint
type IntFast64T c.LongLong
type UintFast64T c.UlongLong
type WintT c.Uint
type X__blkcntT c.Long
type X__blksizeT c.Long
type X__fsblkcntT X__uint64T
type X__fsfilcntT X__uint32T
type X_offT c.Long
type X__pidT c.Int
type X__devT int16
type X__uidT uint16
type X__gidT uint16
type X__idT X__uint32T
type X__inoT uint16
type X__modeT X__uint32T
type X_off64T c.LongLong
type X__offT X_offT
type X__loffT X_off64T
type X__keyT c.Long
type X_fposT c.Long
type X__sizeT c.Uint
type X_ssizeT c.Int
type X__ssizeT X_ssizeT

type X_mbstateT struct {
	X__count c.Int
	X__value struct {
		X__wch WintT
	}
}
type X_iconvT c.Pointer
type X__clockT c.Ulong
type X__timeT X__intLeast64T
type X__clockidT c.Ulong
type X__daddrT c.Long
type X__timerT c.Ulong
type X__saFamilyT X__uint8T
type X__socklenT X__uint32T
type X__nlItem c.Int
type X__nlinkT uint16
type X__susecondsT c.Long
type X__usecondsT c.Ulong
type X__vaList c.Pointer
type X__ULong c.Ulong

type X__lock struct {
	Unused [8]uint8
}
type X_LOCKT *X__lock
type X_lockT X_LOCKT
type X_flockT X_LOCKT

type X_reent struct {
	Unused [8]uint8
}

type X__localeT struct {
	Unused [8]uint8
}

type X_Bigint struct {
	X_next   *X_Bigint
	X_k      c.Int
	X_maxwds c.Int
	X_sign   c.Int
	X_wds    c.Int
	X_x      [1]X__ULong
}

type X__tm struct {
	X__tmSec   c.Int
	X__tmMin   c.Int
	X__tmHour  c.Int
	X__tmMday  c.Int
	X__tmMon   c.Int
	X__tmYear  c.Int
	X__tmWday  c.Int
	X__tmYday  c.Int
	X__tmIsdst c.Int
}

type X_onExitArgs struct {
	X_fnargs    [32]c.Pointer
	X_dsoHandle [32]c.Pointer
	X_fntypes   X__ULong
	X_isCxa     X__ULong
}

type X_atexit struct {
	X_next          *X_atexit
	X_ind           c.Int
	X_fns           [32]c.Pointer
	X_onExitArgsPtr *X_onExitArgs
}

type X__sbuf struct {
	X_base *c.Char
	X_size c.Int
}

type X__sFILE struct {
	X_p       *c.Char
	X_r       c.Int
	X_w       c.Int
	X_flags   int16
	X_file    int16
	X_bf      X__sbuf
	X_lbfsize c.Int
	X_data    *X_reent
	X_cookie  c.Pointer
	X_read    c.Pointer
	X_write   c.Pointer
	X_seek    c.Pointer
	X_close   c.Pointer
	X_ub      X__sbuf
	X_up      *c.Char
	X_ur      c.Int
	X_ubuf    [3]c.Char
	X_nbuf    [1]c.Char
	X_lb      X__sbuf
	X_blksize c.Int
	X_offset  X_offT
	X_lock    X_flockT
	X_mbstate X_mbstateT
	X_flags2  c.Int
}
type X__FILE X__sFILE

type X_glue struct {
	X_next  *X_glue
	X_niobs c.Int
	X_iobs  *X__FILE
}

type X_rand48 struct {
	X_seed     [3]uint16
	X_mult     [3]uint16
	X_add      uint16
	X_randNext c.UlongLong
}

type X_mprec struct {
	X_result   *X_Bigint
	X_resultK  c.Int
	X_p5s      *X_Bigint
	X_freelist **X_Bigint
}

type X_miscReent struct {
	X_strtokLast     *c.Char
	X_mblenState     X_mbstateT
	X_wctombState    X_mbstateT
	X_mbtowcState    X_mbstateT
	X_l64aBuf        [8]c.Char
	X_getdateErr     c.Int
	X_mbrlenState    X_mbstateT
	X_mbrtowcState   X_mbstateT
	X_mbsrtowcsState X_mbstateT
	X_wcrtombState   X_mbstateT
	X_wcsrtombsState X_mbstateT
}

type DivT struct {
	Quot c.Int
	Rem  c.Int
}

type LdivT struct {
	Quot c.Long
	Rem  c.Long
}

type LldivT struct {
	Quot c.LongLong
	Rem  c.LongLong
}

// llgo:type C
type X__comparFnT func(c.Pointer, c.Pointer) c.Int

type ImaxdivT struct {
	Quot c.IntmaxT
	Rem  c.IntmaxT
}
type X__gnucVaList c.Pointer
type FposT X_fposT
type OffT X__offT
type EspErrT c.Int
type PeriphInterrputT c.Int

const (
	ETS_WIFI_MAC_INTR_SOURCE       PeriphInterrputT = 0
	ETS_WIFI_MAC_NMI_SOURCE        PeriphInterrputT = 1
	ETS_WIFI_BB_INTR_SOURCE        PeriphInterrputT = 2
	ETS_BT_MAC_INTR_SOURCE         PeriphInterrputT = 3
	ETS_BT_BB_INTR_SOURCE          PeriphInterrputT = 4
	ETS_BT_BB_NMI_SOURCE           PeriphInterrputT = 5
	ETS_RWBT_INTR_SOURCE           PeriphInterrputT = 6
	ETS_RWBLE_INTR_SOURCE          PeriphInterrputT = 7
	ETS_RWBT_NMI_SOURCE            PeriphInterrputT = 8
	ETS_RWBLE_NMI_SOURCE           PeriphInterrputT = 9
	ETS_SLC0_INTR_SOURCE           PeriphInterrputT = 10
	ETS_SLC1_INTR_SOURCE           PeriphInterrputT = 11
	ETS_UHCI0_INTR_SOURCE          PeriphInterrputT = 12
	ETS_UHCI1_INTR_SOURCE          PeriphInterrputT = 13
	ETS_TG0_T0_LEVEL_INTR_SOURCE   PeriphInterrputT = 14
	ETS_TG0_T1_LEVEL_INTR_SOURCE   PeriphInterrputT = 15
	ETS_TG0_WDT_LEVEL_INTR_SOURCE  PeriphInterrputT = 16
	ETS_TG0_LACT_LEVEL_INTR_SOURCE PeriphInterrputT = 17
	ETS_TG1_T0_LEVEL_INTR_SOURCE   PeriphInterrputT = 18
	ETS_TG1_T1_LEVEL_INTR_SOURCE   PeriphInterrputT = 19
	ETS_TG1_WDT_LEVEL_INTR_SOURCE  PeriphInterrputT = 20
	ETS_TG1_LACT_LEVEL_INTR_SOURCE PeriphInterrputT = 21
	ETS_GPIO_INTR_SOURCE           PeriphInterrputT = 22
	ETS_GPIO_NMI_SOURCE            PeriphInterrputT = 23
	ETS_FROM_CPU_INTR0_SOURCE      PeriphInterrputT = 24
	ETS_FROM_CPU_INTR1_SOURCE      PeriphInterrputT = 25
	ETS_FROM_CPU_INTR2_SOURCE      PeriphInterrputT = 26
	ETS_FROM_CPU_INTR3_SOURCE      PeriphInterrputT = 27
	ETS_SPI0_INTR_SOURCE           PeriphInterrputT = 28
	ETS_SPI1_INTR_SOURCE           PeriphInterrputT = 29
	ETS_SPI2_INTR_SOURCE           PeriphInterrputT = 30
	ETS_SPI3_INTR_SOURCE           PeriphInterrputT = 31
	ETS_I2S0_INTR_SOURCE           PeriphInterrputT = 32
	ETS_I2S1_INTR_SOURCE           PeriphInterrputT = 33
	ETS_UART0_INTR_SOURCE          PeriphInterrputT = 34
	ETS_UART1_INTR_SOURCE          PeriphInterrputT = 35
	ETS_UART2_INTR_SOURCE          PeriphInterrputT = 36
	ETS_SDIO_HOST_INTR_SOURCE      PeriphInterrputT = 37
	ETS_ETH_MAC_INTR_SOURCE        PeriphInterrputT = 38
	ETS_PWM0_INTR_SOURCE           PeriphInterrputT = 39
	ETS_PWM1_INTR_SOURCE           PeriphInterrputT = 40
	ETS_LEDC_INTR_SOURCE           PeriphInterrputT = 43
	ETS_EFUSE_INTR_SOURCE          PeriphInterrputT = 44
	ETS_TWAI_INTR_SOURCE           PeriphInterrputT = 45
	ETS_RTC_CORE_INTR_SOURCE       PeriphInterrputT = 46
	ETS_RMT_INTR_SOURCE            PeriphInterrputT = 47
	ETS_PCNT_INTR_SOURCE           PeriphInterrputT = 48
	ETS_I2C_EXT0_INTR_SOURCE       PeriphInterrputT = 49
	ETS_I2C_EXT1_INTR_SOURCE       PeriphInterrputT = 50
	ETS_RSA_INTR_SOURCE            PeriphInterrputT = 51
	ETS_SPI1_DMA_INTR_SOURCE       PeriphInterrputT = 52
	ETS_SPI2_DMA_INTR_SOURCE       PeriphInterrputT = 53
	ETS_SPI3_DMA_INTR_SOURCE       PeriphInterrputT = 54
	ETS_WDT_INTR_SOURCE            PeriphInterrputT = 55
	ETS_TIMER1_INTR_SOURCE         PeriphInterrputT = 56
	ETS_TIMER2_INTR_SOURCE         PeriphInterrputT = 57
	ETS_TG0_T0_EDGE_INTR_SOURCE    PeriphInterrputT = 58
	ETS_TG0_T1_EDGE_INTR_SOURCE    PeriphInterrputT = 59
	ETS_TG0_WDT_EDGE_INTR_SOURCE   PeriphInterrputT = 60
	ETS_TG0_LACT_EDGE_INTR_SOURCE  PeriphInterrputT = 61
	ETS_TG1_T0_EDGE_INTR_SOURCE    PeriphInterrputT = 62
	ETS_TG1_T1_EDGE_INTR_SOURCE    PeriphInterrputT = 63
	ETS_TG1_WDT_EDGE_INTR_SOURCE   PeriphInterrputT = 64
	ETS_TG1_LACT_EDGE_INTR_SOURCE  PeriphInterrputT = 65
	ETS_MMU_IA_INTR_SOURCE         PeriphInterrputT = 66
	ETS_MPU_IA_INTR_SOURCE         PeriphInterrputT = 67
	ETS_CACHE_IA_INTR_SOURCE       PeriphInterrputT = 68
	ETS_MAX_INTR_SOURCE            PeriphInterrputT = 69
)

/** Type of blk0_rdata0 register */

type EfuseBlk0Rdata0RegT struct {
	Val c.Uint32T
}

/** Type of blk0_rdata1 register */

type EfuseBlk0Rdata1RegT struct {
	Val c.Uint32T
}

/** Type of blk0_rdata2 register */

type EfuseBlk0Rdata2RegT struct {
	Val c.Uint32T
}

/** Type of blk0_rdata3 register */

type EfuseBlk0Rdata3RegT struct {
	Val c.Uint32T
}

/** Type of blk0_rdata4 register */

type EfuseBlk0Rdata4RegT struct {
	Val c.Uint32T
}

/** Type of blk0_rdata5 register */

type EfuseBlk0Rdata5RegT struct {
	Val c.Uint32T
}

/** Type of blk0_rdata6 register */

type EfuseBlk0Rdata6RegT struct {
	Val c.Uint32T
}

/** Type of blk0_wdata0 register */

type EfuseBlk0Wdata0RegT struct {
	Val c.Uint32T
}

/** Type of blk0_wdata1 register */

type EfuseBlk0Wdata1RegT struct {
	Val c.Uint32T
}

/** Type of blk0_wdata2 register */

type EfuseBlk0Wdata2RegT struct {
	Val c.Uint32T
}

/** Type of blk0_wdata3 register */

type EfuseBlk0Wdata3RegT struct {
	Val c.Uint32T
}

/** Type of blk0_wdata4 register */

type EfuseBlk0Wdata4RegT struct {
	Val c.Uint32T
}

/** Type of blk0_wdata5 register */

type EfuseBlk0Wdata5RegT struct {
	Val c.Uint32T
}

/** Type of blk0_wdata6 register */

type EfuseBlk0Wdata6RegT struct {
	Val c.Uint32T
}

/** Type of blk1_rdata0 register */

type EfuseBlk1Rdata0RegT struct {
	Val c.Uint32T
}

/** Type of blk1_rdata1 register */

type EfuseBlk1Rdata1RegT struct {
	Val c.Uint32T
}

/** Type of blk1_rdata2 register */

type EfuseBlk1Rdata2RegT struct {
	Val c.Uint32T
}

/** Type of blk1_rdata3 register */

type EfuseBlk1Rdata3RegT struct {
	Val c.Uint32T
}

/** Type of blk1_rdata4 register */

type EfuseBlk1Rdata4RegT struct {
	Val c.Uint32T
}

/** Type of blk1_rdata5 register */

type EfuseBlk1Rdata5RegT struct {
	Val c.Uint32T
}

/** Type of blk1_rdata6 register */

type EfuseBlk1Rdata6RegT struct {
	Val c.Uint32T
}

/** Type of blk1_rdata7 register */

type EfuseBlk1Rdata7RegT struct {
	Val c.Uint32T
}

/** Type of blk2_rdata0 register */

type EfuseBlk2Rdata0RegT struct {
	Val c.Uint32T
}

/** Type of blk2_rdata1 register */

type EfuseBlk2Rdata1RegT struct {
	Val c.Uint32T
}

/** Type of blk2_rdata2 register */

type EfuseBlk2Rdata2RegT struct {
	Val c.Uint32T
}

/** Type of blk2_rdata3 register */

type EfuseBlk2Rdata3RegT struct {
	Val c.Uint32T
}

/** Type of blk2_rdata4 register */

type EfuseBlk2Rdata4RegT struct {
	Val c.Uint32T
}

/** Type of blk2_rdata5 register */

type EfuseBlk2Rdata5RegT struct {
	Val c.Uint32T
}

/** Type of blk2_rdata6 register */

type EfuseBlk2Rdata6RegT struct {
	Val c.Uint32T
}

/** Type of blk2_rdata7 register */

type EfuseBlk2Rdata7RegT struct {
	Val c.Uint32T
}

/** Type of blk3_rdata0 register */

type EfuseBlk3Rdata0RegT struct {
	Val c.Uint32T
}

/** Type of blk3_rdata1 register */

type EfuseBlk3Rdata1RegT struct {
	Val c.Uint32T
}

/** Type of blk3_rdata2 register */

type EfuseBlk3Rdata2RegT struct {
	Val c.Uint32T
}

/** Type of blk3_rdata3 register */

type EfuseBlk3Rdata3RegT struct {
	Val c.Uint32T
}

/** Type of blk3_rdata4 register */

type EfuseBlk3Rdata4RegT struct {
	Val c.Uint32T
}

/** Type of blk3_rdata5 register */

type EfuseBlk3Rdata5RegT struct {
	Val c.Uint32T
}

/** Type of blk3_rdata6 register */

type EfuseBlk3Rdata6RegT struct {
	Val c.Uint32T
}

/** Type of blk3_rdata7 register */

type EfuseBlk3Rdata7RegT struct {
	Val c.Uint32T
}

/** Type of blk1_wdata0 register */

type EfuseBlk1Wdata0RegT struct {
	Val c.Uint32T
}

/** Type of blk1_wdata1 register */

type EfuseBlk1Wdata1RegT struct {
	Val c.Uint32T
}

/** Type of blk1_wdata2 register */

type EfuseBlk1Wdata2RegT struct {
	Val c.Uint32T
}

/** Type of blk1_wdata3 register */

type EfuseBlk1Wdata3RegT struct {
	Val c.Uint32T
}

/** Type of blk1_wdata4 register */

type EfuseBlk1Wdata4RegT struct {
	Val c.Uint32T
}

/** Type of blk1_wdata5 register */

type EfuseBlk1Wdata5RegT struct {
	Val c.Uint32T
}

/** Type of blk1_wdata6 register */

type EfuseBlk1Wdata6RegT struct {
	Val c.Uint32T
}

/** Type of blk1_wdata7 register */

type EfuseBlk1Wdata7RegT struct {
	Val c.Uint32T
}

/** Type of blk2_wdata0 register */

type EfuseBlk2Wdata0RegT struct {
	Val c.Uint32T
}

/** Type of blk2_wdata1 register */

type EfuseBlk2Wdata1RegT struct {
	Val c.Uint32T
}

/** Type of blk2_wdata2 register */

type EfuseBlk2Wdata2RegT struct {
	Val c.Uint32T
}

/** Type of blk2_wdata3 register */

type EfuseBlk2Wdata3RegT struct {
	Val c.Uint32T
}

/** Type of blk2_wdata4 register */

type EfuseBlk2Wdata4RegT struct {
	Val c.Uint32T
}

/** Type of blk2_wdata5 register */

type EfuseBlk2Wdata5RegT struct {
	Val c.Uint32T
}

/** Type of blk2_wdata6 register */

type EfuseBlk2Wdata6RegT struct {
	Val c.Uint32T
}

/** Type of blk2_wdata7 register */

type EfuseBlk2Wdata7RegT struct {
	Val c.Uint32T
}

/** Type of blk3_wdata0 register */

type EfuseBlk3Wdata0RegT struct {
	Val c.Uint32T
}

/** Type of blk3_wdata1 register */

type EfuseBlk3Wdata1RegT struct {
	Val c.Uint32T
}

/** Type of blk3_wdata2 register */

type EfuseBlk3Wdata2RegT struct {
	Val c.Uint32T
}

/** Type of blk3_wdata3 register */

type EfuseBlk3Wdata3RegT struct {
	Val c.Uint32T
}

/** Type of blk3_wdata4 register */

type EfuseBlk3Wdata4RegT struct {
	Val c.Uint32T
}

/** Type of blk3_wdata5 register */

type EfuseBlk3Wdata5RegT struct {
	Val c.Uint32T
}

/** Type of blk3_wdata6 register */

type EfuseBlk3Wdata6RegT struct {
	Val c.Uint32T
}

/** Type of blk3_wdata7 register */

type EfuseBlk3Wdata7RegT struct {
	Val c.Uint32T
}

/** Type of clk register */

type EfuseClkRegT struct {
	Val c.Uint32T
}

/** Type of conf register */

type EfuseConfRegT struct {
	Val c.Uint32T
}

/** Type of status register */

type EfuseStatusRegT struct {
	Val c.Uint32T
}

/** Type of cmd register */

type EfuseCmdRegT struct {
	Val c.Uint32T
}

/** Type of int_raw register */

type EfuseIntRawRegT struct {
	Val c.Uint32T
}

/** Type of int_st register */

type EfuseIntStRegT struct {
	Val c.Uint32T
}

/** Type of int_ena register */

type EfuseIntEnaRegT struct {
	Val c.Uint32T
}

/** Type of int_clr register */

type EfuseIntClrRegT struct {
	Val c.Uint32T
}

/** Type of dac_conf register */

type EfuseDacConfRegT struct {
	Val c.Uint32T
}

/** Type of dec_status register */

type EfuseDecStatusRegT struct {
	Val c.Uint32T
}

/** Type of date register */

type EfuseDateRegT struct {
	Val c.Uint32T
}

type EfuseDevT struct {
	Blk0Rdata0  EfuseBlk0Rdata0RegT
	Blk0Rdata1  EfuseBlk0Rdata1RegT
	Blk0Rdata2  EfuseBlk0Rdata2RegT
	Blk0Rdata3  EfuseBlk0Rdata3RegT
	Blk0Rdata4  EfuseBlk0Rdata4RegT
	Blk0Rdata5  EfuseBlk0Rdata5RegT
	Blk0Rdata6  EfuseBlk0Rdata6RegT
	Blk0Wdata0  EfuseBlk0Wdata0RegT
	Blk0Wdata1  EfuseBlk0Wdata1RegT
	Blk0Wdata2  EfuseBlk0Wdata2RegT
	Blk0Wdata3  EfuseBlk0Wdata3RegT
	Blk0Wdata4  EfuseBlk0Wdata4RegT
	Blk0Wdata5  EfuseBlk0Wdata5RegT
	Blk0Wdata6  EfuseBlk0Wdata6RegT
	Blk1Rdata0  EfuseBlk1Rdata0RegT
	Blk1Rdata1  EfuseBlk1Rdata1RegT
	Blk1Rdata2  EfuseBlk1Rdata2RegT
	Blk1Rdata3  EfuseBlk1Rdata3RegT
	Blk1Rdata4  EfuseBlk1Rdata4RegT
	Blk1Rdata5  EfuseBlk1Rdata5RegT
	Blk1Rdata6  EfuseBlk1Rdata6RegT
	Blk1Rdata7  EfuseBlk1Rdata7RegT
	Blk2Rdata0  EfuseBlk2Rdata0RegT
	Blk2Rdata1  EfuseBlk2Rdata1RegT
	Blk2Rdata2  EfuseBlk2Rdata2RegT
	Blk2Rdata3  EfuseBlk2Rdata3RegT
	Blk2Rdata4  EfuseBlk2Rdata4RegT
	Blk2Rdata5  EfuseBlk2Rdata5RegT
	Blk2Rdata6  EfuseBlk2Rdata6RegT
	Blk2Rdata7  EfuseBlk2Rdata7RegT
	Blk3Rdata0  EfuseBlk3Rdata0RegT
	Blk3Rdata1  EfuseBlk3Rdata1RegT
	Blk3Rdata2  EfuseBlk3Rdata2RegT
	Blk3Rdata3  EfuseBlk3Rdata3RegT
	Blk3Rdata4  EfuseBlk3Rdata4RegT
	Blk3Rdata5  EfuseBlk3Rdata5RegT
	Blk3Rdata6  EfuseBlk3Rdata6RegT
	Blk3Rdata7  EfuseBlk3Rdata7RegT
	Blk1Wdata0  EfuseBlk1Wdata0RegT
	Blk1Wdata1  EfuseBlk1Wdata1RegT
	Blk1Wdata2  EfuseBlk1Wdata2RegT
	Blk1Wdata3  EfuseBlk1Wdata3RegT
	Blk1Wdata4  EfuseBlk1Wdata4RegT
	Blk1Wdata5  EfuseBlk1Wdata5RegT
	Blk1Wdata6  EfuseBlk1Wdata6RegT
	Blk1Wdata7  EfuseBlk1Wdata7RegT
	Blk2Wdata0  EfuseBlk2Wdata0RegT
	Blk2Wdata1  EfuseBlk2Wdata1RegT
	Blk2Wdata2  EfuseBlk2Wdata2RegT
	Blk2Wdata3  EfuseBlk2Wdata3RegT
	Blk2Wdata4  EfuseBlk2Wdata4RegT
	Blk2Wdata5  EfuseBlk2Wdata5RegT
	Blk2Wdata6  EfuseBlk2Wdata6RegT
	Blk2Wdata7  EfuseBlk2Wdata7RegT
	Blk3Wdata0  EfuseBlk3Wdata0RegT
	Blk3Wdata1  EfuseBlk3Wdata1RegT
	Blk3Wdata2  EfuseBlk3Wdata2RegT
	Blk3Wdata3  EfuseBlk3Wdata3RegT
	Blk3Wdata4  EfuseBlk3Wdata4RegT
	Blk3Wdata5  EfuseBlk3Wdata5RegT
	Blk3Wdata6  EfuseBlk3Wdata6RegT
	Blk3Wdata7  EfuseBlk3Wdata7RegT
	Clk         EfuseClkRegT
	Conf        EfuseConfRegT
	Status      EfuseStatusRegT
	Cmd         EfuseCmdRegT
	IntRaw      EfuseIntRawRegT
	IntSt       EfuseIntStRegT
	IntEna      EfuseIntEnaRegT
	IntClr      EfuseIntClrRegT
	DacConf     EfuseDacConfRegT
	DecStatus   EfuseDecStatusRegT
	Reserved120 [55]c.Uint32T
	Date        EfuseDateRegT
}
type ETSSTATUS c.Int

const (
	ETS_OK      ETSSTATUS = 0
	ETS_FAILED  ETSSTATUS = 1
	ETS_PENDING ETSSTATUS = 2
	ETS_BUSY    ETSSTATUS = 3
	ETS_CANCEL  ETSSTATUS = 4
)

type ETSSignal c.Uint32T
type ETSParam c.Uint32T

type ETSEventTag struct {
	Unused [8]uint8
}
type ETSEvent ETSEventTag

// llgo:type C
type ETSTask func(*ETSEvent)

// llgo:type C
type EtsIdleCbT func(c.Pointer)

// llgo:type C
type ETSTimerFunc func(c.Pointer)

type X_ETSTIMER_ struct {
	TimerNext   *X_ETSTIMER_
	TimerExpire c.Uint32T
	TimerPeriod c.Uint32T
	TimerFunc   *ETSTimerFunc
	TimerArg    c.Pointer
}
type ETSTimer X_ETSTIMER_

// llgo:type C
type EtsIsrT func(c.Pointer)
type SpiFlashMmapMemoryT c.Int

const (
	SPI_FLASH_MMAP_DATA SpiFlashMmapMemoryT = 0
	SPI_FLASH_MMAP_INST SpiFlashMmapMemoryT = 1
)

type SpiFlashMmapHandleT c.Uint32T
type EspRomSpiflashReadModeT c.Int

const (
	ESP_ROM_SPIFLASH_QIO_MODE         EspRomSpiflashReadModeT = 0
	ESP_ROM_SPIFLASH_QOUT_MODE        EspRomSpiflashReadModeT = 1
	ESP_ROM_SPIFLASH_DIO_MODE         EspRomSpiflashReadModeT = 2
	ESP_ROM_SPIFLASH_DOUT_MODE        EspRomSpiflashReadModeT = 3
	ESP_ROM_SPIFLASH_FASTRD_MODE      EspRomSpiflashReadModeT = 4
	ESP_ROM_SPIFLASH_SLOWRD_MODE      EspRomSpiflashReadModeT = 5
	ESP_ROM_SPIFLASH_OPI_STR_MODE     EspRomSpiflashReadModeT = 6
	ESP_ROM_SPIFLASH_OPI_DTR_MODE     EspRomSpiflashReadModeT = 7
	ESP_ROM_SPIFLASH_OOUT_MODE        EspRomSpiflashReadModeT = 8
	ESP_ROM_SPIFLASH_OIO_STR_MODE     EspRomSpiflashReadModeT = 9
	ESP_ROM_SPIFLASH_OIO_DTR_MODE     EspRomSpiflashReadModeT = 10
	ESP_ROM_SPIFLASH_QPI_MODE         EspRomSpiflashReadModeT = 11
	ESP_ROM_SPIFLASH_OPI_HEX_DTR_MODE EspRomSpiflashReadModeT = 12
)

type EspRomSpiflashChipT struct {
	DeviceId   c.Uint32T
	ChipSize   c.Uint32T
	BlockSize  c.Uint32T
	SectorSize c.Uint32T
	PageSize   c.Uint32T
	StatusMask c.Uint32T
}
type EspRomSpiflashResultT c.Int

const (
	ESP_ROM_SPIFLASH_RESULT_OK      EspRomSpiflashResultT = 0
	ESP_ROM_SPIFLASH_RESULT_ERR     EspRomSpiflashResultT = 1
	ESP_ROM_SPIFLASH_RESULT_TIMEOUT EspRomSpiflashResultT = 2
)
const (
	ESP_ERR_FLASH_SIZE_NOT_MATCH c.Int = 260
	ESP_ERR_FLASH_NO_RESPONSE    c.Int = 264
)

/** Definition of a common transaction. Also holds the return value. */

type SpiFlashTransT struct {
	Reserved      c.Uint8T
	MosiLen       c.Uint8T
	MisoLen       c.Uint8T
	AddressBitlen c.Uint8T
	Address       c.Uint32T
	MosiData      *c.Uint8T
	MisoData      *c.Uint8T
	Flags         c.Uint32T
	Command       c.Uint16T
	DummyBitlen   c.Uint8T
	IoMode        c.Uint32T
}
type EspFlashSpeedS c.Int

const (
	ESP_FLASH_5MHZ      EspFlashSpeedS = 5
	ESP_FLASH_10MHZ     EspFlashSpeedS = 10
	ESP_FLASH_20MHZ     EspFlashSpeedS = 20
	ESP_FLASH_26MHZ     EspFlashSpeedS = 26
	ESP_FLASH_40MHZ     EspFlashSpeedS = 40
	ESP_FLASH_80MHZ     EspFlashSpeedS = 80
	ESP_FLASH_120MHZ    EspFlashSpeedS = 120
	ESP_FLASH_SPEED_MAX EspFlashSpeedS = 121
)

type EspFlashSpeedT EspFlashSpeedS
type EspFlashIoModeT c.Int

const (
	SPI_FLASH_SLOWRD        EspFlashIoModeT = 0
	SPI_FLASH_FASTRD        EspFlashIoModeT = 1
	SPI_FLASH_DOUT          EspFlashIoModeT = 2
	SPI_FLASH_DIO           EspFlashIoModeT = 3
	SPI_FLASH_QOUT          EspFlashIoModeT = 4
	SPI_FLASH_QIO           EspFlashIoModeT = 5
	SPI_FLASH_OPI_STR       EspFlashIoModeT = 16
	SPI_FLASH_OPI_DTR       EspFlashIoModeT = 17
	SPI_FLASH_READ_MODE_MAX EspFlashIoModeT = 18
)

// / Configuration structure for the flash chip suspend feature.
type SpiFlashSusCmdConf struct {
	SusMask c.Uint32T
}

// / Structure for flash encryption operations.
type SpiFlashEncryptionT struct {
	FlashEncryptionEnable      c.Pointer
	FlashEncryptionDisable     c.Pointer
	FlashEncryptionDataPrepare c.Pointer
	FlashEncryptionDone        c.Pointer
	FlashEncryptionDestroy     c.Pointer
	FlashEncryptionCheck       c.Pointer
}

type SpiFlashHostDriverS struct {
	Unused [8]uint8
}
type SpiFlashHostDriverT SpiFlashHostDriverS

/** SPI Flash Host driver instance */

type SpiFlashHostInstT struct {
	Driver *SpiFlashHostDriverS
}

type SpiFlashChipT struct {
	Unused [8]uint8
}

type EspFlashT struct {
	Unused [8]uint8
}

/** @brief Structure for describing a region of flash */

type EspFlashRegionT struct {
	Offset c.Uint32T
	Size   c.Uint32T
}

/** @brief OS-level integration hooks for accessing flash chips inside a running OS
 *
 * It's in the public header because some instances should be allocated statically in the startup
 * code. May be updated according to hardware version and new flash chip feature requirements,
 * shouldn't be treated as public API.
 *
 *  For advanced developers, you may replace some of them with your implementations at your own
 *  risk.
 */
type EspFlashOsFunctionsT struct {
	Start             c.Pointer
	End               c.Pointer
	RegionProtected   c.Pointer
	DelayUs           c.Pointer
	GetTempBuffer     c.Pointer
	ReleaseTempBuffer c.Pointer
	CheckYield        c.Pointer
	Yield             c.Pointer
	GetSystemTime     c.Pointer
	SetFlashOpStatus  c.Pointer
}

type SpiDevS struct {
	Cmd struct {
		Val c.Uint32T
	}
	Addr c.Uint32T
	Ctrl struct {
		Val c.Uint32T
	}
	Ctrl1 struct {
		Val c.Uint32T
	}
	RdStatus struct {
		Val c.Uint32T
	}
	Ctrl2 struct {
		Val c.Uint32T
	}
	Clock struct {
		Val c.Uint32T
	}
	User struct {
		Val c.Uint32T
	}
	User1 struct {
		Val c.Uint32T
	}
	User2 struct {
		Val c.Uint32T
	}
	MosiDlen struct {
		Val c.Uint32T
	}
	MisoDlen struct {
		Val c.Uint32T
	}
	SlvWrStatus c.Uint32T
	Pin         struct {
		Val c.Uint32T
	}
	Slave struct {
		Val c.Uint32T
	}
	Slave1 struct {
		Val c.Uint32T
	}
	Slave2 struct {
		Val c.Uint32T
	}
	Slave3 struct {
		Val c.Uint32T
	}
	SlvWrbufDlen struct {
		Val c.Uint32T
	}
	SlvRdbufDlen struct {
		Val c.Uint32T
	}
	CacheFctrl struct {
		Val c.Uint32T
	}
	CacheSctrl struct {
		Val c.Uint32T
	}
	SramCmd struct {
		Val c.Uint32T
	}
	SramDrdCmd struct {
		Val c.Uint32T
	}
	SramDwrCmd struct {
		Val c.Uint32T
	}
	SlvRdBit struct {
		Val c.Uint32T
	}
	Reserved68 c.Uint32T
	Reserved6c c.Uint32T
	Reserved70 c.Uint32T
	Reserved74 c.Uint32T
	Reserved78 c.Uint32T
	Reserved7c c.Uint32T
	DataBuf    [16]c.Uint32T
	TxCrc      c.Uint32T
	ReservedC4 c.Uint32T
	ReservedC8 c.Uint32T
	ReservedCc c.Uint32T
	ReservedD0 c.Uint32T
	ReservedD4 c.Uint32T
	ReservedD8 c.Uint32T
	ReservedDc c.Uint32T
	ReservedE0 c.Uint32T
	ReservedE4 c.Uint32T
	ReservedE8 c.Uint32T
	ReservedEc c.Uint32T
	Ext0       struct {
		Val c.Uint32T
	}
	Ext1 struct {
		Val c.Uint32T
	}
	Ext2 struct {
		Val c.Uint32T
	}
	Ext3 struct {
		Val c.Uint32T
	}
	DmaConf struct {
		Val c.Uint32T
	}
	DmaOutLink struct {
		Val c.Uint32T
	}
	DmaInLink struct {
		Val c.Uint32T
	}
	DmaStatus struct {
		Val c.Uint32T
	}
	DmaIntEna struct {
		Val c.Uint32T
	}
	DmaIntRaw struct {
		Val c.Uint32T
	}
	DmaIntSt struct {
		Val c.Uint32T
	}
	DmaIntClr struct {
		Val c.Uint32T
	}
	DmaInErrEofDesAddr  c.Uint32T
	DmaInSucEofDesAddr  c.Uint32T
	DmaInlinkDscr       c.Uint32T
	DmaInlinkDscrBf0    c.Uint32T
	DmaInlinkDscrBf1    c.Uint32T
	DmaOutEofBfrDesAddr c.Uint32T
	DmaOutEofDesAddr    c.Uint32T
	DmaOutlinkDscr      c.Uint32T
	DmaOutlinkDscrBf0   c.Uint32T
	DmaOutlinkDscrBf1   c.Uint32T
	DmaRxStatus         c.Uint32T
	DmaTxStatus         c.Uint32T
	Reserved150         [171]c.Uint32T
	Date                struct {
		Val c.Uint32T
	}
}
type SpiDevT SpiDevS

/*
Stores a bunch of per-spi-peripheral data.
*/
type SpiSignalConnT struct {
	SpiclkOut      c.Uint8T
	SpiclkIn       c.Uint8T
	SpidOut        c.Uint8T
	SpiqOut        c.Uint8T
	SpiwpOut       c.Uint8T
	SpihdOut       c.Uint8T
	SpidIn         c.Uint8T
	SpiqIn         c.Uint8T
	SpiwpIn        c.Uint8T
	SpihdIn        c.Uint8T
	SpicsOut       [3]c.Uint8T
	SpicsIn        c.Uint8T
	SpidqsOut      c.Uint8T
	SpicdOut       c.Uint8T
	SpiclkIomuxPin c.Uint8T
	SpidIomuxPin   c.Uint8T
	SpiqIomuxPin   c.Uint8T
	SpiwpIomuxPin  c.Uint8T
	SpihdIomuxPin  c.Uint8T
	Spics0IomuxPin c.Uint8T
	Irq            c.Uint8T
	IrqDma         c.Uint8T
	Func           c.Int
	Hw             *SpiDevT
}
type SocRootClkT c.Int

const (
	SOC_ROOT_CLK_INT_RC_FAST SocRootClkT = 0
	SOC_ROOT_CLK_INT_RC_SLOW SocRootClkT = 1
	SOC_ROOT_CLK_EXT_XTAL    SocRootClkT = 2
	SOC_ROOT_CLK_EXT_XTAL32K SocRootClkT = 3
)

type SocCpuClkSrcT c.Int

const (
	SOC_CPU_CLK_SRC_XTAL    SocCpuClkSrcT = 0
	SOC_CPU_CLK_SRC_PLL     SocCpuClkSrcT = 1
	SOC_CPU_CLK_SRC_RC_FAST SocCpuClkSrcT = 2
	SOC_CPU_CLK_SRC_APLL    SocCpuClkSrcT = 3
	SOC_CPU_CLK_SRC_INVALID SocCpuClkSrcT = 4
)

type SocRtcSlowClkSrcT c.Int

const (
	SOC_RTC_SLOW_CLK_SRC_RC_SLOW      SocRtcSlowClkSrcT = 0
	SOC_RTC_SLOW_CLK_SRC_XTAL32K      SocRtcSlowClkSrcT = 1
	SOC_RTC_SLOW_CLK_SRC_RC_FAST_D256 SocRtcSlowClkSrcT = 2
	SOC_RTC_SLOW_CLK_SRC_INVALID      SocRtcSlowClkSrcT = 3
)

type SocRtcFastClkSrcT c.Int

const (
	SOC_RTC_FAST_CLK_SRC_XTAL_D4  SocRtcFastClkSrcT = 0
	SOC_RTC_FAST_CLK_SRC_XTAL_DIV SocRtcFastClkSrcT = 0
	SOC_RTC_FAST_CLK_SRC_RC_FAST  SocRtcFastClkSrcT = 1
	SOC_RTC_FAST_CLK_SRC_INVALID  SocRtcFastClkSrcT = 2
)

type SocXtalFreqT c.Int

const (
	SOC_XTAL_FREQ_AUTO SocXtalFreqT = 0
	SOC_XTAL_FREQ_24M  SocXtalFreqT = 24
	SOC_XTAL_FREQ_26M  SocXtalFreqT = 26
	SOC_XTAL_FREQ_40M  SocXtalFreqT = 40
)

type SocModuleClkT c.Int

const (
	SOC_MOD_CLK_CPU          SocModuleClkT = 1
	SOC_MOD_CLK_RTC_FAST     SocModuleClkT = 2
	SOC_MOD_CLK_RTC_SLOW     SocModuleClkT = 3
	SOC_MOD_CLK_APB          SocModuleClkT = 4
	SOC_MOD_CLK_PLL_D2       SocModuleClkT = 5
	SOC_MOD_CLK_PLL_F160M    SocModuleClkT = 6
	SOC_MOD_CLK_XTAL32K      SocModuleClkT = 7
	SOC_MOD_CLK_RC_FAST      SocModuleClkT = 8
	SOC_MOD_CLK_RC_FAST_D256 SocModuleClkT = 9
	SOC_MOD_CLK_XTAL         SocModuleClkT = 10
	SOC_MOD_CLK_REF_TICK     SocModuleClkT = 11
	SOC_MOD_CLK_APLL         SocModuleClkT = 12
	SOC_MOD_CLK_INVALID      SocModuleClkT = 13
)

type SocPeriphSystimerClkSrcT c.Int

const (
	SYSTIMER_CLK_SRC_XTAL    SocPeriphSystimerClkSrcT = 10
	SYSTIMER_CLK_SRC_DEFAULT SocPeriphSystimerClkSrcT = 10
)

type SocPeriphGptimerClkSrcT c.Int

const (
	GPTIMER_CLK_SRC_APB     SocPeriphGptimerClkSrcT = 4
	GPTIMER_CLK_SRC_DEFAULT SocPeriphGptimerClkSrcT = 4
)

type SocPeriphTgClkSrcLegacyT c.Int

const (
	TIMER_SRC_CLK_APB     SocPeriphTgClkSrcLegacyT = 4
	TIMER_SRC_CLK_DEFAULT SocPeriphTgClkSrcLegacyT = 4
)

type SocPeriphLcdClkSrcT c.Int

const (
	LCD_CLK_SRC_PLL160M SocPeriphLcdClkSrcT = 6
	LCD_CLK_SRC_DEFAULT SocPeriphLcdClkSrcT = 6
)

type SocPeriphRmtClkSrcT c.Int

const (
	RMT_CLK_SRC_APB      SocPeriphRmtClkSrcT = 4
	RMT_CLK_SRC_REF_TICK SocPeriphRmtClkSrcT = 11
	RMT_CLK_SRC_DEFAULT  SocPeriphRmtClkSrcT = 4
)

type SocPeriphRmtClkSrcLegacyT c.Int

const (
	RMT_BASECLK_APB     SocPeriphRmtClkSrcLegacyT = 4
	RMT_BASECLK_REF     SocPeriphRmtClkSrcLegacyT = 11
	RMT_BASECLK_DEFAULT SocPeriphRmtClkSrcLegacyT = 4
)

type SocPeriphUartClkSrcLegacyT c.Int

const (
	UART_SCLK_APB      SocPeriphUartClkSrcLegacyT = 4
	UART_SCLK_REF_TICK SocPeriphUartClkSrcLegacyT = 11
	UART_SCLK_DEFAULT  SocPeriphUartClkSrcLegacyT = 4
)

type SocPeriphMcpwmTimerClkSrcT c.Int

const (
	MCPWM_TIMER_CLK_SRC_PLL160M SocPeriphMcpwmTimerClkSrcT = 6
	MCPWM_TIMER_CLK_SRC_DEFAULT SocPeriphMcpwmTimerClkSrcT = 6
)

type SocPeriphMcpwmCaptureClkSrcT c.Int

const (
	MCPWM_CAPTURE_CLK_SRC_APB     SocPeriphMcpwmCaptureClkSrcT = 4
	MCPWM_CAPTURE_CLK_SRC_DEFAULT SocPeriphMcpwmCaptureClkSrcT = 4
)

type SocPeriphMcpwmCarrierClkSrcT c.Int

const (
	MCPWM_CARRIER_CLK_SRC_PLL160M SocPeriphMcpwmCarrierClkSrcT = 6
	MCPWM_CARRIER_CLK_SRC_DEFAULT SocPeriphMcpwmCarrierClkSrcT = 6
)

type SocPeriphI2sClkSrcT c.Int

const (
	I2S_CLK_SRC_DEFAULT  SocPeriphI2sClkSrcT = 6
	I2S_CLK_SRC_PLL_160M SocPeriphI2sClkSrcT = 6
	I2S_CLK_SRC_APLL     SocPeriphI2sClkSrcT = 12
)

type SocPeriphI2cClkSrcT c.Int

const (
	I2C_CLK_SRC_APB     SocPeriphI2cClkSrcT = 4
	I2C_CLK_SRC_DEFAULT SocPeriphI2cClkSrcT = 4
)

type SocPeriphSpiClkSrcT c.Int

const (
	SPI_CLK_SRC_DEFAULT SocPeriphSpiClkSrcT = 4
	SPI_CLK_SRC_APB     SocPeriphSpiClkSrcT = 4
)

type SocPeriphSdmClkSrcT c.Int

const (
	SDM_CLK_SRC_APB     SocPeriphSdmClkSrcT = 4
	SDM_CLK_SRC_DEFAULT SocPeriphSdmClkSrcT = 4
)

type SocPeriphDacDigiClkSrcT c.Int

const (
	DAC_DIGI_CLK_SRC_PLLD2   SocPeriphDacDigiClkSrcT = 5
	DAC_DIGI_CLK_SRC_APLL    SocPeriphDacDigiClkSrcT = 12
	DAC_DIGI_CLK_SRC_DEFAULT SocPeriphDacDigiClkSrcT = 5
)

type SocPeriphDacCosineClkSrcT c.Int

const (
	DAC_COSINE_CLK_SRC_RTC_FAST SocPeriphDacCosineClkSrcT = 2
	DAC_COSINE_CLK_SRC_DEFAULT  SocPeriphDacCosineClkSrcT = 2
)

type SocPeriphTwaiClkSrcT c.Int

const (
	TWAI_CLK_SRC_APB     SocPeriphTwaiClkSrcT = 4
	TWAI_CLK_SRC_DEFAULT SocPeriphTwaiClkSrcT = 4
)

type SocPeriphAdcDigiClkSrcT c.Int

const (
	ADC_DIGI_CLK_SRC_PLL_F160M SocPeriphAdcDigiClkSrcT = 6
	ADC_DIGI_CLK_SRC_APLL      SocPeriphAdcDigiClkSrcT = 12
	ADC_DIGI_CLK_SRC_DEFAULT   SocPeriphAdcDigiClkSrcT = 6
)

type SocPeriphAdcRtcClkSrcT c.Int

const (
	ADC_RTC_CLK_SRC_RC_FAST SocPeriphAdcRtcClkSrcT = 8
	ADC_RTC_CLK_SRC_DEFAULT SocPeriphAdcRtcClkSrcT = 8
)

type SocPeriphMwdtClkSrcT c.Int

const (
	MWDT_CLK_SRC_APB     SocPeriphMwdtClkSrcT = 4
	MWDT_CLK_SRC_DEFAULT SocPeriphMwdtClkSrcT = 4
)

type SocPeriphLedcClkSrcLegacyT c.Int

const (
	LEDC_AUTO_CLK        SocPeriphLedcClkSrcLegacyT = 0
	LEDC_USE_APB_CLK     SocPeriphLedcClkSrcLegacyT = 4
	LEDC_USE_RC_FAST_CLK SocPeriphLedcClkSrcLegacyT = 8
	LEDC_USE_REF_TICK    SocPeriphLedcClkSrcLegacyT = 11
	LEDC_USE_RTC8M_CLK   SocPeriphLedcClkSrcLegacyT = 8
)

type SocPeriphSdmmcClkSrcT c.Int

const (
	SDMMC_CLK_SRC_DEFAULT SocPeriphSdmmcClkSrcT = 6
	SDMMC_CLK_SRC_PLL160M SocPeriphSdmmcClkSrcT = 6
)

type SocClkoutSigIdT c.Int

const (
	CLKOUT_SIG_I2S0     SocClkoutSigIdT = 0
	CLKOUT_SIG_PLL      SocClkoutSigIdT = 1
	CLKOUT_SIG_RC_SLOW  SocClkoutSigIdT = 4
	CLKOUT_SIG_XTAL     SocClkoutSigIdT = 5
	CLKOUT_SIG_APLL     SocClkoutSigIdT = 6
	CLKOUT_SIG_REF_TICK SocClkoutSigIdT = 12
	CLKOUT_SIG_PLL_F80M SocClkoutSigIdT = 13
	CLKOUT_SIG_RC_FAST  SocClkoutSigIdT = 14
	CLKOUT_SIG_I2S1     SocClkoutSigIdT = 15
	CLKOUT_SIG_INVALID  SocClkoutSigIdT = 255
)

type SpiHostDeviceT c.Int

const (
	SPI1_HOST    SpiHostDeviceT = 0
	SPI2_HOST    SpiHostDeviceT = 1
	SPI3_HOST    SpiHostDeviceT = 2
	SPI_HOST_MAX SpiHostDeviceT = 3
)

type SpiClockSourceT SocPeriphSpiClkSrcT
type SpiEventT c.Int

const (
	SPI_EV_BUF_TX         SpiEventT = 1
	SPI_EV_BUF_RX         SpiEventT = 2
	SPI_EV_SEND_DMA_READY SpiEventT = 4
	SPI_EV_SEND           SpiEventT = 8
	SPI_EV_RECV_DMA_READY SpiEventT = 16
	SPI_EV_RECV           SpiEventT = 32
	SPI_EV_CMD9           SpiEventT = 64
	SPI_EV_CMDA           SpiEventT = 128
	SPI_EV_TRANS          SpiEventT = 256
)

/**
 * @brief Line mode of SPI transaction phases: CMD, ADDR, DOUT/DIN.
 */

type SpiLineModeT struct {
	CmdLines  c.Uint8T
	AddrLines c.Uint8T
	DataLines c.Uint8T
}
type SpiCommandT c.Int

const (
	SPI_CMD_HD_WRBUF   SpiCommandT = 1
	SPI_CMD_HD_RDBUF   SpiCommandT = 2
	SPI_CMD_HD_WRDMA   SpiCommandT = 4
	SPI_CMD_HD_RDDMA   SpiCommandT = 8
	SPI_CMD_HD_SEG_END SpiCommandT = 16
	SPI_CMD_HD_EN_QPI  SpiCommandT = 32
	SPI_CMD_HD_WR_END  SpiCommandT = 64
	SPI_CMD_HD_INT0    SpiCommandT = 128
	SPI_CMD_HD_INT1    SpiCommandT = 256
	SPI_CMD_HD_INT2    SpiCommandT = 512
)

type SpiSamplingPointT c.Int

const (
	SPI_SAMPLING_POINT_PHASE_0 SpiSamplingPointT = 0
	SPI_SAMPLING_POINT_PHASE_1 SpiSamplingPointT = 1
)

type SpiFlashLlClockRegT c.Uint

/**
 * Generic driver context structure for all chips using the SPI peripheral.
 * Include this into the HEAD of the driver data for other driver
 * implementations that also use the SPI peripheral.
 */

type SpiFlashHalContextT struct {
	Inst         SpiFlashHostInstT
	Spi          *SpiDevT
	CsNum        c.Int
	ClockConf    SpiFlashLlClockRegT
	BaseIoMode   EspFlashIoModeT
	Flags        c.Uint32T
	SusCfg       SpiFlashSusCmdConf
	SlicerFlags  c.Uint32T
	FreqMhz      c.Int
	TsusVal      c.Uint8T
	AutoWaitiPes bool
}

// / This struct provide MSPI Flash necessary timing related config, should be consistent with that in union in `spi_flash_hal_config_t`.
type SpiFlashHalTimingConfigT struct {
	ExtraDummy  c.Uint32T
	CsHold      c.Uint32T
	CsSetup     c.Uint8T
	ClockConfig SpiFlashLlClockRegT
}

// / Configuration structure for the SPI driver.
type SpiFlashHalConfigT struct {
	Iomux             bool
	InputDelayNs      c.Int
	Speed             EspFlashSpeedS
	HostId            SpiHostDeviceT
	CsNum             c.Int
	AutoSusEn         bool
	OctalModeEn       bool
	UsingTimingTuning bool
	DefaultIoMode     EspFlashIoModeT
	FreqMhz           c.Int
	ClockSrcFreq      c.Int
	TsusVal           c.Uint8T
	AutoWaitiPes      bool
}

/**
 * @brief Structure for flash dummy bits.
 *        For some flash chips, dummy bits are configurable under different conditions.
 */

type SpiFlashHpmDummyConfT struct {
	DioDummy    c.Uint8T
	DoutDummy   c.Uint8T
	QioDummy    c.Uint8T
	QoutDummy   c.Uint8T
	FastrdDummy c.Uint8T
}
type SpiFlashRequirementT c.Int

const (
	SPI_FLASH_HPM_CMD_NEEDED      SpiFlashRequirementT = 0
	SPI_FLASH_HPM_DUMMY_NEEDED    SpiFlashRequirementT = 1
	SPI_FLASH_HPM_WRITE_SR_NEEDED SpiFlashRequirementT = 2
	SPI_FLASH_HPM_UNNEEDED        SpiFlashRequirementT = 3
	SPI_FLASH_HPM_BEYOND_LIMIT    SpiFlashRequirementT = 4
)

// llgo:type C
type SpiFlashHpmEnableFnT func()

// llgo:type C
type SpiFlashHpfCheckFnT func() EspErrT

// llgo:type C
type SpiFlashGetChipDummyFnT func(*SpiFlashHpmDummyConfT)

// llgo:type C
type SpiFlashHpmProbeFnT func(c.Uint32T) EspErrT

// llgo:type C
type SpiFlashHpmChipRequirementCheckT func(c.Uint32T, c.Uint32T, c.Int, c.Int) SpiFlashRequirementT

type SpiFlashHpmInfoT struct {
	Method                  *c.Char
	Probe                   SpiFlashHpmProbeFnT
	ChipHpmRequirementCheck SpiFlashHpmChipRequirementCheckT
	FlashHpmEnable          SpiFlashHpmEnableFnT
	FlashHpfCheck           SpiFlashHpfCheckFnT
	FlashGetDummy           SpiFlashGetChipDummyFnT
}
type SpiFlashWrapSizeT c.Int

const (
	FLASH_WRAP_SIZE_8B  SpiFlashWrapSizeT = 8
	FLASH_WRAP_SIZE_16B SpiFlashWrapSizeT = 16
	FLASH_WRAP_SIZE_32B SpiFlashWrapSizeT = 32
	FLASH_WRAP_SIZE_64B SpiFlashWrapSizeT = 64
)

// llgo:type C
type SpiFlashWrapProbeFnT func(c.Uint32T) EspErrT

// llgo:type C
type SpiFlashWrapSetFnT func(SpiFlashWrapSizeT) EspErrT

// llgo:type C
type SpiFlashWrapClrFnT func() EspErrT

type SpiFlashWrapInfoT struct {
	Method      *c.Char
	Probe       SpiFlashWrapProbeFnT
	ChipWrapSet SpiFlashWrapSetFnT
	ChipWrapClr SpiFlashWrapClrFnT
}
type EspMspiIoT c.Int

const (
	ESP_MSPI_IO_CLK EspMspiIoT = 0
	ESP_MSPI_IO_Q   EspMspiIoT = 1
	ESP_MSPI_IO_D   EspMspiIoT = 2
	ESP_MSPI_IO_CS0 EspMspiIoT = 3
	ESP_MSPI_IO_HD  EspMspiIoT = 4
	ESP_MSPI_IO_WP  EspMspiIoT = 5
	ESP_MSPI_IO_MAX EspMspiIoT = 6
)

// llgo:type C
type SpiFlashGuardStartFuncT func()

// llgo:type C
type SpiFlashGuardEndFuncT func()

/**
 * Structure holding SPI flash access critical sections management functions.
 *
 * Flash API uses two types of flash access management functions:
 * 1) Functions which prepare/restore flash cache and interrupts before calling
 *    appropriate ROM functions (SPIWrite, SPIRead and SPIEraseBlock):
 *   - 'start' function should disables flash cache and non-IRAM interrupts and
 *      is invoked before the call to one of ROM function above.
 *   - 'end' function should restore state of flash cache and non-IRAM interrupts and
 *      is invoked after the call to one of ROM function above.
 *    These two functions are not recursive.
 *
 * Different versions of the guarding functions should be used depending on the context of
 * execution (with or without functional OS). In normal conditions when flash API is called
 * from task the functions use OS primitives. When there is no OS at all or when
 * it is not guaranteed that OS is functional (accessing flash from exception handler) these
 * functions cannot use OS primitives or even does not need them (multithreaded access is not possible).
 *
 * @note Structure and corresponding guard functions should not reside in flash.
 *       For example structure can be placed in DRAM and functions in IRAM sections.
 */

type SpiFlashGuardFuncsT struct {
	Start SpiFlashGuardStartFuncT
	End   SpiFlashGuardEndFuncT
}
