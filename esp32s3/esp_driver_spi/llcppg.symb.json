[
  {
    "mangle": "spi_bus_add_device",
    "c++": "spi_bus_add_device(spi_host_device_t, const spi_device_interface_config_t *, spi_device_handle_t *)",
    "go": "SpiBusAddDevice"
  },
  {
    "mangle": "spi_bus_dma_memory_alloc",
    "c++": "spi_bus_dma_memory_alloc(spi_host_device_t, size_t, uint32_t)",
    "go": "SpiBusDmaMemoryAlloc"
  },
  {
    "mangle": "spi_bus_free",
    "c++": "spi_bus_free(spi_host_device_t)",
    "go": "SpiBusFree"
  },
  {
    "mangle": "spi_bus_get_attr",
    "c++": "spi_bus_get_attr(spi_host_device_t)",
    "go": "SpiBusGetAttr"
  },
  {
    "mangle": "spi_bus_get_dma_ctx",
    "c++": "spi_bus_get_dma_ctx(spi_host_device_t)",
    "go": "SpiBusGetDmaCtx"
  },
  {
    "mangle": "spi_bus_get_max_transaction_len",
    "c++": "spi_bus_get_max_transaction_len(spi_host_device_t, size_t *)",
    "go": "SpiBusGetMaxTransactionLen"
  },
  {
    "mangle": "spi_bus_initialize",
    "c++": "spi_bus_initialize(spi_host_device_t, const spi_bus_config_t *, spi_dma_chan_t)",
    "go": "SpiBusInitialize"
  },
  {
    "mangle": "spi_bus_main_set_lock",
    "c++": "spi_bus_main_set_lock(spi_bus_lock_handle_t)",
    "go": "SpiBusMainSetLock"
  },
  {
    "mangle": "spi_bus_multi_trans_mode_enable",
    "c++": "spi_bus_multi_trans_mode_enable(spi_device_handle_t, bool)",
    "go": "SpiBusMultiTransModeEnable"
  },
  {
    "mangle": "spi_bus_register_destroy_func",
    "c++": "spi_bus_register_destroy_func(spi_host_device_t, spi_destroy_func_t, void *)",
    "go": "SpiBusRegisterDestroyFunc"
  },
  {
    "mangle": "spi_bus_remove_device",
    "c++": "spi_bus_remove_device(spi_device_handle_t)",
    "go": "SpiBusRemoveDevice"
  },
  {
    "mangle": "spi_device_acquire_bus",
    "c++": "spi_device_acquire_bus(spi_device_handle_t, TickType_t)",
    "go": "SpiDeviceAcquireBus"
  },
  {
    "mangle": "spi_device_get_actual_freq",
    "c++": "spi_device_get_actual_freq(spi_device_handle_t, int *)",
    "go": "SpiDeviceGetActualFreq"
  },
  {
    "mangle": "spi_device_get_multi_trans_result",
    "c++": "spi_device_get_multi_trans_result(spi_device_handle_t, spi_multi_transaction_t **, TickType_t)",
    "go": "SpiDeviceGetMultiTransResult"
  },
  {
    "mangle": "spi_device_get_trans_result",
    "c++": "spi_device_get_trans_result(spi_device_handle_t, spi_transaction_t **, TickType_t)",
    "go": "SpiDeviceGetTransResult"
  },
  {
    "mangle": "spi_device_polling_end",
    "c++": "spi_device_polling_end(spi_device_handle_t, TickType_t)",
    "go": "SpiDevicePollingEnd"
  },
  {
    "mangle": "spi_device_polling_start",
    "c++": "spi_device_polling_start(spi_device_handle_t, spi_transaction_t *, TickType_t)",
    "go": "SpiDevicePollingStart"
  },
  {
    "mangle": "spi_device_polling_transmit",
    "c++": "spi_device_polling_transmit(spi_device_handle_t, spi_transaction_t *)",
    "go": "SpiDevicePollingTransmit"
  },
  {
    "mangle": "spi_device_queue_multi_trans",
    "c++": "spi_device_queue_multi_trans(spi_device_handle_t, spi_multi_transaction_t *, uint32_t, TickType_t)",
    "go": "SpiDeviceQueueMultiTrans"
  },
  {
    "mangle": "spi_device_queue_trans",
    "c++": "spi_device_queue_trans(spi_device_handle_t, spi_transaction_t *, TickType_t)",
    "go": "SpiDeviceQueueTrans"
  },
  {
    "mangle": "spi_device_release_bus",
    "c++": "spi_device_release_bus(spi_device_handle_t)",
    "go": "SpiDeviceReleaseBus"
  },
  {
    "mangle": "spi_device_transmit",
    "c++": "spi_device_transmit(spi_device_handle_t, spi_transaction_t *)",
    "go": "SpiDeviceTransmit"
  },
  {
    "mangle": "spi_get_actual_clock",
    "c++": "spi_get_actual_clock(int, int, int)",
    "go": "SpiGetActualClock"
  },
  {
    "mangle": "spi_get_freq_limit",
    "c++": "spi_get_freq_limit(bool, int)",
    "go": "SpiGetFreqLimit"
  },
  {
    "mangle": "spi_get_timing",
    "c++": "spi_get_timing(bool, int, int, int *, int *)",
    "go": "SpiGetTiming"
  },
  {
    "mangle": "spi_slave_free",
    "c++": "spi_slave_free(spi_host_device_t)",
    "go": "SpiSlaveFree"
  },
  {
    "mangle": "spi_slave_get_trans_result",
    "c++": "spi_slave_get_trans_result(spi_host_device_t, spi_slave_transaction_t **, TickType_t)",
    "go": "SpiSlaveGetTransResult"
  },
  {
    "mangle": "spi_slave_hd_append_trans",
    "c++": "spi_slave_hd_append_trans(spi_host_device_t, spi_slave_chan_t, spi_slave_hd_data_t *, TickType_t)",
    "go": "SpiSlaveHdAppendTrans"
  },
  {
    "mangle": "spi_slave_hd_deinit",
    "c++": "spi_slave_hd_deinit(spi_host_device_t)",
    "go": "SpiSlaveHdDeinit"
  },
  {
    "mangle": "spi_slave_hd_get_append_trans_res",
    "c++": "spi_slave_hd_get_append_trans_res(spi_host_device_t, spi_slave_chan_t, spi_slave_hd_data_t **, TickType_t)",
    "go": "SpiSlaveHdGetAppendTransRes"
  },
  {
    "mangle": "spi_slave_hd_get_trans_res",
    "c++": "spi_slave_hd_get_trans_res(spi_host_device_t, spi_slave_chan_t, spi_slave_hd_data_t **, TickType_t)",
    "go": "SpiSlaveHdGetTransRes"
  },
  {
    "mangle": "spi_slave_hd_init",
    "c++": "spi_slave_hd_init(spi_host_device_t, const spi_bus_config_t *, const spi_slave_hd_slot_config_t *)",
    "go": "SpiSlaveHdInit"
  },
  {
    "mangle": "spi_slave_hd_queue_trans",
    "c++": "spi_slave_hd_queue_trans(spi_host_device_t, spi_slave_chan_t, spi_slave_hd_data_t *, TickType_t)",
    "go": "SpiSlaveHdQueueTrans"
  },
  {
    "mangle": "spi_slave_hd_read_buffer",
    "c++": "spi_slave_hd_read_buffer(spi_host_device_t, int, uint8_t *, size_t)",
    "go": "SpiSlaveHdReadBuffer"
  },
  {
    "mangle": "spi_slave_hd_write_buffer",
    "c++": "spi_slave_hd_write_buffer(spi_host_device_t, int, uint8_t *, size_t)",
    "go": "SpiSlaveHdWriteBuffer"
  },
  {
    "mangle": "spi_slave_initialize",
    "c++": "spi_slave_initialize(spi_host_device_t, const spi_bus_config_t *, const spi_slave_interface_config_t *, spi_dma_chan_t)",
    "go": "SpiSlaveInitialize"
  },
  {
    "mangle": "spi_slave_queue_reset",
    "c++": "spi_slave_queue_reset(spi_host_device_t)",
    "go": "SpiSlaveQueueReset"
  },
  {
    "mangle": "spi_slave_queue_reset_isr",
    "c++": "spi_slave_queue_reset_isr(spi_host_device_t)",
    "go": "SpiSlaveQueueResetIsr"
  },
  {
    "mangle": "spi_slave_queue_trans",
    "c++": "spi_slave_queue_trans(spi_host_device_t, const spi_slave_transaction_t *, TickType_t)",
    "go": "SpiSlaveQueueTrans"
  },
  {
    "mangle": "spi_slave_queue_trans_isr",
    "c++": "spi_slave_queue_trans_isr(spi_host_device_t, const spi_slave_transaction_t *)",
    "go": "SpiSlaveQueueTransIsr"
  },
  {
    "mangle": "spi_slave_transmit",
    "c++": "spi_slave_transmit(spi_host_device_t, spi_slave_transaction_t *, TickType_t)",
    "go": "SpiSlaveTransmit"
  },
  {
    "mangle": "spicommon_bus_free_io_cfg",
    "c++": "spicommon_bus_free_io_cfg(const spi_bus_config_t *)",
    "go": "(*SpiBusConfigT).SpicommonBusFreeIoCfg"
  },
  {
    "mangle": "spicommon_bus_initialize_io",
    "c++": "spicommon_bus_initialize_io(spi_host_device_t, const spi_bus_config_t *, uint32_t, uint32_t *)",
    "go": "SpicommonBusInitializeIo"
  },
  {
    "mangle": "spicommon_bus_using_iomux",
    "c++": "spicommon_bus_using_iomux(spi_host_device_t)",
    "go": "SpicommonBusUsingIomux"
  },
  {
    "mangle": "spicommon_cs_free_io",
    "c++": "spicommon_cs_free_io(int)",
    "go": "SpicommonCsFreeIo"
  },
  {
    "mangle": "spicommon_cs_initialize",
    "c++": "spicommon_cs_initialize(spi_host_device_t, int, int, int)",
    "go": "SpicommonCsInitialize"
  },
  {
    "mangle": "spicommon_dma_chan_alloc",
    "c++": "spicommon_dma_chan_alloc(spi_host_device_t, spi_dma_chan_t, spi_dma_ctx_t **)",
    "go": "SpicommonDmaChanAlloc"
  },
  {
    "mangle": "spicommon_dma_chan_free",
    "c++": "spicommon_dma_chan_free(spi_dma_ctx_t *)",
    "go": "(*SpiDmaCtxT).SpicommonDmaChanFree"
  },
  {
    "mangle": "spicommon_dma_desc_alloc",
    "c++": "spicommon_dma_desc_alloc(spi_dma_ctx_t *, int, int *)",
    "go": "(*SpiDmaCtxT).SpicommonDmaDescAlloc"
  },
  {
    "mangle": "spicommon_dma_desc_setup_link",
    "c++": "spicommon_dma_desc_setup_link(spi_dma_desc_t *, const void *, int, bool)",
    "go": "(*SpiDmaDescT).SpicommonDmaDescSetupLink"
  },
  {
    "mangle": "spicommon_irqdma_source_for_host",
    "c++": "spicommon_irqdma_source_for_host(spi_host_device_t)",
    "go": "SpicommonIrqdmaSourceForHost"
  },
  {
    "mangle": "spicommon_irqsource_for_host",
    "c++": "spicommon_irqsource_for_host(spi_host_device_t)",
    "go": "SpicommonIrqsourceForHost"
  }
]