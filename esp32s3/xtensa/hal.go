package xtensa

import (
	"github.com/goplus/lib/c"
	_ "unsafe"
)

const XTHAL_RELEASE_MAJOR = 12000
const XTHAL_RELEASE_MINOR = 9
const XTHAL_RELEASE_NAME = "12.0.9"
const XTHAL_REL_12 = 1
const XTHAL_REL_12_0 = 1
const XTHAL_REL_12_0_9 = 1
const XTHAL_MAX_CPS = 8
const XTHAL_LITTLEENDIAN = 0
const XTHAL_BIGENDIAN = 1
const XTHAL_PREFETCH_DISABLE = 0xFFFF0000
const XTHAL_DCACHE_PREFETCH_L1_OFF = 0x90000000
const XTHAL_DCACHE_PREFETCH_L1 = 0x90001000
const XTHAL_ICACHE_PREFETCH_L1_OFF = 0xA0000000
const XTHAL_ICACHE_PREFETCH_L1 = 0xA0002000
const XTHAL_DISASM_BUFSIZE = 80
const XTHAL_DISASM_OPT_ADDR = 0x0001
const XTHAL_DISASM_OPT_OPHEX = 0x0002
const XTHAL_DISASM_OPT_OPCODE = 0x0004
const XTHAL_DISASM_OPT_PARMS = 0x0008
const XTHAL_DISASM_OPT_ALL = 0x0FFF
const XTHAL_MAX_INTERRUPTS = 32
const XTHAL_MAX_INTLEVELS = 16
const XTHAL_MAX_TIMERS = 4
const XTHAL_INTTYPE_UNCONFIGURED = 0
const XTHAL_INTTYPE_SOFTWARE = 1
const XTHAL_INTTYPE_EXTERN_EDGE = 2
const XTHAL_INTTYPE_EXTERN_LEVEL = 3
const XTHAL_INTTYPE_TIMER = 4
const XTHAL_INTTYPE_NMI = 5
const XTHAL_INTTYPE_WRITE_ERROR = 6
const XTHAL_INTTYPE_PROFILING = 7
const XTHAL_INTTYPE_IDMA_DONE = 8
const XTHAL_INTTYPE_IDMA_ERR = 9
const XTHAL_INTTYPE_GS_ERR = 10
const XTHAL_INTTYPE_SG_ERR = 10
const XTHAL_MAX_INTTYPES = 11
const XTHAL_MEMEP_PARITY = 1
const XTHAL_MEMEP_ECC = 2
const XTHAL_MEMEP_F_LOCAL = 0
const XTHAL_MEMEP_F_DCACHE_DATA = 4
const XTHAL_MEMEP_F_DCACHE_TAG = 5
const XTHAL_MEMEP_F_ICACHE_DATA = 6
const XTHAL_MEMEP_F_ICACHE_TAG = 7
const XTHAL_MEMEP_F_CORRECTABLE = 16
const XTHAL_AMB_EXCEPTION = 0
const XTHAL_AMB_HITCACHE = 1
const XTHAL_AMB_ALLOCATE = 2
const XTHAL_AMB_WRITETHRU = 3
const XTHAL_AMB_ISOLATE = 4
const XTHAL_AMB_GUARD = 5
const XTHAL_AMB_COHERENT = 6
const XTHAL_FAM_EXCEPTION = 0x001
const XTHAL_FAM_BYPASS = 0x000
const XTHAL_FAM_CACHED = 0x006
const XTHAL_LAM_EXCEPTION = 0x001
const XTHAL_LAM_ISOLATE = 0x012
const XTHAL_LAM_BYPASS = 0x000
const XTHAL_LAM_BYPASSG = 0x020
const XTHAL_LAM_CACHED_NOALLOC = 0x002
const XTHAL_LAM_NACACHEDG = 0x022
const XTHAL_LAM_CACHED = 0x006
const XTHAL_LAM_COHCACHED = 0x046
const XTHAL_SAM_EXCEPTION = 0x001
const XTHAL_SAM_ISOLATE = 0x032
const XTHAL_SAM_BYPASS = 0x028
const XTHAL_SAM_WRITETHRU = 0x02A
const XTHAL_SAM_WRITEBACK = 0x026
const XTHAL_SAM_WRITEBACK_NOALLOC = 0x022
const XTHAL_SAM_COHWRITEBACK = 0x066
const XTHAL_PAM_BYPASS = 0x000
const XTHAL_PAM_BYPASS_BUF = 0x010
const XTHAL_PAM_CACHED_NOALLOC = 0x030
const XTHAL_PAM_WRITETHRU = 0x0B0
const XTHAL_PAM_WRITEBACK_NOALLOC = 0x0F0
const XTHAL_PAM_WRITEBACK = 0x1F0
const XTHAL_CAFLAG_EXPAND = 0x000100
const XTHAL_CAFLAG_EXACT = 0x000200
const XTHAL_CAFLAG_NO_PARTIAL = 0x000400
const XTHAL_CAFLAG_NO_AUTO_WB = 0x000800
const XTHAL_CAFLAG_NO_AUTO_INV = 0x001000
const XTHAL_SUCCESS = 0
const XTHAL_AR_NONE = 0
const XTHAL_AR_R = 4
const XTHAL_AR_RX = 5
const XTHAL_AR_RW = 6
const XTHAL_AR_RWX = 7
const XTHAL_AR_Ww = 8
const XTHAL_AR_RWrwx = 9
const XTHAL_AR_RWr = 10
const XTHAL_AR_RWXrx = 11
const XTHAL_AR_Rr = 12
const XTHAL_AR_RXrx = 13
const XTHAL_AR_RWrw = 14
const XTHAL_AR_RWXrwx = 15
const XTHAL_AR_WIDTH = 4
const XTHAL_MPU_USE_EXISTING_ACCESS_RIGHTS = 0x00002000
const XTHAL_MPU_USE_EXISTING_MEMORY_TYPE = 0x00004000
const XTHAL_MEM_DEVICE = 0x00008000
const XTHAL_MEM_NON_CACHEABLE = 0x00090000
const XTHAL_MEM_WRITETHRU_NOALLOC = 0x00080000
const XTHAL_MEM_WRITETHRU = 0x00040000
const XTHAL_MEM_WRITETHRU_WRITEALLOC = 0x00060000
const XTHAL_MEM_WRITEBACK_NOALLOC = 0x00050000
const XTHAL_MEM_WRITEBACK = 0x00070000
const XTHAL_MEM_INTERRUPTIBLE = 0x08000000
const XTHAL_MEM_BUFFERABLE = 0x01000000
const XTHAL_MEM_NON_SHAREABLE = 0x00000000
const XTHAL_MEM_INNER_SHAREABLE = 0x02000000
const XTHAL_MEM_OUTER_SHAREABLE = 0x04000000
const XTHAL_MEM_SYSTEM_SHAREABLE = 0x06000000
const X_XTHAL_SYSTEM_CACHE_BITS = 0x000f0000
const X_XTHAL_LOCAL_CACHE_BITS = 0x00f00000
const X_XTHAL_MEM_SYSTEM_RWC_MASK = 0x00070000
const X_XTHAL_MEM_LOCAL_RWC_MASK = 0x00700000
const X_XTHAL_SHIFT_RWC = 16
const XTHAL_MEM_SW_SHAREABLE = 0

// llgo:type C
type XtHalVoidFunc func()

/*
 * This structure is used to represent each MPU entry (both foreground and
 * background). The internal representation of the structure is subject to
 * change, so it should only be accessed by the XTHAL_MPU_ENTRY_... macros
 * below.
 */

type XthalMPUEntry struct {
	As c.Uint32T
	At c.Uint32T
}
