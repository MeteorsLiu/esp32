package bootloader_support

import (
	"github.com/goplus/lib/c"
	_ "unsafe"
)

const X__WORDSIZE = 64
const X__has_safe_buffers = 1
const X__DARWIN_ONLY_64_BIT_INO_T = 1
const X__DARWIN_ONLY_UNIX_CONFORMANCE = 1
const X__DARWIN_ONLY_VERS_1050 = 1
const X__DARWIN_UNIX03 = 1
const X__DARWIN_64_BIT_INO_T = 1
const X__DARWIN_VERS_1050 = 1
const X__DARWIN_NON_CANCELABLE = 0
const X__DARWIN_SUF_EXTSN = "$DARWIN_EXTSN"
const X__STDC_WANT_LIB_EXT1__ = 1
const X__DARWIN_NO_LONG_LONG = 0
const X_DARWIN_FEATURE_64_BIT_INODE = 1
const X_DARWIN_FEATURE_ONLY_64_BIT_INODE = 1
const X_DARWIN_FEATURE_ONLY_VERS_1050 = 1
const X_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE = 1
const X_DARWIN_FEATURE_UNIX_CONFORMANCE = 3
const X__has_ptrcheck = 0
const X__PTHREAD_SIZE__ = 8176
const X__PTHREAD_ATTR_SIZE__ = 56
const X__PTHREAD_MUTEXATTR_SIZE__ = 8
const X__PTHREAD_MUTEX_SIZE__ = 56
const X__PTHREAD_CONDATTR_SIZE__ = 8
const X__PTHREAD_COND_SIZE__ = 40
const X__PTHREAD_ONCE_SIZE__ = 8
const X__PTHREAD_RWLOCK_SIZE__ = 192
const X__PTHREAD_RWLOCKATTR_SIZE__ = 16
const INT8_MAX = 127
const INT16_MAX = 32767
const INT32_MAX = 2147483647
const UINT8_MAX = 255
const UINT16_MAX = 65535
const X__bool_true_false_are_defined = 1
const True = 1
const False = 0
const CONFIG_SOC_MPU_MIN_REGION_SIZE = 0x20000000
const CONFIG_SOC_MPU_REGIONS_MAX_NUM = 8
const CONFIG_SOC_ADC_SUPPORTED = 1
const CONFIG_SOC_UART_SUPPORTED = 1
const CONFIG_SOC_PCNT_SUPPORTED = 1
const CONFIG_SOC_PHY_SUPPORTED = 1
const CONFIG_SOC_WIFI_SUPPORTED = 1
const CONFIG_SOC_TWAI_SUPPORTED = 1
const CONFIG_SOC_GDMA_SUPPORTED = 1
const CONFIG_SOC_AHB_GDMA_SUPPORTED = 1
const CONFIG_SOC_GPTIMER_SUPPORTED = 1
const CONFIG_SOC_LCDCAM_SUPPORTED = 1
const CONFIG_SOC_LCDCAM_I80_LCD_SUPPORTED = 1
const CONFIG_SOC_LCDCAM_RGB_LCD_SUPPORTED = 1
const CONFIG_SOC_MCPWM_SUPPORTED = 1
const CONFIG_SOC_DEDICATED_GPIO_SUPPORTED = 1
const CONFIG_SOC_CACHE_SUPPORT_WRAP = 1
const CONFIG_SOC_ULP_SUPPORTED = 1
const CONFIG_SOC_ULP_FSM_SUPPORTED = 1
const CONFIG_SOC_RISCV_COPROC_SUPPORTED = 1
const CONFIG_SOC_BT_SUPPORTED = 1
const CONFIG_SOC_USB_OTG_SUPPORTED = 1
const CONFIG_SOC_USB_SERIAL_JTAG_SUPPORTED = 1
const CONFIG_SOC_CCOMP_TIMER_SUPPORTED = 1
const CONFIG_SOC_ASYNC_MEMCPY_SUPPORTED = 1
const CONFIG_SOC_SUPPORTS_SECURE_DL_MODE = 1
const CONFIG_SOC_EFUSE_KEY_PURPOSE_FIELD = 1
const CONFIG_SOC_EFUSE_SUPPORTED = 1
const CONFIG_SOC_SDMMC_HOST_SUPPORTED = 1
const CONFIG_SOC_RTC_FAST_MEM_SUPPORTED = 1
const CONFIG_SOC_RTC_SLOW_MEM_SUPPORTED = 1
const CONFIG_SOC_RTC_MEM_SUPPORTED = 1
const CONFIG_SOC_PSRAM_DMA_CAPABLE = 1
const CONFIG_SOC_XT_WDT_SUPPORTED = 1
const CONFIG_SOC_I2S_SUPPORTED = 1
const CONFIG_SOC_RMT_SUPPORTED = 1
const CONFIG_SOC_SDM_SUPPORTED = 1
const CONFIG_SOC_GPSPI_SUPPORTED = 1
const CONFIG_SOC_LEDC_SUPPORTED = 1
const CONFIG_SOC_I2C_SUPPORTED = 1
const CONFIG_SOC_SYSTIMER_SUPPORTED = 1
const CONFIG_SOC_SUPPORT_COEXISTENCE = 1
const CONFIG_SOC_TEMP_SENSOR_SUPPORTED = 1
const CONFIG_SOC_AES_SUPPORTED = 1
const CONFIG_SOC_MPI_SUPPORTED = 1
const CONFIG_SOC_SHA_SUPPORTED = 1
const CONFIG_SOC_HMAC_SUPPORTED = 1
const CONFIG_SOC_DIG_SIGN_SUPPORTED = 1
const CONFIG_SOC_FLASH_ENC_SUPPORTED = 1
const CONFIG_SOC_SECURE_BOOT_SUPPORTED = 1
const CONFIG_SOC_MEMPROT_SUPPORTED = 1
const CONFIG_SOC_TOUCH_SENSOR_SUPPORTED = 1
const CONFIG_SOC_BOD_SUPPORTED = 1
const CONFIG_SOC_CLK_TREE_SUPPORTED = 1
const CONFIG_SOC_MPU_SUPPORTED = 1
const CONFIG_SOC_WDT_SUPPORTED = 1
const CONFIG_SOC_SPI_FLASH_SUPPORTED = 1
const CONFIG_SOC_RNG_SUPPORTED = 1
const CONFIG_SOC_LIGHT_SLEEP_SUPPORTED = 1
const CONFIG_SOC_DEEP_SLEEP_SUPPORTED = 1
const CONFIG_SOC_LP_PERIPH_SHARE_INTERRUPT = 1
const CONFIG_SOC_PM_SUPPORTED = 1
const CONFIG_SOC_SIMD_INSTRUCTION_SUPPORTED = 1
const CONFIG_SOC_XTAL_SUPPORT_40M = 1
const CONFIG_SOC_APPCPU_HAS_CLOCK_GATING_BUG = 1
const CONFIG_SOC_ADC_RTC_CTRL_SUPPORTED = 1
const CONFIG_SOC_ADC_DIG_CTRL_SUPPORTED = 1
const CONFIG_SOC_ADC_ARBITER_SUPPORTED = 1
const CONFIG_SOC_ADC_DIG_IIR_FILTER_SUPPORTED = 1
const CONFIG_SOC_ADC_MONITOR_SUPPORTED = 1
const CONFIG_SOC_ADC_DMA_SUPPORTED = 1
const CONFIG_SOC_ADC_PERIPH_NUM = 2
const CONFIG_SOC_ADC_MAX_CHANNEL_NUM = 10
const CONFIG_SOC_ADC_ATTEN_NUM = 4
const CONFIG_SOC_ADC_DIGI_CONTROLLER_NUM = 2
const CONFIG_SOC_ADC_PATT_LEN_MAX = 24
const CONFIG_SOC_ADC_DIGI_MIN_BITWIDTH = 12
const CONFIG_SOC_ADC_DIGI_MAX_BITWIDTH = 12
const CONFIG_SOC_ADC_DIGI_RESULT_BYTES = 4
const CONFIG_SOC_ADC_DIGI_DATA_BYTES_PER_CONV = 4
const CONFIG_SOC_ADC_DIGI_IIR_FILTER_NUM = 2
const CONFIG_SOC_ADC_DIGI_MONITOR_NUM = 2
const CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_HIGH = 83333
const CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_LOW = 611
const CONFIG_SOC_ADC_RTC_MIN_BITWIDTH = 12
const CONFIG_SOC_ADC_RTC_MAX_BITWIDTH = 12
const CONFIG_SOC_ADC_CALIBRATION_V1_SUPPORTED = 1
const CONFIG_SOC_ADC_SELF_HW_CALI_SUPPORTED = 1
const CONFIG_SOC_ADC_SHARED_POWER = 1
const CONFIG_SOC_APB_BACKUP_DMA = 1
const CONFIG_SOC_BROWNOUT_RESET_SUPPORTED = 1
const CONFIG_SOC_CACHE_WRITEBACK_SUPPORTED = 1
const CONFIG_SOC_CACHE_FREEZE_SUPPORTED = 1
const CONFIG_SOC_CPU_CORES_NUM = 2
const CONFIG_SOC_CPU_INTR_NUM = 32
const CONFIG_SOC_CPU_HAS_FPU = 1
const CONFIG_SOC_HP_CPU_HAS_MULTIPLE_CORES = 1
const CONFIG_SOC_CPU_BREAKPOINTS_NUM = 2
const CONFIG_SOC_CPU_WATCHPOINTS_NUM = 2
const CONFIG_SOC_CPU_WATCHPOINT_MAX_REGION_SIZE = 64
const CONFIG_SOC_SIMD_PREFERRED_DATA_ALIGNMENT = 16
const CONFIG_SOC_DS_SIGNATURE_MAX_BIT_LEN = 4096
const CONFIG_SOC_DS_KEY_PARAM_MD_IV_LENGTH = 16
const CONFIG_SOC_DS_KEY_CHECK_MAX_WAIT_US = 1100
const CONFIG_SOC_AHB_GDMA_VERSION = 1
const CONFIG_SOC_GDMA_NUM_GROUPS_MAX = 1
const CONFIG_SOC_GDMA_PAIRS_PER_GROUP = 5
const CONFIG_SOC_GDMA_PAIRS_PER_GROUP_MAX = 5
const CONFIG_SOC_AHB_GDMA_SUPPORT_PSRAM = 1
const CONFIG_SOC_GPIO_PORT = 1
const CONFIG_SOC_GPIO_PIN_COUNT = 49
const CONFIG_SOC_GPIO_SUPPORT_PIN_GLITCH_FILTER = 1
const CONFIG_SOC_GPIO_FILTER_CLK_SUPPORT_APB = 1
const CONFIG_SOC_GPIO_SUPPORT_RTC_INDEPENDENT = 1
const CONFIG_SOC_GPIO_SUPPORT_FORCE_HOLD = 1
const CONFIG_SOC_GPIO_VALID_GPIO_MASK = 0x1FFFFFFFFFFFF
const CONFIG_SOC_GPIO_IN_RANGE_MAX = 48
const CONFIG_SOC_GPIO_OUT_RANGE_MAX = 48
const CONFIG_SOC_GPIO_VALID_DIGITAL_IO_PAD_MASK = 0x0001FFFFFC000000
const CONFIG_SOC_GPIO_CLOCKOUT_BY_IO_MUX = 1
const CONFIG_SOC_GPIO_CLOCKOUT_CHANNEL_NUM = 3
const CONFIG_SOC_GPIO_SUPPORT_HOLD_IO_IN_DSLP = 1
const CONFIG_SOC_DEDIC_GPIO_OUT_CHANNELS_NUM = 8
const CONFIG_SOC_DEDIC_GPIO_IN_CHANNELS_NUM = 8
const CONFIG_SOC_DEDIC_GPIO_OUT_AUTO_ENABLE = 1
const CONFIG_SOC_I2C_NUM = 2
const CONFIG_SOC_HP_I2C_NUM = 2
const CONFIG_SOC_I2C_FIFO_LEN = 32
const CONFIG_SOC_I2C_CMD_REG_NUM = 8
const CONFIG_SOC_I2C_SUPPORT_SLAVE = 1
const CONFIG_SOC_I2C_SUPPORT_HW_CLR_BUS = 1
const CONFIG_SOC_I2C_SUPPORT_XTAL = 1
const CONFIG_SOC_I2C_SUPPORT_RTC = 1
const CONFIG_SOC_I2C_SUPPORT_10BIT_ADDR = 1
const CONFIG_SOC_I2C_SLAVE_SUPPORT_BROADCAST = 1
const CONFIG_SOC_I2C_SLAVE_SUPPORT_I2CRAM_ACCESS = 1
const CONFIG_SOC_I2C_SLAVE_CAN_GET_STRETCH_CAUSE = 1
const CONFIG_SOC_I2S_NUM = 2
const CONFIG_SOC_I2S_HW_VERSION_2 = 1
const CONFIG_SOC_I2S_SUPPORTS_XTAL = 1
const CONFIG_SOC_I2S_SUPPORTS_PLL_F160M = 1
const CONFIG_SOC_I2S_SUPPORTS_PCM = 1
const CONFIG_SOC_I2S_SUPPORTS_PDM = 1
const CONFIG_SOC_I2S_SUPPORTS_PDM_TX = 1
const CONFIG_SOC_I2S_PDM_MAX_TX_LINES = 2
const CONFIG_SOC_I2S_SUPPORTS_PDM_RX = 1
const CONFIG_SOC_I2S_PDM_MAX_RX_LINES = 4
const CONFIG_SOC_I2S_SUPPORTS_TDM = 1
const CONFIG_SOC_LEDC_SUPPORT_APB_CLOCK = 1
const CONFIG_SOC_LEDC_SUPPORT_XTAL_CLOCK = 1
const CONFIG_SOC_LEDC_TIMER_NUM = 4
const CONFIG_SOC_LEDC_CHANNEL_NUM = 8
const CONFIG_SOC_LEDC_TIMER_BIT_WIDTH = 14
const CONFIG_SOC_LEDC_SUPPORT_FADE_STOP = 1
const CONFIG_SOC_MCPWM_GROUPS = 2
const CONFIG_SOC_MCPWM_TIMERS_PER_GROUP = 3
const CONFIG_SOC_MCPWM_OPERATORS_PER_GROUP = 3
const CONFIG_SOC_MCPWM_COMPARATORS_PER_OPERATOR = 2
const CONFIG_SOC_MCPWM_GENERATORS_PER_OPERATOR = 2
const CONFIG_SOC_MCPWM_TRIGGERS_PER_OPERATOR = 2
const CONFIG_SOC_MCPWM_GPIO_FAULTS_PER_GROUP = 3
const CONFIG_SOC_MCPWM_CAPTURE_TIMERS_PER_GROUP = 1
const CONFIG_SOC_MCPWM_CAPTURE_CHANNELS_PER_TIMER = 3
const CONFIG_SOC_MCPWM_GPIO_SYNCHROS_PER_GROUP = 3
const CONFIG_SOC_MCPWM_SWSYNC_CAN_PROPAGATE = 1
const CONFIG_SOC_MMU_LINEAR_ADDRESS_REGION_NUM = 1
const CONFIG_SOC_MMU_PERIPH_NUM = 1
const CONFIG_SOC_PCNT_GROUPS = 1
const CONFIG_SOC_PCNT_UNITS_PER_GROUP = 4
const CONFIG_SOC_PCNT_CHANNELS_PER_UNIT = 2
const CONFIG_SOC_PCNT_THRES_POINT_PER_UNIT = 2
const CONFIG_SOC_RMT_GROUPS = 1
const CONFIG_SOC_RMT_TX_CANDIDATES_PER_GROUP = 4
const CONFIG_SOC_RMT_RX_CANDIDATES_PER_GROUP = 4
const CONFIG_SOC_RMT_CHANNELS_PER_GROUP = 8
const CONFIG_SOC_RMT_MEM_WORDS_PER_CHANNEL = 48
const CONFIG_SOC_RMT_SUPPORT_RX_PINGPONG = 1
const CONFIG_SOC_RMT_SUPPORT_RX_DEMODULATION = 1
const CONFIG_SOC_RMT_SUPPORT_TX_ASYNC_STOP = 1
const CONFIG_SOC_RMT_SUPPORT_TX_LOOP_COUNT = 1
const CONFIG_SOC_RMT_SUPPORT_TX_LOOP_AUTO_STOP = 1
const CONFIG_SOC_RMT_SUPPORT_TX_SYNCHRO = 1
const CONFIG_SOC_RMT_SUPPORT_TX_CARRIER_DATA_ONLY = 1
const CONFIG_SOC_RMT_SUPPORT_XTAL = 1
const CONFIG_SOC_RMT_SUPPORT_RC_FAST = 1
const CONFIG_SOC_RMT_SUPPORT_APB = 1
const CONFIG_SOC_RMT_SUPPORT_DMA = 1
const CONFIG_SOC_LCD_I80_SUPPORTED = 1
const CONFIG_SOC_LCD_RGB_SUPPORTED = 1
const CONFIG_SOC_LCD_I80_BUSES = 1
const CONFIG_SOC_LCD_RGB_PANELS = 1
const CONFIG_SOC_LCD_I80_BUS_WIDTH = 16
const CONFIG_SOC_LCD_RGB_DATA_WIDTH = 16
const CONFIG_SOC_LCD_SUPPORT_RGB_YUV_CONV = 1
const CONFIG_SOC_LCDCAM_I80_NUM_BUSES = 1
const CONFIG_SOC_LCDCAM_I80_BUS_WIDTH = 16
const CONFIG_SOC_LCDCAM_RGB_NUM_PANELS = 1
const CONFIG_SOC_LCDCAM_RGB_DATA_WIDTH = 16
const CONFIG_SOC_RTC_CNTL_CPU_PD_DMA_BUS_WIDTH = 128
const CONFIG_SOC_RTC_CNTL_CPU_PD_REG_FILE_NUM = 549
const CONFIG_SOC_RTC_CNTL_TAGMEM_PD_DMA_BUS_WIDTH = 128
const CONFIG_SOC_RTCIO_PIN_COUNT = 22
const CONFIG_SOC_RTCIO_INPUT_OUTPUT_SUPPORTED = 1
const CONFIG_SOC_RTCIO_HOLD_SUPPORTED = 1
const CONFIG_SOC_RTCIO_WAKE_SUPPORTED = 1
const CONFIG_SOC_LP_IO_CLOCK_IS_INDEPENDENT = 1
const CONFIG_SOC_SDM_GROUPS = 1
const CONFIG_SOC_SDM_CHANNELS_PER_GROUP = 8
const CONFIG_SOC_SDM_CLK_SUPPORT_APB = 1
const CONFIG_SOC_SPI_PERIPH_NUM = 3
const CONFIG_SOC_SPI_MAX_CS_NUM = 6
const CONFIG_SOC_SPI_MAXIMUM_BUFFER_SIZE = 64
const CONFIG_SOC_SPI_SUPPORT_DDRCLK = 1
const CONFIG_SOC_SPI_SLAVE_SUPPORT_SEG_TRANS = 1
const CONFIG_SOC_SPI_SUPPORT_CD_SIG = 1
const CONFIG_SOC_SPI_SUPPORT_CONTINUOUS_TRANS = 1
const CONFIG_SOC_SPI_SUPPORT_SLAVE_HD_VER2 = 1
const CONFIG_SOC_SPI_SUPPORT_CLK_APB = 1
const CONFIG_SOC_SPI_SUPPORT_CLK_XTAL = 1
const CONFIG_SOC_SPI_PERIPH_SUPPORT_CONTROL_DUMMY_OUT = 1
const CONFIG_SOC_MEMSPI_IS_INDEPENDENT = 1
const CONFIG_SOC_SPI_MAX_PRE_DIVIDER = 16
const CONFIG_SOC_SPI_SUPPORT_OCT = 1
const CONFIG_SOC_SPI_SCT_SUPPORTED = 1
const CONFIG_SOC_SPI_SCT_REG_NUM = 14
const CONFIG_SOC_SPI_SCT_BUFFER_NUM_MAX = 1
const CONFIG_SOC_SPI_SCT_CONF_BITLEN_MAX = 0x3FFFA
const CONFIG_SOC_MEMSPI_SRC_FREQ_120M = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED = 1
const CONFIG_SOC_SPIRAM_SUPPORTED = 1
const CONFIG_SOC_SPIRAM_XIP_SUPPORTED = 1
const CONFIG_SOC_SYSTIMER_COUNTER_NUM = 2
const CONFIG_SOC_SYSTIMER_ALARM_NUM = 3
const CONFIG_SOC_SYSTIMER_BIT_WIDTH_LO = 32
const CONFIG_SOC_SYSTIMER_BIT_WIDTH_HI = 20
const CONFIG_SOC_SYSTIMER_FIXED_DIVIDER = 1
const CONFIG_SOC_SYSTIMER_INT_LEVEL = 1
const CONFIG_SOC_SYSTIMER_ALARM_MISS_COMPENSATE = 1
const CONFIG_SOC_TIMER_GROUPS = 2
const CONFIG_SOC_TIMER_GROUP_TIMERS_PER_GROUP = 2
const CONFIG_SOC_TIMER_GROUP_COUNTER_BIT_WIDTH = 54
const CONFIG_SOC_TIMER_GROUP_SUPPORT_XTAL = 1
const CONFIG_SOC_TIMER_GROUP_SUPPORT_APB = 1
const CONFIG_SOC_TIMER_GROUP_TOTAL_TIMERS = 4
const CONFIG_SOC_LP_TIMER_BIT_WIDTH_LO = 32
const CONFIG_SOC_LP_TIMER_BIT_WIDTH_HI = 16
const CONFIG_SOC_TOUCH_SENSOR_VERSION = 2
const CONFIG_SOC_TOUCH_SENSOR_NUM = 15
const CONFIG_SOC_TOUCH_SUPPORT_SLEEP_WAKEUP = 1
const CONFIG_SOC_TOUCH_SUPPORT_WATERPROOF = 1
const CONFIG_SOC_TOUCH_SUPPORT_PROX_SENSING = 1
const CONFIG_SOC_TOUCH_PROXIMITY_CHANNEL_NUM = 3
const CONFIG_SOC_TOUCH_PROXIMITY_MEAS_DONE_SUPPORTED = 1
const CONFIG_SOC_TOUCH_SAMPLE_CFG_NUM = 1
const CONFIG_SOC_TWAI_CONTROLLER_NUM = 1
const CONFIG_SOC_TWAI_CLK_SUPPORT_APB = 1
const CONFIG_SOC_TWAI_BRP_MIN = 2
const CONFIG_SOC_TWAI_BRP_MAX = 16384
const CONFIG_SOC_TWAI_SUPPORTS_RX_STATUS = 1
const CONFIG_SOC_UART_NUM = 3
const CONFIG_SOC_UART_HP_NUM = 3
const CONFIG_SOC_UART_FIFO_LEN = 128
const CONFIG_SOC_UART_BITRATE_MAX = 5000000
const CONFIG_SOC_UART_SUPPORT_FSM_TX_WAIT_SEND = 1
const CONFIG_SOC_UART_SUPPORT_WAKEUP_INT = 1
const CONFIG_SOC_UART_SUPPORT_APB_CLK = 1
const CONFIG_SOC_UART_SUPPORT_RTC_CLK = 1
const CONFIG_SOC_UART_SUPPORT_XTAL_CLK = 1
const CONFIG_SOC_USB_OTG_PERIPH_NUM = 1
const CONFIG_SOC_SHA_DMA_MAX_BUFFER_SIZE = 3968
const CONFIG_SOC_SHA_SUPPORT_DMA = 1
const CONFIG_SOC_SHA_SUPPORT_RESUME = 1
const CONFIG_SOC_SHA_GDMA = 1
const CONFIG_SOC_SHA_SUPPORT_SHA1 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA224 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA256 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA384 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512_224 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512_256 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512_T = 1
const CONFIG_SOC_MPI_MEM_BLOCKS_NUM = 4
const CONFIG_SOC_MPI_OPERATIONS_NUM = 3
const CONFIG_SOC_RSA_MAX_BIT_LEN = 4096
const CONFIG_SOC_AES_SUPPORT_DMA = 1
const CONFIG_SOC_AES_GDMA = 1
const CONFIG_SOC_AES_SUPPORT_AES_128 = 1
const CONFIG_SOC_AES_SUPPORT_AES_256 = 1
const CONFIG_SOC_PM_SUPPORT_EXT0_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_EXT1_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_EXT_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_WIFI_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_BT_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_TOUCH_SENSOR_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_CPU_PD = 1
const CONFIG_SOC_PM_SUPPORT_TAGMEM_PD = 1
const CONFIG_SOC_PM_SUPPORT_RTC_PERIPH_PD = 1
const CONFIG_SOC_PM_SUPPORT_RC_FAST_PD = 1
const CONFIG_SOC_PM_SUPPORT_VDDSDIO_PD = 1
const CONFIG_SOC_PM_SUPPORT_MAC_BB_PD = 1
const CONFIG_SOC_PM_SUPPORT_MODEM_PD = 1
const CONFIG_SOC_CONFIGURABLE_VDDSDIO_SUPPORTED = 1
const CONFIG_SOC_PM_SUPPORT_DEEPSLEEP_CHECK_STUB_ONLY = 1
const CONFIG_SOC_PM_CPU_RETENTION_BY_RTCCNTL = 1
const CONFIG_SOC_PM_MODEM_RETENTION_BY_BACKUPDMA = 1
const CONFIG_SOC_PM_MODEM_PD_BY_SW = 1
const CONFIG_SOC_CLK_RC_FAST_D256_SUPPORTED = 1
const CONFIG_SOC_RTC_SLOW_CLK_SUPPORT_RC_FAST_D256 = 1
const CONFIG_SOC_CLK_RC_FAST_SUPPORT_CALIBRATION = 1
const CONFIG_SOC_CLK_XTAL32K_SUPPORTED = 1
const CONFIG_SOC_EFUSE_DIS_DOWNLOAD_ICACHE = 1
const CONFIG_SOC_EFUSE_DIS_DOWNLOAD_DCACHE = 1
const CONFIG_SOC_EFUSE_HARD_DIS_JTAG = 1
const CONFIG_SOC_EFUSE_DIS_USB_JTAG = 1
const CONFIG_SOC_EFUSE_SOFT_DIS_JTAG = 1
const CONFIG_SOC_EFUSE_DIS_DIRECT_BOOT = 1
const CONFIG_SOC_EFUSE_DIS_ICACHE = 1
const CONFIG_SOC_EFUSE_BLOCK9_KEY_PURPOSE_QUIRK = 1
const CONFIG_SOC_SECURE_BOOT_V2_RSA = 1
const CONFIG_SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 3
const CONFIG_SOC_EFUSE_REVOKE_BOOT_KEY_DIGESTS = 1
const CONFIG_SOC_SUPPORT_SECURE_BOOT_REVOKE_KEY = 1
const CONFIG_SOC_FLASH_ENCRYPTED_XTS_AES_BLOCK_MAX = 64
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES = 1
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES_OPTIONS = 1
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES_128 = 1
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES_256 = 1
const CONFIG_SOC_MEMPROT_CPU_PREFETCH_PAD_SIZE = 16
const CONFIG_SOC_MEMPROT_MEM_ALIGN_SIZE = 256
const CONFIG_SOC_PHY_DIG_REGS_MEM_SIZE = 21
const CONFIG_SOC_MAC_BB_PD_MEM_SIZE = 192
const CONFIG_SOC_WIFI_LIGHT_SLEEP_CLK_WIDTH = 12
const CONFIG_SOC_SPI_MEM_SUPPORT_AUTO_WAIT_IDLE = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_AUTO_SUSPEND = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_AUTO_RESUME = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_SW_SUSPEND = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_OPI_MODE = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_TIMING_TUNING = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_CONFIG_GPIO_BY_EFUSE = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_WRAP = 1
const CONFIG_SOC_MEMSPI_TIMING_TUNING_BY_MSPI_DELAY = 1
const CONFIG_SOC_MEMSPI_CORE_CLK_SHARED_WITH_PSRAM = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_CACHE_32BIT_ADDR_MAP = 1
const CONFIG_SOC_COEX_HW_PTI = 1
const CONFIG_SOC_EXTERNAL_COEX_LEADER_TX_LINE = 1
const CONFIG_SOC_SDMMC_USE_GPIO_MATRIX = 1
const CONFIG_SOC_SDMMC_NUM_SLOTS = 2
const CONFIG_SOC_SDMMC_SUPPORT_XTAL_CLOCK = 1
const CONFIG_SOC_SDMMC_DELAY_PHASE_NUM = 4
const CONFIG_SOC_TEMPERATURE_SENSOR_SUPPORT_FAST_RC = 1
const CONFIG_SOC_WIFI_HW_TSF = 1
const CONFIG_SOC_WIFI_FTM_SUPPORT = 1
const CONFIG_SOC_WIFI_GCMP_SUPPORT = 1
const CONFIG_SOC_WIFI_WAPI_SUPPORT = 1
const CONFIG_SOC_WIFI_CSI_SUPPORT = 1
const CONFIG_SOC_WIFI_MESH_SUPPORT = 1
const CONFIG_SOC_WIFI_SUPPORT_VARIABLE_BEACON_WINDOW = 1
const CONFIG_SOC_WIFI_PHY_NEEDS_USB_WORKAROUND = 1
const CONFIG_SOC_BLE_SUPPORTED = 1
const CONFIG_SOC_BLE_MESH_SUPPORTED = 1
const CONFIG_SOC_BLE_50_SUPPORTED = 1
const CONFIG_SOC_BLE_DEVICE_PRIVACY_SUPPORTED = 1
const CONFIG_SOC_BLUFI_SUPPORTED = 1
const CONFIG_SOC_ULP_HAS_ADC = 1
const CONFIG_SOC_PHY_COMBO_MODULE = 1
const CONFIG_IDF_CMAKE = 1
const CONFIG_IDF_TOOLCHAIN = "gcc"
const CONFIG_IDF_TOOLCHAIN_GCC = 1
const CONFIG_IDF_TARGET_ARCH_XTENSA = 1
const CONFIG_IDF_TARGET_ARCH = "xtensa"
const CONFIG_IDF_TARGET = "esp32s3"
const CONFIG_IDF_INIT_VERSION = "5.4.2"
const CONFIG_IDF_TARGET_ESP32S3 = 1
const CONFIG_IDF_FIRMWARE_CHIP_ID = 0x0009
const CONFIG_APP_BUILD_TYPE_APP_2NDBOOT = 1
const CONFIG_APP_BUILD_GENERATE_BINARIES = 1
const CONFIG_APP_BUILD_BOOTLOADER = 1
const CONFIG_APP_BUILD_USE_FLASH_SECTIONS = 1
const CONFIG_BOOTLOADER_COMPILE_TIME_DATE = 1
const CONFIG_BOOTLOADER_PROJECT_VER = 1
const CONFIG_BOOTLOADER_OFFSET_IN_FLASH = 0x0
const CONFIG_BOOTLOADER_COMPILER_OPTIMIZATION_SIZE = 1
const CONFIG_BOOTLOADER_LOG_LEVEL_INFO = 1
const CONFIG_BOOTLOADER_LOG_LEVEL = 3
const CONFIG_BOOTLOADER_LOG_TIMESTAMP_SOURCE_CPU_TICKS = 1
const CONFIG_BOOTLOADER_FLASH_XMC_SUPPORT = 1
const CONFIG_BOOTLOADER_VDDSDIO_BOOST_1_9V = 1
const CONFIG_BOOTLOADER_REGION_PROTECTION_ENABLE = 1
const CONFIG_BOOTLOADER_WDT_ENABLE = 1
const CONFIG_BOOTLOADER_WDT_TIME_MS = 9000
const CONFIG_BOOTLOADER_RESERVE_RTC_SIZE = 0x0
const CONFIG_SECURE_BOOT_V2_RSA_SUPPORTED = 1
const CONFIG_SECURE_BOOT_V2_PREFERRED = 1
const CONFIG_SECURE_ROM_DL_MODE_ENABLED = 1
const CONFIG_APP_COMPILE_TIME_DATE = 1
const CONFIG_APP_RETRIEVE_LEN_ELF_SHA = 9
const CONFIG_ESP_ROM_HAS_CRC_LE = 1
const CONFIG_ESP_ROM_HAS_CRC_BE = 1
const CONFIG_ESP_ROM_HAS_MZ_CRC32 = 1
const CONFIG_ESP_ROM_HAS_JPEG_DECODE = 1
const CONFIG_ESP_ROM_UART_CLK_IS_XTAL = 1
const CONFIG_ESP_ROM_HAS_RETARGETABLE_LOCKING = 1
const CONFIG_ESP_ROM_USB_OTG_NUM = 3
const CONFIG_ESP_ROM_USB_SERIAL_DEVICE_NUM = 4
const CONFIG_ESP_ROM_HAS_ERASE_0_REGION_BUG = 1
const CONFIG_ESP_ROM_HAS_ENCRYPTED_WRITES_USING_LEGACY_DRV = 1
const CONFIG_ESP_ROM_GET_CLK_FREQ = 1
const CONFIG_ESP_ROM_HAS_HAL_WDT = 1
const CONFIG_ESP_ROM_NEEDS_SWSETUP_WORKAROUND = 1
const CONFIG_ESP_ROM_HAS_LAYOUT_TABLE = 1
const CONFIG_ESP_ROM_HAS_SPI_FLASH = 1
const CONFIG_ESP_ROM_HAS_ETS_PRINTF_BUG = 1
const CONFIG_ESP_ROM_HAS_NEWLIB = 1
const CONFIG_ESP_ROM_HAS_NEWLIB_NANO_FORMAT = 1
const CONFIG_ESP_ROM_HAS_NEWLIB_32BIT_TIME = 1
const CONFIG_ESP_ROM_NEEDS_SET_CACHE_MMU_SIZE = 1
const CONFIG_ESP_ROM_RAM_APP_NEEDS_MMU_INIT = 1
const CONFIG_ESP_ROM_HAS_FLASH_COUNT_PAGES_BUG = 1
const CONFIG_ESP_ROM_HAS_CACHE_SUSPEND_WAITI_BUG = 1
const CONFIG_ESP_ROM_HAS_CACHE_WRITEBACK_BUG = 1
const CONFIG_ESP_ROM_HAS_SW_FLOAT = 1
const CONFIG_ESP_ROM_HAS_VERSION = 1
const CONFIG_ESP_ROM_SUPPORT_DEEP_SLEEP_WAKEUP_STUB = 1
const CONFIG_ESP_ROM_HAS_OUTPUT_PUTC_FUNC = 1
const CONFIG_BOOT_ROM_LOG_ALWAYS_ON = 1
const CONFIG_ESPTOOLPY_FLASH_MODE_AUTO_DETECT = 1
const CONFIG_ESPTOOLPY_FLASHMODE_DIO = 1
const CONFIG_ESPTOOLPY_FLASH_SAMPLE_MODE_STR = 1
const CONFIG_ESPTOOLPY_FLASHMODE = "dio"
const CONFIG_ESPTOOLPY_FLASHFREQ_80M = 1
const CONFIG_ESPTOOLPY_FLASHFREQ = "80m"
const CONFIG_ESPTOOLPY_FLASHSIZE_2MB = 1
const CONFIG_ESPTOOLPY_FLASHSIZE = "2MB"
const CONFIG_ESPTOOLPY_BEFORE_RESET = 1
const CONFIG_ESPTOOLPY_BEFORE = "default_reset"
const CONFIG_ESPTOOLPY_AFTER_RESET = 1
const CONFIG_ESPTOOLPY_AFTER = "hard_reset"
const CONFIG_ESPTOOLPY_MONITOR_BAUD = 115200
const CONFIG_PARTITION_TABLE_SINGLE_APP = 1
const CONFIG_PARTITION_TABLE_CUSTOM_FILENAME = "partitions.csv"
const CONFIG_PARTITION_TABLE_FILENAME = "partitions_singleapp.csv"
const CONFIG_PARTITION_TABLE_OFFSET = 0x8000
const CONFIG_PARTITION_TABLE_MD5 = 1
const CONFIG_COMPILER_OPTIMIZATION_DEBUG = 1
const CONFIG_COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE = 1
const CONFIG_COMPILER_ASSERT_NDEBUG_EVALUATE = 1
const CONFIG_COMPILER_FLOAT_LIB_FROM_GCCLIB = 1
const CONFIG_COMPILER_OPTIMIZATION_ASSERTION_LEVEL = 2
const CONFIG_COMPILER_HIDE_PATHS_MACROS = 1
const CONFIG_COMPILER_STACK_CHECK_MODE_NONE = 1
const CONFIG_COMPILER_DISABLE_DEFAULT_ERRORS = 1
const CONFIG_COMPILER_RT_LIB_GCCLIB = 1
const CONFIG_COMPILER_RT_LIB_NAME = "gcc"
const CONFIG_COMPILER_ORPHAN_SECTIONS_WARNING = 1
const CONFIG_APPTRACE_DEST_NONE = 1
const CONFIG_APPTRACE_DEST_UART_NONE = 1
const CONFIG_APPTRACE_UART_TASK_PRIO = 1
const CONFIG_APPTRACE_LOCK_ENABLE = 1
const CONFIG_TWAI_ERRATA_FIX_LISTEN_ONLY_DOM = 1
const CONFIG_EFUSE_MAX_BLK_LEN = 256
const CONFIG_ESP_TLS_USING_MBEDTLS = 1
const CONFIG_ESP_TLS_USE_DS_PERIPHERAL = 1
const CONFIG_ESP_COEX_ENABLED = 1
const CONFIG_ESP_ERR_TO_NAME_LOOKUP = 1
const CONFIG_GPTIMER_ISR_HANDLER_IN_IRAM = 1
const CONFIG_GPTIMER_OBJ_CACHE_SAFE = 1
const CONFIG_SPI_MASTER_ISR_IN_IRAM = 1
const CONFIG_SPI_SLAVE_ISR_IN_IRAM = 1
const CONFIG_USJ_ENABLE_USB_SERIAL_JTAG = 1
const CONFIG_ETH_ENABLED = 1
const CONFIG_ETH_USE_SPI_ETHERNET = 1
const CONFIG_ESP_EVENT_POST_FROM_ISR = 1
const CONFIG_ESP_EVENT_POST_FROM_IRAM_ISR = 1
const CONFIG_ESP_GDBSTUB_ENABLED = 1
const CONFIG_ESP_GDBSTUB_SUPPORT_TASKS = 1
const CONFIG_ESP_GDBSTUB_MAX_TASKS = 32
const CONFIG_ESPHID_TASK_SIZE_BT = 2048
const CONFIG_ESPHID_TASK_SIZE_BLE = 4096
const CONFIG_ESP_HTTP_CLIENT_ENABLE_HTTPS = 1
const CONFIG_ESP_HTTP_CLIENT_EVENT_POST_TIMEOUT = 2000
const CONFIG_HTTPD_MAX_REQ_HDR_LEN = 512
const CONFIG_HTTPD_MAX_URI_LEN = 512
const CONFIG_HTTPD_ERR_RESP_NO_DELAY = 1
const CONFIG_HTTPD_PURGE_BUF_LEN = 32
const CONFIG_HTTPD_SERVER_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP_HTTPS_OTA_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP_HTTPS_SERVER_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP32S3_REV_MIN_0 = 1
const CONFIG_ESP32S3_REV_MIN_FULL = 0
const CONFIG_ESP_REV_MIN_FULL = 0
const CONFIG_ESP32S3_REV_MAX_FULL = 99
const CONFIG_ESP_REV_MAX_FULL = 99
const CONFIG_ESP_EFUSE_BLOCK_REV_MIN_FULL = 0
const CONFIG_ESP_EFUSE_BLOCK_REV_MAX_FULL = 199
const CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_STA = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_AP = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_BT = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_ETH = 1
const CONFIG_ESP_MAC_UNIVERSAL_MAC_ADDRESSES_FOUR = 1
const CONFIG_ESP_MAC_UNIVERSAL_MAC_ADDRESSES = 4
const CONFIG_ESP32S3_UNIVERSAL_MAC_ADDRESSES_FOUR = 1
const CONFIG_ESP32S3_UNIVERSAL_MAC_ADDRESSES = 4
const CONFIG_ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND = 1
const CONFIG_ESP_SLEEP_MSPI_NEED_ALL_IO_PU = 1
const CONFIG_ESP_SLEEP_RTC_BUS_ISO_WORKAROUND = 1
const CONFIG_ESP_SLEEP_GPIO_RESET_WORKAROUND = 1
const CONFIG_ESP_SLEEP_WAIT_FLASH_READY_EXTRA_DELAY = 2000
const CONFIG_ESP_SLEEP_GPIO_ENABLE_INTERNAL_RESISTORS = 1
const CONFIG_RTC_CLK_SRC_INT_RC = 1
const CONFIG_RTC_CLK_CAL_CYCLES = 1024
const CONFIG_GDMA_CTRL_FUNC_IN_IRAM = 1
const CONFIG_GDMA_ISR_HANDLER_IN_IRAM = 1
const CONFIG_GDMA_OBJ_DRAM_SAFE = 1
const CONFIG_XTAL_FREQ_40 = 1
const CONFIG_XTAL_FREQ = 40
const CONFIG_ESP_SPI_BUS_LOCK_ISR_FUNCS_IN_IRAM = 1
const CONFIG_ESP_NETIF_IP_LOST_TIMER_INTERVAL = 120
const CONFIG_ESP_NETIF_TCPIP_LWIP = 1
const CONFIG_ESP_NETIF_USES_TCPIP_WITH_BSD_API = 1
const CONFIG_ESP_NETIF_REPORT_DATA_TRAFFIC = 1
const CONFIG_ESP_PHY_ENABLED = 1
const CONFIG_ESP_PHY_CALIBRATION_AND_DATA_STORAGE = 1
const CONFIG_ESP_PHY_MAX_WIFI_TX_POWER = 20
const CONFIG_ESP_PHY_MAX_TX_POWER = 20
const CONFIG_ESP_PHY_ENABLE_USB = 1
const CONFIG_ESP_PHY_RF_CAL_PARTIAL = 1
const CONFIG_ESP_PHY_CALIBRATION_MODE = 0
const CONFIG_PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP = 1
const CONFIG_PM_RESTORE_CACHE_TAGMEM_AFTER_LIGHT_SLEEP = 1
const CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_160 = 1
const CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ = 160
const CONFIG_ESP32S3_INSTRUCTION_CACHE_16KB = 1
const CONFIG_ESP32S3_INSTRUCTION_CACHE_SIZE = 0x4000
const CONFIG_ESP32S3_INSTRUCTION_CACHE_8WAYS = 1
const CONFIG_ESP32S3_ICACHE_ASSOCIATED_WAYS = 8
const CONFIG_ESP32S3_INSTRUCTION_CACHE_LINE_32B = 1
const CONFIG_ESP32S3_INSTRUCTION_CACHE_LINE_SIZE = 32
const CONFIG_ESP32S3_DATA_CACHE_32KB = 1
const CONFIG_ESP32S3_DATA_CACHE_SIZE = 0x8000
const CONFIG_ESP32S3_DATA_CACHE_8WAYS = 1
const CONFIG_ESP32S3_DCACHE_ASSOCIATED_WAYS = 8
const CONFIG_ESP32S3_DATA_CACHE_LINE_32B = 1
const CONFIG_ESP32S3_DATA_CACHE_LINE_SIZE = 32
const CONFIG_ESP32S3_TRACEMEM_RESERVE_DRAM = 0x0
const CONFIG_ESP_SYSTEM_PANIC_PRINT_REBOOT = 1
const CONFIG_ESP_SYSTEM_PANIC_REBOOT_DELAY_SECONDS = 0
const CONFIG_ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK = 1
const CONFIG_ESP_SYSTEM_ALLOW_RTC_FAST_MEM_AS_HEAP = 1
const CONFIG_ESP_SYSTEM_MEMPROT_FEATURE = 1
const CONFIG_ESP_SYSTEM_MEMPROT_FEATURE_LOCK = 1
const CONFIG_ESP_SYSTEM_EVENT_QUEUE_SIZE = 32
const CONFIG_ESP_SYSTEM_EVENT_TASK_STACK_SIZE = 2304
const CONFIG_ESP_MAIN_TASK_STACK_SIZE = 3584
const CONFIG_ESP_MAIN_TASK_AFFINITY_CPU0 = 1
const CONFIG_ESP_MAIN_TASK_AFFINITY = 0x0
const CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE = 2048
const CONFIG_ESP_CONSOLE_UART_DEFAULT = 1
const CONFIG_ESP_CONSOLE_SECONDARY_USB_SERIAL_JTAG = 1
const CONFIG_ESP_CONSOLE_USB_SERIAL_JTAG_ENABLED = 1
const CONFIG_ESP_CONSOLE_UART = 1
const CONFIG_ESP_CONSOLE_UART_NUM = 0
const CONFIG_ESP_CONSOLE_ROM_SERIAL_PORT_NUM = 0
const CONFIG_ESP_CONSOLE_UART_BAUDRATE = 115200
const CONFIG_ESP_INT_WDT = 1
const CONFIG_ESP_INT_WDT_TIMEOUT_MS = 300
const CONFIG_ESP_INT_WDT_CHECK_CPU1 = 1
const CONFIG_ESP_TASK_WDT_EN = 1
const CONFIG_ESP_TASK_WDT_INIT = 1
const CONFIG_ESP_TASK_WDT_TIMEOUT_S = 5
const CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0 = 1
const CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1 = 1
const CONFIG_ESP_DEBUG_OCDAWARE = 1
const CONFIG_ESP_SYSTEM_CHECK_INT_LEVEL_4 = 1
const CONFIG_ESP_BROWNOUT_DET = 1
const CONFIG_ESP_BROWNOUT_DET_LVL_SEL_7 = 1
const CONFIG_ESP_BROWNOUT_DET_LVL = 7
const CONFIG_ESP_SYSTEM_BROWNOUT_INTR = 1
const CONFIG_ESP_SYSTEM_BBPLL_RECALIB = 1
const CONFIG_ESP_IPC_TASK_STACK_SIZE = 1280
const CONFIG_ESP_IPC_USES_CALLERS_PRIORITY = 1
const CONFIG_ESP_IPC_ISR_ENABLE = 1
const CONFIG_ESP_TIME_FUNCS_USE_RTC_TIMER = 1
const CONFIG_ESP_TIME_FUNCS_USE_ESP_TIMER = 1
const CONFIG_ESP_TIMER_TASK_STACK_SIZE = 3584
const CONFIG_ESP_TIMER_INTERRUPT_LEVEL = 1
const CONFIG_ESP_TIMER_TASK_AFFINITY = 0x0
const CONFIG_ESP_TIMER_TASK_AFFINITY_CPU0 = 1
const CONFIG_ESP_TIMER_ISR_AFFINITY_CPU0 = 1
const CONFIG_ESP_TIMER_IMPL_SYSTIMER = 1
const CONFIG_ESP_WIFI_ENABLED = 1
const CONFIG_ESP_WIFI_STATIC_RX_BUFFER_NUM = 10
const CONFIG_ESP_WIFI_DYNAMIC_RX_BUFFER_NUM = 32
const CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER = 1
const CONFIG_ESP_WIFI_TX_BUFFER_TYPE = 1
const CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER_NUM = 32
const CONFIG_ESP_WIFI_STATIC_RX_MGMT_BUFFER = 1
const CONFIG_ESP_WIFI_DYNAMIC_RX_MGMT_BUF = 0
const CONFIG_ESP_WIFI_RX_MGMT_BUF_NUM_DEF = 5
const CONFIG_ESP_WIFI_AMPDU_TX_ENABLED = 1
const CONFIG_ESP_WIFI_TX_BA_WIN = 6
const CONFIG_ESP_WIFI_AMPDU_RX_ENABLED = 1
const CONFIG_ESP_WIFI_RX_BA_WIN = 6
const CONFIG_ESP_WIFI_NVS_ENABLED = 1
const CONFIG_ESP_WIFI_TASK_PINNED_TO_CORE_0 = 1
const CONFIG_ESP_WIFI_SOFTAP_BEACON_MAX_LEN = 752
const CONFIG_ESP_WIFI_MGMT_SBUF_NUM = 32
const CONFIG_ESP_WIFI_IRAM_OPT = 1
const CONFIG_ESP_WIFI_RX_IRAM_OPT = 1
const CONFIG_ESP_WIFI_ENABLE_WPA3_SAE = 1
const CONFIG_ESP_WIFI_ENABLE_SAE_PK = 1
const CONFIG_ESP_WIFI_SOFTAP_SAE_SUPPORT = 1
const CONFIG_ESP_WIFI_ENABLE_WPA3_OWE_STA = 1
const CONFIG_ESP_WIFI_SLP_DEFAULT_MIN_ACTIVE_TIME = 50
const CONFIG_ESP_WIFI_SLP_DEFAULT_MAX_ACTIVE_TIME = 10
const CONFIG_ESP_WIFI_SLP_DEFAULT_WAIT_BROADCAST_DATA_TIME = 15
const CONFIG_ESP_WIFI_STA_DISCONNECTED_PM_ENABLE = 1
const CONFIG_ESP_WIFI_GMAC_SUPPORT = 1
const CONFIG_ESP_WIFI_SOFTAP_SUPPORT = 1
const CONFIG_ESP_WIFI_ESPNOW_MAX_ENCRYPT_NUM = 7
const CONFIG_ESP_WIFI_MBEDTLS_CRYPTO = 1
const CONFIG_ESP_WIFI_MBEDTLS_TLS_CLIENT = 1
const CONFIG_ESP_WIFI_ENTERPRISE_SUPPORT = 1
const CONFIG_ESP_COREDUMP_ENABLE_TO_NONE = 1
const CONFIG_FATFS_VOLUME_COUNT = 2
const CONFIG_FATFS_LFN_NONE = 1
const CONFIG_FATFS_SECTOR_4096 = 1
const CONFIG_FATFS_CODEPAGE_437 = 1
const CONFIG_FATFS_CODEPAGE = 437
const CONFIG_FATFS_FS_LOCK = 0
const CONFIG_FATFS_TIMEOUT_MS = 10000
const CONFIG_FATFS_PER_FILE_CACHE = 1
const CONFIG_FATFS_USE_STRFUNC_NONE = 1
const CONFIG_FATFS_VFS_FSTAT_BLKSIZE = 0
const CONFIG_FATFS_LINK_LOCK = 1
const CONFIG_FATFS_DONT_TRUST_FREE_CLUSTER_CNT = 0
const CONFIG_FATFS_DONT_TRUST_LAST_ALLOC = 0
const CONFIG_FREERTOS_HZ = 100
const CONFIG_FREERTOS_CHECK_STACKOVERFLOW_CANARY = 1
const CONFIG_FREERTOS_THREAD_LOCAL_STORAGE_POINTERS = 1
const CONFIG_FREERTOS_IDLE_TASK_STACKSIZE = 1536
const CONFIG_FREERTOS_MAX_TASK_NAME_LEN = 16
const CONFIG_FREERTOS_USE_TIMERS = 1
const CONFIG_FREERTOS_TIMER_SERVICE_TASK_NAME = "Tmr Svc"
const CONFIG_FREERTOS_TIMER_TASK_NO_AFFINITY = 1
const CONFIG_FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY = 0x7FFFFFFF
const CONFIG_FREERTOS_TIMER_TASK_PRIORITY = 1
const CONFIG_FREERTOS_TIMER_TASK_STACK_DEPTH = 2048
const CONFIG_FREERTOS_TIMER_QUEUE_LENGTH = 10
const CONFIG_FREERTOS_QUEUE_REGISTRY_SIZE = 0
const CONFIG_FREERTOS_TASK_NOTIFICATION_ARRAY_ENTRIES = 1
const CONFIG_FREERTOS_TASK_FUNCTION_WRAPPER = 1
const CONFIG_FREERTOS_TLSP_DELETION_CALLBACKS = 1
const CONFIG_FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER = 1
const CONFIG_FREERTOS_ISR_STACKSIZE = 1536
const CONFIG_FREERTOS_INTERRUPT_BACKTRACE = 1
const CONFIG_FREERTOS_TICK_SUPPORT_SYSTIMER = 1
const CONFIG_FREERTOS_CORETIMER_SYSTIMER_LVL1 = 1
const CONFIG_FREERTOS_SYSTICK_USES_SYSTIMER = 1
const CONFIG_FREERTOS_PORT = 1
const CONFIG_FREERTOS_NO_AFFINITY = 0x7FFFFFFF
const CONFIG_FREERTOS_SUPPORT_STATIC_ALLOCATION = 1
const CONFIG_FREERTOS_DEBUG_OCDAWARE = 1
const CONFIG_FREERTOS_ENABLE_TASK_SNAPSHOT = 1
const CONFIG_FREERTOS_PLACE_SNAPSHOT_FUNS_INTO_FLASH = 1
const CONFIG_FREERTOS_NUMBER_OF_CORES = 2
const CONFIG_HAL_ASSERTION_EQUALS_SYSTEM = 1
const CONFIG_HAL_DEFAULT_ASSERTION_LEVEL = 2
const CONFIG_HAL_WDT_USE_ROM_IMPL = 1
const CONFIG_HAL_SPI_MASTER_FUNC_IN_IRAM = 1
const CONFIG_HAL_SPI_SLAVE_FUNC_IN_IRAM = 1
const CONFIG_HEAP_POISONING_DISABLED = 1
const CONFIG_HEAP_TRACING_OFF = 1
const CONFIG_LOG_DEFAULT_LEVEL_INFO = 1
const CONFIG_LOG_DEFAULT_LEVEL = 3
const CONFIG_LOG_MAXIMUM_EQUALS_DEFAULT = 1
const CONFIG_LOG_MAXIMUM_LEVEL = 3
const CONFIG_LOG_DYNAMIC_LEVEL_CONTROL = 1
const CONFIG_LOG_TAG_LEVEL_IMPL_CACHE_AND_LINKED_LIST = 1
const CONFIG_LOG_TAG_LEVEL_CACHE_BINARY_MIN_HEAP = 1
const CONFIG_LOG_TAG_LEVEL_IMPL_CACHE_SIZE = 31
const CONFIG_LOG_TIMESTAMP_SOURCE_RTOS = 1
const CONFIG_LWIP_ENABLE = 1
const CONFIG_LWIP_LOCAL_HOSTNAME = "espressif"
const CONFIG_LWIP_TCPIP_TASK_PRIO = 18
const CONFIG_LWIP_DNS_SUPPORT_MDNS_QUERIES = 1
const CONFIG_LWIP_TIMERS_ONDEMAND = 1
const CONFIG_LWIP_ND6 = 1
const CONFIG_LWIP_MAX_SOCKETS = 10
const CONFIG_LWIP_SO_REUSE = 1
const CONFIG_LWIP_SO_REUSE_RXTOALL = 1
const CONFIG_LWIP_IP_DEFAULT_TTL = 64
const CONFIG_LWIP_IP4_FRAG = 1
const CONFIG_LWIP_IP6_FRAG = 1
const CONFIG_LWIP_IP_REASS_MAX_PBUFS = 10
const CONFIG_LWIP_ESP_GRATUITOUS_ARP = 1
const CONFIG_LWIP_GARP_TMR_INTERVAL = 60
const CONFIG_LWIP_ESP_MLDV6_REPORT = 1
const CONFIG_LWIP_MLDV6_TMR_INTERVAL = 40
const CONFIG_LWIP_TCPIP_RECVMBOX_SIZE = 32
const CONFIG_LWIP_DHCP_DOES_ARP_CHECK = 1
const CONFIG_LWIP_DHCP_DISABLE_VENDOR_CLASS_ID = 1
const CONFIG_LWIP_DHCP_OPTIONS_LEN = 68
const CONFIG_LWIP_NUM_NETIF_CLIENT_DATA = 0
const CONFIG_LWIP_DHCP_COARSE_TIMER_SECS = 1
const CONFIG_LWIP_DHCPS = 1
const CONFIG_LWIP_DHCPS_LEASE_UNIT = 60
const CONFIG_LWIP_DHCPS_MAX_STATION_NUM = 8
const CONFIG_LWIP_DHCPS_STATIC_ENTRIES = 1
const CONFIG_LWIP_DHCPS_ADD_DNS = 1
const CONFIG_LWIP_IPV4 = 1
const CONFIG_LWIP_IPV6 = 1
const CONFIG_LWIP_IPV6_NUM_ADDRESSES = 3
const CONFIG_LWIP_NETIF_LOOPBACK = 1
const CONFIG_LWIP_LOOPBACK_MAX_PBUFS = 8
const CONFIG_LWIP_MAX_ACTIVE_TCP = 16
const CONFIG_LWIP_MAX_LISTENING_TCP = 16
const CONFIG_LWIP_TCP_HIGH_SPEED_RETRANSMISSION = 1
const CONFIG_LWIP_TCP_MAXRTX = 12
const CONFIG_LWIP_TCP_SYNMAXRTX = 12
const CONFIG_LWIP_TCP_MSS = 1440
const CONFIG_LWIP_TCP_TMR_INTERVAL = 250
const CONFIG_LWIP_TCP_MSL = 60000
const CONFIG_LWIP_TCP_FIN_WAIT_TIMEOUT = 20000
const CONFIG_LWIP_TCP_SND_BUF_DEFAULT = 5760
const CONFIG_LWIP_TCP_WND_DEFAULT = 5760
const CONFIG_LWIP_TCP_RECVMBOX_SIZE = 6
const CONFIG_LWIP_TCP_ACCEPTMBOX_SIZE = 6
const CONFIG_LWIP_TCP_QUEUE_OOSEQ = 1
const CONFIG_LWIP_TCP_OOSEQ_TIMEOUT = 6
const CONFIG_LWIP_TCP_OOSEQ_MAX_PBUFS = 4
const CONFIG_LWIP_TCP_OVERSIZE_MSS = 1
const CONFIG_LWIP_TCP_RTO_TIME = 1500
const CONFIG_LWIP_MAX_UDP_PCBS = 16
const CONFIG_LWIP_UDP_RECVMBOX_SIZE = 6
const CONFIG_LWIP_CHECKSUM_CHECK_ICMP = 1
const CONFIG_LWIP_TCPIP_TASK_STACK_SIZE = 3072
const CONFIG_LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY = 1
const CONFIG_LWIP_TCPIP_TASK_AFFINITY = 0x7FFFFFFF
const CONFIG_LWIP_IPV6_MEMP_NUM_ND6_QUEUE = 3
const CONFIG_LWIP_IPV6_ND6_NUM_NEIGHBORS = 5
const CONFIG_LWIP_IPV6_ND6_NUM_PREFIXES = 5
const CONFIG_LWIP_IPV6_ND6_NUM_ROUTERS = 3
const CONFIG_LWIP_IPV6_ND6_NUM_DESTINATIONS = 10
const CONFIG_LWIP_ICMP = 1
const CONFIG_LWIP_MAX_RAW_PCBS = 16
const CONFIG_LWIP_SNTP_MAX_SERVERS = 1
const CONFIG_LWIP_SNTP_UPDATE_DELAY = 3600000
const CONFIG_LWIP_SNTP_STARTUP_DELAY = 1
const CONFIG_LWIP_SNTP_MAXIMUM_STARTUP_DELAY = 5000
const CONFIG_LWIP_DNS_MAX_HOST_IP = 1
const CONFIG_LWIP_DNS_MAX_SERVERS = 3
const CONFIG_LWIP_BRIDGEIF_MAX_PORTS = 7
const CONFIG_LWIP_ESP_LWIP_ASSERT = 1
const CONFIG_LWIP_HOOK_TCP_ISN_DEFAULT = 1
const CONFIG_LWIP_HOOK_IP6_ROUTE_NONE = 1
const CONFIG_LWIP_HOOK_ND6_GET_GW_NONE = 1
const CONFIG_LWIP_HOOK_IP6_SELECT_SRC_ADDR_NONE = 1
const CONFIG_LWIP_HOOK_NETCONN_EXT_RESOLVE_NONE = 1
const CONFIG_LWIP_HOOK_DNS_EXT_RESOLVE_NONE = 1
const CONFIG_LWIP_HOOK_IP6_INPUT_DEFAULT = 1
const CONFIG_MBEDTLS_INTERNAL_MEM_ALLOC = 1
const CONFIG_MBEDTLS_ASYMMETRIC_CONTENT_LEN = 1
const CONFIG_MBEDTLS_SSL_IN_CONTENT_LEN = 16384
const CONFIG_MBEDTLS_SSL_OUT_CONTENT_LEN = 4096
const CONFIG_MBEDTLS_SSL_KEEP_PEER_CERTIFICATE = 1
const CONFIG_MBEDTLS_PKCS7_C = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS = 200
const CONFIG_MBEDTLS_CMAC_C = 1
const CONFIG_MBEDTLS_HARDWARE_AES = 1
const CONFIG_MBEDTLS_AES_USE_INTERRUPT = 1
const CONFIG_MBEDTLS_AES_INTERRUPT_LEVEL = 0
const CONFIG_MBEDTLS_GCM_SUPPORT_NON_AES_CIPHER = 1
const CONFIG_MBEDTLS_HARDWARE_MPI = 1
const CONFIG_MBEDTLS_MPI_USE_INTERRUPT = 1
const CONFIG_MBEDTLS_MPI_INTERRUPT_LEVEL = 0
const CONFIG_MBEDTLS_HARDWARE_SHA = 1
const CONFIG_MBEDTLS_ROM_MD5 = 1
const CONFIG_MBEDTLS_HAVE_TIME = 1
const CONFIG_MBEDTLS_ECDSA_DETERMINISTIC = 1
const CONFIG_MBEDTLS_SHA1_C = 1
const CONFIG_MBEDTLS_SHA512_C = 1
const CONFIG_MBEDTLS_TLS_SERVER_AND_CLIENT = 1
const CONFIG_MBEDTLS_TLS_SERVER = 1
const CONFIG_MBEDTLS_TLS_CLIENT = 1
const CONFIG_MBEDTLS_TLS_ENABLED = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_RSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_RSA = 1
const CONFIG_MBEDTLS_SSL_RENEGOTIATION = 1
const CONFIG_MBEDTLS_SSL_PROTO_TLS1_2 = 1
const CONFIG_MBEDTLS_SSL_ALPN = 1
const CONFIG_MBEDTLS_CLIENT_SSL_SESSION_TICKETS = 1
const CONFIG_MBEDTLS_SERVER_SSL_SESSION_TICKETS = 1
const CONFIG_MBEDTLS_AES_C = 1
const CONFIG_MBEDTLS_CCM_C = 1
const CONFIG_MBEDTLS_GCM_C = 1
const CONFIG_MBEDTLS_PEM_PARSE_C = 1
const CONFIG_MBEDTLS_PEM_WRITE_C = 1
const CONFIG_MBEDTLS_X509_CRL_PARSE_C = 1
const CONFIG_MBEDTLS_X509_CSR_PARSE_C = 1
const CONFIG_MBEDTLS_ECP_C = 1
const CONFIG_MBEDTLS_PK_PARSE_EC_EXTENDED = 1
const CONFIG_MBEDTLS_PK_PARSE_EC_COMPRESSED = 1
const CONFIG_MBEDTLS_ECDH_C = 1
const CONFIG_MBEDTLS_ECDSA_C = 1
const CONFIG_MBEDTLS_ECP_DP_SECP192R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP224R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP256R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP384R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP521R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP192K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP224K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP256K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP256R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP384R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP512R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_CURVE25519_ENABLED = 1
const CONFIG_MBEDTLS_ECP_NIST_OPTIM = 1
const CONFIG_MBEDTLS_ERROR_STRINGS = 1
const CONFIG_MBEDTLS_FS_IO = 1
const CONFIG_MQTT_PROTOCOL_311 = 1
const CONFIG_MQTT_TRANSPORT_SSL = 1
const CONFIG_MQTT_TRANSPORT_WEBSOCKET = 1
const CONFIG_MQTT_TRANSPORT_WEBSOCKET_SECURE = 1
const CONFIG_NEWLIB_STDOUT_LINE_ENDING_CRLF = 1
const CONFIG_NEWLIB_STDIN_LINE_ENDING_CR = 1
const CONFIG_NEWLIB_TIME_SYSCALL_USE_RTC_HRT = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_0 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_1 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_2 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_PATCH_VERSION = 1
const CONFIG_PTHREAD_TASK_PRIO_DEFAULT = 5
const CONFIG_PTHREAD_TASK_STACK_SIZE_DEFAULT = 3072
const CONFIG_PTHREAD_STACK_MIN = 768
const CONFIG_PTHREAD_DEFAULT_CORE_NO_AFFINITY = 1
const CONFIG_PTHREAD_TASK_NAME_DEFAULT = "pthread"
const CONFIG_MMU_PAGE_SIZE_64KB = 1
const CONFIG_MMU_PAGE_MODE = "64KB"
const CONFIG_MMU_PAGE_SIZE = 0x10000
const CONFIG_SPI_FLASH_BROWNOUT_RESET_XMC = 1
const CONFIG_SPI_FLASH_BROWNOUT_RESET = 1
const CONFIG_SPI_FLASH_HPM_AUTO = 1
const CONFIG_SPI_FLASH_HPM_ON = 1
const CONFIG_SPI_FLASH_HPM_DC_AUTO = 1
const CONFIG_SPI_FLASH_SUSPEND_TSUS_VAL_US = 50
const CONFIG_SPI_FLASH_ROM_DRIVER_PATCH = 1
const CONFIG_SPI_FLASH_DANGEROUS_WRITE_ABORTS = 1
const CONFIG_SPI_FLASH_YIELD_DURING_ERASE = 1
const CONFIG_SPI_FLASH_ERASE_YIELD_DURATION_MS = 20
const CONFIG_SPI_FLASH_ERASE_YIELD_TICKS = 1
const CONFIG_SPI_FLASH_WRITE_CHUNK_SIZE = 8192
const CONFIG_SPI_FLASH_VENDOR_XMC_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_GD_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_ISSI_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_MXIC_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_WINBOND_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_BOYA_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_TH_SUPPORTED = 1
const CONFIG_SPI_FLASH_SUPPORT_ISSI_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_MXIC_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_GD_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_WINBOND_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_BOYA_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_TH_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_MXIC_OPI_CHIP = 1
const CONFIG_SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE = 1
const CONFIG_SPIFFS_MAX_PARTITIONS = 3
const CONFIG_SPIFFS_CACHE = 1
const CONFIG_SPIFFS_CACHE_WR = 1
const CONFIG_SPIFFS_PAGE_CHECK = 1
const CONFIG_SPIFFS_GC_MAX_RUNS = 10
const CONFIG_SPIFFS_PAGE_SIZE = 256
const CONFIG_SPIFFS_OBJ_NAME_LEN = 32
const CONFIG_SPIFFS_USE_MAGIC = 1
const CONFIG_SPIFFS_USE_MAGIC_LENGTH = 1
const CONFIG_SPIFFS_META_LENGTH = 4
const CONFIG_SPIFFS_USE_MTIME = 1
const CONFIG_WS_TRANSPORT = 1
const CONFIG_WS_BUFFER_SIZE = 1024
const CONFIG_UNITY_ENABLE_FLOAT = 1
const CONFIG_UNITY_ENABLE_DOUBLE = 1
const CONFIG_UNITY_ENABLE_IDF_TEST_RUNNER = 1
const CONFIG_USB_HOST_CONTROL_TRANSFER_MAX_SIZE = 256
const CONFIG_USB_HOST_HW_BUFFER_BIAS_BALANCED = 1
const CONFIG_USB_HOST_DEBOUNCE_DELAY_MS = 250
const CONFIG_USB_HOST_RESET_HOLD_MS = 30
const CONFIG_USB_HOST_RESET_RECOVERY_MS = 30
const CONFIG_USB_HOST_SET_ADDR_RECOVERY_MS = 10
const CONFIG_USB_OTG_SUPPORTED = 1
const CONFIG_VFS_SUPPORT_IO = 1
const CONFIG_VFS_SUPPORT_DIR = 1
const CONFIG_VFS_SUPPORT_SELECT = 1
const CONFIG_VFS_SUPPRESS_SELECT_DEBUG_OUTPUT = 1
const CONFIG_VFS_SUPPORT_TERMIOS = 1
const CONFIG_VFS_MAX_COUNT = 8
const CONFIG_VFS_SEMIHOSTFS_MAX_MOUNT_POINTS = 1
const CONFIG_VFS_INITIALIZE_DEV_NULL = 1
const CONFIG_WL_SECTOR_SIZE_4096 = 1
const CONFIG_WL_SECTOR_SIZE = 4096
const CONFIG_WIFI_PROV_SCAN_MAX_ENTRIES = 16
const CONFIG_WIFI_PROV_AUTOSTOP_TIMEOUT = 30
const CONFIG_WIFI_PROV_STA_ALL_CHANNEL_SCAN = 1
const X__API_TO_BE_DEPRECATED = 100000
const X__API_TO_BE_DEPRECATED_MACOS = 100000
const X__API_TO_BE_DEPRECATED_IOS = 100000
const X__API_TO_BE_DEPRECATED_MACCATALYST = 100000
const X__API_TO_BE_DEPRECATED_WATCHOS = 100000
const X__API_TO_BE_DEPRECATED_TVOS = 100000
const X__API_TO_BE_DEPRECATED_DRIVERKIT = 100000
const X__API_TO_BE_DEPRECATED_VISIONOS = 100000
const X__MAC_10_0 = 1000
const X__MAC_10_1 = 1010
const X__MAC_10_2 = 1020
const X__MAC_10_3 = 1030
const X__MAC_10_4 = 1040
const X__MAC_10_5 = 1050
const X__MAC_10_6 = 1060
const X__MAC_10_7 = 1070
const X__MAC_10_8 = 1080
const X__MAC_10_9 = 1090
const X__MAC_10_10 = 101000
const X__MAC_10_10_2 = 101002
const X__MAC_10_10_3 = 101003
const X__MAC_10_11 = 101100
const X__MAC_10_11_2 = 101102
const X__MAC_10_11_3 = 101103
const X__MAC_10_11_4 = 101104
const X__MAC_10_12 = 101200
const X__MAC_10_12_1 = 101201
const X__MAC_10_12_2 = 101202
const X__MAC_10_12_4 = 101204
const X__MAC_10_13 = 101300
const X__MAC_10_13_1 = 101301
const X__MAC_10_13_2 = 101302
const X__MAC_10_13_4 = 101304
const X__MAC_10_14 = 101400
const X__MAC_10_14_1 = 101401
const X__MAC_10_14_4 = 101404
const X__MAC_10_14_5 = 101405
const X__MAC_10_14_6 = 101406
const X__MAC_10_15 = 101500
const X__MAC_10_15_1 = 101501
const X__MAC_10_15_4 = 101504
const X__MAC_10_16 = 101600
const X__MAC_11_0 = 110000
const X__MAC_11_1 = 110100
const X__MAC_11_3 = 110300
const X__MAC_11_4 = 110400
const X__MAC_11_5 = 110500
const X__MAC_11_6 = 110600
const X__MAC_12_0 = 120000
const X__MAC_12_1 = 120100
const X__MAC_12_2 = 120200
const X__MAC_12_3 = 120300
const X__MAC_12_4 = 120400
const X__MAC_12_5 = 120500
const X__MAC_12_6 = 120600
const X__MAC_12_7 = 120700
const X__MAC_13_0 = 130000
const X__MAC_13_1 = 130100
const X__MAC_13_2 = 130200
const X__MAC_13_3 = 130300
const X__MAC_13_4 = 130400
const X__MAC_13_5 = 130500
const X__MAC_13_6 = 130600
const X__MAC_14_0 = 140000
const X__MAC_14_1 = 140100
const X__MAC_14_2 = 140200
const X__MAC_14_3 = 140300
const X__MAC_14_4 = 140400
const X__IPHONE_2_0 = 20000
const X__IPHONE_2_1 = 20100
const X__IPHONE_2_2 = 20200
const X__IPHONE_3_0 = 30000
const X__IPHONE_3_1 = 30100
const X__IPHONE_3_2 = 30200
const X__IPHONE_4_0 = 40000
const X__IPHONE_4_1 = 40100
const X__IPHONE_4_2 = 40200
const X__IPHONE_4_3 = 40300
const X__IPHONE_5_0 = 50000
const X__IPHONE_5_1 = 50100
const X__IPHONE_6_0 = 60000
const X__IPHONE_6_1 = 60100
const X__IPHONE_7_0 = 70000
const X__IPHONE_7_1 = 70100
const X__IPHONE_8_0 = 80000
const X__IPHONE_8_1 = 80100
const X__IPHONE_8_2 = 80200
const X__IPHONE_8_3 = 80300
const X__IPHONE_8_4 = 80400
const X__IPHONE_9_0 = 90000
const X__IPHONE_9_1 = 90100
const X__IPHONE_9_2 = 90200
const X__IPHONE_9_3 = 90300
const X__IPHONE_10_0 = 100000
const X__IPHONE_10_1 = 100100
const X__IPHONE_10_2 = 100200
const X__IPHONE_10_3 = 100300
const X__IPHONE_11_0 = 110000
const X__IPHONE_11_1 = 110100
const X__IPHONE_11_2 = 110200
const X__IPHONE_11_3 = 110300
const X__IPHONE_11_4 = 110400
const X__IPHONE_12_0 = 120000
const X__IPHONE_12_1 = 120100
const X__IPHONE_12_2 = 120200
const X__IPHONE_12_3 = 120300
const X__IPHONE_12_4 = 120400
const X__IPHONE_13_0 = 130000
const X__IPHONE_13_1 = 130100
const X__IPHONE_13_2 = 130200
const X__IPHONE_13_3 = 130300
const X__IPHONE_13_4 = 130400
const X__IPHONE_13_5 = 130500
const X__IPHONE_13_6 = 130600
const X__IPHONE_13_7 = 130700
const X__IPHONE_14_0 = 140000
const X__IPHONE_14_1 = 140100
const X__IPHONE_14_2 = 140200
const X__IPHONE_14_3 = 140300
const X__IPHONE_14_5 = 140500
const X__IPHONE_14_4 = 140400
const X__IPHONE_14_6 = 140600
const X__IPHONE_14_7 = 140700
const X__IPHONE_14_8 = 140800
const X__IPHONE_15_0 = 150000
const X__IPHONE_15_1 = 150100
const X__IPHONE_15_2 = 150200
const X__IPHONE_15_3 = 150300
const X__IPHONE_15_4 = 150400
const X__IPHONE_15_5 = 150500
const X__IPHONE_15_6 = 150600
const X__IPHONE_15_7 = 150700
const X__IPHONE_15_8 = 150800
const X__IPHONE_16_0 = 160000
const X__IPHONE_16_1 = 160100
const X__IPHONE_16_2 = 160200
const X__IPHONE_16_3 = 160300
const X__IPHONE_16_4 = 160400
const X__IPHONE_16_5 = 160500
const X__IPHONE_16_6 = 160600
const X__IPHONE_16_7 = 160700
const X__IPHONE_17_0 = 170000
const X__IPHONE_17_1 = 170100
const X__IPHONE_17_2 = 170200
const X__IPHONE_17_3 = 170300
const X__IPHONE_17_4 = 170400
const X__WATCHOS_1_0 = 10000
const X__WATCHOS_2_0 = 20000
const X__WATCHOS_2_1 = 20100
const X__WATCHOS_2_2 = 20200
const X__WATCHOS_3_0 = 30000
const X__WATCHOS_3_1 = 30100
const X__WATCHOS_3_1_1 = 30101
const X__WATCHOS_3_2 = 30200
const X__WATCHOS_4_0 = 40000
const X__WATCHOS_4_1 = 40100
const X__WATCHOS_4_2 = 40200
const X__WATCHOS_4_3 = 40300
const X__WATCHOS_5_0 = 50000
const X__WATCHOS_5_1 = 50100
const X__WATCHOS_5_2 = 50200
const X__WATCHOS_5_3 = 50300
const X__WATCHOS_6_0 = 60000
const X__WATCHOS_6_1 = 60100
const X__WATCHOS_6_2 = 60200
const X__WATCHOS_7_0 = 70000
const X__WATCHOS_7_1 = 70100
const X__WATCHOS_7_2 = 70200
const X__WATCHOS_7_3 = 70300
const X__WATCHOS_7_4 = 70400
const X__WATCHOS_7_5 = 70500
const X__WATCHOS_7_6 = 70600
const X__WATCHOS_8_0 = 80000
const X__WATCHOS_8_1 = 80100
const X__WATCHOS_8_3 = 80300
const X__WATCHOS_8_4 = 80400
const X__WATCHOS_8_5 = 80500
const X__WATCHOS_8_6 = 80600
const X__WATCHOS_8_7 = 80700
const X__WATCHOS_8_8 = 80800
const X__WATCHOS_9_0 = 90000
const X__WATCHOS_9_1 = 90100
const X__WATCHOS_9_2 = 90200
const X__WATCHOS_9_3 = 90300
const X__WATCHOS_9_4 = 90400
const X__WATCHOS_9_5 = 90500
const X__WATCHOS_9_6 = 90600
const X__WATCHOS_10_0 = 100000
const X__WATCHOS_10_1 = 100100
const X__WATCHOS_10_2 = 100200
const X__WATCHOS_10_3 = 100300
const X__WATCHOS_10_4 = 100400
const X__TVOS_9_0 = 90000
const X__TVOS_9_1 = 90100
const X__TVOS_9_2 = 90200
const X__TVOS_10_0 = 100000
const X__TVOS_10_0_1 = 100001
const X__TVOS_10_1 = 100100
const X__TVOS_10_2 = 100200
const X__TVOS_11_0 = 110000
const X__TVOS_11_1 = 110100
const X__TVOS_11_2 = 110200
const X__TVOS_11_3 = 110300
const X__TVOS_11_4 = 110400
const X__TVOS_12_0 = 120000
const X__TVOS_12_1 = 120100
const X__TVOS_12_2 = 120200
const X__TVOS_12_3 = 120300
const X__TVOS_12_4 = 120400
const X__TVOS_13_0 = 130000
const X__TVOS_13_2 = 130200
const X__TVOS_13_3 = 130300
const X__TVOS_13_4 = 130400
const X__TVOS_14_0 = 140000
const X__TVOS_14_1 = 140100
const X__TVOS_14_2 = 140200
const X__TVOS_14_3 = 140300
const X__TVOS_14_5 = 140500
const X__TVOS_14_6 = 140600
const X__TVOS_14_7 = 140700
const X__TVOS_15_0 = 150000
const X__TVOS_15_1 = 150100
const X__TVOS_15_2 = 150200
const X__TVOS_15_3 = 150300
const X__TVOS_15_4 = 150400
const X__TVOS_15_5 = 150500
const X__TVOS_15_6 = 150600
const X__TVOS_16_0 = 160000
const X__TVOS_16_1 = 160100
const X__TVOS_16_2 = 160200
const X__TVOS_16_3 = 160300
const X__TVOS_16_4 = 160400
const X__TVOS_16_5 = 160500
const X__TVOS_16_6 = 160600
const X__TVOS_17_0 = 170000
const X__TVOS_17_1 = 170100
const X__TVOS_17_2 = 170200
const X__TVOS_17_3 = 170300
const X__TVOS_17_4 = 170400
const X__BRIDGEOS_2_0 = 20000
const X__BRIDGEOS_3_0 = 30000
const X__BRIDGEOS_3_1 = 30100
const X__BRIDGEOS_3_4 = 30400
const X__BRIDGEOS_4_0 = 40000
const X__BRIDGEOS_4_1 = 40100
const X__BRIDGEOS_5_0 = 50000
const X__BRIDGEOS_5_1 = 50100
const X__BRIDGEOS_5_3 = 50300
const X__BRIDGEOS_6_0 = 60000
const X__BRIDGEOS_6_2 = 60200
const X__BRIDGEOS_6_4 = 60400
const X__BRIDGEOS_6_5 = 60500
const X__BRIDGEOS_6_6 = 60600
const X__BRIDGEOS_7_0 = 70000
const X__BRIDGEOS_7_1 = 70100
const X__BRIDGEOS_7_2 = 70200
const X__BRIDGEOS_7_3 = 70300
const X__BRIDGEOS_7_4 = 70400
const X__BRIDGEOS_7_6 = 70600
const X__BRIDGEOS_8_0 = 80000
const X__BRIDGEOS_8_1 = 80100
const X__BRIDGEOS_8_2 = 80200
const X__BRIDGEOS_8_3 = 80300
const X__BRIDGEOS_8_4 = 80400
const X__DRIVERKIT_19_0 = 190000
const X__DRIVERKIT_20_0 = 200000
const X__DRIVERKIT_21_0 = 210000
const X__DRIVERKIT_22_0 = 220000
const X__DRIVERKIT_22_4 = 220400
const X__DRIVERKIT_22_5 = 220500
const X__DRIVERKIT_22_6 = 220600
const X__DRIVERKIT_23_0 = 230000
const X__DRIVERKIT_23_1 = 230100
const X__DRIVERKIT_23_2 = 230200
const X__DRIVERKIT_23_3 = 230300
const X__DRIVERKIT_23_4 = 230400
const X__VISIONOS_1_0 = 10000
const X__VISIONOS_1_1 = 10100
const X__ENABLE_LEGACY_MAC_AVAILABILITY = 1
const X_FORTIFY_SOURCE = 2
const X__DARWIN_NSIG = 32
const X_ARM_SIGNAL_ = 1
const SIGHUP = 1
const SIGINT = 2
const SIGQUIT = 3
const SIGILL = 4
const SIGTRAP = 5
const SIGABRT = 6
const SIGEMT = 7
const SIGFPE = 8
const SIGKILL = 9
const SIGBUS = 10
const SIGSEGV = 11
const SIGSYS = 12
const SIGPIPE = 13
const SIGALRM = 14
const SIGTERM = 15
const SIGURG = 16
const SIGSTOP = 17
const SIGTSTP = 18
const SIGCONT = 19
const SIGCHLD = 20
const SIGTTIN = 21
const SIGTTOU = 22
const SIGIO = 23
const SIGXCPU = 24
const SIGXFSZ = 25
const SIGVTALRM = 26
const SIGPROF = 27
const SIGWINCH = 28
const SIGINFO = 29
const SIGUSR1 = 30
const SIGUSR2 = 31
const X__DARWIN_OPAQUE_ARM_THREAD_STATE64 = 0
const SIGEV_NONE = 0
const SIGEV_SIGNAL = 1
const SIGEV_THREAD = 3
const ILL_NOOP = 0
const ILL_ILLOPC = 1
const ILL_ILLTRP = 2
const ILL_PRVOPC = 3
const ILL_ILLOPN = 4
const ILL_ILLADR = 5
const ILL_PRVREG = 6
const ILL_COPROC = 7
const ILL_BADSTK = 8
const FPE_NOOP = 0
const FPE_FLTDIV = 1
const FPE_FLTOVF = 2
const FPE_FLTUND = 3
const FPE_FLTRES = 4
const FPE_FLTINV = 5
const FPE_FLTSUB = 6
const FPE_INTDIV = 7
const FPE_INTOVF = 8
const SEGV_NOOP = 0
const SEGV_MAPERR = 1
const SEGV_ACCERR = 2
const BUS_NOOP = 0
const BUS_ADRALN = 1
const BUS_ADRERR = 2
const BUS_OBJERR = 3
const TRAP_BRKPT = 1
const TRAP_TRACE = 2
const CLD_NOOP = 0
const CLD_EXITED = 1
const CLD_KILLED = 2
const CLD_DUMPED = 3
const CLD_TRAPPED = 4
const CLD_STOPPED = 5
const CLD_CONTINUED = 6
const POLL_IN = 1
const POLL_OUT = 2
const POLL_MSG = 3
const POLL_ERR = 4
const POLL_PRI = 5
const POLL_HUP = 6
const SA_ONSTACK = 0x0001
const SA_RESTART = 0x0002
const SA_RESETHAND = 0x0004
const SA_NOCLDSTOP = 0x0008
const SA_NODEFER = 0x0010
const SA_NOCLDWAIT = 0x0020
const SA_SIGINFO = 0x0040
const SA_USERTRAMP = 0x0100
const SA_64REGSET = 0x0200
const SIG_BLOCK = 1
const SIG_UNBLOCK = 2
const SIG_SETMASK = 3
const SI_USER = 0x10001
const SI_QUEUE = 0x10002
const SI_TIMER = 0x10003
const SI_ASYNCIO = 0x10004
const SI_MESGQ = 0x10005
const SS_ONSTACK = 0x0001
const SS_DISABLE = 0x0004
const MINSIGSTKSZ = 32768
const SIGSTKSZ = 131072
const PRIO_PROCESS = 0
const PRIO_PGRP = 1
const PRIO_USER = 2
const PRIO_DARWIN_THREAD = 3
const PRIO_DARWIN_PROCESS = 4
const PRIO_MAX = 20
const PRIO_DARWIN_BG = 0x1000
const PRIO_DARWIN_NONUI = 0x1001
const RUSAGE_SELF = 0
const RUSAGE_INFO_V0 = 0
const RUSAGE_INFO_V1 = 1
const RUSAGE_INFO_V2 = 2
const RUSAGE_INFO_V3 = 3
const RUSAGE_INFO_V4 = 4
const RUSAGE_INFO_V5 = 5
const RUSAGE_INFO_V6 = 6
const RU_PROC_RUNS_RESLIDE = 0x00000001
const RLIMIT_CPU = 0
const RLIMIT_FSIZE = 1
const RLIMIT_DATA = 2
const RLIMIT_STACK = 3
const RLIMIT_CORE = 4
const RLIMIT_AS = 5
const RLIMIT_MEMLOCK = 6
const RLIMIT_NPROC = 7
const RLIMIT_NOFILE = 8
const RLIM_NLIMITS = 9
const X_RLIMIT_POSIX_FLAG = 0x1000
const RLIMIT_WAKEUPS_MONITOR = 0x1
const RLIMIT_CPU_USAGE_MONITOR = 0x2
const RLIMIT_THREAD_CPULIMITS = 0x3
const RLIMIT_FOOTPRINT_INTERVAL = 0x4
const WAKEMON_ENABLE = 0x01
const WAKEMON_DISABLE = 0x02
const WAKEMON_GET_PARAMS = 0x04
const WAKEMON_SET_DEFAULTS = 0x08
const WAKEMON_MAKE_FATAL = 0x10
const CPUMON_MAKE_FATAL = 0x1000
const FOOTPRINT_INTERVAL_RESET = 0x1
const IOPOL_TYPE_DISK = 0
const IOPOL_TYPE_VFS_ATIME_UPDATES = 2
const IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES = 3
const IOPOL_TYPE_VFS_STATFS_NO_DATA_VOLUME = 4
const IOPOL_TYPE_VFS_TRIGGER_RESOLVE = 5
const IOPOL_TYPE_VFS_IGNORE_CONTENT_PROTECTION = 6
const IOPOL_TYPE_VFS_IGNORE_PERMISSIONS = 7
const IOPOL_TYPE_VFS_SKIP_MTIME_UPDATE = 8
const IOPOL_TYPE_VFS_ALLOW_LOW_SPACE_WRITES = 9
const IOPOL_TYPE_VFS_DISALLOW_RW_FOR_O_EVTONLY = 10
const IOPOL_SCOPE_PROCESS = 0
const IOPOL_SCOPE_THREAD = 1
const IOPOL_SCOPE_DARWIN_BG = 2
const IOPOL_DEFAULT = 0
const IOPOL_IMPORTANT = 1
const IOPOL_PASSIVE = 2
const IOPOL_THROTTLE = 3
const IOPOL_UTILITY = 4
const IOPOL_STANDARD = 5
const IOPOL_ATIME_UPDATES_DEFAULT = 0
const IOPOL_ATIME_UPDATES_OFF = 1
const IOPOL_MATERIALIZE_DATALESS_FILES_DEFAULT = 0
const IOPOL_MATERIALIZE_DATALESS_FILES_OFF = 1
const IOPOL_MATERIALIZE_DATALESS_FILES_ON = 2
const IOPOL_VFS_STATFS_NO_DATA_VOLUME_DEFAULT = 0
const IOPOL_VFS_STATFS_FORCE_NO_DATA_VOLUME = 1
const IOPOL_VFS_TRIGGER_RESOLVE_DEFAULT = 0
const IOPOL_VFS_TRIGGER_RESOLVE_OFF = 1
const IOPOL_VFS_CONTENT_PROTECTION_DEFAULT = 0
const IOPOL_VFS_CONTENT_PROTECTION_IGNORE = 1
const IOPOL_VFS_IGNORE_PERMISSIONS_OFF = 0
const IOPOL_VFS_IGNORE_PERMISSIONS_ON = 1
const IOPOL_VFS_SKIP_MTIME_UPDATE_OFF = 0
const IOPOL_VFS_SKIP_MTIME_UPDATE_ON = 1
const IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_OFF = 0
const IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_ON = 1
const IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_DEFAULT = 0
const IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_ON = 1
const IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_DEFAULT = 0
const IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_ON = 1
const WNOHANG = 0x00000001
const WUNTRACED = 0x00000002
const WCOREFLAG = 0200
const X_WSTOPPED = 0177
const WEXITED = 0x00000004
const WSTOPPED = 0x00000008
const WCONTINUED = 0x00000010
const WNOWAIT = 0x00000020
const WAIT_MYPGRP = 0
const X_QUAD_HIGHWORD = 1
const X_QUAD_LOWWORD = 0
const X__DARWIN_LITTLE_ENDIAN = 1234
const X__DARWIN_BIG_ENDIAN = 4321
const X__DARWIN_PDP_ENDIAN = 3412
const EXIT_FAILURE = 1
const EXIT_SUCCESS = 0
const RAND_MAX = 0x7fffffff
const X__PRI_8_LENGTH_MODIFIER__ = "hh"
const X__PRI_64_LENGTH_MODIFIER__ = "ll"
const X__SCN_64_LENGTH_MODIFIER__ = "ll"
const X__PRI_MAX_LENGTH_MODIFIER__ = "j"
const X__SCN_MAX_LENGTH_MODIFIER__ = "j"
const PRId16 = "hd"
const PRIi16 = "hi"
const PRIo16 = "ho"
const PRIu16 = "hu"
const PRIx16 = "hx"
const PRIX16 = "hX"
const PRId32 = "d"
const PRIi32 = "i"
const PRIo32 = "o"
const PRIu32 = "u"
const PRIx32 = "x"
const PRIX32 = "X"
const PRIdPTR = "ld"
const PRIiPTR = "li"
const PRIoPTR = "lo"
const PRIuPTR = "lu"
const PRIxPTR = "lx"
const PRIXPTR = "lX"
const SCNd16 = "hd"
const SCNi16 = "hi"
const SCNo16 = "ho"
const SCNu16 = "hu"
const SCNx16 = "hx"
const SCNd32 = "d"
const SCNi32 = "i"
const SCNo32 = "o"
const SCNu32 = "u"
const SCNx32 = "x"
const SCNdPTR = "ld"
const SCNiPTR = "li"
const SCNoPTR = "lo"
const SCNuPTR = "lu"
const SCNxPTR = "lx"
const RENAME_SECLUDE = 0x00000001
const RENAME_SWAP = 0x00000002
const RENAME_EXCL = 0x00000004
const RENAME_RESERVED1 = 0x00000008
const RENAME_NOFOLLOW_ANY = 0x00000010
const SEEK_SET = 0
const SEEK_CUR = 1
const SEEK_END = 2
const SEEK_HOLE = 3
const SEEK_DATA = 4
const X__SLBF = 0x0001
const X__SNBF = 0x0002
const X__SRD = 0x0004
const X__SWR = 0x0008
const X__SRW = 0x0010
const X__SEOF = 0x0020
const X__SERR = 0x0040
const X__SMBF = 0x0080
const X__SAPP = 0x0100
const X__SSTR = 0x0200
const X__SOPT = 0x0400
const X__SNPT = 0x0800
const X__SOFF = 0x1000
const X__SMOD = 0x2000
const X__SALC = 0x4000
const X__SIGN = 0x8000
const X_IOFBF = 0
const X_IOLBF = 1
const X_IONBF = 2
const BUFSIZ = 1024
const FOPEN_MAX = 20
const FILENAME_MAX = 1024
const P_tmpdir = "/var/tmp/"
const L_tmpnam = 1024
const TMP_MAX = 308915776
const L_ctermid = 1024
const X_USE_FORTIFY_LEVEL = 2
const ESP_OK = 0
const ESP_ERR_NO_MEM = 0x101
const ESP_ERR_INVALID_ARG = 0x102
const ESP_ERR_INVALID_STATE = 0x103
const ESP_ERR_INVALID_SIZE = 0x104
const ESP_ERR_NOT_FOUND = 0x105
const ESP_ERR_NOT_SUPPORTED = 0x106
const ESP_ERR_TIMEOUT = 0x107
const ESP_ERR_INVALID_RESPONSE = 0x108
const ESP_ERR_INVALID_CRC = 0x109
const ESP_ERR_INVALID_VERSION = 0x10A
const ESP_ERR_INVALID_MAC = 0x10B
const ESP_ERR_NOT_FINISHED = 0x10C
const ESP_ERR_NOT_ALLOWED = 0x10D
const ESP_ERR_WIFI_BASE = 0x3000
const ESP_ERR_MESH_BASE = 0x4000
const ESP_ERR_FLASH_BASE = 0x6000
const ESP_ERR_HW_CRYPTO_BASE = 0xc000
const ESP_ERR_MEMPROT_BASE = 0xd000
const X__ASSERT_FUNC = "??"
const SOC_ADC_SUPPORTED = 1
const SOC_UART_SUPPORTED = 1
const SOC_PCNT_SUPPORTED = 1
const SOC_PHY_SUPPORTED = 1
const SOC_WIFI_SUPPORTED = 1
const SOC_TWAI_SUPPORTED = 1
const SOC_GDMA_SUPPORTED = 1
const SOC_AHB_GDMA_SUPPORTED = 1
const SOC_GPTIMER_SUPPORTED = 1
const SOC_LCDCAM_SUPPORTED = 1
const SOC_LCDCAM_I80_LCD_SUPPORTED = 1
const SOC_LCDCAM_RGB_LCD_SUPPORTED = 1
const SOC_MCPWM_SUPPORTED = 1
const SOC_DEDICATED_GPIO_SUPPORTED = 1
const SOC_CACHE_SUPPORT_WRAP = 1
const SOC_ULP_SUPPORTED = 1
const SOC_ULP_FSM_SUPPORTED = 1
const SOC_RISCV_COPROC_SUPPORTED = 1
const SOC_BT_SUPPORTED = 1
const SOC_USB_OTG_SUPPORTED = 1
const SOC_USB_SERIAL_JTAG_SUPPORTED = 1
const SOC_CCOMP_TIMER_SUPPORTED = 1
const SOC_ASYNC_MEMCPY_SUPPORTED = 1
const SOC_SUPPORTS_SECURE_DL_MODE = 1
const SOC_EFUSE_KEY_PURPOSE_FIELD = 1
const SOC_EFUSE_SUPPORTED = 1
const SOC_SDMMC_HOST_SUPPORTED = 1
const SOC_RTC_FAST_MEM_SUPPORTED = 1
const SOC_RTC_SLOW_MEM_SUPPORTED = 1
const SOC_RTC_MEM_SUPPORTED = 1
const SOC_PSRAM_DMA_CAPABLE = 1
const SOC_XT_WDT_SUPPORTED = 1
const SOC_I2S_SUPPORTED = 1
const SOC_RMT_SUPPORTED = 1
const SOC_SDM_SUPPORTED = 1
const SOC_GPSPI_SUPPORTED = 1
const SOC_LEDC_SUPPORTED = 1
const SOC_I2C_SUPPORTED = 1
const SOC_SYSTIMER_SUPPORTED = 1
const SOC_SUPPORT_COEXISTENCE = 1
const SOC_TEMP_SENSOR_SUPPORTED = 1
const SOC_AES_SUPPORTED = 1
const SOC_MPI_SUPPORTED = 1
const SOC_SHA_SUPPORTED = 1
const SOC_HMAC_SUPPORTED = 1
const SOC_DIG_SIGN_SUPPORTED = 1
const SOC_FLASH_ENC_SUPPORTED = 1
const SOC_SECURE_BOOT_SUPPORTED = 1
const SOC_MEMPROT_SUPPORTED = 1
const SOC_TOUCH_SENSOR_SUPPORTED = 1
const SOC_BOD_SUPPORTED = 1
const SOC_CLK_TREE_SUPPORTED = 1
const SOC_MPU_SUPPORTED = 1
const SOC_WDT_SUPPORTED = 1
const SOC_SPI_FLASH_SUPPORTED = 1
const SOC_RNG_SUPPORTED = 1
const SOC_LIGHT_SLEEP_SUPPORTED = 1
const SOC_DEEP_SLEEP_SUPPORTED = 1
const SOC_LP_PERIPH_SHARE_INTERRUPT = 1
const SOC_PM_SUPPORTED = 1
const SOC_SIMD_INSTRUCTION_SUPPORTED = 1
const SOC_XTAL_SUPPORT_40M = 1
const SOC_ADC_RTC_CTRL_SUPPORTED = 1
const SOC_ADC_DIG_CTRL_SUPPORTED = 1
const SOC_ADC_ARBITER_SUPPORTED = 1
const SOC_ADC_DIG_IIR_FILTER_SUPPORTED = 1
const SOC_ADC_MONITOR_SUPPORTED = 1
const SOC_ADC_DMA_SUPPORTED = 1
const SOC_ADC_SAMPLE_FREQ_THRES_HIGH = 83333
const SOC_ADC_SAMPLE_FREQ_THRES_LOW = 611
const SOC_ADC_SHARED_POWER = 1
const SOC_BROWNOUT_RESET_SUPPORTED = 1
const SOC_CACHE_WRITEBACK_SUPPORTED = 1
const SOC_CACHE_FREEZE_SUPPORTED = 1
const SOC_CPU_CORES_NUM = 2
const SOC_CPU_INTR_NUM = 32
const SOC_CPU_HAS_FPU = 1
const SOC_HP_CPU_HAS_MULTIPLE_CORES = 1
const SOC_CPU_BREAKPOINTS_NUM = 2
const SOC_CPU_WATCHPOINTS_NUM = 2
const SOC_CPU_WATCHPOINT_MAX_REGION_SIZE = 64
const SOC_SIMD_PREFERRED_DATA_ALIGNMENT = 16
const SOC_GDMA_PAIRS_PER_GROUP = 5
const SOC_GDMA_PAIRS_PER_GROUP_MAX = 5
const SOC_AHB_GDMA_SUPPORT_PSRAM = 1
const SOC_GPIO_PIN_COUNT = 49
const SOC_GPIO_SUPPORT_PIN_GLITCH_FILTER = 1
const SOC_GPIO_FILTER_CLK_SUPPORT_APB = 1
const SOC_GPIO_IN_RANGE_MAX = 48
const SOC_GPIO_OUT_RANGE_MAX = 48
const SOC_MPU_CONFIGURABLE_REGIONS_SUPPORTED = 0
const SOC_MPU_REGIONS_MAX_NUM = 8
const SOC_MPU_REGION_RO_SUPPORTED = 0
const SOC_MPU_REGION_WO_SUPPORTED = 0
const SOC_RMT_TX_CANDIDATES_PER_GROUP = 4
const SOC_RMT_RX_CANDIDATES_PER_GROUP = 4
const SOC_RMT_CHANNELS_PER_GROUP = 8
const SOC_RMT_MEM_WORDS_PER_CHANNEL = 48
const SOC_RMT_SUPPORT_RX_PINGPONG = 1
const SOC_RMT_SUPPORT_RX_DEMODULATION = 1
const SOC_RMT_SUPPORT_TX_ASYNC_STOP = 1
const SOC_RMT_SUPPORT_TX_LOOP_COUNT = 1
const SOC_RMT_SUPPORT_TX_LOOP_AUTO_STOP = 1
const SOC_RMT_SUPPORT_TX_SYNCHRO = 1
const SOC_RMT_SUPPORT_TX_CARRIER_DATA_ONLY = 1
const SOC_RMT_SUPPORT_XTAL = 1
const SOC_RMT_SUPPORT_RC_FAST = 1
const SOC_RMT_SUPPORT_APB = 1
const SOC_RMT_SUPPORT_DMA = 1
const SOC_RTCIO_PIN_COUNT = 22
const SOC_RTCIO_INPUT_OUTPUT_SUPPORTED = 1
const SOC_RTCIO_HOLD_SUPPORTED = 1
const SOC_RTCIO_WAKE_SUPPORTED = 1
const SOC_LP_IO_CLOCK_IS_INDEPENDENT = 1
const SOC_SDM_GROUPS = 1
const SOC_SDM_CHANNELS_PER_GROUP = 8
const SOC_SDM_CLK_SUPPORT_APB = 1
const SOC_SPI_PERIPH_NUM = 3
const SOC_SPI_MAX_CS_NUM = 6
const SOC_SPI_MAXIMUM_BUFFER_SIZE = 64
const SOC_SPI_SUPPORT_DDRCLK = 1
const SOC_SPI_SLAVE_SUPPORT_SEG_TRANS = 1
const SOC_SPI_SUPPORT_CD_SIG = 1
const SOC_SPI_SUPPORT_CONTINUOUS_TRANS = 1
const SOC_SPI_SUPPORT_SLAVE_HD_VER2 = 1
const SOC_SPI_SUPPORT_CLK_APB = 1
const SOC_SPI_SUPPORT_CLK_XTAL = 1
const SOC_SPI_PERIPH_SUPPORT_CONTROL_DUMMY_OUT = 1
const SOC_MEMSPI_IS_INDEPENDENT = 1
const SOC_SPI_MAX_PRE_DIVIDER = 16
const SOC_SPI_SUPPORT_OCT = 1
const SOC_SPI_SCT_SUPPORTED = 1
const SOC_SPI_SCT_REG_NUM = 14
const SOC_SPI_SCT_CONF_BITLEN_MAX = 0x3FFFA
const SOC_MEMSPI_SRC_FREQ_120M = 1
const SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED = 1
const SOC_SPIRAM_SUPPORTED = 1
const SOC_SPIRAM_XIP_SUPPORTED = 1
const SOC_SYSTIMER_COUNTER_NUM = 2
const SOC_SYSTIMER_ALARM_NUM = 3
const SOC_SYSTIMER_BIT_WIDTH_LO = 32
const SOC_SYSTIMER_BIT_WIDTH_HI = 20
const SOC_SYSTIMER_FIXED_DIVIDER = 1
const SOC_SYSTIMER_INT_LEVEL = 1
const SOC_SYSTIMER_ALARM_MISS_COMPENSATE = 1
const SOC_LP_TIMER_BIT_WIDTH_LO = 32
const SOC_LP_TIMER_BIT_WIDTH_HI = 16
const SOC_TWAI_CLK_SUPPORT_APB = 1
const SOC_TWAI_BRP_MIN = 2
const SOC_TWAI_BRP_MAX = 16384
const SOC_TWAI_SUPPORTS_RX_STATUS = 1
const SOC_EFUSE_DIS_DOWNLOAD_ICACHE = 1
const SOC_EFUSE_DIS_DOWNLOAD_DCACHE = 1
const SOC_EFUSE_HARD_DIS_JTAG = 1
const SOC_EFUSE_DIS_USB_JTAG = 1
const SOC_EFUSE_SOFT_DIS_JTAG = 1
const SOC_EFUSE_DIS_DIRECT_BOOT = 1
const SOC_EFUSE_DIS_ICACHE = 1
const SOC_EFUSE_BLOCK9_KEY_PURPOSE_QUIRK = 1
const SOC_SECURE_BOOT_V2_RSA = 1
const SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 3
const SOC_EFUSE_REVOKE_BOOT_KEY_DIGESTS = 1
const SOC_SUPPORT_SECURE_BOOT_REVOKE_KEY = 1
const SOC_FLASH_ENCRYPTION_XTS_AES = 1
const SOC_FLASH_ENCRYPTION_XTS_AES_OPTIONS = 1
const SOC_FLASH_ENCRYPTION_XTS_AES_128 = 1
const SOC_FLASH_ENCRYPTION_XTS_AES_256 = 1
const SOC_MEMPROT_CPU_PREFETCH_PAD_SIZE = 16
const SOC_MEMPROT_MEM_ALIGN_SIZE = 256
const SOC_SDMMC_USE_GPIO_MATRIX = 1
const SOC_SDMMC_NUM_SLOTS = 2
const SOC_SDMMC_SUPPORT_XTAL_CLOCK = 1
const SOC_SDMMC_DELAY_PHASE_NUM = 4
const BIT31 = 0x80000000
const BIT30 = 0x40000000
const BIT29 = 0x20000000
const BIT28 = 0x10000000
const BIT27 = 0x08000000
const BIT26 = 0x04000000
const BIT25 = 0x02000000
const BIT24 = 0x01000000
const BIT23 = 0x00800000
const BIT22 = 0x00400000
const BIT21 = 0x00200000
const BIT20 = 0x00100000
const BIT19 = 0x00080000
const BIT18 = 0x00040000
const BIT17 = 0x00020000
const BIT16 = 0x00010000
const BIT15 = 0x00008000
const BIT14 = 0x00004000
const BIT13 = 0x00002000
const BIT12 = 0x00001000
const BIT11 = 0x00000800
const BIT10 = 0x00000400
const BIT9 = 0x00000200
const BIT8 = 0x00000100
const BIT7 = 0x00000080
const BIT6 = 0x00000040
const BIT5 = 0x00000020
const BIT4 = 0x00000010
const BIT3 = 0x00000008
const BIT2 = 0x00000004
const BIT1 = 0x00000002
const BIT0 = 0x00000001
const DR_REG_UART_BASE = 0x60000000
const DR_REG_SPI1_BASE = 0x60002000
const DR_REG_SPI0_BASE = 0x60003000
const DR_REG_GPIO_BASE = 0x60004000
const DR_REG_GPIO_SD_BASE = 0x60004f00
const DR_REG_FE2_BASE = 0x60005000
const DR_REG_FE_BASE = 0x60006000
const DR_REG_EFUSE_BASE = 0x60007000
const DR_REG_RTCCNTL_BASE = 0x60008000
const DR_REG_RTCIO_BASE = 0x60008400
const DR_REG_SENS_BASE = 0x60008800
const DR_REG_RTC_I2C_BASE = 0x60008C00
const DR_REG_IO_MUX_BASE = 0x60009000
const DR_REG_HINF_BASE = 0x6000B000
const DR_REG_UHCI1_BASE = 0x6000C000
const DR_REG_I2S_BASE = 0x6000F000
const DR_REG_UART1_BASE = 0x60010000
const DR_REG_BT_BASE = 0x60011000
const DR_REG_I2C_EXT_BASE = 0x60013000
const DR_REG_UHCI0_BASE = 0x60014000
const DR_REG_SLCHOST_BASE = 0x60015000
const DR_REG_RMT_BASE = 0x60016000
const DR_REG_PCNT_BASE = 0x60017000
const DR_REG_SLC_BASE = 0x60018000
const DR_REG_LEDC_BASE = 0x60019000
const DR_REG_NRX_BASE = 0x6001CC00
const DR_REG_BB_BASE = 0x6001D000
const DR_REG_PWM0_BASE = 0x6001E000
const DR_REG_TIMERGROUP0_BASE = 0x6001F000
const DR_REG_TIMERGROUP1_BASE = 0x60020000
const DR_REG_RTC_SLOWMEM_BASE = 0x60021000
const DR_REG_SYSTIMER_BASE = 0x60023000
const DR_REG_SPI2_BASE = 0x60024000
const DR_REG_SPI3_BASE = 0x60025000
const DR_REG_SYSCON_BASE = 0x60026000
const DR_REG_APB_CTRL_BASE = 0x60026000
const DR_REG_I2C1_EXT_BASE = 0x60027000
const DR_REG_SDMMC_BASE = 0x60028000
const DR_REG_PERI_BACKUP_BASE = 0x6002A000
const DR_REG_TWAI_BASE = 0x6002B000
const DR_REG_PWM1_BASE = 0x6002C000
const DR_REG_I2S1_BASE = 0x6002D000
const DR_REG_UART2_BASE = 0x6002E000
const DR_REG_USB_SERIAL_JTAG_BASE = 0x60038000
const DR_REG_USB_WRAP_BASE = 0x60039000
const DR_REG_AES_BASE = 0x6003A000
const DR_REG_SHA_BASE = 0x6003B000
const DR_REG_RSA_BASE = 0x6003C000
const DR_REG_HMAC_BASE = 0x6003E000
const DR_REG_DIGITAL_SIGNATURE_BASE = 0x6003D000
const DR_REG_GDMA_BASE = 0x6003F000
const DR_REG_APB_SARADC_BASE = 0x60040000
const DR_REG_LCD_CAM_BASE = 0x60041000
const DR_REG_SYSTEM_BASE = 0x600C0000
const DR_REG_SENSITIVE_BASE = 0x600C1000
const DR_REG_INTERRUPT_BASE = 0x600C2000
const DR_REG_EXTMEM_BASE = 0x600C4000
const DR_REG_ASSIST_DEBUG_BASE = 0x600CE000
const DR_REG_WCL_BASE = 0x600D0000
const DR_REG_MMU_TABLE = 0x600C5000
const DR_REG_ITAG_TABLE = 0x600C6000
const DR_REG_DTAG_TABLE = 0x600C8000
const DR_REG_EXT_MEM_ENC = 0x600CC000
const SPI_CLK_DIV = 4
const TICKS_PER_US_ROM = 40
const SOC_DROM_LOW = 0x3C000000
const SOC_DROM_HIGH = 0x3E000000
const SOC_IROM_LOW = 0x42000000
const SOC_IROM_HIGH = 0x44000000
const SOC_IRAM_LOW = 0x40370000
const SOC_IRAM_HIGH = 0x403E0000
const SOC_DRAM_LOW = 0x3FC88000
const SOC_DRAM_HIGH = 0x3FD00000
const SOC_RTC_IRAM_LOW = 0x600FE000
const SOC_RTC_IRAM_HIGH = 0x60100000
const SOC_RTC_DRAM_LOW = 0x600FE000
const SOC_RTC_DRAM_HIGH = 0x60100000
const SOC_RTC_DATA_LOW = 0x50000000
const SOC_RTC_DATA_HIGH = 0x50002000
const SOC_EXTRAM_DATA_LOW = 0x3C000000
const SOC_EXTRAM_DATA_HIGH = 0x3E000000
const SOC_IROM_MASK_LOW = 0x40000000
const SOC_IROM_MASK_HIGH = 0x40060000
const SOC_DIRAM_IRAM_LOW = 0x40378000
const SOC_DIRAM_IRAM_HIGH = 0x403E0000
const SOC_DIRAM_DRAM_LOW = 0x3FC88000
const SOC_DIRAM_DRAM_HIGH = 0x3FCF0000
const SOC_DMA_LOW = 0x3FC88000
const SOC_DMA_HIGH = 0x3FD00000
const SOC_BYTE_ACCESSIBLE_LOW = 0x3FC88000
const SOC_BYTE_ACCESSIBLE_HIGH = 0x3FD00000
const SOC_MEM_INTERNAL_LOW = 0x3FC88000
const SOC_MEM_INTERNAL_HIGH = 0x403E0000
const SOC_ROM_STACK_START = 0x3fceb710
const SOC_ROM_STACK_SIZE = 0x2000
const ETS_WMAC_INUM = 0
const ETS_WBB_INUM = 4
const ETS_T1_WDT_INUM = 24
const ETS_MEMACCESS_ERR_INUM = 25
const ETS_IPC_ISR_INUM = 28
const ETS_SLC_INUM = 1
const ETS_UART0_INUM = 5
const ETS_UART1_INUM = 5
const ETS_SPI2_INUM = 1
const ETS_FRC_TIMER2_INUM = 10
const ETS_GPIO_INUM = 4
const ETS_INVALID_INUM = 6
const SOC_IRAM0_ADDRESS_LOW = 0x40370000
const SOC_IRAM0_ADDRESS_HIGH = 0x403E0000
const SOC_IRAM0_CACHE_ADDRESS_LOW = 0x42000000
const SOC_IRAM0_CACHE_ADDRESS_HIGH = 0x44000000
const SOC_DRAM0_ADDRESS_LOW = 0x3FC88000
const SOC_DRAM0_ADDRESS_HIGH = 0x3FD00000
const SOC_DRAM0_CACHE_ADDRESS_LOW = 0x3C000000
const SOC_DRAM0_CACHE_ADDRESS_HIGH = 0x3E000000
const SOC_MMU_VALID = 0
const SOC_MMU_ACCESS_FLASH = 0
const SOC_MMU_VALID_VAL_MASK = 0x3fff
const SOC_MMU_MAX_PADDR_PAGE_NUM = 16384
const SOC_MMU_VADDR_MASK = 0x1FFFFFF
const SOC_MMU_ENTRY_NUM = 512
const SOC_MMU_DBUS_VADDR_BASE = 0x3C000000
const SOC_MMU_IBUS_VADDR_BASE = 0x42000000
const SOC_MMU_LINEAR_ADDR_MASK = 0x1FFFFFF
const CACHE_IBUS = 0
const CACHE_IBUS_MMU_START = 0
const CACHE_IBUS_MMU_END = 0x800
const CACHE_DBUS = 1
const CACHE_DBUS_MMU_START = 0
const CACHE_DBUS_MMU_END = 0x800
const CACHE_IROM_MMU_START = 0
const CACHE_DROM_MMU_MAX_END = 0x400
const ICACHE_MMU_SIZE = 0x800
const DCACHE_MMU_SIZE = 0x800
const EFUSE_WRITE_OP_CODE = 0x5a5a
const EFUSE_READ_OP_CODE = 0x5aa5
const EFUSE_PKG_VERSION_ESP32S3 = 0
const EFUSE_PKG_VERSION_ESP32S3PICO = 1
const EFUSE_SPI_PAD_CONF_1 = 0xFFFFFFFF
const EFUSE_SPI_PAD_CONF_1_V = 0xFFFFFFFF
const EFUSE_SPI_PAD_CONF_1_S = 0
const EFUSE_SPI_PAD_CONF_2 = 0x0003FFFF
const EFUSE_SPI_PAD_CONF_2_V = 0x3FFFF
const EFUSE_SPI_PAD_CONF_2_S = 0
const EFUSE_PGM_DATA_0_S = 0
const EFUSE_PGM_DATA_1_S = 0
const EFUSE_PGM_DATA_2_S = 0
const EFUSE_PGM_DATA_3_S = 0
const EFUSE_PGM_DATA_4_S = 0
const EFUSE_PGM_DATA_5_S = 0
const EFUSE_PGM_DATA_6_S = 0
const EFUSE_PGM_DATA_7_S = 0
const EFUSE_PGM_RS_DATA_0_S = 0
const EFUSE_PGM_RS_DATA_1_S = 0
const EFUSE_PGM_RS_DATA_2_S = 0
const EFUSE_WR_DIS_S = 0
const EFUSE_RD_DIS_S = 0
const EFUSE_DIS_RTC_RAM_BOOT_S = 7
const EFUSE_DIS_ICACHE_S = 8
const EFUSE_DIS_DCACHE_S = 9
const EFUSE_DIS_DOWNLOAD_ICACHE_S = 10
const EFUSE_DIS_DOWNLOAD_DCACHE_S = 11
const EFUSE_DIS_FORCE_DOWNLOAD_S = 12
const EFUSE_DIS_USB_OTG_S = 13
const EFUSE_DIS_TWAI_S = 14
const EFUSE_DIS_APP_CPU_S = 15
const EFUSE_SOFT_DIS_JTAG_S = 16
const EFUSE_DIS_PAD_JTAG_S = 19
const EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT_S = 20
const EFUSE_USB_DREFH_S = 21
const EFUSE_USB_DREFL_S = 23
const EFUSE_USB_EXCHG_PINS_S = 25
const EFUSE_USB_EXT_PHY_ENABLE_S = 26
const EFUSE_BTLC_GPIO_ENABLE_S = 27
const EFUSE_VDD_SPI_MODECURLIM_S = 29
const EFUSE_VDD_SPI_DREFH_S = 30
const EFUSE_VDD_SPI_DREFM_S = 0
const EFUSE_VDD_SPI_DREFL_S = 2
const EFUSE_VDD_SPI_XPD_S = 4
const EFUSE_VDD_SPI_TIEH_S = 5
const EFUSE_VDD_SPI_FORCE_S = 6
const EFUSE_VDD_SPI_EN_INIT_S = 7
const EFUSE_VDD_SPI_ENCURLIM_S = 8
const EFUSE_VDD_SPI_DCURLIM_S = 9
const EFUSE_VDD_SPI_INIT_S = 12
const EFUSE_VDD_SPI_DCAP_S = 14
const EFUSE_WDT_DELAY_SEL_S = 16
const EFUSE_SPI_BOOT_CRYPT_CNT_S = 18
const EFUSE_SECURE_BOOT_KEY_REVOKE0_S = 21
const EFUSE_SECURE_BOOT_KEY_REVOKE1_S = 22
const EFUSE_SECURE_BOOT_KEY_REVOKE2_S = 23
const EFUSE_KEY_PURPOSE_0_S = 24
const EFUSE_KEY_PURPOSE_1_S = 28
const EFUSE_KEY_PURPOSE_2_S = 0
const EFUSE_KEY_PURPOSE_3_S = 4
const EFUSE_KEY_PURPOSE_4_S = 8
const EFUSE_KEY_PURPOSE_5_S = 12
const EFUSE_RPT4_RESERVED0_S = 16
const EFUSE_SECURE_BOOT_EN_S = 20
const EFUSE_SECURE_BOOT_AGGRESSIVE_REVOKE_S = 21
const EFUSE_DIS_USB_JTAG_S = 22
const EFUSE_DIS_USB_SERIAL_JTAG_S = 23
const EFUSE_STRAP_JTAG_SEL_S = 24
const EFUSE_USB_PHY_SEL_S = 25
const EFUSE_POWER_GLITCH_DSENSE_S = 26
const EFUSE_FLASH_TPUW_S = 28
const EFUSE_DIS_DOWNLOAD_MODE_S = 0
const EFUSE_DIS_DIRECT_BOOT_S = 1
const EFUSE_DIS_USB_SERIAL_JTAG_ROM_PRINT_S = 2
const EFUSE_FLASH_ECC_MODE_S = 3
const EFUSE_DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE_S = 4
const EFUSE_ENABLE_SECURITY_DOWNLOAD_S = 5
const EFUSE_UART_PRINT_CONTROL_S = 6
const EFUSE_PIN_POWER_SELECTION_S = 8
const EFUSE_FLASH_TYPE_S = 9
const EFUSE_FLASH_PAGE_SIZE_S = 10
const EFUSE_FLASH_ECC_EN_S = 12
const EFUSE_FORCE_SEND_RESUME_S = 13
const EFUSE_SECURE_VERSION_S = 14
const EFUSE_POWERGLITCH_EN_S = 30
const EFUSE_DIS_USB_OTG_DOWNLOAD_MODE_S = 31
const EFUSE_DISABLE_WAFER_VERSION_MAJOR_S = 0
const EFUSE_DISABLE_BLK_VERSION_MAJOR_S = 1
const EFUSE_RESERVED_0_162_S = 2
const EFUSE_MAC_0_S = 0
const EFUSE_MAC_1_S = 0
const EFUSE_SPI_PAD_CONFIG_CLK_S = 16
const EFUSE_SPI_PAD_CONFIG_Q_S = 22
const EFUSE_SPI_PAD_CONFIG_D_S = 28
const EFUSE_SPI_PAD_CONFIG_D_1_S = 0
const EFUSE_SPI_PAD_CONFIG_CS_S = 2
const EFUSE_SPI_PAD_CONFIG_HD_S = 8
const EFUSE_SPI_PAD_CONFIG_WP_S = 14
const EFUSE_SPI_PAD_CONFIG_DQS_S = 20
const EFUSE_SPI_PAD_CONFIG_D4_S = 26
const EFUSE_SPI_PAD_CONFIG_D5_S = 0
const EFUSE_SPI_PAD_CONFIG_D6_S = 6
const EFUSE_SPI_PAD_CONFIG_D7_S = 12
const EFUSE_WAFER_VERSION_MINOR_LO_S = 18
const EFUSE_PKG_VERSION_S = 21
const EFUSE_BLK_VERSION_MINOR_S = 24
const EFUSE_FLASH_CAP_S = 27
const EFUSE_FLASH_TEMP_S = 30
const EFUSE_FLASH_VENDOR_S = 0
const EFUSE_PSRAM_CAP_S = 3
const EFUSE_PSRAM_TEMP_S = 5
const EFUSE_PSRAM_VENDOR_S = 7
const EFUSE_RESERVED_1_137_S = 9
const EFUSE_K_RTC_LDO_S = 13
const EFUSE_K_DIG_LDO_S = 20
const EFUSE_V_RTC_DBIAS20_S = 27
const EFUSE_V_RTC_DBIAS20_1_S = 0
const EFUSE_V_DIG_DBIAS20_S = 3
const EFUSE_DIG_DBIAS_HVT_S = 11
const EFUSE_RESERVED_1_176_S = 16
const EFUSE_PSRAM_CAP_3_S = 19
const EFUSE_RESERVED_1_180_S = 20
const EFUSE_WAFER_VERSION_MINOR_HI_S = 23
const EFUSE_WAFER_VERSION_MAJOR_S = 24
const EFUSE_ADC2_CAL_VOL_ATTEN3_S = 26
const EFUSE_OPTIONAL_UNIQUE_ID_S = 0
const EFUSE_OPTIONAL_UNIQUE_ID_1_S = 0
const EFUSE_OPTIONAL_UNIQUE_ID_2_S = 0
const EFUSE_OPTIONAL_UNIQUE_ID_3_S = 0
const EFUSE_BLK_VERSION_MAJOR_S = 0
const EFUSE_RESERVED_2_130_S = 2
const EFUSE_TEMP_CALIB_S = 4
const EFUSE_OCODE_S = 13
const EFUSE_ADC1_INIT_CODE_ATTEN0_S = 21
const EFUSE_ADC1_INIT_CODE_ATTEN1_S = 29
const EFUSE_ADC1_INIT_CODE_ATTEN1_1_S = 0
const EFUSE_ADC1_INIT_CODE_ATTEN2_S = 3
const EFUSE_ADC1_INIT_CODE_ATTEN3_S = 9
const EFUSE_ADC2_INIT_CODE_ATTEN0_S = 15
const EFUSE_ADC2_INIT_CODE_ATTEN1_S = 23
const EFUSE_ADC2_INIT_CODE_ATTEN2_S = 29
const EFUSE_ADC2_INIT_CODE_ATTEN2_1_S = 0
const EFUSE_ADC2_INIT_CODE_ATTEN3_S = 3
const EFUSE_ADC1_CAL_VOL_ATTEN0_S = 9
const EFUSE_ADC1_CAL_VOL_ATTEN1_S = 17
const EFUSE_ADC1_CAL_VOL_ATTEN2_S = 25
const EFUSE_ADC1_CAL_VOL_ATTEN2_1_S = 0
const EFUSE_ADC1_CAL_VOL_ATTEN3_S = 1
const EFUSE_ADC2_CAL_VOL_ATTEN0_S = 9
const EFUSE_ADC2_CAL_VOL_ATTEN1_S = 17
const EFUSE_ADC2_CAL_VOL_ATTEN2_S = 24
const EFUSE_RESERVED_2_255_S = 31
const EFUSE_USR_DATA0_S = 0
const EFUSE_USR_DATA1_S = 0
const EFUSE_USR_DATA2_S = 0
const EFUSE_USR_DATA3_S = 0
const EFUSE_USR_DATA4_S = 0
const EFUSE_USR_DATA5_S = 0
const EFUSE_RESERVED_3_192_S = 0
const EFUSE_CUSTOM_MAC_S = 8
const EFUSE_CUSTOM_MAC_1_S = 0
const EFUSE_RESERVED_3_248_S = 24
const EFUSE_KEY0_DATA0_S = 0
const EFUSE_KEY0_DATA1_S = 0
const EFUSE_KEY0_DATA2_S = 0
const EFUSE_KEY0_DATA3_S = 0
const EFUSE_KEY0_DATA4_S = 0
const EFUSE_KEY0_DATA5_S = 0
const EFUSE_KEY0_DATA6_S = 0
const EFUSE_KEY0_DATA7_S = 0
const EFUSE_KEY1_DATA0_S = 0
const EFUSE_KEY1_DATA1_S = 0
const EFUSE_KEY1_DATA2_S = 0
const EFUSE_KEY1_DATA3_S = 0
const EFUSE_KEY1_DATA4_S = 0
const EFUSE_KEY1_DATA5_S = 0
const EFUSE_KEY1_DATA6_S = 0
const EFUSE_KEY1_DATA7_S = 0
const EFUSE_KEY2_DATA0_S = 0
const EFUSE_KEY2_DATA1_S = 0
const EFUSE_KEY2_DATA2_S = 0
const EFUSE_KEY2_DATA3_S = 0
const EFUSE_KEY2_DATA4_S = 0
const EFUSE_KEY2_DATA5_S = 0
const EFUSE_KEY2_DATA6_S = 0
const EFUSE_KEY2_DATA7_S = 0
const EFUSE_KEY3_DATA0_S = 0
const EFUSE_KEY3_DATA1_S = 0
const EFUSE_KEY3_DATA2_S = 0
const EFUSE_KEY3_DATA3_S = 0
const EFUSE_KEY3_DATA4_S = 0
const EFUSE_KEY3_DATA5_S = 0
const EFUSE_KEY3_DATA6_S = 0
const EFUSE_KEY3_DATA7_S = 0
const EFUSE_KEY4_DATA0_S = 0
const EFUSE_KEY4_DATA1_S = 0
const EFUSE_KEY4_DATA2_S = 0
const EFUSE_KEY4_DATA3_S = 0
const EFUSE_KEY4_DATA4_S = 0
const EFUSE_KEY4_DATA5_S = 0
const EFUSE_KEY4_DATA6_S = 0
const EFUSE_KEY4_DATA7_S = 0
const EFUSE_KEY5_DATA0_S = 0
const EFUSE_KEY5_DATA1_S = 0
const EFUSE_KEY5_DATA2_S = 0
const EFUSE_KEY5_DATA3_S = 0
const EFUSE_KEY5_DATA4_S = 0
const EFUSE_KEY5_DATA5_S = 0
const EFUSE_KEY5_DATA6_S = 0
const EFUSE_KEY5_DATA7_S = 0
const EFUSE_SYS_DATA_PART2_0_S = 0
const EFUSE_SYS_DATA_PART2_1_S = 0
const EFUSE_SYS_DATA_PART2_2_S = 0
const EFUSE_SYS_DATA_PART2_3_S = 0
const EFUSE_SYS_DATA_PART2_4_S = 0
const EFUSE_SYS_DATA_PART2_5_S = 0
const EFUSE_SYS_DATA_PART2_6_S = 0
const EFUSE_SYS_DATA_PART2_7_S = 0
const EFUSE_RD_DIS_ERR_S = 0
const EFUSE_DIS_RTC_RAM_BOOT_ERR_S = 7
const EFUSE_DIS_ICACHE_ERR_S = 8
const EFUSE_DIS_DCACHE_ERR_S = 9
const EFUSE_DIS_DOWNLOAD_ICACHE_ERR_S = 10
const EFUSE_DIS_DOWNLOAD_DCACHE_ERR_S = 11
const EFUSE_DIS_FORCE_DOWNLOAD_ERR_S = 12
const EFUSE_DIS_USB_ERR_S = 13
const EFUSE_DIS_CAN_ERR_S = 14
const EFUSE_DIS_APP_CPU_ERR_S = 15
const EFUSE_SOFT_DIS_JTAG_ERR_S = 16
const EFUSE_DIS_PAD_JTAG_ERR_S = 19
const EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR_S = 20
const EFUSE_USB_DREFH_ERR_S = 21
const EFUSE_USB_DREFL_ERR_S = 23
const EFUSE_USB_EXCHG_PINS_ERR_S = 25
const EFUSE_EXT_PHY_ENABLE_ERR_S = 26
const EFUSE_BTLC_GPIO_ENABLE_ERR_S = 27
const EFUSE_VDD_SPI_MODECURLIM_ERR_S = 29
const EFUSE_VDD_SPI_DREFH_ERR_S = 30
const EFUSE_VDD_SPI_DREFM_ERR_S = 0
const EFUSE_VDD_SPI_DREFL_ERR_S = 2
const EFUSE_VDD_SPI_XPD_ERR_S = 4
const EFUSE_VDD_SPI_TIEH_ERR_S = 5
const EFUSE_VDD_SPI_FORCE_ERR_S = 6
const EFUSE_VDD_SPI_EN_INIT_ERR_S = 7
const EFUSE_VDD_SPI_ENCURLIM_ERR_S = 8
const EFUSE_VDD_SPI_DCURLIM_ERR_S = 9
const EFUSE_VDD_SPI_INIT_ERR_S = 12
const EFUSE_VDD_SPI_DCAP_ERR_S = 14
const EFUSE_WDT_DELAY_SEL_ERR_S = 16
const EFUSE_SPI_BOOT_CRYPT_CNT_ERR_S = 18
const EFUSE_SECURE_BOOT_KEY_REVOKE0_ERR_S = 21
const EFUSE_SECURE_BOOT_KEY_REVOKE1_ERR_S = 22
const EFUSE_SECURE_BOOT_KEY_REVOKE2_ERR_S = 23
const EFUSE_KEY_PURPOSE_0_ERR_S = 24
const EFUSE_KEY_PURPOSE_1_ERR_S = 28
const EFUSE_KEY_PURPOSE_2_ERR_S = 0
const EFUSE_KEY_PURPOSE_3_ERR_S = 4
const EFUSE_KEY_PURPOSE_4_ERR_S = 8
const EFUSE_KEY_PURPOSE_5_ERR_S = 12
const EFUSE_RPT4_RESERVED0_ERR_S = 16
const EFUSE_SECURE_BOOT_EN_ERR_S = 20
const EFUSE_SECURE_BOOT_AGGRESSIVE_REVOKE_ERR_S = 21
const EFUSE_DIS_USB_JTAG_ERR_S = 22
const EFUSE_DIS_USB_DEVICE_ERR_S = 23
const EFUSE_STRAP_JTAG_SEL_ERR_S = 24
const EFUSE_USB_PHY_SEL_ERR_S = 25
const EFUSE_POWER_GLITCH_DSENSE_ERR_S = 26
const EFUSE_FLASH_TPUW_ERR_S = 28
const EFUSE_DIS_DOWNLOAD_MODE_ERR_S = 0
const EFUSE_DIS_LEGACY_SPI_BOOT_ERR_S = 1
const EFUSE_UART_PRINT_CHANNEL_ERR_S = 2
const EFUSE_FLASH_ECC_MODE_ERR_S = 3
const EFUSE_DIS_USB_DOWNLOAD_MODE_ERR_S = 4
const EFUSE_ENABLE_SECURITY_DOWNLOAD_ERR_S = 5
const EFUSE_UART_PRINT_CONTROL_ERR_S = 6
const EFUSE_PIN_POWER_SELECTION_ERR_S = 8
const EFUSE_FLASH_TYPE_ERR_S = 9
const EFUSE_FLASH_PAGE_SIZE_ERR_S = 10
const EFUSE_FLASH_ECC_EN_ERR_S = 12
const EFUSE_FORCE_SEND_RESUME_ERR_S = 13
const EFUSE_SECURE_VERSION_ERR_S = 14
const EFUSE_POWERGLITCH_EN_ERR_S = 30
const EFUSE_RPT4_RESERVED1_ERR_S = 31
const EFUSE_RPT4_RESERVED2_ERR_S = 0
const EFUSE_MAC_SPI_8M_ERR_NUM_S = 0
const EFUSE_MAC_SPI_8M_FAIL_S = 3
const EFUSE_SYS_PART1_NUM_S = 4
const EFUSE_SYS_PART1_FAIL_S = 7
const EFUSE_USR_DATA_ERR_NUM_S = 8
const EFUSE_USR_DATA_FAIL_S = 11
const EFUSE_KEY0_ERR_NUM_S = 12
const EFUSE_KEY0_FAIL_S = 15
const EFUSE_KEY1_ERR_NUM_S = 16
const EFUSE_KEY1_FAIL_S = 19
const EFUSE_KEY2_ERR_NUM_S = 20
const EFUSE_KEY2_FAIL_S = 23
const EFUSE_KEY3_ERR_NUM_S = 24
const EFUSE_KEY3_FAIL_S = 27
const EFUSE_KEY4_ERR_NUM_S = 28
const EFUSE_KEY4_FAIL_S = 31
const EFUSE_KEY5_ERR_NUM_S = 0
const EFUSE_KEY5_FAIL_S = 3
const EFUSE_SYS_PART2_ERR_NUM_S = 4
const EFUSE_SYS_PART2_FAIL_S = 7
const EFUSE_EFUSE_MEM_FORCE_PD_S = 0
const EFUSE_MEM_CLK_FORCE_ON_S = 1
const EFUSE_EFUSE_MEM_FORCE_PU_S = 2
const EFUSE_CLK_EN_S = 16
const EFUSE_OP_CODE_S = 0
const EFUSE_STATE_S = 0
const EFUSE_OTP_LOAD_SW_S = 4
const EFUSE_OTP_VDDQ_C_SYNC2_S = 5
const EFUSE_OTP_STROBE_SW_S = 6
const EFUSE_OTP_CSB_SW_S = 7
const EFUSE_OTP_PGENB_SW_S = 8
const EFUSE_OTP_VDDQ_IS_SW_S = 9
const EFUSE_REPEAT_ERR_CNT_S = 10
const EFUSE_READ_CMD_S = 0
const EFUSE_PGM_CMD_S = 1
const EFUSE_BLK_NUM_S = 2
const EFUSE_READ_DONE_INT_RAW_S = 0
const EFUSE_PGM_DONE_INT_RAW_S = 1
const EFUSE_READ_DONE_INT_ST_S = 0
const EFUSE_PGM_DONE_INT_ST_S = 1
const EFUSE_READ_DONE_INT_ENA_S = 0
const EFUSE_PGM_DONE_INT_ENA_S = 1
const EFUSE_READ_DONE_INT_CLR_S = 0
const EFUSE_PGM_DONE_INT_CLR_S = 1
const EFUSE_DAC_CLK_DIV_S = 0
const EFUSE_DAC_CLK_PAD_SEL_S = 8
const EFUSE_DAC_NUM_S = 9
const EFUSE_OE_CLR_S = 17
const EFUSE_READ_INIT_NUM_S = 24
const EFUSE_PWR_ON_NUM_S = 8
const EFUSE_PWR_OFF_NUM_S = 0
const EFUSE_DATE_S = 0
const X__HAS_FIXED_CHK_PROTOTYPES = 1
const EFUSE_SPICONFIG_SPI_DEFAULTS = 0
const EFUSE_SPICONFIG_HSPI_DEFAULTS = 1
const EFUSE_SPICONFIG_RET_SPICLK_MASK = 0x3f
const EFUSE_SPICONFIG_RET_SPICLK_SHIFT = 0
const EFUSE_SPICONFIG_RET_SPIQ_MASK = 0x3f
const EFUSE_SPICONFIG_RET_SPIQ_SHIFT = 6
const EFUSE_SPICONFIG_RET_SPID_MASK = 0x3f
const EFUSE_SPICONFIG_RET_SPID_SHIFT = 12
const EFUSE_SPICONFIG_RET_SPICS0_MASK = 0x3f
const EFUSE_SPICONFIG_RET_SPICS0_SHIFT = 18
const EFUSE_SPICONFIG_RET_SPIHD_MASK = 0x3f
const EFUSE_SPICONFIG_RET_SPIHD_SHIFT = 24
const MACSTR = "%02x:%02x:%02x:%02x:%02x:%02x"
const ETS_SIG_LEN = 384
const ETS_DIGEST_LEN = 32
const CRC_SIGN_BLOCK_LEN = 1196
const SIG_BLOCK_PADDING = 4096
const ETS_SECURE_BOOT_V2_SIGNATURE_MAGIC = 0xE7
const SECURE_BOOT_NUM_BLOCKS = 3
const MAX_KEY_DIGESTS = 3
const SPI_FLASH_SEC_SIZE = 4096
const FLASH_ID_GD25LQ32C = 0xC86016
const SPI_FLASH_OPI_FLAG = 16
const MSPI_FUNC_NUM = 0
const MSPI_IOMUX_PIN_NUM_CS1 = 26
const MSPI_IOMUX_PIN_NUM_HD = 27
const MSPI_IOMUX_PIN_NUM_WP = 28
const MSPI_IOMUX_PIN_NUM_CS0 = 29
const MSPI_IOMUX_PIN_NUM_CLK = 30
const MSPI_IOMUX_PIN_NUM_MISO = 31
const MSPI_IOMUX_PIN_NUM_MOSI = 32
const MSPI_IOMUX_PIN_NUM_D4 = 33
const MSPI_IOMUX_PIN_NUM_D5 = 34
const MSPI_IOMUX_PIN_NUM_D6 = 35
const MSPI_IOMUX_PIN_NUM_D7 = 36
const MSPI_IOMUX_PIN_NUM_DQS = 37
const SPI2_FUNC_NUM = 4
const SPI2_IOMUX_PIN_NUM_HD = 9
const SPI2_IOMUX_PIN_NUM_CS = 10
const SPI2_IOMUX_PIN_NUM_MOSI = 11
const SPI2_IOMUX_PIN_NUM_CLK = 12
const SPI2_IOMUX_PIN_NUM_MISO = 13
const SPI2_IOMUX_PIN_NUM_WP = 14
const SPI2_FUNC_NUM_OCT = 2
const SPI2_IOMUX_PIN_NUM_HD_OCT = 33
const SPI2_IOMUX_PIN_NUM_CS_OCT = 34
const SPI2_IOMUX_PIN_NUM_MOSI_OCT = 35
const SPI2_IOMUX_PIN_NUM_CLK_OCT = 36
const SPI2_IOMUX_PIN_NUM_MISO_OCT = 37
const SPI2_IOMUX_PIN_NUM_WP_OCT = 38
const SPI2_IOMUX_PIN_NUM_IO4_OCT = 10
const SPI2_IOMUX_PIN_NUM_IO5_OCT = 11
const SPI2_IOMUX_PIN_NUM_IO6_OCT = 12
const SPI2_IOMUX_PIN_NUM_IO7_OCT = 13
const SPI_USR_V = 0x1
const SPI_USR_S = 24
const SPI_UPDATE_V = 0x1
const SPI_UPDATE_S = 23
const SPI_CONF_BITLEN = 0x0003FFFF
const SPI_CONF_BITLEN_V = 0x3FFFF
const SPI_CONF_BITLEN_S = 0
const SPI_USR_ADDR_VALUE = 0xFFFFFFFF
const SPI_USR_ADDR_VALUE_V = 0xFFFFFFFF
const SPI_USR_ADDR_VALUE_S = 0
const SPI_WR_BIT_ORDER = 0x00000003
const SPI_WR_BIT_ORDER_V = 0x3
const SPI_WR_BIT_ORDER_S = 25
const SPI_RD_BIT_ORDER = 0x00000003
const SPI_RD_BIT_ORDER_V = 0x3
const SPI_RD_BIT_ORDER_S = 23
const SPI_WP_POL_V = 0x1
const SPI_WP_POL_S = 21
const SPI_HOLD_POL_V = 0x1
const SPI_HOLD_POL_S = 20
const SPI_D_POL_V = 0x1
const SPI_D_POL_S = 19
const SPI_Q_POL_V = 0x1
const SPI_Q_POL_S = 18
const SPI_FREAD_OCT_V = 0x1
const SPI_FREAD_OCT_S = 16
const SPI_FREAD_QUAD_V = 0x1
const SPI_FREAD_QUAD_S = 15
const SPI_FREAD_DUAL_V = 0x1
const SPI_FREAD_DUAL_S = 14
const SPI_FCMD_OCT_V = 0x1
const SPI_FCMD_OCT_S = 10
const SPI_FCMD_QUAD_V = 0x1
const SPI_FCMD_QUAD_S = 9
const SPI_FCMD_DUAL_V = 0x1
const SPI_FCMD_DUAL_S = 8
const SPI_FADDR_OCT_V = 0x1
const SPI_FADDR_OCT_S = 7
const SPI_FADDR_QUAD_V = 0x1
const SPI_FADDR_QUAD_S = 6
const SPI_FADDR_DUAL_V = 0x1
const SPI_FADDR_DUAL_S = 5
const SPI_DUMMY_OUT_V = 0x1
const SPI_DUMMY_OUT_S = 3
const SPI_CLK_EQU_SYSCLK_V = 0x1
const SPI_CLK_EQU_SYSCLK_S = 31
const SPI_CLKDIV_PRE = 0x0000000F
const SPI_CLKDIV_PRE_V = 0xF
const SPI_CLKDIV_PRE_S = 18
const SPI_CLKCNT_N = 0x0000003F
const SPI_CLKCNT_N_V = 0x3F
const SPI_CLKCNT_N_S = 12
const SPI_CLKCNT_H = 0x0000003F
const SPI_CLKCNT_H_V = 0x3F
const SPI_CLKCNT_H_S = 6
const SPI_CLKCNT_L = 0x0000003F
const SPI_CLKCNT_L_V = 0x3F
const SPI_CLKCNT_L_S = 0
const SPI_USR_COMMAND_V = 0x1
const SPI_USR_COMMAND_S = 31
const SPI_USR_ADDR_V = 0x1
const SPI_USR_ADDR_S = 30
const SPI_USR_DUMMY_V = 0x1
const SPI_USR_DUMMY_S = 29
const SPI_USR_MISO_V = 0x1
const SPI_USR_MISO_S = 28
const SPI_USR_MOSI_V = 0x1
const SPI_USR_MOSI_S = 27
const SPI_USR_DUMMY_IDLE_V = 0x1
const SPI_USR_DUMMY_IDLE_S = 26
const SPI_USR_MOSI_HIGHPART_V = 0x1
const SPI_USR_MOSI_HIGHPART_S = 25
const SPI_USR_MISO_HIGHPART_V = 0x1
const SPI_USR_MISO_HIGHPART_S = 24
const SPI_SIO_V = 0x1
const SPI_SIO_S = 17
const SPI_USR_CONF_NXT_V = 0x1
const SPI_USR_CONF_NXT_S = 15
const SPI_FWRITE_OCT_V = 0x1
const SPI_FWRITE_OCT_S = 14
const SPI_FWRITE_QUAD_V = 0x1
const SPI_FWRITE_QUAD_S = 13
const SPI_FWRITE_DUAL_V = 0x1
const SPI_FWRITE_DUAL_S = 12
const SPI_CK_OUT_EDGE_V = 0x1
const SPI_CK_OUT_EDGE_S = 9
const SPI_RSCK_I_EDGE_V = 0x1
const SPI_RSCK_I_EDGE_S = 8
const SPI_CS_SETUP_V = 0x1
const SPI_CS_SETUP_S = 7
const SPI_CS_HOLD_V = 0x1
const SPI_CS_HOLD_S = 6
const SPI_TSCK_I_EDGE_V = 0x1
const SPI_TSCK_I_EDGE_S = 5
const SPI_OPI_MODE_V = 0x1
const SPI_OPI_MODE_S = 4
const SPI_QPI_MODE_V = 0x1
const SPI_QPI_MODE_S = 3
const SPI_DOUTDIN_V = 0x1
const SPI_DOUTDIN_S = 0
const SPI_USR_ADDR_BITLEN = 0x0000001F
const SPI_USR_ADDR_BITLEN_V = 0x1F
const SPI_USR_ADDR_BITLEN_S = 27
const SPI_CS_HOLD_TIME = 0x0000001F
const SPI_CS_HOLD_TIME_V = 0x1F
const SPI_CS_HOLD_TIME_S = 22
const SPI_CS_SETUP_TIME = 0x0000001F
const SPI_CS_SETUP_TIME_V = 0x1F
const SPI_CS_SETUP_TIME_S = 17
const SPI_MST_WFULL_ERR_END_EN_V = 0x1
const SPI_MST_WFULL_ERR_END_EN_S = 16
const SPI_USR_DUMMY_CYCLELEN = 0x000000FF
const SPI_USR_DUMMY_CYCLELEN_V = 0xFF
const SPI_USR_DUMMY_CYCLELEN_S = 0
const SPI_USR_COMMAND_BITLEN = 0x0000000F
const SPI_USR_COMMAND_BITLEN_V = 0xF
const SPI_USR_COMMAND_BITLEN_S = 28
const SPI_MST_REMPTY_ERR_END_EN_V = 0x1
const SPI_MST_REMPTY_ERR_END_EN_S = 27
const SPI_USR_COMMAND_VALUE = 0x0000FFFF
const SPI_USR_COMMAND_VALUE_V = 0xFFFF
const SPI_USR_COMMAND_VALUE_S = 0
const SPI_MS_DATA_BITLEN = 0x0003FFFF
const SPI_MS_DATA_BITLEN_V = 0x3FFFF
const SPI_MS_DATA_BITLEN_S = 0
const SPI_QUAD_DIN_PIN_SWAP_V = 0x1
const SPI_QUAD_DIN_PIN_SWAP_S = 31
const SPI_CS_KEEP_ACTIVE_V = 0x1
const SPI_CS_KEEP_ACTIVE_S = 30
const SPI_CK_IDLE_EDGE_V = 0x1
const SPI_CK_IDLE_EDGE_S = 29
const SPI_DQS_IDLE_EDGE_V = 0x1
const SPI_DQS_IDLE_EDGE_S = 24
const SPI_SLAVE_CS_POL_V = 0x1
const SPI_SLAVE_CS_POL_S = 23
const SPI_CMD_DTR_EN_V = 0x1
const SPI_CMD_DTR_EN_S = 19
const SPI_ADDR_DTR_EN_V = 0x1
const SPI_ADDR_DTR_EN_S = 18
const SPI_DATA_DTR_EN_V = 0x1
const SPI_DATA_DTR_EN_S = 17
const SPI_CLK_DATA_DTR_EN_V = 0x1
const SPI_CLK_DATA_DTR_EN_S = 16
const SPI_MASTER_CS_POL = 0x0000003F
const SPI_MASTER_CS_POL_V = 0x3F
const SPI_MASTER_CS_POL_S = 7
const SPI_CK_DIS_V = 0x1
const SPI_CK_DIS_S = 6
const SPI_CS5_DIS_V = 0x1
const SPI_CS5_DIS_S = 5
const SPI_CS4_DIS_V = 0x1
const SPI_CS4_DIS_S = 4
const SPI_CS3_DIS_V = 0x1
const SPI_CS3_DIS_S = 3
const SPI_CS2_DIS_V = 0x1
const SPI_CS2_DIS_S = 2
const SPI_CS1_DIS_V = 0x1
const SPI_CS1_DIS_S = 1
const SPI_CS0_DIS_V = 0x1
const SPI_CS0_DIS_S = 0
const SPI_TIMING_HCLK_ACTIVE_V = 0x1
const SPI_TIMING_HCLK_ACTIVE_S = 16
const SPI_DIN7_MODE = 0x00000003
const SPI_DIN7_MODE_V = 0x3
const SPI_DIN7_MODE_S = 14
const SPI_DIN6_MODE = 0x00000003
const SPI_DIN6_MODE_V = 0x3
const SPI_DIN6_MODE_S = 12
const SPI_DIN5_MODE = 0x00000003
const SPI_DIN5_MODE_V = 0x3
const SPI_DIN5_MODE_S = 10
const SPI_DIN4_MODE = 0x00000003
const SPI_DIN4_MODE_V = 0x3
const SPI_DIN4_MODE_S = 8
const SPI_DIN3_MODE = 0x00000003
const SPI_DIN3_MODE_V = 0x3
const SPI_DIN3_MODE_S = 6
const SPI_DIN2_MODE = 0x00000003
const SPI_DIN2_MODE_V = 0x3
const SPI_DIN2_MODE_S = 4
const SPI_DIN1_MODE = 0x00000003
const SPI_DIN1_MODE_V = 0x3
const SPI_DIN1_MODE_S = 2
const SPI_DIN0_MODE = 0x00000003
const SPI_DIN0_MODE_V = 0x3
const SPI_DIN0_MODE_S = 0
const SPI_DIN7_NUM = 0x00000003
const SPI_DIN7_NUM_V = 0x3
const SPI_DIN7_NUM_S = 14
const SPI_DIN6_NUM = 0x00000003
const SPI_DIN6_NUM_V = 0x3
const SPI_DIN6_NUM_S = 12
const SPI_DIN5_NUM = 0x00000003
const SPI_DIN5_NUM_V = 0x3
const SPI_DIN5_NUM_S = 10
const SPI_DIN4_NUM = 0x00000003
const SPI_DIN4_NUM_V = 0x3
const SPI_DIN4_NUM_S = 8
const SPI_DIN3_NUM = 0x00000003
const SPI_DIN3_NUM_V = 0x3
const SPI_DIN3_NUM_S = 6
const SPI_DIN2_NUM = 0x00000003
const SPI_DIN2_NUM_V = 0x3
const SPI_DIN2_NUM_S = 4
const SPI_DIN1_NUM = 0x00000003
const SPI_DIN1_NUM_V = 0x3
const SPI_DIN1_NUM_S = 2
const SPI_DIN0_NUM = 0x00000003
const SPI_DIN0_NUM_V = 0x3
const SPI_DIN0_NUM_S = 0
const SPI_D_DQS_MODE_V = 0x1
const SPI_D_DQS_MODE_S = 8
const SPI_DOUT7_MODE_V = 0x1
const SPI_DOUT7_MODE_S = 7
const SPI_DOUT6_MODE_V = 0x1
const SPI_DOUT6_MODE_S = 6
const SPI_DOUT5_MODE_V = 0x1
const SPI_DOUT5_MODE_S = 5
const SPI_DOUT4_MODE_V = 0x1
const SPI_DOUT4_MODE_S = 4
const SPI_DOUT3_MODE_V = 0x1
const SPI_DOUT3_MODE_S = 3
const SPI_DOUT2_MODE_V = 0x1
const SPI_DOUT2_MODE_S = 2
const SPI_DOUT1_MODE_V = 0x1
const SPI_DOUT1_MODE_S = 1
const SPI_DOUT0_MODE_V = 0x1
const SPI_DOUT0_MODE_S = 0
const SPI_DMA_AFIFO_RST_V = 0x1
const SPI_DMA_AFIFO_RST_S = 31
const SPI_BUF_AFIFO_RST_V = 0x1
const SPI_BUF_AFIFO_RST_S = 30
const SPI_RX_AFIFO_RST_V = 0x1
const SPI_RX_AFIFO_RST_S = 29
const SPI_DMA_TX_ENA_V = 0x1
const SPI_DMA_TX_ENA_S = 28
const SPI_DMA_RX_ENA_V = 0x1
const SPI_DMA_RX_ENA_S = 27
const SPI_RX_EOF_EN_V = 0x1
const SPI_RX_EOF_EN_S = 21
const SPI_SLV_TX_SEG_TRANS_CLR_EN_V = 0x1
const SPI_SLV_TX_SEG_TRANS_CLR_EN_S = 20
const SPI_SLV_RX_SEG_TRANS_CLR_EN_V = 0x1
const SPI_SLV_RX_SEG_TRANS_CLR_EN_S = 19
const SPI_DMA_SLV_SEG_TRANS_EN_V = 0x1
const SPI_DMA_SLV_SEG_TRANS_EN_S = 18
const SPI_DMA_INFIFO_FULL_V = 0x1
const SPI_DMA_INFIFO_FULL_S = 1
const SPI_DMA_OUTFIFO_EMPTY_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_S = 0
const SPI_APP1_INT_ENA_V = 0x1
const SPI_APP1_INT_ENA_S = 20
const SPI_APP2_INT_ENA_V = 0x1
const SPI_APP2_INT_ENA_S = 19
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ENA_V = 0x1
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ENA_S = 18
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_ENA_V = 0x1
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_ENA_S = 17
const SPI_SLV_CMD_ERR_INT_ENA_V = 0x1
const SPI_SLV_CMD_ERR_INT_ENA_S = 16
const SPI_SLV_BUF_ADDR_ERR_INT_ENA_V = 0x1
const SPI_SLV_BUF_ADDR_ERR_INT_ENA_S = 15
const SPI_SEG_MAGIC_ERR_INT_ENA_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_ENA_S = 14
const SPI_DMA_SEG_TRANS_DONE_INT_ENA_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_INT_ENA_S = 13
const SPI_TRANS_DONE_INT_ENA_V = 0x1
const SPI_TRANS_DONE_INT_ENA_S = 12
const SPI_SLV_WR_BUF_DONE_INT_ENA_V = 0x1
const SPI_SLV_WR_BUF_DONE_INT_ENA_S = 11
const SPI_SLV_RD_BUF_DONE_INT_ENA_V = 0x1
const SPI_SLV_RD_BUF_DONE_INT_ENA_S = 10
const SPI_SLV_WR_DMA_DONE_INT_ENA_V = 0x1
const SPI_SLV_WR_DMA_DONE_INT_ENA_S = 9
const SPI_SLV_RD_DMA_DONE_INT_ENA_V = 0x1
const SPI_SLV_RD_DMA_DONE_INT_ENA_S = 8
const SPI_SLV_CMDA_INT_ENA_V = 0x1
const SPI_SLV_CMDA_INT_ENA_S = 7
const SPI_SLV_CMD9_INT_ENA_V = 0x1
const SPI_SLV_CMD9_INT_ENA_S = 6
const SPI_SLV_CMD8_INT_ENA_V = 0x1
const SPI_SLV_CMD8_INT_ENA_S = 5
const SPI_SLV_CMD7_INT_ENA_V = 0x1
const SPI_SLV_CMD7_INT_ENA_S = 4
const SPI_SLV_EN_QPI_INT_ENA_V = 0x1
const SPI_SLV_EN_QPI_INT_ENA_S = 3
const SPI_SLV_EX_QPI_INT_ENA_V = 0x1
const SPI_SLV_EX_QPI_INT_ENA_S = 2
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ENA_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ENA_S = 1
const SPI_DMA_INFIFO_FULL_ERR_INT_ENA_V = 0x1
const SPI_DMA_INFIFO_FULL_ERR_INT_ENA_S = 0
const SPI_APP1_INT_CLR_V = 0x1
const SPI_APP1_INT_CLR_S = 20
const SPI_APP2_INT_CLR_V = 0x1
const SPI_APP2_INT_CLR_S = 19
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_CLR_V = 0x1
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_CLR_S = 18
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_CLR_V = 0x1
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_CLR_S = 17
const SPI_SLV_CMD_ERR_INT_CLR_V = 0x1
const SPI_SLV_CMD_ERR_INT_CLR_S = 16
const SPI_SLV_BUF_ADDR_ERR_INT_CLR_V = 0x1
const SPI_SLV_BUF_ADDR_ERR_INT_CLR_S = 15
const SPI_SEG_MAGIC_ERR_INT_CLR_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_CLR_S = 14
const SPI_DMA_SEG_TRANS_DONE_INT_CLR_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_INT_CLR_S = 13
const SPI_TRANS_DONE_INT_CLR_V = 0x1
const SPI_TRANS_DONE_INT_CLR_S = 12
const SPI_SLV_WR_BUF_DONE_INT_CLR_V = 0x1
const SPI_SLV_WR_BUF_DONE_INT_CLR_S = 11
const SPI_SLV_RD_BUF_DONE_INT_CLR_V = 0x1
const SPI_SLV_RD_BUF_DONE_INT_CLR_S = 10
const SPI_SLV_WR_DMA_DONE_INT_CLR_V = 0x1
const SPI_SLV_WR_DMA_DONE_INT_CLR_S = 9
const SPI_SLV_RD_DMA_DONE_INT_CLR_V = 0x1
const SPI_SLV_RD_DMA_DONE_INT_CLR_S = 8
const SPI_SLV_CMDA_INT_CLR_V = 0x1
const SPI_SLV_CMDA_INT_CLR_S = 7
const SPI_SLV_CMD9_INT_CLR_V = 0x1
const SPI_SLV_CMD9_INT_CLR_S = 6
const SPI_SLV_CMD8_INT_CLR_V = 0x1
const SPI_SLV_CMD8_INT_CLR_S = 5
const SPI_SLV_CMD7_INT_CLR_V = 0x1
const SPI_SLV_CMD7_INT_CLR_S = 4
const SPI_SLV_EN_QPI_INT_CLR_V = 0x1
const SPI_SLV_EN_QPI_INT_CLR_S = 3
const SPI_SLV_EX_QPI_INT_CLR_V = 0x1
const SPI_SLV_EX_QPI_INT_CLR_S = 2
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_CLR_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_CLR_S = 1
const SPI_DMA_INFIFO_FULL_ERR_INT_CLR_V = 0x1
const SPI_DMA_INFIFO_FULL_ERR_INT_CLR_S = 0
const SPI_APP1_INT_RAW_V = 0x1
const SPI_APP1_INT_RAW_S = 20
const SPI_APP2_INT_RAW_V = 0x1
const SPI_APP2_INT_RAW_S = 19
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_RAW_V = 0x1
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_RAW_S = 18
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_RAW_V = 0x1
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_RAW_S = 17
const SPI_SLV_CMD_ERR_INT_RAW_V = 0x1
const SPI_SLV_CMD_ERR_INT_RAW_S = 16
const SPI_SLV_BUF_ADDR_ERR_INT_RAW_V = 0x1
const SPI_SLV_BUF_ADDR_ERR_INT_RAW_S = 15
const SPI_SEG_MAGIC_ERR_INT_RAW_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_RAW_S = 14
const SPI_DMA_SEG_TRANS_DONE_INT_RAW_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_INT_RAW_S = 13
const SPI_TRANS_DONE_INT_RAW_V = 0x1
const SPI_TRANS_DONE_INT_RAW_S = 12
const SPI_SLV_WR_BUF_DONE_INT_RAW_V = 0x1
const SPI_SLV_WR_BUF_DONE_INT_RAW_S = 11
const SPI_SLV_RD_BUF_DONE_INT_RAW_V = 0x1
const SPI_SLV_RD_BUF_DONE_INT_RAW_S = 10
const SPI_SLV_WR_DMA_DONE_INT_RAW_V = 0x1
const SPI_SLV_WR_DMA_DONE_INT_RAW_S = 9
const SPI_SLV_RD_DMA_DONE_INT_RAW_V = 0x1
const SPI_SLV_RD_DMA_DONE_INT_RAW_S = 8
const SPI_SLV_CMDA_INT_RAW_V = 0x1
const SPI_SLV_CMDA_INT_RAW_S = 7
const SPI_SLV_CMD9_INT_RAW_V = 0x1
const SPI_SLV_CMD9_INT_RAW_S = 6
const SPI_SLV_CMD8_INT_RAW_V = 0x1
const SPI_SLV_CMD8_INT_RAW_S = 5
const SPI_SLV_CMD7_INT_RAW_V = 0x1
const SPI_SLV_CMD7_INT_RAW_S = 4
const SPI_SLV_EN_QPI_INT_RAW_V = 0x1
const SPI_SLV_EN_QPI_INT_RAW_S = 3
const SPI_SLV_EX_QPI_INT_RAW_V = 0x1
const SPI_SLV_EX_QPI_INT_RAW_S = 2
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_RAW_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_RAW_S = 1
const SPI_DMA_INFIFO_FULL_ERR_INT_RAW_V = 0x1
const SPI_DMA_INFIFO_FULL_ERR_INT_RAW_S = 0
const SPI_APP1_INT_ST_V = 0x1
const SPI_APP1_INT_ST_S = 20
const SPI_APP2_INT_ST_V = 0x1
const SPI_APP2_INT_ST_S = 19
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ST_V = 0x1
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ST_S = 18
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_ST_V = 0x1
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_ST_S = 17
const SPI_SLV_CMD_ERR_INT_ST_V = 0x1
const SPI_SLV_CMD_ERR_INT_ST_S = 16
const SPI_SLV_BUF_ADDR_ERR_INT_ST_V = 0x1
const SPI_SLV_BUF_ADDR_ERR_INT_ST_S = 15
const SPI_SEG_MAGIC_ERR_INT_ST_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_ST_S = 14
const SPI_DMA_SEG_TRANS_DONE_INT_ST_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_INT_ST_S = 13
const SPI_TRANS_DONE_INT_ST_V = 0x1
const SPI_TRANS_DONE_INT_ST_S = 12
const SPI_SLV_WR_BUF_DONE_INT_ST_V = 0x1
const SPI_SLV_WR_BUF_DONE_INT_ST_S = 11
const SPI_SLV_RD_BUF_DONE_INT_ST_V = 0x1
const SPI_SLV_RD_BUF_DONE_INT_ST_S = 10
const SPI_SLV_WR_DMA_DONE_INT_ST_V = 0x1
const SPI_SLV_WR_DMA_DONE_INT_ST_S = 9
const SPI_SLV_RD_DMA_DONE_INT_ST_V = 0x1
const SPI_SLV_RD_DMA_DONE_INT_ST_S = 8
const SPI_SLV_CMDA_INT_ST_V = 0x1
const SPI_SLV_CMDA_INT_ST_S = 7
const SPI_SLV_CMD9_INT_ST_V = 0x1
const SPI_SLV_CMD9_INT_ST_S = 6
const SPI_SLV_CMD8_INT_ST_V = 0x1
const SPI_SLV_CMD8_INT_ST_S = 5
const SPI_SLV_CMD7_INT_ST_V = 0x1
const SPI_SLV_CMD7_INT_ST_S = 4
const SPI_SLV_EN_QPI_INT_ST_V = 0x1
const SPI_SLV_EN_QPI_INT_ST_S = 3
const SPI_SLV_EX_QPI_INT_ST_V = 0x1
const SPI_SLV_EX_QPI_INT_ST_S = 2
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ST_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ST_S = 1
const SPI_DMA_INFIFO_FULL_ERR_INT_ST_V = 0x1
const SPI_DMA_INFIFO_FULL_ERR_INT_ST_S = 0
const SPI_APP1_INT_SET_V = 0x1
const SPI_APP1_INT_SET_S = 20
const SPI_APP2_INT_SET_V = 0x1
const SPI_APP2_INT_SET_S = 19
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_SET_V = 0x1
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_SET_S = 18
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_SET_V = 0x1
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_SET_S = 17
const SPI_SLV_CMD_ERR_INT_SET_V = 0x1
const SPI_SLV_CMD_ERR_INT_SET_S = 16
const SPI_SLV_BUF_ADDR_ERR_INT_SET_V = 0x1
const SPI_SLV_BUF_ADDR_ERR_INT_SET_S = 15
const SPI_SEG_MAGIC_ERR_INT_SET_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_SET_S = 14
const SPI_DMA_SEG_TRANS_DONE_INT_SET_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_INT_SET_S = 13
const SPI_TRANS_DONE_INT_SET_V = 0x1
const SPI_TRANS_DONE_INT_SET_S = 12
const SPI_SLV_WR_BUF_DONE_INT_SET_V = 0x1
const SPI_SLV_WR_BUF_DONE_INT_SET_S = 11
const SPI_SLV_RD_BUF_DONE_INT_SET_V = 0x1
const SPI_SLV_RD_BUF_DONE_INT_SET_S = 10
const SPI_SLV_WR_DMA_DONE_INT_SET_V = 0x1
const SPI_SLV_WR_DMA_DONE_INT_SET_S = 9
const SPI_SLV_RD_DMA_DONE_INT_SET_V = 0x1
const SPI_SLV_RD_DMA_DONE_INT_SET_S = 8
const SPI_SLV_CMDA_INT_SET_V = 0x1
const SPI_SLV_CMDA_INT_SET_S = 7
const SPI_SLV_CMD9_INT_SET_V = 0x1
const SPI_SLV_CMD9_INT_SET_S = 6
const SPI_SLV_CMD8_INT_SET_V = 0x1
const SPI_SLV_CMD8_INT_SET_S = 5
const SPI_SLV_CMD7_INT_SET_V = 0x1
const SPI_SLV_CMD7_INT_SET_S = 4
const SPI_SLV_EN_QPI_INT_SET_V = 0x1
const SPI_SLV_EN_QPI_INT_SET_S = 3
const SPI_SLV_EX_QPI_INT_SET_V = 0x1
const SPI_SLV_EX_QPI_INT_SET_S = 2
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_SET_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_SET_S = 1
const SPI_DMA_INFIFO_FULL_ERR_INT_SET_V = 0x1
const SPI_DMA_INFIFO_FULL_ERR_INT_SET_S = 0
const SPI_BUF0 = 0xFFFFFFFF
const SPI_BUF0_V = 0xFFFFFFFF
const SPI_BUF0_S = 0
const SPI_BUF1 = 0xFFFFFFFF
const SPI_BUF1_V = 0xFFFFFFFF
const SPI_BUF1_S = 0
const SPI_BUF2 = 0xFFFFFFFF
const SPI_BUF2_V = 0xFFFFFFFF
const SPI_BUF2_S = 0
const SPI_BUF3 = 0xFFFFFFFF
const SPI_BUF3_V = 0xFFFFFFFF
const SPI_BUF3_S = 0
const SPI_BUF4 = 0xFFFFFFFF
const SPI_BUF4_V = 0xFFFFFFFF
const SPI_BUF4_S = 0
const SPI_BUF5 = 0xFFFFFFFF
const SPI_BUF5_V = 0xFFFFFFFF
const SPI_BUF5_S = 0
const SPI_BUF6 = 0xFFFFFFFF
const SPI_BUF6_V = 0xFFFFFFFF
const SPI_BUF6_S = 0
const SPI_BUF7 = 0xFFFFFFFF
const SPI_BUF7_V = 0xFFFFFFFF
const SPI_BUF7_S = 0
const SPI_BUF8 = 0xFFFFFFFF
const SPI_BUF8_V = 0xFFFFFFFF
const SPI_BUF8_S = 0
const SPI_BUF9 = 0xFFFFFFFF
const SPI_BUF9_V = 0xFFFFFFFF
const SPI_BUF9_S = 0
const SPI_BUF10 = 0xFFFFFFFF
const SPI_BUF10_V = 0xFFFFFFFF
const SPI_BUF10_S = 0
const SPI_BUF11 = 0xFFFFFFFF
const SPI_BUF11_V = 0xFFFFFFFF
const SPI_BUF11_S = 0
const SPI_BUF12 = 0xFFFFFFFF
const SPI_BUF12_V = 0xFFFFFFFF
const SPI_BUF12_S = 0
const SPI_BUF13 = 0xFFFFFFFF
const SPI_BUF13_V = 0xFFFFFFFF
const SPI_BUF13_S = 0
const SPI_BUF14 = 0xFFFFFFFF
const SPI_BUF14_V = 0xFFFFFFFF
const SPI_BUF14_S = 0
const SPI_BUF15 = 0xFFFFFFFF
const SPI_BUF15_V = 0xFFFFFFFF
const SPI_BUF15_S = 0
const SPI_USR_CONF_V = 0x1
const SPI_USR_CONF_S = 28
const SPI_SOFT_RESET_V = 0x1
const SPI_SOFT_RESET_S = 27
const SPI_SLAVE_MODE_V = 0x1
const SPI_SLAVE_MODE_S = 26
const SPI_DMA_SEG_MAGIC_VALUE = 0x0000000F
const SPI_DMA_SEG_MAGIC_VALUE_V = 0xF
const SPI_DMA_SEG_MAGIC_VALUE_S = 22
const SPI_SLV_WRBUF_BITLEN_EN_V = 0x1
const SPI_SLV_WRBUF_BITLEN_EN_S = 11
const SPI_SLV_RDBUF_BITLEN_EN_V = 0x1
const SPI_SLV_RDBUF_BITLEN_EN_S = 10
const SPI_SLV_WRDMA_BITLEN_EN_V = 0x1
const SPI_SLV_WRDMA_BITLEN_EN_S = 9
const SPI_SLV_RDDMA_BITLEN_EN_V = 0x1
const SPI_SLV_RDDMA_BITLEN_EN_S = 8
const SPI_RSCK_DATA_OUT_V = 0x1
const SPI_RSCK_DATA_OUT_S = 3
const SPI_CLK_MODE_13_V = 0x1
const SPI_CLK_MODE_13_S = 2
const SPI_CLK_MODE = 0x00000003
const SPI_CLK_MODE_V = 0x3
const SPI_CLK_MODE_S = 0
const SPI_SLV_LAST_ADDR = 0x0000003F
const SPI_SLV_LAST_ADDR_V = 0x3F
const SPI_SLV_LAST_ADDR_S = 26
const SPI_SLV_LAST_COMMAND = 0x000000FF
const SPI_SLV_LAST_COMMAND_V = 0xFF
const SPI_SLV_LAST_COMMAND_S = 18
const SPI_SLV_DATA_BITLEN = 0x0003FFFF
const SPI_SLV_DATA_BITLEN_V = 0x3FFFF
const SPI_SLV_DATA_BITLEN_S = 0
const SPI_MST_CLK_SEL_V = 0x1
const SPI_MST_CLK_SEL_S = 2
const SPI_MST_CLK_ACTIVE_V = 0x1
const SPI_MST_CLK_ACTIVE_S = 1
const SPI_CLK_EN_V = 0x1
const SPI_CLK_EN_S = 0
const SPI_DATE = 0x0FFFFFFF
const SPI_DATE_V = 0xFFFFFFF
const SPI_DATE_S = 0
const SPIQ_IN_IDX = 0
const SPIQ_OUT_IDX = 0
const SPID_IN_IDX = 1
const SPID_OUT_IDX = 1
const SPIHD_IN_IDX = 2
const SPIHD_OUT_IDX = 2
const SPIWP_IN_IDX = 3
const SPIWP_OUT_IDX = 3
const SPICLK_OUT_IDX = 4
const SPICS0_OUT_IDX = 5
const SPICS1_OUT_IDX = 6
const SPID4_IN_IDX = 7
const SPID4_OUT_IDX = 7
const SPID5_IN_IDX = 8
const SPID5_OUT_IDX = 8
const SPID6_IN_IDX = 9
const SPID6_OUT_IDX = 9
const SPID7_IN_IDX = 10
const SPID7_OUT_IDX = 10
const SPIDQS_IN_IDX = 11
const SPIDQS_OUT_IDX = 11
const U0RXD_IN_IDX = 12
const U0TXD_OUT_IDX = 12
const U0CTS_IN_IDX = 13
const U0RTS_OUT_IDX = 13
const U0DSR_IN_IDX = 14
const U0DTR_OUT_IDX = 14
const U1RXD_IN_IDX = 15
const U1TXD_OUT_IDX = 15
const U1CTS_IN_IDX = 16
const U1RTS_OUT_IDX = 16
const U1DSR_IN_IDX = 17
const U1DTR_OUT_IDX = 17
const U2RXD_IN_IDX = 18
const U2TXD_OUT_IDX = 18
const U2CTS_IN_IDX = 19
const U2RTS_OUT_IDX = 19
const U2DSR_IN_IDX = 20
const U2DTR_OUT_IDX = 20
const I2S1_MCLK_IN_IDX = 21
const I2S1_MCLK_OUT_IDX = 21
const I2S0O_BCK_IN_IDX = 22
const I2S0O_BCK_OUT_IDX = 22
const I2S0_MCLK_IN_IDX = 23
const I2S0_MCLK_OUT_IDX = 23
const I2S0O_WS_IN_IDX = 24
const I2S0O_WS_OUT_IDX = 24
const I2S0I_SD_IN_IDX = 25
const I2S0O_SD_OUT_IDX = 25
const I2S0I_BCK_IN_IDX = 26
const I2S0I_BCK_OUT_IDX = 26
const I2S0I_WS_IN_IDX = 27
const I2S0I_WS_OUT_IDX = 27
const I2S1O_BCK_IN_IDX = 28
const I2S1O_BCK_OUT_IDX = 28
const I2S1O_WS_IN_IDX = 29
const I2S1O_WS_OUT_IDX = 29
const I2S1I_SD_IN_IDX = 30
const I2S1O_SD_OUT_IDX = 30
const I2S1I_BCK_IN_IDX = 31
const I2S1I_BCK_OUT_IDX = 31
const I2S1I_WS_IN_IDX = 32
const I2S1I_WS_OUT_IDX = 32
const PCNT_SIG_CH0_IN0_IDX = 33
const GPIO_WLAN_PRIO_IDX = 33
const PCNT_SIG_CH1_IN0_IDX = 34
const GPIO_WLAN_ACTIVE_IDX = 34
const PCNT_CTRL_CH0_IN0_IDX = 35
const BB_DIAG0_IDX = 35
const PCNT_CTRL_CH1_IN0_IDX = 36
const BB_DIAG1_IDX = 36
const PCNT_SIG_CH0_IN1_IDX = 37
const BB_DIAG2_IDX = 37
const PCNT_SIG_CH1_IN1_IDX = 38
const BB_DIAG3_IDX = 38
const PCNT_CTRL_CH0_IN1_IDX = 39
const BB_DIAG4_IDX = 39
const PCNT_CTRL_CH1_IN1_IDX = 40
const BB_DIAG5_IDX = 40
const PCNT_SIG_CH0_IN2_IDX = 41
const BB_DIAG6_IDX = 41
const PCNT_SIG_CH1_IN2_IDX = 42
const BB_DIAG7_IDX = 42
const PCNT_CTRL_CH0_IN2_IDX = 43
const BB_DIAG8_IDX = 43
const PCNT_CTRL_CH1_IN2_IDX = 44
const BB_DIAG9_IDX = 44
const PCNT_SIG_CH0_IN3_IDX = 45
const BB_DIAG10_IDX = 45
const PCNT_SIG_CH1_IN3_IDX = 46
const BB_DIAG11_IDX = 46
const PCNT_CTRL_CH0_IN3_IDX = 47
const BB_DIAG12_IDX = 47
const PCNT_CTRL_CH1_IN3_IDX = 48
const BB_DIAG13_IDX = 48
const GPIO_BT_ACTIVE_IDX = 49
const BB_DIAG14_IDX = 49
const GPIO_BT_PRIORITY_IDX = 50
const BB_DIAG15_IDX = 50
const I2S0I_SD1_IN_IDX = 51
const BB_DIAG16_IDX = 51
const I2S0I_SD2_IN_IDX = 52
const BB_DIAG17_IDX = 52
const I2S0I_SD3_IN_IDX = 53
const BB_DIAG18_IDX = 53
const CORE1_GPIO_IN7_IDX = 54
const CORE1_GPIO_OUT7_IDX = 54
const USB_EXTPHY_VP_IDX = 55
const USB_EXTPHY_OEN_IDX = 55
const USB_EXTPHY_VM_IDX = 56
const USB_EXTPHY_SPEED_IDX = 56
const USB_EXTPHY_RCV_IDX = 57
const USB_EXTPHY_VPO_IDX = 57
const USB_OTG_IDDIG_IN_IDX = 58
const USB_EXTPHY_VMO_IDX = 58
const USB_OTG_AVALID_IN_IDX = 59
const USB_EXTPHY_SUSPND_IDX = 59
const USB_SRP_BVALID_IN_IDX = 60
const USB_OTG_IDPULLUP_IDX = 60
const USB_OTG_VBUSVALID_IN_IDX = 61
const USB_OTG_DPPULLDOWN_IDX = 61
const USB_SRP_SESSEND_IN_IDX = 62
const USB_OTG_DMPULLDOWN_IDX = 62
const USB_OTG_DRVVBUS_IDX = 63
const USB_SRP_CHRGVBUS_IDX = 64
const USB_SRP_DISCHRGVBUS_IDX = 65
const SPI3_CLK_IN_IDX = 66
const SPI3_CLK_OUT_IDX = 66
const SPI3_Q_IN_IDX = 67
const SPI3_Q_OUT_IDX = 67
const SPI3_D_IN_IDX = 68
const SPI3_D_OUT_IDX = 68
const SPI3_HD_IN_IDX = 69
const SPI3_HD_OUT_IDX = 69
const SPI3_WP_IN_IDX = 70
const SPI3_WP_OUT_IDX = 70
const SPI3_CS0_IN_IDX = 71
const SPI3_CS0_OUT_IDX = 71
const SPI3_CS1_OUT_IDX = 72
const EXT_ADC_START_IDX = 73
const LEDC_LS_SIG_OUT0_IDX = 73
const LEDC_LS_SIG_OUT1_IDX = 74
const LEDC_LS_SIG_OUT2_IDX = 75
const LEDC_LS_SIG_OUT3_IDX = 76
const LEDC_LS_SIG_OUT4_IDX = 77
const LEDC_LS_SIG_OUT5_IDX = 78
const LEDC_LS_SIG_OUT6_IDX = 79
const LEDC_LS_SIG_OUT7_IDX = 80
const RMT_SIG_IN0_IDX = 81
const RMT_SIG_OUT0_IDX = 81
const RMT_SIG_IN1_IDX = 82
const RMT_SIG_OUT1_IDX = 82
const RMT_SIG_IN2_IDX = 83
const RMT_SIG_OUT2_IDX = 83
const RMT_SIG_IN3_IDX = 84
const RMT_SIG_OUT3_IDX = 84
const USB_JTAG_TCK_IDX = 85
const USB_JTAG_TMS_IDX = 86
const USB_JTAG_TDI_IDX = 87
const USB_JTAG_TDO_IDX = 88
const I2CEXT0_SCL_IN_IDX = 89
const I2CEXT0_SCL_OUT_IDX = 89
const I2CEXT0_SDA_IN_IDX = 90
const I2CEXT0_SDA_OUT_IDX = 90
const I2CEXT1_SCL_IN_IDX = 91
const I2CEXT1_SCL_OUT_IDX = 91
const I2CEXT1_SDA_IN_IDX = 92
const I2CEXT1_SDA_OUT_IDX = 92
const GPIO_SD0_OUT_IDX = 93
const GPIO_SD1_OUT_IDX = 94
const GPIO_SD2_OUT_IDX = 95
const GPIO_SD3_OUT_IDX = 96
const GPIO_SD4_OUT_IDX = 97
const GPIO_SD5_OUT_IDX = 98
const GPIO_SD6_OUT_IDX = 99
const GPIO_SD7_OUT_IDX = 100
const FSPICLK_IN_IDX = 101
const FSPICLK_OUT_IDX = 101
const FSPIQ_IN_IDX = 102
const FSPIQ_OUT_IDX = 102
const FSPID_IN_IDX = 103
const FSPID_OUT_IDX = 103
const FSPIHD_IN_IDX = 104
const FSPIHD_OUT_IDX = 104
const FSPIWP_IN_IDX = 105
const FSPIWP_OUT_IDX = 105
const FSPIIO4_IN_IDX = 106
const FSPIIO4_OUT_IDX = 106
const FSPIIO5_IN_IDX = 107
const FSPIIO5_OUT_IDX = 107
const FSPIIO6_IN_IDX = 108
const FSPIIO6_OUT_IDX = 108
const FSPIIO7_IN_IDX = 109
const FSPIIO7_OUT_IDX = 109
const FSPICS0_IN_IDX = 110
const FSPICS0_OUT_IDX = 110
const FSPICS1_OUT_IDX = 111
const FSPICS2_OUT_IDX = 112
const FSPICS3_OUT_IDX = 113
const FSPICS4_OUT_IDX = 114
const FSPICS5_OUT_IDX = 115
const TWAI_RX_IDX = 116
const TWAI_TX_IDX = 116
const TWAI_BUS_OFF_ON_IDX = 117
const TWAI_CLKOUT_IDX = 118
const SUBSPICLK_OUT_IDX = 119
const SUBSPIQ_IN_IDX = 120
const SUBSPIQ_OUT_IDX = 120
const SUBSPID_IN_IDX = 121
const SUBSPID_OUT_IDX = 121
const SUBSPIHD_IN_IDX = 122
const SUBSPIHD_OUT_IDX = 122
const SUBSPIWP_IN_IDX = 123
const SUBSPIWP_OUT_IDX = 123
const SUBSPICS0_OUT_IDX = 124
const SUBSPICS1_OUT_IDX = 125
const FSPIDQS_OUT_IDX = 126
const SPI3_CS2_OUT_IDX = 127
const I2S0O_SD1_OUT_IDX = 128
const CORE1_GPIO_IN0_IDX = 129
const CORE1_GPIO_OUT0_IDX = 129
const CORE1_GPIO_IN1_IDX = 130
const CORE1_GPIO_OUT1_IDX = 130
const CORE1_GPIO_IN2_IDX = 131
const CORE1_GPIO_OUT2_IDX = 131
const LCD_CS_IDX = 132
const CAM_DATA_IN0_IDX = 133
const LCD_DATA_OUT0_IDX = 133
const CAM_DATA_IN1_IDX = 134
const LCD_DATA_OUT1_IDX = 134
const CAM_DATA_IN2_IDX = 135
const LCD_DATA_OUT2_IDX = 135
const CAM_DATA_IN3_IDX = 136
const LCD_DATA_OUT3_IDX = 136
const CAM_DATA_IN4_IDX = 137
const LCD_DATA_OUT4_IDX = 137
const CAM_DATA_IN5_IDX = 138
const LCD_DATA_OUT5_IDX = 138
const CAM_DATA_IN6_IDX = 139
const LCD_DATA_OUT6_IDX = 139
const CAM_DATA_IN7_IDX = 140
const LCD_DATA_OUT7_IDX = 140
const CAM_DATA_IN8_IDX = 141
const LCD_DATA_OUT8_IDX = 141
const CAM_DATA_IN9_IDX = 142
const LCD_DATA_OUT9_IDX = 142
const CAM_DATA_IN10_IDX = 143
const LCD_DATA_OUT10_IDX = 143
const CAM_DATA_IN11_IDX = 144
const LCD_DATA_OUT11_IDX = 144
const CAM_DATA_IN12_IDX = 145
const LCD_DATA_OUT12_IDX = 145
const CAM_DATA_IN13_IDX = 146
const LCD_DATA_OUT13_IDX = 146
const CAM_DATA_IN14_IDX = 147
const LCD_DATA_OUT14_IDX = 147
const CAM_DATA_IN15_IDX = 148
const LCD_DATA_OUT15_IDX = 148
const CAM_PCLK_IDX = 149
const CAM_CLK_IDX = 149
const CAM_H_ENABLE_IDX = 150
const LCD_H_ENABLE_IDX = 150
const CAM_H_SYNC_IDX = 151
const LCD_H_SYNC_IDX = 151
const CAM_V_SYNC_IDX = 152
const LCD_V_SYNC_IDX = 152
const LCD_DC_IDX = 153
const LCD_PCLK_IDX = 154
const SUBSPID4_IN_IDX = 155
const SUBSPID4_OUT_IDX = 155
const SUBSPID5_IN_IDX = 156
const SUBSPID5_OUT_IDX = 156
const SUBSPID6_IN_IDX = 157
const SUBSPID6_OUT_IDX = 157
const SUBSPID7_IN_IDX = 158
const SUBSPID7_OUT_IDX = 158
const SUBSPIDQS_IN_IDX = 159
const SUBSPIDQS_OUT_IDX = 159
const PWM0_SYNC0_IN_IDX = 160
const PWM0_OUT0A_IDX = 160
const PWM0_SYNC1_IN_IDX = 161
const PWM0_OUT0B_IDX = 161
const PWM0_SYNC2_IN_IDX = 162
const PWM0_OUT1A_IDX = 162
const PWM0_F0_IN_IDX = 163
const PWM0_OUT1B_IDX = 163
const PWM0_F1_IN_IDX = 164
const PWM0_OUT2A_IDX = 164
const PWM0_F2_IN_IDX = 165
const PWM0_OUT2B_IDX = 165
const PWM0_CAP0_IN_IDX = 166
const PWM1_OUT0A_IDX = 166
const PWM0_CAP1_IN_IDX = 167
const PWM1_OUT0B_IDX = 167
const PWM0_CAP2_IN_IDX = 168
const PWM1_OUT1A_IDX = 168
const PWM1_SYNC0_IN_IDX = 169
const PWM1_OUT1B_IDX = 169
const PWM1_SYNC1_IN_IDX = 170
const PWM1_OUT2A_IDX = 170
const PWM1_SYNC2_IN_IDX = 171
const PWM1_OUT2B_IDX = 171
const PWM1_F0_IN_IDX = 172
const SDHOST_CCLK_OUT_1_IDX = 172
const PWM1_F1_IN_IDX = 173
const SDHOST_CCLK_OUT_2_IDX = 173
const PWM1_F2_IN_IDX = 174
const SDHOST_RST_N_1_IDX = 174
const PWM1_CAP0_IN_IDX = 175
const SDHOST_RST_N_2_IDX = 175
const PWM1_CAP1_IN_IDX = 176
const PWM1_CAP2_IN_IDX = 177
const SDIO_TOHOST_INT_OUT_IDX = 177
const SDHOST_CCMD_IN_1_IDX = 178
const SDHOST_CCMD_OUT_1_IDX = 178
const SDHOST_CCMD_IN_2_IDX = 179
const SDHOST_CCMD_OUT_2_IDX = 179
const SDHOST_CDATA_IN_10_IDX = 180
const SDHOST_CDATA_OUT_10_IDX = 180
const SDHOST_CDATA_IN_11_IDX = 181
const SDHOST_CDATA_OUT_11_IDX = 181
const SDHOST_CDATA_IN_12_IDX = 182
const SDHOST_CDATA_OUT_12_IDX = 182
const SDHOST_CDATA_IN_13_IDX = 183
const SDHOST_CDATA_OUT_13_IDX = 183
const SDHOST_CDATA_IN_14_IDX = 184
const SDHOST_CDATA_OUT_14_IDX = 184
const SDHOST_CDATA_IN_15_IDX = 185
const SDHOST_CDATA_OUT_15_IDX = 185
const SDHOST_CDATA_IN_16_IDX = 186
const SDHOST_CDATA_OUT_16_IDX = 186
const SDHOST_CDATA_IN_17_IDX = 187
const SDHOST_CDATA_OUT_17_IDX = 187
const PCMFSYNC_IN_IDX = 188
const BT_AUDIO0_IRQ_IDX = 188
const PCMCLK_IN_IDX = 189
const BT_AUDIO1_IRQ_IDX = 189
const PCMDIN_IDX = 190
const BT_AUDIO2_IRQ_IDX = 190
const RW_WAKEUP_REQ_IDX = 191
const BLE_AUDIO0_IRQ_IDX = 191
const SDHOST_DATA_STROBE_1_IDX = 192
const BLE_AUDIO1_IRQ_IDX = 192
const SDHOST_DATA_STROBE_2_IDX = 193
const BLE_AUDIO2_IRQ_IDX = 193
const SDHOST_CARD_DETECT_N_1_IDX = 194
const PCMFSYNC_OUT_IDX = 194
const SDHOST_CARD_DETECT_N_2_IDX = 195
const PCMCLK_OUT_IDX = 195
const SDHOST_CARD_WRITE_PRT_1_IDX = 196
const PCMDOUT_IDX = 196
const SDHOST_CARD_WRITE_PRT_2_IDX = 197
const BLE_AUDIO_SYNC0_P_IDX = 197
const SDHOST_CARD_INT_N_1_IDX = 198
const BLE_AUDIO_SYNC1_P_IDX = 198
const SDHOST_CARD_INT_N_2_IDX = 199
const BLE_AUDIO_SYNC2_P_IDX = 199
const ANT_SEL0_IDX = 200
const ANT_SEL1_IDX = 201
const ANT_SEL2_IDX = 202
const ANT_SEL3_IDX = 203
const ANT_SEL4_IDX = 204
const ANT_SEL5_IDX = 205
const ANT_SEL6_IDX = 206
const ANT_SEL7_IDX = 207
const SIG_IN_FUNC_208_IDX = 208
const SIG_IN_FUNC208_IDX = 208
const SIG_IN_FUNC_209_IDX = 209
const SIG_IN_FUNC209_IDX = 209
const SIG_IN_FUNC_210_IDX = 210
const SIG_IN_FUNC210_IDX = 210
const SIG_IN_FUNC_211_IDX = 211
const SIG_IN_FUNC211_IDX = 211
const SIG_IN_FUNC_212_IDX = 212
const SIG_IN_FUNC212_IDX = 212
const SDHOST_CDATA_IN_20_IDX = 213
const SDHOST_CDATA_OUT_20_IDX = 213
const SDHOST_CDATA_IN_21_IDX = 214
const SDHOST_CDATA_OUT_21_IDX = 214
const SDHOST_CDATA_IN_22_IDX = 215
const SDHOST_CDATA_OUT_22_IDX = 215
const SDHOST_CDATA_IN_23_IDX = 216
const SDHOST_CDATA_OUT_23_IDX = 216
const SDHOST_CDATA_IN_24_IDX = 217
const SDHOST_CDATA_OUT_24_IDX = 217
const SDHOST_CDATA_IN_25_IDX = 218
const SDHOST_CDATA_OUT_25_IDX = 218
const SDHOST_CDATA_IN_26_IDX = 219
const SDHOST_CDATA_OUT_26_IDX = 219
const SDHOST_CDATA_IN_27_IDX = 220
const SDHOST_CDATA_OUT_27_IDX = 220
const PRO_ALONEGPIO_IN0_IDX = 221
const PRO_ALONEGPIO_OUT0_IDX = 221
const PRO_ALONEGPIO_IN1_IDX = 222
const PRO_ALONEGPIO_OUT1_IDX = 222
const PRO_ALONEGPIO_IN2_IDX = 223
const PRO_ALONEGPIO_OUT2_IDX = 223
const PRO_ALONEGPIO_IN3_IDX = 224
const PRO_ALONEGPIO_OUT3_IDX = 224
const PRO_ALONEGPIO_IN4_IDX = 225
const PRO_ALONEGPIO_OUT4_IDX = 225
const PRO_ALONEGPIO_IN5_IDX = 226
const PRO_ALONEGPIO_OUT5_IDX = 226
const PRO_ALONEGPIO_IN6_IDX = 227
const PRO_ALONEGPIO_OUT6_IDX = 227
const PRO_ALONEGPIO_IN7_IDX = 228
const PRO_ALONEGPIO_OUT7_IDX = 228
const SYNCERR_IDX = 229
const SYNCFOUND_FLAG_IDX = 230
const EVT_CNTL_IMMEDIATE_ABORT_IDX = 231
const LINKLBL_IDX = 232
const DATA_EN_IDX = 233
const DATA_IDX = 234
const PKT_TX_ON_IDX = 235
const PKT_RX_ON_IDX = 236
const RW_TX_ON_IDX = 237
const RW_RX_ON_IDX = 238
const EVT_REQ_P_IDX = 239
const EVT_STOP_P_IDX = 240
const BT_MODE_ON_IDX = 241
const GPIO_LC_DIAG0_IDX = 242
const GPIO_LC_DIAG1_IDX = 243
const GPIO_LC_DIAG2_IDX = 244
const CH_IDX_IDX = 245
const RX_WINDOW_IDX = 246
const UPDATE_RX_IDX = 247
const RX_STATUS_IDX = 248
const CLK_GPIO_IDX = 249
const NBT_BLE_IDX = 250
const USB_JTAG_TDO_BRIDGE_IDX = 251
const USB_JTAG_TRST_IDX = 251
const CORE1_GPIO_IN3_IDX = 252
const CORE1_GPIO_OUT3_IDX = 252
const CORE1_GPIO_IN4_IDX = 253
const CORE1_GPIO_OUT4_IDX = 253
const CORE1_GPIO_IN5_IDX = 254
const CORE1_GPIO_OUT5_IDX = 254
const CORE1_GPIO_IN6_IDX = 255
const CORE1_GPIO_OUT6_IDX = 255
const SIG_GPIO_OUT_IDX = 256
const GPIO_MAP_DATE_IDX = 0x1907040
const SPI_MEM_FLASH_READ_V = 0x1
const SPI_MEM_FLASH_READ_S = 31
const SPI_MEM_FLASH_WREN_V = 0x1
const SPI_MEM_FLASH_WREN_S = 30
const SPI_MEM_FLASH_WRDI_V = 0x1
const SPI_MEM_FLASH_WRDI_S = 29
const SPI_MEM_FLASH_RDID_V = 0x1
const SPI_MEM_FLASH_RDID_S = 28
const SPI_MEM_FLASH_RDSR_V = 0x1
const SPI_MEM_FLASH_RDSR_S = 27
const SPI_MEM_FLASH_WRSR_V = 0x1
const SPI_MEM_FLASH_WRSR_S = 26
const SPI_MEM_FLASH_PP_V = 0x1
const SPI_MEM_FLASH_PP_S = 25
const SPI_MEM_FLASH_SE_V = 0x1
const SPI_MEM_FLASH_SE_S = 24
const SPI_MEM_FLASH_BE_V = 0x1
const SPI_MEM_FLASH_BE_S = 23
const SPI_MEM_FLASH_CE_V = 0x1
const SPI_MEM_FLASH_CE_S = 22
const SPI_MEM_FLASH_DP_V = 0x1
const SPI_MEM_FLASH_DP_S = 21
const SPI_MEM_FLASH_RES_V = 0x1
const SPI_MEM_FLASH_RES_S = 20
const SPI_MEM_FLASH_HPM_V = 0x1
const SPI_MEM_FLASH_HPM_S = 19
const SPI_MEM_USR_V = 0x1
const SPI_MEM_USR_S = 18
const SPI_MEM_FLASH_PE_V = 0x1
const SPI_MEM_FLASH_PE_S = 17
const SPI_MEM_USR_ADDR_VALUE = 0xFFFFFFFF
const SPI_MEM_USR_ADDR_VALUE_V = 0xFFFFFFFF
const SPI_MEM_USR_ADDR_VALUE_S = 0
const SPI_MEM_FREAD_QIO_V = 0x1
const SPI_MEM_FREAD_QIO_S = 24
const SPI_MEM_FREAD_DIO_V = 0x1
const SPI_MEM_FREAD_DIO_S = 23
const SPI_MEM_WRSR_2B_V = 0x1
const SPI_MEM_WRSR_2B_S = 22
const SPI_MEM_WP_REG_V = 0x1
const SPI_MEM_WP_REG_S = 21
const SPI_MEM_FREAD_QUAD_V = 0x1
const SPI_MEM_FREAD_QUAD_S = 20
const SPI_MEM_D_POL_V = 0x1
const SPI_MEM_D_POL_S = 19
const SPI_MEM_Q_POL_V = 0x1
const SPI_MEM_Q_POL_S = 18
const SPI_MEM_RESANDRES_V = 0x1
const SPI_MEM_RESANDRES_S = 15
const SPI_MEM_FREAD_DUAL_V = 0x1
const SPI_MEM_FREAD_DUAL_S = 14
const SPI_MEM_FASTRD_MODE_V = 0x1
const SPI_MEM_FASTRD_MODE_S = 13
const SPI_MEM_TX_CRC_EN_V = 0x1
const SPI_MEM_TX_CRC_EN_S = 11
const SPI_MEM_FCS_CRC_EN_V = 0x1
const SPI_MEM_FCS_CRC_EN_S = 10
const SPI_MEM_FCMD_OCT_V = 0x1
const SPI_MEM_FCMD_OCT_S = 9
const SPI_MEM_FCMD_QUAD_V = 0x1
const SPI_MEM_FCMD_QUAD_S = 8
const SPI_MEM_FCMD_DUAL_V = 0x1
const SPI_MEM_FCMD_DUAL_S = 7
const SPI_MEM_FADDR_OCT_V = 0x1
const SPI_MEM_FADDR_OCT_S = 6
const SPI_MEM_FDIN_OCT_V = 0x1
const SPI_MEM_FDIN_OCT_S = 5
const SPI_MEM_FDOUT_OCT_V = 0x1
const SPI_MEM_FDOUT_OCT_S = 4
const SPI_MEM_FDUMMY_OUT_V = 0x1
const SPI_MEM_FDUMMY_OUT_S = 3
const SPI_MEM_RXFIFO_RST_V = 0x1
const SPI_MEM_RXFIFO_RST_S = 30
const SPI_MEM_CS_HOLD_DLY_RES = 0x000003FF
const SPI_MEM_CS_HOLD_DLY_RES_V = 0x3FF
const SPI_MEM_CS_HOLD_DLY_RES_S = 2
const SPI_MEM_CLK_MODE = 0x00000003
const SPI_MEM_CLK_MODE_V = 0x3
const SPI_MEM_CLK_MODE_S = 0
const SPI_MEM_SYNC_RESET_V = 0x1
const SPI_MEM_SYNC_RESET_S = 31
const SPI_MEM_CS_HOLD_DELAY = 0x0000003F
const SPI_MEM_CS_HOLD_DELAY_V = 0x3F
const SPI_MEM_CS_HOLD_DELAY_S = 25
const SPI_MEM_ECC_16TO18_BYTE_EN_V = 0x1
const SPI_MEM_ECC_16TO18_BYTE_EN_S = 14
const SPI_MEM_ECC_SKIP_PAGE_CORNER_V = 0x1
const SPI_MEM_ECC_SKIP_PAGE_CORNER_S = 13
const SPI_MEM_ECC_CS_HOLD_TIME = 0x00000007
const SPI_MEM_ECC_CS_HOLD_TIME_V = 0x7
const SPI_MEM_ECC_CS_HOLD_TIME_S = 10
const SPI_MEM_CS_HOLD_TIME = 0x0000001F
const SPI_MEM_CS_HOLD_TIME_V = 0x1F
const SPI_MEM_CS_HOLD_TIME_S = 5
const SPI_MEM_CS_SETUP_TIME = 0x0000001F
const SPI_MEM_CS_SETUP_TIME_V = 0x1F
const SPI_MEM_CS_SETUP_TIME_S = 0
const SPI_MEM_CLK_EQU_SYSCLK_V = 0x1
const SPI_MEM_CLK_EQU_SYSCLK_S = 31
const SPI_MEM_CLKCNT_N = 0x000000FF
const SPI_MEM_CLKCNT_N_V = 0xFF
const SPI_MEM_CLKCNT_N_S = 16
const SPI_MEM_CLKCNT_H = 0x000000FF
const SPI_MEM_CLKCNT_H_V = 0xFF
const SPI_MEM_CLKCNT_H_S = 8
const SPI_MEM_CLKCNT_L = 0x000000FF
const SPI_MEM_CLKCNT_L_V = 0xFF
const SPI_MEM_CLKCNT_L_S = 0
const SPI_MEM_USR_COMMAND_V = 0x1
const SPI_MEM_USR_COMMAND_S = 31
const SPI_MEM_USR_ADDR_V = 0x1
const SPI_MEM_USR_ADDR_S = 30
const SPI_MEM_USR_DUMMY_V = 0x1
const SPI_MEM_USR_DUMMY_S = 29
const SPI_MEM_USR_MISO_V = 0x1
const SPI_MEM_USR_MISO_S = 28
const SPI_MEM_USR_MOSI_V = 0x1
const SPI_MEM_USR_MOSI_S = 27
const SPI_MEM_USR_DUMMY_IDLE_V = 0x1
const SPI_MEM_USR_DUMMY_IDLE_S = 26
const SPI_MEM_USR_MOSI_HIGHPART_V = 0x1
const SPI_MEM_USR_MOSI_HIGHPART_S = 25
const SPI_MEM_USR_MISO_HIGHPART_V = 0x1
const SPI_MEM_USR_MISO_HIGHPART_S = 24
const SPI_MEM_FWRITE_QIO_V = 0x1
const SPI_MEM_FWRITE_QIO_S = 15
const SPI_MEM_FWRITE_DIO_V = 0x1
const SPI_MEM_FWRITE_DIO_S = 14
const SPI_MEM_FWRITE_QUAD_V = 0x1
const SPI_MEM_FWRITE_QUAD_S = 13
const SPI_MEM_FWRITE_DUAL_V = 0x1
const SPI_MEM_FWRITE_DUAL_S = 12
const SPI_MEM_CK_OUT_EDGE_V = 0x1
const SPI_MEM_CK_OUT_EDGE_S = 9
const SPI_MEM_CS_SETUP_V = 0x1
const SPI_MEM_CS_SETUP_S = 7
const SPI_MEM_CS_HOLD_V = 0x1
const SPI_MEM_CS_HOLD_S = 6
const SPI_MEM_USR_ADDR_BITLEN = 0x0000003F
const SPI_MEM_USR_ADDR_BITLEN_V = 0x3F
const SPI_MEM_USR_ADDR_BITLEN_S = 26
const SPI_MEM_USR_DUMMY_CYCLELEN = 0x0000003F
const SPI_MEM_USR_DUMMY_CYCLELEN_V = 0x3F
const SPI_MEM_USR_DUMMY_CYCLELEN_S = 0
const SPI_MEM_USR_COMMAND_BITLEN = 0x0000000F
const SPI_MEM_USR_COMMAND_BITLEN_V = 0xF
const SPI_MEM_USR_COMMAND_BITLEN_S = 28
const SPI_MEM_USR_COMMAND_VALUE = 0x0000FFFF
const SPI_MEM_USR_COMMAND_VALUE_V = 0xFFFF
const SPI_MEM_USR_COMMAND_VALUE_S = 0
const SPI_MEM_USR_MOSI_DBITLEN = 0x000003FF
const SPI_MEM_USR_MOSI_DBITLEN_V = 0x3FF
const SPI_MEM_USR_MOSI_DBITLEN_S = 0
const SPI_MEM_USR_MISO_DBITLEN = 0x000003FF
const SPI_MEM_USR_MISO_DBITLEN_V = 0x3FF
const SPI_MEM_USR_MISO_DBITLEN_S = 0
const SPI_MEM_WB_MODE = 0x000000FF
const SPI_MEM_WB_MODE_V = 0xFF
const SPI_MEM_WB_MODE_S = 16
const SPI_MEM_STATUS = 0x0000FFFF
const SPI_MEM_STATUS_V = 0xFFFF
const SPI_MEM_STATUS_S = 0
const SPI_MEM_EXT_ADDR = 0xFFFFFFFF
const SPI_MEM_EXT_ADDR_V = 0xFFFFFFFF
const SPI_MEM_EXT_ADDR_S = 0
const SPI_MEM_AUTO_PER_V = 0x1
const SPI_MEM_AUTO_PER_S = 11
const SPI_MEM_CS_KEEP_ACTIVE_V = 0x1
const SPI_MEM_CS_KEEP_ACTIVE_S = 10
const SPI_MEM_CK_IDLE_EDGE_V = 0x1
const SPI_MEM_CK_IDLE_EDGE_S = 9
const SPI_MEM_SSUB_PIN_V = 0x1
const SPI_MEM_SSUB_PIN_S = 8
const SPI_MEM_FSUB_PIN_V = 0x1
const SPI_MEM_FSUB_PIN_S = 7
const SPI_MEM_CS1_DIS_V = 0x1
const SPI_MEM_CS1_DIS_S = 1
const SPI_MEM_CS0_DIS_V = 0x1
const SPI_MEM_CS0_DIS_S = 0
const SPI_MEM_TX_CRC_DATA = 0xFFFFFFFF
const SPI_MEM_TX_CRC_DATA_V = 0xFFFFFFFF
const SPI_MEM_TX_CRC_DATA_S = 0
const SPI_MEM_FADDR_QUAD_V = 0x1
const SPI_MEM_FADDR_QUAD_S = 8
const SPI_MEM_FDOUT_QUAD_V = 0x1
const SPI_MEM_FDOUT_QUAD_S = 7
const SPI_MEM_FDIN_QUAD_V = 0x1
const SPI_MEM_FDIN_QUAD_S = 6
const SPI_MEM_FADDR_DUAL_V = 0x1
const SPI_MEM_FADDR_DUAL_S = 5
const SPI_MEM_FDOUT_DUAL_V = 0x1
const SPI_MEM_FDOUT_DUAL_S = 4
const SPI_MEM_FDIN_DUAL_V = 0x1
const SPI_MEM_FDIN_DUAL_S = 3
const SPI_MEM_CACHE_FLASH_USR_CMD_V = 0x1
const SPI_MEM_CACHE_FLASH_USR_CMD_S = 2
const SPI_MEM_CACHE_USR_CMD_4BYTE_V = 0x1
const SPI_MEM_CACHE_USR_CMD_4BYTE_S = 1
const SPI_MEM_CACHE_REQ_EN_V = 0x1
const SPI_MEM_CACHE_REQ_EN_S = 0
const SPI_MEM_SRAM_WDUMMY_CYCLELEN = 0x0000003F
const SPI_MEM_SRAM_WDUMMY_CYCLELEN_V = 0x3F
const SPI_MEM_SRAM_WDUMMY_CYCLELEN_S = 22
const SPI_MEM_SRAM_OCT_V = 0x1
const SPI_MEM_SRAM_OCT_S = 21
const SPI_MEM_CACHE_SRAM_USR_WCMD_V = 0x1
const SPI_MEM_CACHE_SRAM_USR_WCMD_S = 20
const SPI_MEM_SRAM_ADDR_BITLEN = 0x0000003F
const SPI_MEM_SRAM_ADDR_BITLEN_V = 0x3F
const SPI_MEM_SRAM_ADDR_BITLEN_S = 14
const SPI_MEM_SRAM_RDUMMY_CYCLELEN = 0x0000003F
const SPI_MEM_SRAM_RDUMMY_CYCLELEN_V = 0x3F
const SPI_MEM_SRAM_RDUMMY_CYCLELEN_S = 6
const SPI_MEM_CACHE_SRAM_USR_RCMD_V = 0x1
const SPI_MEM_CACHE_SRAM_USR_RCMD_S = 5
const SPI_MEM_USR_RD_SRAM_DUMMY_V = 0x1
const SPI_MEM_USR_RD_SRAM_DUMMY_S = 4
const SPI_MEM_USR_WR_SRAM_DUMMY_V = 0x1
const SPI_MEM_USR_WR_SRAM_DUMMY_S = 3
const SPI_MEM_USR_SRAM_QIO_V = 0x1
const SPI_MEM_USR_SRAM_QIO_S = 2
const SPI_MEM_USR_SRAM_DIO_V = 0x1
const SPI_MEM_USR_SRAM_DIO_S = 1
const SPI_MEM_CACHE_USR_SCMD_4BYTE_V = 0x1
const SPI_MEM_CACHE_USR_SCMD_4BYTE_S = 0
const SPI_MEM_SDUMMY_OUT_V = 0x1
const SPI_MEM_SDUMMY_OUT_S = 22
const SPI_MEM_SCMD_OCT_V = 0x1
const SPI_MEM_SCMD_OCT_S = 21
const SPI_MEM_SADDR_OCT_V = 0x1
const SPI_MEM_SADDR_OCT_S = 20
const SPI_MEM_SDOUT_OCT_V = 0x1
const SPI_MEM_SDOUT_OCT_S = 19
const SPI_MEM_SDIN_OCT_V = 0x1
const SPI_MEM_SDIN_OCT_S = 18
const SPI_MEM_SCMD_QUAD_V = 0x1
const SPI_MEM_SCMD_QUAD_S = 17
const SPI_MEM_SADDR_QUAD_V = 0x1
const SPI_MEM_SADDR_QUAD_S = 16
const SPI_MEM_SDOUT_QUAD_V = 0x1
const SPI_MEM_SDOUT_QUAD_S = 15
const SPI_MEM_SDIN_QUAD_V = 0x1
const SPI_MEM_SDIN_QUAD_S = 14
const SPI_MEM_SCMD_DUAL_V = 0x1
const SPI_MEM_SCMD_DUAL_S = 13
const SPI_MEM_SADDR_DUAL_V = 0x1
const SPI_MEM_SADDR_DUAL_S = 12
const SPI_MEM_SDOUT_DUAL_V = 0x1
const SPI_MEM_SDOUT_DUAL_S = 11
const SPI_MEM_SDIN_DUAL_V = 0x1
const SPI_MEM_SDIN_DUAL_S = 10
const SPI_MEM_SWB_MODE = 0x000000FF
const SPI_MEM_SWB_MODE_V = 0xFF
const SPI_MEM_SWB_MODE_S = 2
const SPI_MEM_SCLK_MODE = 0x00000003
const SPI_MEM_SCLK_MODE_V = 0x3
const SPI_MEM_SCLK_MODE_S = 0
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_BITLEN = 0x0000000F
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_BITLEN_V = 0xF
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_BITLEN_S = 28
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE = 0x0000FFFF
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE_V = 0xFFFF
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE_S = 0
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_BITLEN = 0x0000000F
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_BITLEN_V = 0xF
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_BITLEN_S = 28
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE = 0x0000FFFF
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE_V = 0xFFFF
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE_S = 0
const SPI_MEM_SCLK_EQU_SYSCLK_V = 0x1
const SPI_MEM_SCLK_EQU_SYSCLK_S = 31
const SPI_MEM_SCLKCNT_N = 0x000000FF
const SPI_MEM_SCLKCNT_N_V = 0xFF
const SPI_MEM_SCLKCNT_N_S = 16
const SPI_MEM_SCLKCNT_H = 0x000000FF
const SPI_MEM_SCLKCNT_H_V = 0xFF
const SPI_MEM_SCLKCNT_H_S = 8
const SPI_MEM_SCLKCNT_L = 0x000000FF
const SPI_MEM_SCLKCNT_L_V = 0xFF
const SPI_MEM_SCLKCNT_L_S = 0
const SPI_MEM_ST = 0x00000007
const SPI_MEM_ST_V = 0x7
const SPI_MEM_ST_S = 0
const SPI_MEM_BUF0 = 0xFFFFFFFF
const SPI_MEM_BUF0_V = 0xFFFFFFFF
const SPI_MEM_BUF0_S = 0
const SPI_MEM_BUF1 = 0xFFFFFFFF
const SPI_MEM_BUF1_V = 0xFFFFFFFF
const SPI_MEM_BUF1_S = 0
const SPI_MEM_BUF2 = 0xFFFFFFFF
const SPI_MEM_BUF2_V = 0xFFFFFFFF
const SPI_MEM_BUF2_S = 0
const SPI_MEM_BUF3 = 0xFFFFFFFF
const SPI_MEM_BUF3_V = 0xFFFFFFFF
const SPI_MEM_BUF3_S = 0
const SPI_MEM_BUF4 = 0xFFFFFFFF
const SPI_MEM_BUF4_V = 0xFFFFFFFF
const SPI_MEM_BUF4_S = 0
const SPI_MEM_BUF5 = 0xFFFFFFFF
const SPI_MEM_BUF5_V = 0xFFFFFFFF
const SPI_MEM_BUF5_S = 0
const SPI_MEM_BUF6 = 0xFFFFFFFF
const SPI_MEM_BUF6_V = 0xFFFFFFFF
const SPI_MEM_BUF6_S = 0
const SPI_MEM_BUF7 = 0xFFFFFFFF
const SPI_MEM_BUF7_V = 0xFFFFFFFF
const SPI_MEM_BUF7_S = 0
const SPI_MEM_BUF8 = 0xFFFFFFFF
const SPI_MEM_BUF8_V = 0xFFFFFFFF
const SPI_MEM_BUF8_S = 0
const SPI_MEM_BUF9 = 0xFFFFFFFF
const SPI_MEM_BUF9_V = 0xFFFFFFFF
const SPI_MEM_BUF9_S = 0
const SPI_MEM_BUF10 = 0xFFFFFFFF
const SPI_MEM_BUF10_V = 0xFFFFFFFF
const SPI_MEM_BUF10_S = 0
const SPI_MEM_BUF11 = 0xFFFFFFFF
const SPI_MEM_BUF11_V = 0xFFFFFFFF
const SPI_MEM_BUF11_S = 0
const SPI_MEM_BUF12 = 0xFFFFFFFF
const SPI_MEM_BUF12_V = 0xFFFFFFFF
const SPI_MEM_BUF12_S = 0
const SPI_MEM_BUF13 = 0xFFFFFFFF
const SPI_MEM_BUF13_V = 0xFFFFFFFF
const SPI_MEM_BUF13_S = 0
const SPI_MEM_BUF14 = 0xFFFFFFFF
const SPI_MEM_BUF14_V = 0xFFFFFFFF
const SPI_MEM_BUF14_S = 0
const SPI_MEM_BUF15 = 0xFFFFFFFF
const SPI_MEM_BUF15_V = 0xFFFFFFFF
const SPI_MEM_BUF15_S = 0
const SPI_MEM_WAITI_DUMMY_CYCLELEN = 0x0000003F
const SPI_MEM_WAITI_DUMMY_CYCLELEN_V = 0x3F
const SPI_MEM_WAITI_DUMMY_CYCLELEN_S = 10
const SPI_MEM_WAITI_CMD = 0x000000FF
const SPI_MEM_WAITI_CMD_V = 0xFF
const SPI_MEM_WAITI_CMD_S = 2
const SPI_MEM_WAITI_DUMMY_V = 0x1
const SPI_MEM_WAITI_DUMMY_S = 1
const SPI_MEM_WAITI_EN_V = 0x1
const SPI_MEM_WAITI_EN_S = 0
const SPI_MEM_PESR_IDLE_EN_V = 0x1
const SPI_MEM_PESR_IDLE_EN_S = 5
const SPI_MEM_PES_PER_EN_V = 0x1
const SPI_MEM_PES_PER_EN_S = 4
const SPI_MEM_FLASH_PES_WAIT_EN_V = 0x1
const SPI_MEM_FLASH_PES_WAIT_EN_S = 3
const SPI_MEM_FLASH_PER_WAIT_EN_V = 0x1
const SPI_MEM_FLASH_PER_WAIT_EN_S = 2
const SPI_MEM_FLASH_PES_V = 0x1
const SPI_MEM_FLASH_PES_S = 1
const SPI_MEM_FLASH_PER_V = 0x1
const SPI_MEM_FLASH_PER_S = 0
const SPI_MEM_FLASH_PES_COMMAND = 0x000000FF
const SPI_MEM_FLASH_PES_COMMAND_V = 0xFF
const SPI_MEM_FLASH_PES_COMMAND_S = 9
const SPI_MEM_FLASH_PER_COMMAND = 0x000000FF
const SPI_MEM_FLASH_PER_COMMAND_V = 0xFF
const SPI_MEM_FLASH_PER_COMMAND_S = 1
const SPI_MEM_FLASH_PES_EN_V = 0x1
const SPI_MEM_FLASH_PES_EN_S = 0
const SPI_MEM_FLASH_PES_DLY_256_V = 0x1
const SPI_MEM_FLASH_PES_DLY_256_S = 6
const SPI_MEM_FLASH_PER_DLY_256_V = 0x1
const SPI_MEM_FLASH_PER_DLY_256_S = 5
const SPI_MEM_FLASH_DP_DLY_256_V = 0x1
const SPI_MEM_FLASH_DP_DLY_256_S = 4
const SPI_MEM_FLASH_RES_DLY_256_V = 0x1
const SPI_MEM_FLASH_RES_DLY_256_S = 3
const SPI_MEM_FLASH_HPM_DLY_256_V = 0x1
const SPI_MEM_FLASH_HPM_DLY_256_S = 2
const SPI_MEM_FLASH_SUS_V = 0x1
const SPI_MEM_FLASH_SUS_S = 0
const SPI_MEM_EXTRA_DUMMY_CYCLELEN = 0x00000007
const SPI_MEM_EXTRA_DUMMY_CYCLELEN_V = 0x7
const SPI_MEM_EXTRA_DUMMY_CYCLELEN_S = 2
const SPI_MEM_TIMING_CALI_V = 0x1
const SPI_MEM_TIMING_CALI_S = 1
const SPI_MEM_TIMING_CLK_ENA_V = 0x1
const SPI_MEM_TIMING_CLK_ENA_S = 0
const SPI_MEM_DINS_MODE = 0x00000007
const SPI_MEM_DINS_MODE_V = 0x7
const SPI_MEM_DINS_MODE_S = 24
const SPI_MEM_DIN7_MODE = 0x00000007
const SPI_MEM_DIN7_MODE_V = 0x7
const SPI_MEM_DIN7_MODE_S = 21
const SPI_MEM_DIN6_MODE = 0x00000007
const SPI_MEM_DIN6_MODE_V = 0x7
const SPI_MEM_DIN6_MODE_S = 18
const SPI_MEM_DIN5_MODE = 0x00000007
const SPI_MEM_DIN5_MODE_V = 0x7
const SPI_MEM_DIN5_MODE_S = 15
const SPI_MEM_DIN4_MODE = 0x00000007
const SPI_MEM_DIN4_MODE_V = 0x7
const SPI_MEM_DIN4_MODE_S = 12
const SPI_MEM_DIN3_MODE = 0x00000007
const SPI_MEM_DIN3_MODE_V = 0x7
const SPI_MEM_DIN3_MODE_S = 9
const SPI_MEM_DIN2_MODE = 0x00000007
const SPI_MEM_DIN2_MODE_V = 0x7
const SPI_MEM_DIN2_MODE_S = 6
const SPI_MEM_DIN1_MODE = 0x00000007
const SPI_MEM_DIN1_MODE_V = 0x7
const SPI_MEM_DIN1_MODE_S = 3
const SPI_MEM_DIN0_MODE = 0x00000007
const SPI_MEM_DIN0_MODE_V = 0x7
const SPI_MEM_DIN0_MODE_S = 0
const SPI_MEM_DINS_NUM = 0x00000003
const SPI_MEM_DINS_NUM_V = 0x3
const SPI_MEM_DINS_NUM_S = 16
const SPI_MEM_DIN7_NUM = 0x00000003
const SPI_MEM_DIN7_NUM_V = 0x3
const SPI_MEM_DIN7_NUM_S = 14
const SPI_MEM_DIN6_NUM = 0x00000003
const SPI_MEM_DIN6_NUM_V = 0x3
const SPI_MEM_DIN6_NUM_S = 12
const SPI_MEM_DIN5_NUM = 0x00000003
const SPI_MEM_DIN5_NUM_V = 0x3
const SPI_MEM_DIN5_NUM_S = 10
const SPI_MEM_DIN4_NUM = 0x00000003
const SPI_MEM_DIN4_NUM_V = 0x3
const SPI_MEM_DIN4_NUM_S = 8
const SPI_MEM_DIN3_NUM = 0x00000003
const SPI_MEM_DIN3_NUM_V = 0x3
const SPI_MEM_DIN3_NUM_S = 6
const SPI_MEM_DIN2_NUM = 0x00000003
const SPI_MEM_DIN2_NUM_V = 0x3
const SPI_MEM_DIN2_NUM_S = 4
const SPI_MEM_DIN1_NUM = 0x00000003
const SPI_MEM_DIN1_NUM_V = 0x3
const SPI_MEM_DIN1_NUM_S = 2
const SPI_MEM_DIN0_NUM = 0x00000003
const SPI_MEM_DIN0_NUM_V = 0x3
const SPI_MEM_DIN0_NUM_S = 0
const SPI_MEM_DOUTS_MODE_V = 0x1
const SPI_MEM_DOUTS_MODE_S = 8
const SPI_MEM_DOUT7_MODE_V = 0x1
const SPI_MEM_DOUT7_MODE_S = 7
const SPI_MEM_DOUT6_MODE_V = 0x1
const SPI_MEM_DOUT6_MODE_S = 6
const SPI_MEM_DOUT5_MODE_V = 0x1
const SPI_MEM_DOUT5_MODE_S = 5
const SPI_MEM_DOUT4_MODE_V = 0x1
const SPI_MEM_DOUT4_MODE_S = 4
const SPI_MEM_DOUT3_MODE_V = 0x1
const SPI_MEM_DOUT3_MODE_S = 3
const SPI_MEM_DOUT2_MODE_V = 0x1
const SPI_MEM_DOUT2_MODE_S = 2
const SPI_MEM_DOUT1_MODE_V = 0x1
const SPI_MEM_DOUT1_MODE_S = 1
const SPI_MEM_DOUT0_MODE_V = 0x1
const SPI_MEM_DOUT0_MODE_S = 0
const SPI_MEM_SPI_SMEM_EXTRA_DUMMY_CYCLELEN = 0x00000007
const SPI_MEM_SPI_SMEM_EXTRA_DUMMY_CYCLELEN_V = 0x7
const SPI_MEM_SPI_SMEM_EXTRA_DUMMY_CYCLELEN_S = 2
const SPI_MEM_SPI_SMEM_TIMING_CALI_V = 0x1
const SPI_MEM_SPI_SMEM_TIMING_CALI_S = 1
const SPI_MEM_SPI_SMEM_TIMING_CLK_ENA_V = 0x1
const SPI_MEM_SPI_SMEM_TIMING_CLK_ENA_S = 0
const SPI_MEM_SPI_SMEM_DINS_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DINS_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DINS_MODE_S = 24
const SPI_MEM_SPI_SMEM_DIN7_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN7_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN7_MODE_S = 21
const SPI_MEM_SPI_SMEM_DIN6_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN6_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN6_MODE_S = 18
const SPI_MEM_SPI_SMEM_DIN5_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN5_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN5_MODE_S = 15
const SPI_MEM_SPI_SMEM_DIN4_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN4_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN4_MODE_S = 12
const SPI_MEM_SPI_SMEM_DIN3_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN3_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN3_MODE_S = 9
const SPI_MEM_SPI_SMEM_DIN2_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN2_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN2_MODE_S = 6
const SPI_MEM_SPI_SMEM_DIN1_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN1_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN1_MODE_S = 3
const SPI_MEM_SPI_SMEM_DIN0_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN0_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN0_MODE_S = 0
const SPI_MEM_SPI_SMEM_DINS_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DINS_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DINS_NUM_S = 16
const SPI_MEM_SPI_SMEM_DIN7_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN7_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN7_NUM_S = 14
const SPI_MEM_SPI_SMEM_DIN6_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN6_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN6_NUM_S = 12
const SPI_MEM_SPI_SMEM_DIN5_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN5_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN5_NUM_S = 10
const SPI_MEM_SPI_SMEM_DIN4_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN4_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN4_NUM_S = 8
const SPI_MEM_SPI_SMEM_DIN3_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN3_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN3_NUM_S = 6
const SPI_MEM_SPI_SMEM_DIN2_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN2_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN2_NUM_S = 4
const SPI_MEM_SPI_SMEM_DIN1_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN1_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN1_NUM_S = 2
const SPI_MEM_SPI_SMEM_DIN0_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN0_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN0_NUM_S = 0
const SPI_MEM_SPI_SMEM_DOUTS_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_DOUTS_MODE_S = 8
const SPI_MEM_SPI_SMEM_DOUT7_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_DOUT7_MODE_S = 7
const SPI_MEM_SPI_SMEM_DOUT6_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_DOUT6_MODE_S = 6
const SPI_MEM_SPI_SMEM_DOUT5_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_DOUT5_MODE_S = 5
const SPI_MEM_SPI_SMEM_DOUT4_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_DOUT4_MODE_S = 4
const SPI_MEM_SPI_SMEM_DOUT3_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_DOUT3_MODE_S = 3
const SPI_MEM_SPI_SMEM_DOUT2_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_DOUT2_MODE_S = 2
const SPI_MEM_SPI_SMEM_DOUT1_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_DOUT1_MODE_S = 1
const SPI_MEM_SPI_SMEM_DOUT0_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_DOUT0_MODE_S = 0
const SPI_MEM_SPI_FMEM_ECC_ERR_INT_EN_V = 0x1
const SPI_MEM_SPI_FMEM_ECC_ERR_INT_EN_S = 8
const SPI_MEM_ECC_ERR_INT_NUM = 0x000000FF
const SPI_MEM_ECC_ERR_INT_NUM_V = 0xFF
const SPI_MEM_ECC_ERR_INT_NUM_S = 0
const SPI_MEM_ECC_ERR_ADDR = 0xFFFFFFFF
const SPI_MEM_ECC_ERR_ADDR_V = 0xFFFFFFFF
const SPI_MEM_ECC_ERR_ADDR_S = 0
const SPI_MEM_ECC_ERR_CNT = 0x000000FF
const SPI_MEM_ECC_ERR_CNT_V = 0xFF
const SPI_MEM_ECC_ERR_CNT_S = 17
const SPI_MEM_ECC_BYTE_ERR_V = 0x1
const SPI_MEM_ECC_BYTE_ERR_S = 16
const SPI_MEM_ECC_CHK_ERR_BIT = 0x00000007
const SPI_MEM_ECC_CHK_ERR_BIT_V = 0x7
const SPI_MEM_ECC_CHK_ERR_BIT_S = 13
const SPI_MEM_ECC_DATA_ERR_BIT = 0x0000007F
const SPI_MEM_ECC_DATA_ERR_BIT_V = 0x7F
const SPI_MEM_ECC_DATA_ERR_BIT_S = 6
const SPI_MEM_SPI_SMEM_CS_HOLD_DELAY = 0x0000003F
const SPI_MEM_SPI_SMEM_CS_HOLD_DELAY_V = 0x3F
const SPI_MEM_SPI_SMEM_CS_HOLD_DELAY_S = 25
const SPI_MEM_SPI_SMEM_ECC_ERR_INT_EN_V = 0x1
const SPI_MEM_SPI_SMEM_ECC_ERR_INT_EN_S = 24
const SPI_MEM_SPI_SMEM_ECC_16TO18_BYTE_EN_V = 0x1
const SPI_MEM_SPI_SMEM_ECC_16TO18_BYTE_EN_S = 16
const SPI_MEM_SPI_SMEM_ECC_SKIP_PAGE_CORNER_V = 0x1
const SPI_MEM_SPI_SMEM_ECC_SKIP_PAGE_CORNER_S = 15
const SPI_MEM_SPI_SMEM_ECC_CS_HOLD_TIME = 0x00000007
const SPI_MEM_SPI_SMEM_ECC_CS_HOLD_TIME_V = 0x7
const SPI_MEM_SPI_SMEM_ECC_CS_HOLD_TIME_S = 12
const SPI_MEM_SPI_SMEM_CS_HOLD_TIME = 0x0000001F
const SPI_MEM_SPI_SMEM_CS_HOLD_TIME_V = 0x1F
const SPI_MEM_SPI_SMEM_CS_HOLD_TIME_S = 7
const SPI_MEM_SPI_SMEM_CS_SETUP_TIME = 0x0000001F
const SPI_MEM_SPI_SMEM_CS_SETUP_TIME_V = 0x1F
const SPI_MEM_SPI_SMEM_CS_SETUP_TIME_S = 2
const SPI_MEM_SPI_SMEM_CS_HOLD_V = 0x1
const SPI_MEM_SPI_SMEM_CS_HOLD_S = 1
const SPI_MEM_SPI_SMEM_CS_SETUP_V = 0x1
const SPI_MEM_SPI_SMEM_CS_SETUP_S = 0
const SPI_MEM_SPI_FMEM_HYPERBUS_CA_V = 0x1
const SPI_MEM_SPI_FMEM_HYPERBUS_CA_S = 30
const SPI_MEM_SPI_FMEM_OCTA_RAM_ADDR_V = 0x1
const SPI_MEM_SPI_FMEM_OCTA_RAM_ADDR_S = 29
const SPI_MEM_SPI_FMEM_CLK_DIFF_INV_V = 0x1
const SPI_MEM_SPI_FMEM_CLK_DIFF_INV_S = 28
const SPI_MEM_SPI_FMEM_HYPERBUS_DUMMY_2X_V = 0x1
const SPI_MEM_SPI_FMEM_HYPERBUS_DUMMY_2X_S = 27
const SPI_MEM_SPI_FMEM_DQS_CA_IN_V = 0x1
const SPI_MEM_SPI_FMEM_DQS_CA_IN_S = 26
const SPI_MEM_SPI_FMEM_HYPERBUS_MODE_V = 0x1
const SPI_MEM_SPI_FMEM_HYPERBUS_MODE_S = 25
const SPI_MEM_SPI_FMEM_CLK_DIFF_EN_V = 0x1
const SPI_MEM_SPI_FMEM_CLK_DIFF_EN_S = 24
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_MODE_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_MODE_S = 22
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_S = 21
const SPI_MEM_SPI_FMEM_USR_DDR_DQS_THD = 0x0000007F
const SPI_MEM_SPI_FMEM_USR_DDR_DQS_THD_V = 0x7F
const SPI_MEM_SPI_FMEM_USR_DDR_DQS_THD_S = 14
const SPI_MEM_SPI_FMEM_RX_DDR_MSK_EN_V = 0x1
const SPI_MEM_SPI_FMEM_RX_DDR_MSK_EN_S = 13
const SPI_MEM_SPI_FMEM_TX_DDR_MSK_EN_V = 0x1
const SPI_MEM_SPI_FMEM_TX_DDR_MSK_EN_S = 12
const SPI_MEM_SPI_FMEM_OUTMINBYTELEN = 0x0000007F
const SPI_MEM_SPI_FMEM_OUTMINBYTELEN_V = 0x7F
const SPI_MEM_SPI_FMEM_OUTMINBYTELEN_S = 5
const SPI_MEM_SPI_FMEM_DDR_CMD_DIS_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_CMD_DIS_S = 4
const SPI_MEM_SPI_FMEM_DDR_WDAT_SWP_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_WDAT_SWP_S = 3
const SPI_MEM_SPI_FMEM_DDR_RDAT_SWP_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_RDAT_SWP_S = 2
const SPI_MEM_SPI_FMEM_VAR_DUMMY_V = 0x1
const SPI_MEM_SPI_FMEM_VAR_DUMMY_S = 1
const SPI_MEM_SPI_FMEM_DDR_EN_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_EN_S = 0
const SPI_MEM_SPI_SMEM_HYPERBUS_CA_V = 0x1
const SPI_MEM_SPI_SMEM_HYPERBUS_CA_S = 30
const SPI_MEM_SPI_SMEM_OCTA_RAM_ADDR_V = 0x1
const SPI_MEM_SPI_SMEM_OCTA_RAM_ADDR_S = 29
const SPI_MEM_SPI_SMEM_CLK_DIFF_INV_V = 0x1
const SPI_MEM_SPI_SMEM_CLK_DIFF_INV_S = 28
const SPI_MEM_SPI_SMEM_HYPERBUS_DUMMY_2X_V = 0x1
const SPI_MEM_SPI_SMEM_HYPERBUS_DUMMY_2X_S = 27
const SPI_MEM_SPI_SMEM_DQS_CA_IN_V = 0x1
const SPI_MEM_SPI_SMEM_DQS_CA_IN_S = 26
const SPI_MEM_SPI_SMEM_HYPERBUS_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_HYPERBUS_MODE_S = 25
const SPI_MEM_SPI_SMEM_CLK_DIFF_EN_V = 0x1
const SPI_MEM_SPI_SMEM_CLK_DIFF_EN_S = 24
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_MODE_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_MODE_S = 22
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_S = 21
const SPI_MEM_SPI_SMEM_USR_DDR_DQS_THD = 0x0000007F
const SPI_MEM_SPI_SMEM_USR_DDR_DQS_THD_V = 0x7F
const SPI_MEM_SPI_SMEM_USR_DDR_DQS_THD_S = 14
const SPI_MEM_SPI_SMEM_RX_DDR_MSK_EN_V = 0x1
const SPI_MEM_SPI_SMEM_RX_DDR_MSK_EN_S = 13
const SPI_MEM_SPI_SMEM_TX_DDR_MSK_EN_V = 0x1
const SPI_MEM_SPI_SMEM_TX_DDR_MSK_EN_S = 12
const SPI_MEM_SPI_SMEM_OUTMINBYTELEN = 0x0000007F
const SPI_MEM_SPI_SMEM_OUTMINBYTELEN_V = 0x7F
const SPI_MEM_SPI_SMEM_OUTMINBYTELEN_S = 5
const SPI_MEM_SPI_SMEM_DDR_CMD_DIS_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_CMD_DIS_S = 4
const SPI_MEM_SPI_SMEM_DDR_WDAT_SWP_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_WDAT_SWP_S = 3
const SPI_MEM_SPI_SMEM_DDR_RDAT_SWP_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_RDAT_SWP_S = 2
const SPI_MEM_SPI_SMEM_VAR_DUMMY_V = 0x1
const SPI_MEM_SPI_SMEM_VAR_DUMMY_S = 1
const SPI_MEM_SPI_SMEM_DDR_EN_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_EN_S = 0
const SPI_MEM_CLK_EN_V = 0x1
const SPI_MEM_CLK_EN_S = 0
const SPI_MEM_CORE_CLK_SEL = 0x00000003
const SPI_MEM_CORE_CLK_SEL_V = 0x3
const SPI_MEM_CORE_CLK_SEL_S = 0
const SPI_MEM_ECC_ERR_INT_ENA_V = 0x1
const SPI_MEM_ECC_ERR_INT_ENA_S = 4
const SPI_MEM_BROWN_OUT_INT_ENA_V = 0x1
const SPI_MEM_BROWN_OUT_INT_ENA_S = 3
const SPI_MEM_TOTAL_TRANS_END_INT_ENA_V = 0x1
const SPI_MEM_TOTAL_TRANS_END_INT_ENA_S = 2
const SPI_MEM_PES_END_INT_ENA_V = 0x1
const SPI_MEM_PES_END_INT_ENA_S = 1
const SPI_MEM_PER_END_INT_ENA_V = 0x1
const SPI_MEM_PER_END_INT_ENA_S = 0
const SPI_MEM_ECC_ERR_INT_CLR_V = 0x1
const SPI_MEM_ECC_ERR_INT_CLR_S = 4
const SPI_MEM_BROWN_OUT_INT_CLR_V = 0x1
const SPI_MEM_BROWN_OUT_INT_CLR_S = 3
const SPI_MEM_TOTAL_TRANS_END_INT_CLR_V = 0x1
const SPI_MEM_TOTAL_TRANS_END_INT_CLR_S = 2
const SPI_MEM_PES_END_INT_CLR_V = 0x1
const SPI_MEM_PES_END_INT_CLR_S = 1
const SPI_MEM_PER_END_INT_CLR_V = 0x1
const SPI_MEM_PER_END_INT_CLR_S = 0
const SPI_MEM_ECC_ERR_INT_RAW_V = 0x1
const SPI_MEM_ECC_ERR_INT_RAW_S = 4
const SPI_MEM_BROWN_OUT_INT_RAW_V = 0x1
const SPI_MEM_BROWN_OUT_INT_RAW_S = 3
const SPI_MEM_TOTAL_TRANS_END_INT_RAW_V = 0x1
const SPI_MEM_TOTAL_TRANS_END_INT_RAW_S = 2
const SPI_MEM_PES_END_INT_RAW_V = 0x1
const SPI_MEM_PES_END_INT_RAW_S = 1
const SPI_MEM_PER_END_INT_RAW_V = 0x1
const SPI_MEM_PER_END_INT_RAW_S = 0
const SPI_MEM_ECC_ERR_INT_ST_V = 0x1
const SPI_MEM_ECC_ERR_INT_ST_S = 4
const SPI_MEM_BROWN_OUT_INT_ST_V = 0x1
const SPI_MEM_BROWN_OUT_INT_ST_S = 3
const SPI_MEM_TOTAL_TRANS_END_INT_ST_V = 0x1
const SPI_MEM_TOTAL_TRANS_END_INT_ST_S = 2
const SPI_MEM_PES_END_INT_ST_V = 0x1
const SPI_MEM_PES_END_INT_ST_S = 1
const SPI_MEM_PER_END_INT_ST_V = 0x1
const SPI_MEM_PER_END_INT_ST_S = 0
const SPI_MEM_DATE = 0x007FFFFF
const SPI_MEM_DATE_V = 0x7FFFFF
const SPI_MEM_DATE_S = 5
const SPI_MEM_SPICLK_PAD_DRV_CTL_EN_V = 0x1
const SPI_MEM_SPICLK_PAD_DRV_CTL_EN_S = 4
const SPI_MEM_SPI_FMEM_SPICLK_FUN_DRV = 0x00000003
const SPI_MEM_SPI_FMEM_SPICLK_FUN_DRV_V = 0x3
const SPI_MEM_SPI_FMEM_SPICLK_FUN_DRV_S = 2
const SPI_MEM_SPI_SMEM_SPICLK_FUN_DRV = 0x00000003
const SPI_MEM_SPI_SMEM_SPICLK_FUN_DRV_V = 0x3
const SPI_MEM_SPI_SMEM_SPICLK_FUN_DRV_S = 0
const SOC_CLK_RC_FAST_FREQ_APPROX = 17500000
const SOC_CLK_RC_SLOW_FREQ_APPROX = 136000
const SOC_CLK_XTAL32K_FREQ_APPROX = 32768
const BSD = 199506
const BSD4_3 = 1
const BSD4_4 = 1
const NeXTBSD = 1995064
const NeXTBSD4_0 = 0
const X__DARWIN_FD_SETSIZE = 1024
const X__DARWIN_NBBY = 8
const CHILD_MAX = 266
const LINK_MAX = 32767
const MAX_CANON = 1024
const MAX_INPUT = 1024
const NAME_MAX = 255
const NGROUPS_MAX = 16
const OPEN_MAX = 10240
const PATH_MAX = 1024
const PIPE_BUF = 512
const BC_BASE_MAX = 99
const BC_DIM_MAX = 2048
const BC_SCALE_MAX = 99
const BC_STRING_MAX = 1000
const CHARCLASS_NAME_MAX = 14
const COLL_WEIGHTS_MAX = 2
const EQUIV_CLASS_MAX = 2
const EXPR_NEST_MAX = 32
const LINE_MAX = 2048
const RE_DUP_MAX = 255
const NZERO = 20
const MAXCOMLEN = 16
const MAXINTERP = 64
const MAXLOGNAME = 255
const NOFILE = 256
const NOGROUP = 65535
const MAXHOSTNAMELEN = 256
const MAXDOMNAMELEN = 256
const NBPG = 4096
const PGSHIFT = 12
const DEV_BSIZE = 512
const DEV_BSHIFT = 9
const BLKDEV_IOSIZE = 2048
const CLSIZE = 1
const CLSIZELOG2 = 0
const MSIZESHIFT = 8
const MCLSHIFT = 11
const MBIGCLSHIFT = 12
const M16KCLSHIFT = 14
const X__DARWIN_CLK_TCK = 100
const MB_LEN_MAX = 6
const CHAR_BIT = 8
const SCHAR_MAX = 127
const UCHAR_MAX = 255
const CHAR_MAX = 127
const USHRT_MAX = 65535
const SHRT_MAX = 32767
const UINT_MAX = 0xffffffff
const INT_MAX = 2147483647
const LONG_BIT = 64
const WORD_BIT = 32
const X_POSIX_ARG_MAX = 4096
const X_POSIX_CHILD_MAX = 25
const X_POSIX_LINK_MAX = 8
const X_POSIX_MAX_CANON = 255
const X_POSIX_MAX_INPUT = 255
const X_POSIX_NAME_MAX = 14
const X_POSIX_NGROUPS_MAX = 8
const X_POSIX_OPEN_MAX = 20
const X_POSIX_PATH_MAX = 256
const X_POSIX_PIPE_BUF = 512
const X_POSIX_SSIZE_MAX = 32767
const X_POSIX_STREAM_MAX = 8
const X_POSIX_TZNAME_MAX = 6
const X_POSIX2_BC_BASE_MAX = 99
const X_POSIX2_BC_DIM_MAX = 2048
const X_POSIX2_BC_SCALE_MAX = 99
const X_POSIX2_BC_STRING_MAX = 1000
const X_POSIX2_EQUIV_CLASS_MAX = 2
const X_POSIX2_EXPR_NEST_MAX = 32
const X_POSIX2_LINE_MAX = 2048
const X_POSIX2_RE_DUP_MAX = 255
const X_POSIX_AIO_LISTIO_MAX = 2
const X_POSIX_AIO_MAX = 1
const X_POSIX_DELAYTIMER_MAX = 32
const X_POSIX_MQ_OPEN_MAX = 8
const X_POSIX_MQ_PRIO_MAX = 32
const X_POSIX_RTSIG_MAX = 8
const X_POSIX_SEM_NSEMS_MAX = 256
const X_POSIX_SEM_VALUE_MAX = 32767
const X_POSIX_SIGQUEUE_MAX = 32
const X_POSIX_TIMER_MAX = 32
const X_POSIX_CLOCKRES_MIN = 20000000
const X_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 4
const X_POSIX_THREAD_KEYS_MAX = 128
const X_POSIX_THREAD_THREADS_MAX = 64
const PTHREAD_DESTRUCTOR_ITERATIONS = 4
const PTHREAD_KEYS_MAX = 512
const PTHREAD_STACK_MIN = 16384
const X_POSIX_HOST_NAME_MAX = 255
const X_POSIX_LOGIN_NAME_MAX = 9
const X_POSIX_SS_REPL_MAX = 4
const X_POSIX_SYMLINK_MAX = 255
const X_POSIX_SYMLOOP_MAX = 8
const X_POSIX_TRACE_EVENT_NAME_MAX = 30
const X_POSIX_TRACE_NAME_MAX = 8
const X_POSIX_TRACE_SYS_MAX = 8
const X_POSIX_TRACE_USER_EVENT_MAX = 32
const X_POSIX_TTY_NAME_MAX = 9
const X_POSIX2_CHARCLASS_NAME_MAX = 14
const X_POSIX2_COLL_WEIGHTS_MAX = 2
const PASS_MAX = 128
const NL_ARGMAX = 9
const NL_LANGMAX = 14
const NL_MSGMAX = 32767
const NL_NMAX = 1
const NL_SETMAX = 255
const NL_TEXTMAX = 2048
const X_XOPEN_IOV_MAX = 16
const IOV_MAX = 1024
const X_XOPEN_NAME_MAX = 255
const X_XOPEN_PATH_MAX = 1024
const PSWP = 0
const PVM = 4
const PINOD = 8
const PRIBIO = 16
const PVFS = 20
const PZERO = 22
const PSOCK = 24
const PWAIT = 32
const PLOCK = 36
const PPAUSE = 40
const PUSER = 50
const MAXPRI = 127
const PRIMASK = 0x0ff
const PCATCH = 0x100
const PTTYBLOCK = 0x200
const PDROP = 0x400
const PSPIN = 0x800
const CMASK = 022
const CBLOCK = 64
const MAXFRAG = 8
const MAXSYMLINKS = 32
const FSHIFT = 11
const GPSPI_FLASH_LL_PERIPHERAL_FREQUENCY_MHZ = 80
const SPI_FLASH_HAL_MAX_WRITE_BYTES = 64
const SPI_FLASH_HAL_MAX_READ_BYTES = 64

type PtrdiffT c.Long
type WcharT c.Int
type MaxAlignT c.Double
type IntLeast8T c.Int8T
type IntLeast16T c.Int16T
type IntLeast32T c.Int32T
type IntLeast64T c.Int64T
type UintLeast8T c.Uint8T
type UintLeast16T c.Uint16T
type UintLeast32T c.Uint32T
type UintLeast64T c.Uint64T
type IntFast8T c.Int8T
type IntFast16T c.Int16T
type IntFast32T c.Int32T
type IntFast64T c.Int64T
type UintFast8T c.Uint8T
type UintFast16T c.Uint16T
type UintFast32T c.Uint32T
type UintFast64T c.Uint64T
type X__int8T c.Char
type X__uint8T c.Char
type X__int16T int16
type X__uint16T uint16
type X__int32T c.Int
type X__uint32T c.Uint
type X__int64T c.LongLong
type X__uint64T c.UlongLong
type X__darwinIntptrT c.Long
type X__darwinNaturalT c.Uint
type X__darwinCtRuneT c.Int

type X__mbstateT struct {
	X__mbstate8 [128]c.Char
}
type X__darwinMbstateT X__mbstateT
type X__darwinPtrdiffT c.Long
type X__darwinSizeT c.Ulong
type X__darwinVaList c.Pointer
type X__darwinWcharT c.Int
type X__darwinRuneT X__darwinWcharT
type X__darwinWintT c.Int
type X__darwinClockT c.Ulong
type X__darwinSocklenT X__uint32T
type X__darwinSsizeT c.Long
type X__darwinTimeT c.Long
type X__darwinBlkcntT X__int64T
type X__darwinBlksizeT X__int32T
type X__darwinDevT X__int32T
type X__darwinFsblkcntT c.Uint
type X__darwinFsfilcntT c.Uint
type X__darwinGidT X__uint32T
type X__darwinIdT X__uint32T
type X__darwinIno64T X__uint64T
type X__darwinInoT X__darwinIno64T
type X__darwinMachPortNameT X__darwinNaturalT
type X__darwinMachPortT X__darwinMachPortNameT
type X__darwinModeT X__uint16T
type X__darwinOffT X__int64T
type X__darwinPidT X__int32T
type X__darwinSigsetT X__uint32T
type X__darwinSusecondsT X__int32T
type X__darwinUidT X__uint32T
type X__darwinUsecondsT X__uint32T
type X__darwinUuidT [16]c.Char
type X__darwinUuidStringT [37]c.Char

type X__darwinPthreadHandlerRec struct {
	X__routine c.Pointer
	X__arg     c.Pointer
	X__next    *X__darwinPthreadHandlerRec
}

type X_opaquePthreadAttrT struct {
	X__sig    c.Long
	X__opaque [56]c.Char
}

type X_opaquePthreadCondT struct {
	X__sig    c.Long
	X__opaque [40]c.Char
}

type X_opaquePthreadCondattrT struct {
	X__sig    c.Long
	X__opaque [8]c.Char
}

type X_opaquePthreadMutexT struct {
	X__sig    c.Long
	X__opaque [56]c.Char
}

type X_opaquePthreadMutexattrT struct {
	X__sig    c.Long
	X__opaque [8]c.Char
}

type X_opaquePthreadOnceT struct {
	X__sig    c.Long
	X__opaque [8]c.Char
}

type X_opaquePthreadRwlockT struct {
	X__sig    c.Long
	X__opaque [192]c.Char
}

type X_opaquePthreadRwlockattrT struct {
	X__sig    c.Long
	X__opaque [16]c.Char
}

type X_opaquePthreadT struct {
	X__sig          c.Long
	X__cleanupStack *X__darwinPthreadHandlerRec
	X__opaque       [8176]c.Char
}
type X__darwinPthreadAttrT X_opaquePthreadAttrT
type X__darwinPthreadCondT X_opaquePthreadCondT
type X__darwinPthreadCondattrT X_opaquePthreadCondattrT
type X__darwinPthreadKeyT c.Ulong
type X__darwinPthreadMutexT X_opaquePthreadMutexT
type X__darwinPthreadMutexattrT X_opaquePthreadMutexattrT
type X__darwinPthreadOnceT X_opaquePthreadOnceT
type X__darwinPthreadRwlockT X_opaquePthreadRwlockT
type X__darwinPthreadRwlockattrT X_opaquePthreadRwlockattrT
type X__darwinPthreadT *X_opaquePthreadT
type UInt8T c.Char
type UInt16T uint16
type UInt32T c.Uint
type UInt64T c.UlongLong
type RegisterT c.Int64T
type UserAddrT UInt64T
type UserSizeT UInt64T
type UserSsizeT c.Int64T
type UserLongT c.Int64T
type UserUlongT UInt64T
type UserTimeT c.Int64T
type UserOffT c.Int64T
type SyscallArgT UInt64T
type X__darwinNlItem c.Int
type X__darwinWctransT c.Int
type X__darwinWctypeT X__uint32T
type IdtypeT c.Int

const (
	P_ALL  IdtypeT = 0
	P_PID  IdtypeT = 1
	P_PGID IdtypeT = 2
)

type PidT X__darwinPidT
type IdT X__darwinIdT
type SigAtomicT c.Int

type X__darwinArmExceptionState struct {
	X__exception X__uint32T
	X__fsr       X__uint32T
	X__far       X__uint32T
}

type X__darwinArmExceptionState64 struct {
	X__far       X__uint64T
	X__esr       X__uint32T
	X__exception X__uint32T
}

type X__darwinArmThreadState struct {
	X__r    [13]X__uint32T
	X__sp   X__uint32T
	X__lr   X__uint32T
	X__pc   X__uint32T
	X__cpsr X__uint32T
}

type X__darwinArmThreadState64 struct {
	X__x    [29]X__uint64T
	X__fp   X__uint64T
	X__lr   X__uint64T
	X__sp   X__uint64T
	X__pc   X__uint64T
	X__cpsr X__uint32T
	X__pad  X__uint32T
}

type X__darwinArmVfpState struct {
	X__r     [64]X__uint32T
	X__fpscr X__uint32T
}

type X__darwinArmNeonState64 struct {
	X__v    [32]X__uint128T
	X__fpsr X__uint32T
	X__fpcr X__uint32T
}

type X__uint128T struct {
	Unused [8]uint8
}

type X__darwinArmNeonState struct {
	X__v    [16]X__uint128T
	X__fpsr X__uint32T
	X__fpcr X__uint32T
}

type X__armPageinState struct {
	X__pageinError c.Int
}

type X__armLegacyDebugState struct {
	X__bvr [16]X__uint32T
	X__bcr [16]X__uint32T
	X__wvr [16]X__uint32T
	X__wcr [16]X__uint32T
}

type X__darwinArmDebugState32 struct {
	X__bvr      [16]X__uint32T
	X__bcr      [16]X__uint32T
	X__wvr      [16]X__uint32T
	X__wcr      [16]X__uint32T
	X__mdscrEl1 X__uint64T
}

type X__darwinArmDebugState64 struct {
	X__bvr      [16]X__uint64T
	X__bcr      [16]X__uint64T
	X__wvr      [16]X__uint64T
	X__wcr      [16]X__uint64T
	X__mdscrEl1 X__uint64T
}

type X__darwinArmCpmuState64 struct {
	X__ctrs [16]X__uint64T
}

type X__darwinMcontext32 struct {
	X__es X__darwinArmExceptionState
	X__ss X__darwinArmThreadState
	X__fs X__darwinArmVfpState
}

type X__darwinMcontext64 struct {
	X__es X__darwinArmExceptionState64
	X__ss X__darwinArmThreadState64
	X__ns X__darwinArmNeonState64
}
type McontextT *X__darwinMcontext64
type PthreadAttrT X__darwinPthreadAttrT

type X__darwinSigaltstack struct {
	SsSp    c.Pointer
	SsSize  X__darwinSizeT
	SsFlags c.Int
}
type StackT X__darwinSigaltstack

type X__darwinUcontext struct {
	UcOnstack  c.Int
	UcSigmask  X__darwinSigsetT
	UcStack    X__darwinSigaltstack
	UcLink     *X__darwinUcontext
	UcMcsize   X__darwinSizeT
	UcMcontext *X__darwinMcontext64
}
type UcontextT X__darwinUcontext
type SigsetT X__darwinSigsetT
type UidT X__darwinUidT

type Sigval struct {
	SivalPtr c.Pointer
}

type Sigevent struct {
	SigevNotify           c.Int
	SigevSigno            c.Int
	SigevValue            Sigval
	SigevNotifyFunction   c.Pointer
	SigevNotifyAttributes *PthreadAttrT
}

type X__siginfo struct {
	SiSigno  c.Int
	SiErrno  c.Int
	SiCode   c.Int
	SiPid    PidT
	SiUid    UidT
	SiStatus c.Int
	SiAddr   c.Pointer
	SiValue  Sigval
	SiBand   c.Long
	X__pad   [7]c.Ulong
}
type SiginfoT X__siginfo

type X__sigactionU struct {
	X__saHandler c.Pointer
}

type X__sigaction struct {
	X__sigactionU X__sigactionU
	SaTramp       c.Pointer
	SaMask        SigsetT
	SaFlags       c.Int
}

type Sigaction struct {
	X__sigactionU X__sigactionU
	SaMask        SigsetT
	SaFlags       c.Int
}

// llgo:type C
type SigT func(c.Int)

type Sigvec struct {
	SvHandler c.Pointer
	SvMask    c.Int
	SvFlags   c.Int
}

type Sigstack struct {
	SsSp      *c.Char
	SsOnstack c.Int
}

type Timeval struct {
	TvSec  X__darwinTimeT
	TvUsec X__darwinSusecondsT
}
type RlimT X__uint64T

type Rusage struct {
	RuUtime    Timeval
	RuStime    Timeval
	RuMaxrss   c.Long
	RuIxrss    c.Long
	RuIdrss    c.Long
	RuIsrss    c.Long
	RuMinflt   c.Long
	RuMajflt   c.Long
	RuNswap    c.Long
	RuInblock  c.Long
	RuOublock  c.Long
	RuMsgsnd   c.Long
	RuMsgrcv   c.Long
	RuNsignals c.Long
	RuNvcsw    c.Long
	RuNivcsw   c.Long
}
type RusageInfoT c.Pointer

type RusageInfoV0 struct {
	RiUuid             [16]c.Uint8T
	RiUserTime         c.Uint64T
	RiSystemTime       c.Uint64T
	RiPkgIdleWkups     c.Uint64T
	RiInterruptWkups   c.Uint64T
	RiPageins          c.Uint64T
	RiWiredSize        c.Uint64T
	RiResidentSize     c.Uint64T
	RiPhysFootprint    c.Uint64T
	RiProcStartAbstime c.Uint64T
	RiProcExitAbstime  c.Uint64T
}

type RusageInfoV1 struct {
	RiUuid                [16]c.Uint8T
	RiUserTime            c.Uint64T
	RiSystemTime          c.Uint64T
	RiPkgIdleWkups        c.Uint64T
	RiInterruptWkups      c.Uint64T
	RiPageins             c.Uint64T
	RiWiredSize           c.Uint64T
	RiResidentSize        c.Uint64T
	RiPhysFootprint       c.Uint64T
	RiProcStartAbstime    c.Uint64T
	RiProcExitAbstime     c.Uint64T
	RiChildUserTime       c.Uint64T
	RiChildSystemTime     c.Uint64T
	RiChildPkgIdleWkups   c.Uint64T
	RiChildInterruptWkups c.Uint64T
	RiChildPageins        c.Uint64T
	RiChildElapsedAbstime c.Uint64T
}

type RusageInfoV2 struct {
	RiUuid                [16]c.Uint8T
	RiUserTime            c.Uint64T
	RiSystemTime          c.Uint64T
	RiPkgIdleWkups        c.Uint64T
	RiInterruptWkups      c.Uint64T
	RiPageins             c.Uint64T
	RiWiredSize           c.Uint64T
	RiResidentSize        c.Uint64T
	RiPhysFootprint       c.Uint64T
	RiProcStartAbstime    c.Uint64T
	RiProcExitAbstime     c.Uint64T
	RiChildUserTime       c.Uint64T
	RiChildSystemTime     c.Uint64T
	RiChildPkgIdleWkups   c.Uint64T
	RiChildInterruptWkups c.Uint64T
	RiChildPageins        c.Uint64T
	RiChildElapsedAbstime c.Uint64T
	RiDiskioBytesread     c.Uint64T
	RiDiskioByteswritten  c.Uint64T
}

type RusageInfoV3 struct {
	RiUuid                      [16]c.Uint8T
	RiUserTime                  c.Uint64T
	RiSystemTime                c.Uint64T
	RiPkgIdleWkups              c.Uint64T
	RiInterruptWkups            c.Uint64T
	RiPageins                   c.Uint64T
	RiWiredSize                 c.Uint64T
	RiResidentSize              c.Uint64T
	RiPhysFootprint             c.Uint64T
	RiProcStartAbstime          c.Uint64T
	RiProcExitAbstime           c.Uint64T
	RiChildUserTime             c.Uint64T
	RiChildSystemTime           c.Uint64T
	RiChildPkgIdleWkups         c.Uint64T
	RiChildInterruptWkups       c.Uint64T
	RiChildPageins              c.Uint64T
	RiChildElapsedAbstime       c.Uint64T
	RiDiskioBytesread           c.Uint64T
	RiDiskioByteswritten        c.Uint64T
	RiCpuTimeQosDefault         c.Uint64T
	RiCpuTimeQosMaintenance     c.Uint64T
	RiCpuTimeQosBackground      c.Uint64T
	RiCpuTimeQosUtility         c.Uint64T
	RiCpuTimeQosLegacy          c.Uint64T
	RiCpuTimeQosUserInitiated   c.Uint64T
	RiCpuTimeQosUserInteractive c.Uint64T
	RiBilledSystemTime          c.Uint64T
	RiServicedSystemTime        c.Uint64T
}

type RusageInfoV4 struct {
	RiUuid                      [16]c.Uint8T
	RiUserTime                  c.Uint64T
	RiSystemTime                c.Uint64T
	RiPkgIdleWkups              c.Uint64T
	RiInterruptWkups            c.Uint64T
	RiPageins                   c.Uint64T
	RiWiredSize                 c.Uint64T
	RiResidentSize              c.Uint64T
	RiPhysFootprint             c.Uint64T
	RiProcStartAbstime          c.Uint64T
	RiProcExitAbstime           c.Uint64T
	RiChildUserTime             c.Uint64T
	RiChildSystemTime           c.Uint64T
	RiChildPkgIdleWkups         c.Uint64T
	RiChildInterruptWkups       c.Uint64T
	RiChildPageins              c.Uint64T
	RiChildElapsedAbstime       c.Uint64T
	RiDiskioBytesread           c.Uint64T
	RiDiskioByteswritten        c.Uint64T
	RiCpuTimeQosDefault         c.Uint64T
	RiCpuTimeQosMaintenance     c.Uint64T
	RiCpuTimeQosBackground      c.Uint64T
	RiCpuTimeQosUtility         c.Uint64T
	RiCpuTimeQosLegacy          c.Uint64T
	RiCpuTimeQosUserInitiated   c.Uint64T
	RiCpuTimeQosUserInteractive c.Uint64T
	RiBilledSystemTime          c.Uint64T
	RiServicedSystemTime        c.Uint64T
	RiLogicalWrites             c.Uint64T
	RiLifetimeMaxPhysFootprint  c.Uint64T
	RiInstructions              c.Uint64T
	RiCycles                    c.Uint64T
	RiBilledEnergy              c.Uint64T
	RiServicedEnergy            c.Uint64T
	RiIntervalMaxPhysFootprint  c.Uint64T
	RiRunnableTime              c.Uint64T
}

type RusageInfoV5 struct {
	RiUuid                      [16]c.Uint8T
	RiUserTime                  c.Uint64T
	RiSystemTime                c.Uint64T
	RiPkgIdleWkups              c.Uint64T
	RiInterruptWkups            c.Uint64T
	RiPageins                   c.Uint64T
	RiWiredSize                 c.Uint64T
	RiResidentSize              c.Uint64T
	RiPhysFootprint             c.Uint64T
	RiProcStartAbstime          c.Uint64T
	RiProcExitAbstime           c.Uint64T
	RiChildUserTime             c.Uint64T
	RiChildSystemTime           c.Uint64T
	RiChildPkgIdleWkups         c.Uint64T
	RiChildInterruptWkups       c.Uint64T
	RiChildPageins              c.Uint64T
	RiChildElapsedAbstime       c.Uint64T
	RiDiskioBytesread           c.Uint64T
	RiDiskioByteswritten        c.Uint64T
	RiCpuTimeQosDefault         c.Uint64T
	RiCpuTimeQosMaintenance     c.Uint64T
	RiCpuTimeQosBackground      c.Uint64T
	RiCpuTimeQosUtility         c.Uint64T
	RiCpuTimeQosLegacy          c.Uint64T
	RiCpuTimeQosUserInitiated   c.Uint64T
	RiCpuTimeQosUserInteractive c.Uint64T
	RiBilledSystemTime          c.Uint64T
	RiServicedSystemTime        c.Uint64T
	RiLogicalWrites             c.Uint64T
	RiLifetimeMaxPhysFootprint  c.Uint64T
	RiInstructions              c.Uint64T
	RiCycles                    c.Uint64T
	RiBilledEnergy              c.Uint64T
	RiServicedEnergy            c.Uint64T
	RiIntervalMaxPhysFootprint  c.Uint64T
	RiRunnableTime              c.Uint64T
	RiFlags                     c.Uint64T
}

type RusageInfoV6 struct {
	RiUuid                      [16]c.Uint8T
	RiUserTime                  c.Uint64T
	RiSystemTime                c.Uint64T
	RiPkgIdleWkups              c.Uint64T
	RiInterruptWkups            c.Uint64T
	RiPageins                   c.Uint64T
	RiWiredSize                 c.Uint64T
	RiResidentSize              c.Uint64T
	RiPhysFootprint             c.Uint64T
	RiProcStartAbstime          c.Uint64T
	RiProcExitAbstime           c.Uint64T
	RiChildUserTime             c.Uint64T
	RiChildSystemTime           c.Uint64T
	RiChildPkgIdleWkups         c.Uint64T
	RiChildInterruptWkups       c.Uint64T
	RiChildPageins              c.Uint64T
	RiChildElapsedAbstime       c.Uint64T
	RiDiskioBytesread           c.Uint64T
	RiDiskioByteswritten        c.Uint64T
	RiCpuTimeQosDefault         c.Uint64T
	RiCpuTimeQosMaintenance     c.Uint64T
	RiCpuTimeQosBackground      c.Uint64T
	RiCpuTimeQosUtility         c.Uint64T
	RiCpuTimeQosLegacy          c.Uint64T
	RiCpuTimeQosUserInitiated   c.Uint64T
	RiCpuTimeQosUserInteractive c.Uint64T
	RiBilledSystemTime          c.Uint64T
	RiServicedSystemTime        c.Uint64T
	RiLogicalWrites             c.Uint64T
	RiLifetimeMaxPhysFootprint  c.Uint64T
	RiInstructions              c.Uint64T
	RiCycles                    c.Uint64T
	RiBilledEnergy              c.Uint64T
	RiServicedEnergy            c.Uint64T
	RiIntervalMaxPhysFootprint  c.Uint64T
	RiRunnableTime              c.Uint64T
	RiFlags                     c.Uint64T
	RiUserPtime                 c.Uint64T
	RiSystemPtime               c.Uint64T
	RiPinstructions             c.Uint64T
	RiPcycles                   c.Uint64T
	RiEnergyNj                  c.Uint64T
	RiPenergyNj                 c.Uint64T
	RiSecureTimeInSystem        c.Uint64T
	RiSecurePtimeInSystem       c.Uint64T
	RiReserved                  [12]c.Uint64T
}
type RusageInfoCurrent RusageInfoV6

type Rlimit struct {
	RlimCur RlimT
	RlimMax RlimT
}

type ProcRlimitControlWakeupmon struct {
	WmFlags c.Uint32T
	WmRate  c.Int32T
}

type X_OSUnalignedU16 struct {
	X__val c.Uint16T
}

type X_OSUnalignedU32 struct {
	X__val c.Uint32T
}

type X_OSUnalignedU64 struct {
	X__val c.Uint64T
}

type Wait struct {
	WT struct {
		WTermsig  c.Uint
		WCoredump c.Uint
		WRetcode  c.Uint
		WFiller   c.Uint
	}
}
type CtRuneT X__darwinCtRuneT
type RuneT X__darwinRuneT

type DivT struct {
	Quot c.Int
	Rem  c.Int
}

type LdivT struct {
	Quot c.Long
	Rem  c.Long
}

type LldivT struct {
	Quot c.LongLong
	Rem  c.LongLong
}
type MallocTypeIdT c.UlongLong

type X_mallocZoneT struct {
	Unused [8]uint8
}
type MallocZoneT X_mallocZoneT
type DevT X__darwinDevT
type ModeT X__darwinModeT

type ImaxdivT struct {
	Quot c.IntmaxT
	Rem  c.IntmaxT
}
type FposT X__darwinOffT

type X__sbuf struct {
	X_base *c.Char
	X_size c.Int
}

type X__sFILEX struct {
	Unused [8]uint8
}

type X__sFILE struct {
	X_p       *c.Char
	X_r       c.Int
	X_w       c.Int
	X_flags   int16
	X_file    int16
	X_bf      X__sbuf
	X_lbfsize c.Int
	X_cookie  c.Pointer
	X_close   c.Pointer
	X_read    c.Pointer
	X_seek    c.Pointer
	X_write   c.Pointer
	X_ub      X__sbuf
	X_extra   *X__sFILEX
	X_ur      c.Int
	X_ubuf    [3]c.Char
	X_nbuf    [1]c.Char
	X_lb      X__sbuf
	X_blksize c.Int
	X_offset  FposT
}
type OffT X__darwinOffT
type EspErrT c.Int
type RsizeT c.Ulong

/** Group: PGM Data Register */
/** Type of pgm_data0 register
 *  Register 0 that stores data to be programmed.
 */

type EfusePgmData0RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data1 register
 *  Register 1 that stores data to be programmed.
 */

type EfusePgmData1RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data2 register
 *  Register 2 that stores data to be programmed.
 */

type EfusePgmData2RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data3 register
 *  Register 3 that stores data to be programmed.
 */

type EfusePgmData3RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data4 register
 *  Register 4 that stores data to be programmed.
 */

type EfusePgmData4RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data5 register
 *  Register 5 that stores data to be programmed.
 */

type EfusePgmData5RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data6 register
 *  Register 6 that stores data to be programmed.
 */

type EfusePgmData6RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data7 register
 *  Register 7 that stores data to be programmed.
 */

type EfusePgmData7RegT struct {
	Val c.Uint32T
}

/** Type of pgm_check_value0 register
 *  Register 0 that stores the RS code to be programmed.
 */

type EfusePgmCheckValue0RegT struct {
	Val c.Uint32T
}

/** Type of pgm_check_value1 register
 *  Register 1 that stores the RS code to be programmed.
 */

type EfusePgmCheckValue1RegT struct {
	Val c.Uint32T
}

/** Type of pgm_check_value2 register
 *  Register 2 that stores the RS code to be programmed.
 */

type EfusePgmCheckValue2RegT struct {
	Val c.Uint32T
}

/** Group: Read Data Register */
/** Type of rd_wr_dis register
 *  BLOCK0 data register 0.
 */

type EfuseRdWrDisRegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_data0 register
 *  BLOCK0 data register 1.
 */

type EfuseRdRepeatData0RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_data1 register
 *  BLOCK0 data register 2.
 */

type EfuseRdRepeatData1RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_data2 register
 *  BLOCK0 data register 3.
 */

type EfuseRdRepeatData2RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_data3 register
 *  BLOCK0 data register 4.
 */

type EfuseRdRepeatData3RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_data4 register
 *  BLOCK0 data register 5.
 */

type EfuseRdRepeatData4RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_0 register
 *  BLOCK1 data register 0.
 */

type EfuseRdMacSpiSys0RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_1 register
 *  BLOCK1 data register 1.
 */

type EfuseRdMacSpiSys1RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_2 register
 *  BLOCK1 data register 2.
 */

type EfuseRdMacSpiSys2RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_3 register
 *  BLOCK1 data register 3.
 */

type EfuseRdMacSpiSys3RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_4 register
 *  BLOCK1 data register 4.
 */

type EfuseRdMacSpiSys4RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_5 register
 *  BLOCK1 data register 5.
 */

type EfuseRdMacSpiSys5RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data0 register
 *  Register 0 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data1 register
 *  Register 1 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data2 register
 *  Register 2 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data3 register
 *  Register 3 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data4 register
 *  Register 4 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data5 register
 *  Register 5 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data6 register
 *  Register 6 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data7 register
 *  Register 7 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data0 register
 *  Register 0 of BLOCK3 (user).
 */

type EfuseRdUsrData0RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data1 register
 *  Register 1 of BLOCK3 (user).
 */

type EfuseRdUsrData1RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data2 register
 *  Register 2 of BLOCK3 (user).
 */

type EfuseRdUsrData2RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data3 register
 *  Register 3 of BLOCK3 (user).
 */

type EfuseRdUsrData3RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data4 register
 *  Register 4 of BLOCK3 (user).
 */

type EfuseRdUsrData4RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data5 register
 *  Register 5 of BLOCK3 (user).
 */

type EfuseRdUsrData5RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data6 register
 *  Register 6 of BLOCK3 (user).
 */

type EfuseRdUsrData6RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data7 register
 *  Register 7 of BLOCK3 (user).
 */

type EfuseRdUsrData7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data0 register
 *  Register 0 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data1 register
 *  Register 1 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data2 register
 *  Register 2 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data3 register
 *  Register 3 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data4 register
 *  Register 4 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data5 register
 *  Register 5 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data6 register
 *  Register 6 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data7 register
 *  Register 7 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data0 register
 *  Register 0 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data1 register
 *  Register 1 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data2 register
 *  Register 2 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data3 register
 *  Register 3 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data4 register
 *  Register 4 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data5 register
 *  Register 5 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data6 register
 *  Register 6 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data7 register
 *  Register 7 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data0 register
 *  Register 0 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data1 register
 *  Register 1 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data2 register
 *  Register 2 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data3 register
 *  Register 3 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data4 register
 *  Register 4 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data5 register
 *  Register 5 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data6 register
 *  Register 6 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data7 register
 *  Register 7 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data0 register
 *  Register 0 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data1 register
 *  Register 1 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data2 register
 *  Register 2 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data3 register
 *  Register 3 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data4 register
 *  Register 4 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data5 register
 *  Register 5 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data6 register
 *  Register 6 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data7 register
 *  Register 7 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data0 register
 *  Register 0 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data1 register
 *  Register 1 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data2 register
 *  Register 2 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data3 register
 *  Register 3 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data4 register
 *  Register 4 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data5 register
 *  Register 5 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data6 register
 *  Register 6 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data7 register
 *  Register 7 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data0 register
 *  Register 0 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data1 register
 *  Register 1 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data2 register
 *  Register 2 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data3 register
 *  Register 3 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data4 register
 *  Register 4 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data5 register
 *  Register 5 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data6 register
 *  Register 6 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data7 register
 *  Register 7 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data0 register
 *  Register 0 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data1 register
 *  Register 1 of BLOCK9 (KEY5).
 */

type EfuseRdSysPart2Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data2 register
 *  Register 2 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data3 register
 *  Register 3 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data4 register
 *  Register 4 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data5 register
 *  Register 5 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data6 register
 *  Register 6 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data7 register
 *  Register 7 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data7RegT struct {
	Val c.Uint32T
}

/** Group: Report Register */
/** Type of rd_repeat_err0 register
 *  Programming error record register 0 of BLOCK0.
 */

type EfuseRdRepeatErr0RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_err1 register
 *  Programming error record register 1 of BLOCK0.
 */

type EfuseRdRepeatErr1RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_err2 register
 *  Programming error record register 2 of BLOCK0.
 */

type EfuseRdRepeatErr2RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_err3 register
 *  Programming error record register 3 of BLOCK0.
 */

type EfuseRdRepeatErr3RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_err4 register
 *  Programming error record register 4 of BLOCK0.
 */

type EfuseRdRepeatErr4RegT struct {
	Val c.Uint32T
}

/** Type of rd_rs_err0 register
 *  Programming error record register 0 of BLOCK1-10.
 */

type EfuseRdRsErr0RegT struct {
	Val c.Uint32T
}

/** Type of rd_rs_err1 register
 *  Programming error record register 1 of BLOCK1-10.
 */

type EfuseRdRsErr1RegT struct {
	Val c.Uint32T
}

/** Group: Configuration Register */
/** Type of clk register
 *  eFuse clcok configuration register.
 */

type EfuseClkRegT struct {
	Val c.Uint32T
}

/** Type of conf register
 *  eFuse operation mode configuration register
 */

type EfuseConfRegT struct {
	Val c.Uint32T
}

/** Type of cmd register
 *  eFuse command register.
 */

type EfuseCmdRegT struct {
	Val c.Uint32T
}

/** Type of dac_conf register
 *  Controls the eFuse programming voltage.
 */

type EfuseDacConfRegT struct {
	Val c.Uint32T
}

/** Type of rd_tim_conf register
 *  Configures read timing parameters.
 */

type EfuseRdTimConfRegT struct {
	Val c.Uint32T
}

/** Type of wr_tim_conf1 register
 *  Configurarion register 1 of eFuse programming timing parameters.
 */

type EfuseWrTimConf1RegT struct {
	Val c.Uint32T
}

/** Type of wr_tim_conf2 register
 *  Configurarion register 2 of eFuse programming timing parameters.
 */

type EfuseWrTimConf2RegT struct {
	Val c.Uint32T
}

/** Group: Status Register */
/** Type of status register
 *  eFuse status register.
 */

type EfuseStatusRegT struct {
	Val c.Uint32T
}

/** Group: Interrupt Register */
/** Type of int_raw register
 *  eFuse raw interrupt register.
 */

type EfuseIntRawRegT struct {
	Val c.Uint32T
}

/** Type of int_st register
 *  eFuse interrupt status register.
 */

type EfuseIntStRegT struct {
	Val c.Uint32T
}

/** Type of int_ena register
 *  eFuse interrupt enable register.
 */

type EfuseIntEnaRegT struct {
	Val c.Uint32T
}

/** Type of int_clr register
 *  eFuse interrupt clear register.
 */

type EfuseIntClrRegT struct {
	Val c.Uint32T
}

/** Group: Version Register */
/** Type of date register
 *  eFuse version register.
 */

type EfuseDateRegT struct {
	Val c.Uint32T
}

type EfuseDevT struct {
	PgmData0        EfusePgmData0RegT
	PgmData1        EfusePgmData1RegT
	PgmData2        EfusePgmData2RegT
	PgmData3        EfusePgmData3RegT
	PgmData4        EfusePgmData4RegT
	PgmData5        EfusePgmData5RegT
	PgmData6        EfusePgmData6RegT
	PgmData7        EfusePgmData7RegT
	PgmCheckValue0  EfusePgmCheckValue0RegT
	PgmCheckValue1  EfusePgmCheckValue1RegT
	PgmCheckValue2  EfusePgmCheckValue2RegT
	RdWrDis         EfuseRdWrDisRegT
	RdRepeatData0   EfuseRdRepeatData0RegT
	RdRepeatData1   EfuseRdRepeatData1RegT
	RdRepeatData2   EfuseRdRepeatData2RegT
	RdRepeatData3   EfuseRdRepeatData3RegT
	RdRepeatData4   EfuseRdRepeatData4RegT
	RdMacSpiSys0    EfuseRdMacSpiSys0RegT
	RdMacSpiSys1    EfuseRdMacSpiSys1RegT
	RdMacSpiSys2    EfuseRdMacSpiSys2RegT
	RdMacSpiSys3    EfuseRdMacSpiSys3RegT
	RdMacSpiSys4    EfuseRdMacSpiSys4RegT
	RdMacSpiSys5    EfuseRdMacSpiSys5RegT
	RdSysPart1Data0 EfuseRdSysPart1Data0RegT
	RdSysPart1Data1 EfuseRdSysPart1Data1RegT
	RdSysPart1Data2 EfuseRdSysPart1Data2RegT
	RdSysPart1Data3 EfuseRdSysPart1Data3RegT
	RdSysPart1Data4 EfuseRdSysPart1Data4RegT
	RdSysPart1Data5 EfuseRdSysPart1Data5RegT
	RdSysPart1Data6 EfuseRdSysPart1Data6RegT
	RdSysPart1Data7 EfuseRdSysPart1Data7RegT
	RdUsrData0      EfuseRdUsrData0RegT
	RdUsrData1      EfuseRdUsrData1RegT
	RdUsrData2      EfuseRdUsrData2RegT
	RdUsrData3      EfuseRdUsrData3RegT
	RdUsrData4      EfuseRdUsrData4RegT
	RdUsrData5      EfuseRdUsrData5RegT
	RdUsrData6      EfuseRdUsrData6RegT
	RdUsrData7      EfuseRdUsrData7RegT
	RdKey0Data0     EfuseRdKey0Data0RegT
	RdKey0Data1     EfuseRdKey0Data1RegT
	RdKey0Data2     EfuseRdKey0Data2RegT
	RdKey0Data3     EfuseRdKey0Data3RegT
	RdKey0Data4     EfuseRdKey0Data4RegT
	RdKey0Data5     EfuseRdKey0Data5RegT
	RdKey0Data6     EfuseRdKey0Data6RegT
	RdKey0Data7     EfuseRdKey0Data7RegT
	RdKey1Data0     EfuseRdKey1Data0RegT
	RdKey1Data1     EfuseRdKey1Data1RegT
	RdKey1Data2     EfuseRdKey1Data2RegT
	RdKey1Data3     EfuseRdKey1Data3RegT
	RdKey1Data4     EfuseRdKey1Data4RegT
	RdKey1Data5     EfuseRdKey1Data5RegT
	RdKey1Data6     EfuseRdKey1Data6RegT
	RdKey1Data7     EfuseRdKey1Data7RegT
	RdKey2Data0     EfuseRdKey2Data0RegT
	RdKey2Data1     EfuseRdKey2Data1RegT
	RdKey2Data2     EfuseRdKey2Data2RegT
	RdKey2Data3     EfuseRdKey2Data3RegT
	RdKey2Data4     EfuseRdKey2Data4RegT
	RdKey2Data5     EfuseRdKey2Data5RegT
	RdKey2Data6     EfuseRdKey2Data6RegT
	RdKey2Data7     EfuseRdKey2Data7RegT
	RdKey3Data0     EfuseRdKey3Data0RegT
	RdKey3Data1     EfuseRdKey3Data1RegT
	RdKey3Data2     EfuseRdKey3Data2RegT
	RdKey3Data3     EfuseRdKey3Data3RegT
	RdKey3Data4     EfuseRdKey3Data4RegT
	RdKey3Data5     EfuseRdKey3Data5RegT
	RdKey3Data6     EfuseRdKey3Data6RegT
	RdKey3Data7     EfuseRdKey3Data7RegT
	RdKey4Data0     EfuseRdKey4Data0RegT
	RdKey4Data1     EfuseRdKey4Data1RegT
	RdKey4Data2     EfuseRdKey4Data2RegT
	RdKey4Data3     EfuseRdKey4Data3RegT
	RdKey4Data4     EfuseRdKey4Data4RegT
	RdKey4Data5     EfuseRdKey4Data5RegT
	RdKey4Data6     EfuseRdKey4Data6RegT
	RdKey4Data7     EfuseRdKey4Data7RegT
	RdKey5Data0     EfuseRdKey5Data0RegT
	RdKey5Data1     EfuseRdKey5Data1RegT
	RdKey5Data2     EfuseRdKey5Data2RegT
	RdKey5Data3     EfuseRdKey5Data3RegT
	RdKey5Data4     EfuseRdKey5Data4RegT
	RdKey5Data5     EfuseRdKey5Data5RegT
	RdKey5Data6     EfuseRdKey5Data6RegT
	RdKey5Data7     EfuseRdKey5Data7RegT
	RdSysPart2Data0 EfuseRdSysPart2Data0RegT
	RdSysPart2Data1 EfuseRdSysPart2Data1RegT
	RdSysPart2Data2 EfuseRdSysPart2Data2RegT
	RdSysPart2Data3 EfuseRdSysPart2Data3RegT
	RdSysPart2Data4 EfuseRdSysPart2Data4RegT
	RdSysPart2Data5 EfuseRdSysPart2Data5RegT
	RdSysPart2Data6 EfuseRdSysPart2Data6RegT
	RdSysPart2Data7 EfuseRdSysPart2Data7RegT
	RdRepeatErr0    EfuseRdRepeatErr0RegT
	RdRepeatErr1    EfuseRdRepeatErr1RegT
	RdRepeatErr2    EfuseRdRepeatErr2RegT
	RdRepeatErr3    EfuseRdRepeatErr3RegT
	Reserved18c     c.Uint32T
	RdRepeatErr4    EfuseRdRepeatErr4RegT
	Reserved194     [11]c.Uint32T
	RdRsErr0        EfuseRdRsErr0RegT
	RdRsErr1        EfuseRdRsErr1RegT
	Clk             EfuseClkRegT
	Conf            EfuseConfRegT
	Status          EfuseStatusRegT
	Cmd             EfuseCmdRegT
	IntRaw          EfuseIntRawRegT
	IntSt           EfuseIntStRegT
	IntEna          EfuseIntEnaRegT
	IntClr          EfuseIntClrRegT
	DacConf         EfuseDacConfRegT
	RdTimConf       EfuseRdTimConfRegT
	Reserved1f0     c.Uint32T
	WrTimConf1      EfuseWrTimConf1RegT
	WrTimConf2      EfuseWrTimConf2RegT
	Date            EfuseDateRegT
}
type ErrnoT c.Int
type EtsEfusePurposeT c.Int

const (
	ETS_EFUSE_KEY_PURPOSE_USER                        EtsEfusePurposeT = 0
	ETS_EFUSE_KEY_PURPOSE_RESERVED                    EtsEfusePurposeT = 1
	ETS_EFUSE_KEY_PURPOSE_XTS_AES_256_KEY_1           EtsEfusePurposeT = 2
	ETS_EFUSE_KEY_PURPOSE_XTS_AES_256_KEY_2           EtsEfusePurposeT = 3
	ETS_EFUSE_KEY_PURPOSE_XTS_AES_128_KEY             EtsEfusePurposeT = 4
	ETS_EFUSE_KEY_PURPOSE_HMAC_DOWN_ALL               EtsEfusePurposeT = 5
	ETS_EFUSE_KEY_PURPOSE_HMAC_DOWN_JTAG              EtsEfusePurposeT = 6
	ETS_EFUSE_KEY_PURPOSE_HMAC_DOWN_DIGITAL_SIGNATURE EtsEfusePurposeT = 7
	ETS_EFUSE_KEY_PURPOSE_HMAC_UP                     EtsEfusePurposeT = 8
	ETS_EFUSE_KEY_PURPOSE_SECURE_BOOT_DIGEST0         EtsEfusePurposeT = 9
	ETS_EFUSE_KEY_PURPOSE_SECURE_BOOT_DIGEST1         EtsEfusePurposeT = 10
	ETS_EFUSE_KEY_PURPOSE_SECURE_BOOT_DIGEST2         EtsEfusePurposeT = 11
	ETS_EFUSE_KEY_PURPOSE_MAX                         EtsEfusePurposeT = 12
)

type EtsEfuseBlockT c.Int

const (
	ETS_EFUSE_BLOCK0         EtsEfuseBlockT = 0
	ETS_EFUSE_MAC_SPI_SYS_0  EtsEfuseBlockT = 1
	ETS_EFUSE_BLOCK_SYS_DATA EtsEfuseBlockT = 2
	ETS_EFUSE_BLOCK_USR_DATA EtsEfuseBlockT = 3
	ETS_EFUSE_BLOCK_KEY0     EtsEfuseBlockT = 4
	ETS_EFUSE_BLOCK_KEY1     EtsEfuseBlockT = 5
	ETS_EFUSE_BLOCK_KEY2     EtsEfuseBlockT = 6
	ETS_EFUSE_BLOCK_KEY3     EtsEfuseBlockT = 7
	ETS_EFUSE_BLOCK_KEY4     EtsEfuseBlockT = 8
	ETS_EFUSE_BLOCK_KEY5     EtsEfuseBlockT = 9
	ETS_EFUSE_BLOCK_KEY6     EtsEfuseBlockT = 10
	ETS_EFUSE_BLOCK_MAX      EtsEfuseBlockT = 11
)

type ETSSTATUS c.Int

const (
	ETS_OK      ETSSTATUS = 0
	ETS_FAILED  ETSSTATUS = 1
	ETS_PENDING ETSSTATUS = 2
	ETS_BUSY    ETSSTATUS = 3
	ETS_CANCEL  ETSSTATUS = 4
)

type EtsStatusT ETSSTATUS
type ETSSignal c.Uint32T
type ETSParam c.Uint32T

type ETSEventTag struct {
	Unused [8]uint8
}
type ETSEvent ETSEventTag

// llgo:type C
type ETSTask func(*ETSEvent)

// llgo:type C
type EtsIdleCbT func(c.Pointer)

// llgo:type C
type ETSTimerFunc func(c.Pointer)

type X_ETSTIMER_ struct {
	TimerNext   *X_ETSTIMER_
	TimerExpire c.Uint32T
	TimerPeriod c.Uint32T
	TimerFunc   *ETSTimerFunc
	TimerArg    c.Pointer
}
type ETSTimer X_ETSTIMER_

// llgo:type C
type EtsIsrT func(c.Pointer)

type EtsRsaPubkeyT struct {
	N     [384]c.Uint8T
	E     c.Uint32T
	Rinv  [384]c.Uint8T
	Mdash c.Uint32T
}

type EtsSecureBootSigBlock struct {
	Unused [8]uint8
}
type EtsSecureBootSigBlockT EtsSecureBootSigBlock

type EtsSecureBootSignature struct {
	Unused [8]uint8
}
type EtsSecureBootSignatureT EtsSecureBootSignature

type EtsSecureBootKeyDigests struct {
	Unused [8]uint8
}
type EtsSecureBootKeyDigestsT EtsSecureBootKeyDigests
type SecureBootStatusT c.Int

const (
	SB_SUCCESS SecureBootStatusT = 978999973
	SB_FAILED  SecureBootStatusT = 1966311518
)

type SpiFlashMmapMemoryT c.Int

const (
	SPI_FLASH_MMAP_DATA SpiFlashMmapMemoryT = 0
	SPI_FLASH_MMAP_INST SpiFlashMmapMemoryT = 1
)

type SpiFlashMmapHandleT c.Uint32T
type EspRomSpiflashReadModeT c.Int

const (
	ESP_ROM_SPIFLASH_QIO_MODE         EspRomSpiflashReadModeT = 0
	ESP_ROM_SPIFLASH_QOUT_MODE        EspRomSpiflashReadModeT = 1
	ESP_ROM_SPIFLASH_DIO_MODE         EspRomSpiflashReadModeT = 2
	ESP_ROM_SPIFLASH_DOUT_MODE        EspRomSpiflashReadModeT = 3
	ESP_ROM_SPIFLASH_FASTRD_MODE      EspRomSpiflashReadModeT = 4
	ESP_ROM_SPIFLASH_SLOWRD_MODE      EspRomSpiflashReadModeT = 5
	ESP_ROM_SPIFLASH_OPI_STR_MODE     EspRomSpiflashReadModeT = 6
	ESP_ROM_SPIFLASH_OPI_DTR_MODE     EspRomSpiflashReadModeT = 7
	ESP_ROM_SPIFLASH_OOUT_MODE        EspRomSpiflashReadModeT = 8
	ESP_ROM_SPIFLASH_OIO_STR_MODE     EspRomSpiflashReadModeT = 9
	ESP_ROM_SPIFLASH_OIO_DTR_MODE     EspRomSpiflashReadModeT = 10
	ESP_ROM_SPIFLASH_QPI_MODE         EspRomSpiflashReadModeT = 11
	ESP_ROM_SPIFLASH_OPI_HEX_DTR_MODE EspRomSpiflashReadModeT = 12
)

type EspRomSpiflashChipT struct {
	DeviceId   c.Uint32T
	ChipSize   c.Uint32T
	BlockSize  c.Uint32T
	SectorSize c.Uint32T
	PageSize   c.Uint32T
	StatusMask c.Uint32T
}
type EspRomSpiflashResultT c.Int

const (
	ESP_ROM_SPIFLASH_RESULT_OK      EspRomSpiflashResultT = 0
	ESP_ROM_SPIFLASH_RESULT_ERR     EspRomSpiflashResultT = 1
	ESP_ROM_SPIFLASH_RESULT_TIMEOUT EspRomSpiflashResultT = 2
)

/* Flash data defined in ROM*/

type EspRomSpiflashLegacyDataT struct {
	Chip         EspRomSpiflashChipT
	DummyLenPlus [3]c.Uint8T
	SigMatrix    c.Uint8T
}

const (
	ESP_ERR_FLASH_SIZE_NOT_MATCH c.Int = 260
	ESP_ERR_FLASH_NO_RESPONSE    c.Int = 264
)

/** Definition of a common transaction. Also holds the return value. */

type SpiFlashTransT struct {
	Reserved      c.Uint8T
	MosiLen       c.Uint8T
	MisoLen       c.Uint8T
	AddressBitlen c.Uint8T
	Address       c.Uint32T
	MosiData      *c.Uint8T
	MisoData      *c.Uint8T
	Flags         c.Uint32T
	Command       c.Uint16T
	DummyBitlen   c.Uint8T
	IoMode        c.Uint32T
}
type EspFlashSpeedS c.Int

const (
	ESP_FLASH_5MHZ      EspFlashSpeedS = 5
	ESP_FLASH_10MHZ     EspFlashSpeedS = 10
	ESP_FLASH_20MHZ     EspFlashSpeedS = 20
	ESP_FLASH_26MHZ     EspFlashSpeedS = 26
	ESP_FLASH_40MHZ     EspFlashSpeedS = 40
	ESP_FLASH_80MHZ     EspFlashSpeedS = 80
	ESP_FLASH_120MHZ    EspFlashSpeedS = 120
	ESP_FLASH_SPEED_MAX EspFlashSpeedS = 121
)

type EspFlashSpeedT EspFlashSpeedS
type EspFlashIoModeT c.Int

const (
	SPI_FLASH_SLOWRD        EspFlashIoModeT = 0
	SPI_FLASH_FASTRD        EspFlashIoModeT = 1
	SPI_FLASH_DOUT          EspFlashIoModeT = 2
	SPI_FLASH_DIO           EspFlashIoModeT = 3
	SPI_FLASH_QOUT          EspFlashIoModeT = 4
	SPI_FLASH_QIO           EspFlashIoModeT = 5
	SPI_FLASH_OPI_STR       EspFlashIoModeT = 16
	SPI_FLASH_OPI_DTR       EspFlashIoModeT = 17
	SPI_FLASH_READ_MODE_MAX EspFlashIoModeT = 18
)

// / Configuration structure for the flash chip suspend feature.
type SpiFlashSusCmdConf struct {
	SusMask c.Uint32T
}

// / Structure for flash encryption operations.
type SpiFlashEncryptionT struct {
	FlashEncryptionEnable      c.Pointer
	FlashEncryptionDisable     c.Pointer
	FlashEncryptionDataPrepare c.Pointer
	FlashEncryptionDone        c.Pointer
	FlashEncryptionDestroy     c.Pointer
	FlashEncryptionCheck       c.Pointer
}

type SpiFlashHostDriverS struct {
	Unused [8]uint8
}
type SpiFlashHostDriverT SpiFlashHostDriverS

/** SPI Flash Host driver instance */

type SpiFlashHostInstT struct {
	Driver *SpiFlashHostDriverS
}

type SpiFlashChipT struct {
	Unused [8]uint8
}

type EspFlashT struct {
	Unused [8]uint8
}

/** @brief Structure for describing a region of flash */

type EspFlashRegionT struct {
	Offset c.Uint32T
	Size   c.Uint32T
}

/** @brief OS-level integration hooks for accessing flash chips inside a running OS
 *
 * It's in the public header because some instances should be allocated statically in the startup
 * code. May be updated according to hardware version and new flash chip feature requirements,
 * shouldn't be treated as public API.
 *
 *  For advanced developers, you may replace some of them with your implementations at your own
 *  risk.
 */
type EspFlashOsFunctionsT struct {
	Start             c.Pointer
	End               c.Pointer
	RegionProtected   c.Pointer
	DelayUs           c.Pointer
	GetTempBuffer     c.Pointer
	ReleaseTempBuffer c.Pointer
	CheckYield        c.Pointer
	Yield             c.Pointer
	GetSystemTime     c.Pointer
	SetFlashOpStatus  c.Pointer
}
type PeriphInterrputT c.Int

const (
	ETS_WIFI_MAC_INTR_SOURCE              PeriphInterrputT = 0
	ETS_WIFI_MAC_NMI_SOURCE               PeriphInterrputT = 1
	ETS_WIFI_PWR_INTR_SOURCE              PeriphInterrputT = 2
	ETS_WIFI_BB_INTR_SOURCE               PeriphInterrputT = 3
	ETS_BT_MAC_INTR_SOURCE                PeriphInterrputT = 4
	ETS_BT_BB_INTR_SOURCE                 PeriphInterrputT = 5
	ETS_BT_BB_NMI_SOURCE                  PeriphInterrputT = 6
	ETS_RWBT_INTR_SOURCE                  PeriphInterrputT = 7
	ETS_RWBLE_INTR_SOURCE                 PeriphInterrputT = 8
	ETS_RWBT_NMI_SOURCE                   PeriphInterrputT = 9
	ETS_RWBLE_NMI_SOURCE                  PeriphInterrputT = 10
	ETS_I2C_MASTER_SOURCE                 PeriphInterrputT = 11
	ETS_SLC0_INTR_SOURCE                  PeriphInterrputT = 12
	ETS_SLC1_INTR_SOURCE                  PeriphInterrputT = 13
	ETS_UHCI0_INTR_SOURCE                 PeriphInterrputT = 14
	ETS_UHCI1_INTR_SOURCE                 PeriphInterrputT = 15
	ETS_GPIO_INTR_SOURCE                  PeriphInterrputT = 16
	ETS_GPIO_NMI_SOURCE                   PeriphInterrputT = 17
	ETS_GPIO_INTR_SOURCE2                 PeriphInterrputT = 18
	ETS_GPIO_NMI_SOURCE2                  PeriphInterrputT = 19
	ETS_SPI1_INTR_SOURCE                  PeriphInterrputT = 20
	ETS_SPI2_INTR_SOURCE                  PeriphInterrputT = 21
	ETS_SPI3_INTR_SOURCE                  PeriphInterrputT = 22
	ETS_LCD_CAM_INTR_SOURCE               PeriphInterrputT = 24
	ETS_I2S0_INTR_SOURCE                  PeriphInterrputT = 25
	ETS_I2S1_INTR_SOURCE                  PeriphInterrputT = 26
	ETS_UART0_INTR_SOURCE                 PeriphInterrputT = 27
	ETS_UART1_INTR_SOURCE                 PeriphInterrputT = 28
	ETS_UART2_INTR_SOURCE                 PeriphInterrputT = 29
	ETS_SDIO_HOST_INTR_SOURCE             PeriphInterrputT = 30
	ETS_PWM0_INTR_SOURCE                  PeriphInterrputT = 31
	ETS_PWM1_INTR_SOURCE                  PeriphInterrputT = 32
	ETS_LEDC_INTR_SOURCE                  PeriphInterrputT = 35
	ETS_EFUSE_INTR_SOURCE                 PeriphInterrputT = 36
	ETS_TWAI_INTR_SOURCE                  PeriphInterrputT = 37
	ETS_USB_INTR_SOURCE                   PeriphInterrputT = 38
	ETS_RTC_CORE_INTR_SOURCE              PeriphInterrputT = 39
	ETS_RMT_INTR_SOURCE                   PeriphInterrputT = 40
	ETS_PCNT_INTR_SOURCE                  PeriphInterrputT = 41
	ETS_I2C_EXT0_INTR_SOURCE              PeriphInterrputT = 42
	ETS_I2C_EXT1_INTR_SOURCE              PeriphInterrputT = 43
	ETS_SPI2_DMA_INTR_SOURCE              PeriphInterrputT = 44
	ETS_SPI3_DMA_INTR_SOURCE              PeriphInterrputT = 45
	ETS_WDT_INTR_SOURCE                   PeriphInterrputT = 47
	ETS_TIMER1_INTR_SOURCE                PeriphInterrputT = 48
	ETS_TIMER2_INTR_SOURCE                PeriphInterrputT = 49
	ETS_TG0_T0_LEVEL_INTR_SOURCE          PeriphInterrputT = 50
	ETS_TG0_T1_LEVEL_INTR_SOURCE          PeriphInterrputT = 51
	ETS_TG0_WDT_LEVEL_INTR_SOURCE         PeriphInterrputT = 52
	ETS_TG1_T0_LEVEL_INTR_SOURCE          PeriphInterrputT = 53
	ETS_TG1_T1_LEVEL_INTR_SOURCE          PeriphInterrputT = 54
	ETS_TG1_WDT_LEVEL_INTR_SOURCE         PeriphInterrputT = 55
	ETS_CACHE_IA_INTR_SOURCE              PeriphInterrputT = 56
	ETS_SYSTIMER_TARGET0_INTR_SOURCE      PeriphInterrputT = 57
	ETS_SYSTIMER_TARGET1_INTR_SOURCE      PeriphInterrputT = 58
	ETS_SYSTIMER_TARGET2_INTR_SOURCE      PeriphInterrputT = 59
	ETS_SYSTIMER_TARGET0_EDGE_INTR_SOURCE PeriphInterrputT = 57
	ETS_SYSTIMER_TARGET1_EDGE_INTR_SOURCE PeriphInterrputT = 58
	ETS_SYSTIMER_TARGET2_EDGE_INTR_SOURCE PeriphInterrputT = 59
	ETS_SPI_MEM_REJECT_CACHE_INTR_SOURCE  PeriphInterrputT = 60
	ETS_DCACHE_PRELOAD0_INTR_SOURCE       PeriphInterrputT = 61
	ETS_ICACHE_PRELOAD0_INTR_SOURCE       PeriphInterrputT = 62
	ETS_DCACHE_SYNC0_INTR_SOURCE          PeriphInterrputT = 63
	ETS_ICACHE_SYNC0_INTR_SOURCE          PeriphInterrputT = 64
	ETS_APB_ADC_INTR_SOURCE               PeriphInterrputT = 65
	ETS_DMA_IN_CH0_INTR_SOURCE            PeriphInterrputT = 66
	ETS_DMA_IN_CH1_INTR_SOURCE            PeriphInterrputT = 67
	ETS_DMA_IN_CH2_INTR_SOURCE            PeriphInterrputT = 68
	ETS_DMA_IN_CH3_INTR_SOURCE            PeriphInterrputT = 69
	ETS_DMA_IN_CH4_INTR_SOURCE            PeriphInterrputT = 70
	ETS_DMA_OUT_CH0_INTR_SOURCE           PeriphInterrputT = 71
	ETS_DMA_OUT_CH1_INTR_SOURCE           PeriphInterrputT = 72
	ETS_DMA_OUT_CH2_INTR_SOURCE           PeriphInterrputT = 73
	ETS_DMA_OUT_CH3_INTR_SOURCE           PeriphInterrputT = 74
	ETS_DMA_OUT_CH4_INTR_SOURCE           PeriphInterrputT = 75
	ETS_RSA_INTR_SOURCE                   PeriphInterrputT = 76
	ETS_AES_INTR_SOURCE                   PeriphInterrputT = 77
	ETS_SHA_INTR_SOURCE                   PeriphInterrputT = 78
	ETS_FROM_CPU_INTR0_SOURCE             PeriphInterrputT = 79
	ETS_FROM_CPU_INTR1_SOURCE             PeriphInterrputT = 80
	ETS_FROM_CPU_INTR2_SOURCE             PeriphInterrputT = 81
	ETS_FROM_CPU_INTR3_SOURCE             PeriphInterrputT = 82
	ETS_ASSIST_DEBUG_INTR_SOURCE          PeriphInterrputT = 83
	ETS_DMA_APBPERI_PMS_INTR_SOURCE       PeriphInterrputT = 84
	ETS_CORE0_IRAM0_PMS_INTR_SOURCE       PeriphInterrputT = 85
	ETS_CORE0_DRAM0_PMS_INTR_SOURCE       PeriphInterrputT = 86
	ETS_CORE0_PIF_PMS_INTR_SOURCE         PeriphInterrputT = 87
	ETS_CORE0_PIF_PMS_SIZE_INTR_SOURCE    PeriphInterrputT = 88
	ETS_CORE1_IRAM0_PMS_INTR_SOURCE       PeriphInterrputT = 89
	ETS_CORE1_DRAM0_PMS_INTR_SOURCE       PeriphInterrputT = 90
	ETS_CORE1_PIF_PMS_INTR_SOURCE         PeriphInterrputT = 91
	ETS_CORE1_PIF_PMS_SIZE_INTR_SOURCE    PeriphInterrputT = 92
	ETS_BACKUP_PMS_VIOLATE_INTR_SOURCE    PeriphInterrputT = 93
	ETS_CACHE_CORE0_ACS_INTR_SOURCE       PeriphInterrputT = 94
	ETS_CACHE_CORE1_ACS_INTR_SOURCE       PeriphInterrputT = 95
	ETS_USB_SERIAL_JTAG_INTR_SOURCE       PeriphInterrputT = 96
	ETS_PERI_BACKUP_INTR_SOURCE           PeriphInterrputT = 97
	ETS_DMA_EXTMEM_REJECT_SOURCE          PeriphInterrputT = 98
	ETS_MAX_INTR_SOURCE                   PeriphInterrputT = 99
)

type SpiDevS struct {
	Cmd struct {
		Val c.Uint32T
	}
	Addr c.Uint32T
	Ctrl struct {
		Val c.Uint32T
	}
	Clock struct {
		Val c.Uint32T
	}
	User struct {
		Val c.Uint32T
	}
	User1 struct {
		Val c.Uint32T
	}
	User2 struct {
		Val c.Uint32T
	}
	MsDlen struct {
		Val c.Uint32T
	}
	Misc struct {
		Val c.Uint32T
	}
	DinMode struct {
		Val c.Uint32T
	}
	DinNum struct {
		Val c.Uint32T
	}
	DoutMode struct {
		Val c.Uint32T
	}
	DmaConf struct {
		Val c.Uint32T
	}
	DmaIntEna struct {
		Val c.Uint32T
	}
	DmaIntClr struct {
		Val c.Uint32T
	}
	DmaIntRaw struct {
		Val c.Uint32T
	}
	DmaIntSt struct {
		Val c.Uint32T
	}
	DmaIntSet struct {
		Val c.Uint32T
	}
	Reserved48 c.Uint32T
	Reserved4c c.Uint32T
	Reserved50 c.Uint32T
	Reserved54 c.Uint32T
	Reserved58 c.Uint32T
	Reserved5c c.Uint32T
	Reserved60 c.Uint32T
	Reserved64 c.Uint32T
	Reserved68 c.Uint32T
	Reserved6c c.Uint32T
	Reserved70 c.Uint32T
	Reserved74 c.Uint32T
	Reserved78 c.Uint32T
	Reserved7c c.Uint32T
	Reserved80 c.Uint32T
	Reserved84 c.Uint32T
	Reserved88 c.Uint32T
	Reserved8c c.Uint32T
	Reserved90 c.Uint32T
	Reserved94 c.Uint32T
	DataBuf    [16]c.Uint32T
	ReservedD8 c.Uint32T
	ReservedDc c.Uint32T
	Slave      struct {
		Val c.Uint32T
	}
	Slave1 struct {
		Val c.Uint32T
	}
	ClkGate struct {
		Val c.Uint32T
	}
	ReservedEc c.Uint32T
	Date       struct {
		Val c.Uint32T
	}
}
type SpiDevT SpiDevS

type SpiMemDevS struct {
	Cmd struct {
		Val c.Uint32T
	}
	Addr c.Uint32T
	Ctrl struct {
		Val c.Uint32T
	}
	Ctrl1 struct {
		Val c.Uint32T
	}
	Ctrl2 struct {
		Val c.Uint32T
	}
	Clock struct {
		Val c.Uint32T
	}
	User struct {
		Val c.Uint32T
	}
	User1 struct {
		Val c.Uint32T
	}
	User2 struct {
		Val c.Uint32T
	}
	MosiDlen struct {
		Val c.Uint32T
	}
	MisoDlen struct {
		Val c.Uint32T
	}
	RdStatus struct {
		Val c.Uint32T
	}
	ExtAddr c.Uint32T
	Misc    struct {
		Val c.Uint32T
	}
	TxCrc      c.Uint32T
	CacheFctrl struct {
		Val c.Uint32T
	}
	CacheSctrl struct {
		Val c.Uint32T
	}
	SramCmd struct {
		Val c.Uint32T
	}
	SramDrdCmd struct {
		Val c.Uint32T
	}
	SramDwrCmd struct {
		Val c.Uint32T
	}
	SramClk struct {
		Val c.Uint32T
	}
	Fsm struct {
		Val c.Uint32T
	}
	DataBuf        [16]c.Uint32T
	FlashWaitiCtrl struct {
		Val c.Uint32T
	}
	FlashSusCmd struct {
		Val c.Uint32T
	}
	FlashSusCtrl struct {
		Val c.Uint32T
	}
	SusStatus struct {
		Val c.Uint32T
	}
	TimingCali struct {
		Val c.Uint32T
	}
	DinMode struct {
		Val c.Uint32T
	}
	DinNum struct {
		Val c.Uint32T
	}
	DoutMode struct {
		Val c.Uint32T
	}
	ReservedB8        c.Uint32T
	SpiSmemTimingCali struct {
		Val c.Uint32T
	}
	SpiSmemDinMode struct {
		Val c.Uint32T
	}
	SpiSmemDinNum struct {
		Val c.Uint32T
	}
	SpiSmemDoutMode struct {
		Val c.Uint32T
	}
	EccCtrl struct {
		Val c.Uint32T
	}
	EccErrAddr c.Uint32T
	EccErrBit  struct {
		Val c.Uint32T
	}
	ReservedD8 c.Uint32T
	SpiSmemAc  struct {
		Val c.Uint32T
	}
	Ddr struct {
		Val c.Uint32T
	}
	SpiSmemDdr struct {
		Val c.Uint32T
	}
	ClockGate struct {
		Val c.Uint32T
	}
	CoreClkSel struct {
		Val c.Uint32T
	}
	IntEna struct {
		Val c.Uint32T
	}
	IntClr struct {
		Val c.Uint32T
	}
	IntRaw struct {
		Val c.Uint32T
	}
	IntSt struct {
		Val c.Uint32T
	}
	Reserved100 c.Uint32T
	Reserved104 c.Uint32T
	Reserved108 c.Uint32T
	Reserved10c c.Uint32T
	Reserved110 c.Uint32T
	Reserved114 c.Uint32T
	Reserved118 c.Uint32T
	Reserved11c c.Uint32T
	Reserved120 c.Uint32T
	Reserved124 c.Uint32T
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	Reserved14c c.Uint32T
	Reserved150 c.Uint32T
	Reserved154 c.Uint32T
	Reserved158 c.Uint32T
	Reserved15c c.Uint32T
	Reserved160 c.Uint32T
	Reserved164 c.Uint32T
	Reserved168 c.Uint32T
	Reserved16c c.Uint32T
	Reserved170 c.Uint32T
	Reserved174 c.Uint32T
	Reserved178 c.Uint32T
	Reserved17c c.Uint32T
	Reserved180 c.Uint32T
	Reserved184 c.Uint32T
	Reserved188 c.Uint32T
	Reserved18c c.Uint32T
	Reserved190 c.Uint32T
	Reserved194 c.Uint32T
	Reserved198 c.Uint32T
	Reserved19c c.Uint32T
	Reserved1a0 c.Uint32T
	Reserved1a4 c.Uint32T
	Reserved1a8 c.Uint32T
	Reserved1ac c.Uint32T
	Reserved1b0 c.Uint32T
	Reserved1b4 c.Uint32T
	Reserved1b8 c.Uint32T
	Reserved1bc c.Uint32T
	Reserved1c0 c.Uint32T
	Reserved1c4 c.Uint32T
	Reserved1c8 c.Uint32T
	Reserved1cc c.Uint32T
	Reserved1d0 c.Uint32T
	Reserved1d4 c.Uint32T
	Reserved1d8 c.Uint32T
	Reserved1dc c.Uint32T
	Reserved1e0 c.Uint32T
	Reserved1e4 c.Uint32T
	Reserved1e8 c.Uint32T
	Reserved1ec c.Uint32T
	Reserved1f0 c.Uint32T
	Reserved1f4 c.Uint32T
	Reserved1f8 c.Uint32T
	Reserved1fc c.Uint32T
	Reserved200 c.Uint32T
	Reserved204 c.Uint32T
	Reserved208 c.Uint32T
	Reserved20c c.Uint32T
	Reserved210 c.Uint32T
	Reserved214 c.Uint32T
	Reserved218 c.Uint32T
	Reserved21c c.Uint32T
	Reserved220 c.Uint32T
	Reserved224 c.Uint32T
	Reserved228 c.Uint32T
	Reserved22c c.Uint32T
	Reserved230 c.Uint32T
	Reserved234 c.Uint32T
	Reserved238 c.Uint32T
	Reserved23c c.Uint32T
	Reserved240 c.Uint32T
	Reserved244 c.Uint32T
	Reserved248 c.Uint32T
	Reserved24c c.Uint32T
	Reserved250 c.Uint32T
	Reserved254 c.Uint32T
	Reserved258 c.Uint32T
	Reserved25c c.Uint32T
	Reserved260 c.Uint32T
	Reserved264 c.Uint32T
	Reserved268 c.Uint32T
	Reserved26c c.Uint32T
	Reserved270 c.Uint32T
	Reserved274 c.Uint32T
	Reserved278 c.Uint32T
	Reserved27c c.Uint32T
	Reserved280 c.Uint32T
	Reserved284 c.Uint32T
	Reserved288 c.Uint32T
	Reserved28c c.Uint32T
	Reserved290 c.Uint32T
	Reserved294 c.Uint32T
	Reserved298 c.Uint32T
	Reserved29c c.Uint32T
	Reserved2a0 c.Uint32T
	Reserved2a4 c.Uint32T
	Reserved2a8 c.Uint32T
	Reserved2ac c.Uint32T
	Reserved2b0 c.Uint32T
	Reserved2b4 c.Uint32T
	Reserved2b8 c.Uint32T
	Reserved2bc c.Uint32T
	Reserved2c0 c.Uint32T
	Reserved2c4 c.Uint32T
	Reserved2c8 c.Uint32T
	Reserved2cc c.Uint32T
	Reserved2d0 c.Uint32T
	Reserved2d4 c.Uint32T
	Reserved2d8 c.Uint32T
	Reserved2dc c.Uint32T
	Reserved2e0 c.Uint32T
	Reserved2e4 c.Uint32T
	Reserved2e8 c.Uint32T
	Reserved2ec c.Uint32T
	Reserved2f0 c.Uint32T
	Reserved2f4 c.Uint32T
	Reserved2f8 c.Uint32T
	Reserved2fc c.Uint32T
	Reserved300 c.Uint32T
	Reserved304 c.Uint32T
	Reserved308 c.Uint32T
	Reserved30c c.Uint32T
	Reserved310 c.Uint32T
	Reserved314 c.Uint32T
	Reserved318 c.Uint32T
	Reserved31c c.Uint32T
	Reserved320 c.Uint32T
	Reserved324 c.Uint32T
	Reserved328 c.Uint32T
	Reserved32c c.Uint32T
	Reserved330 c.Uint32T
	Reserved334 c.Uint32T
	Reserved338 c.Uint32T
	Reserved33c c.Uint32T
	Reserved340 c.Uint32T
	Reserved344 c.Uint32T
	Reserved348 c.Uint32T
	Reserved34c c.Uint32T
	Reserved350 c.Uint32T
	Reserved354 c.Uint32T
	Reserved358 c.Uint32T
	Reserved35c c.Uint32T
	Reserved360 c.Uint32T
	Reserved364 c.Uint32T
	Reserved368 c.Uint32T
	Reserved36c c.Uint32T
	Reserved370 c.Uint32T
	Reserved374 c.Uint32T
	Reserved378 c.Uint32T
	Reserved37c c.Uint32T
	Reserved380 c.Uint32T
	Reserved384 c.Uint32T
	Reserved388 c.Uint32T
	Reserved38c c.Uint32T
	Reserved390 c.Uint32T
	Reserved394 c.Uint32T
	Reserved398 c.Uint32T
	Reserved39c c.Uint32T
	Reserved3a0 c.Uint32T
	Reserved3a4 c.Uint32T
	Reserved3a8 c.Uint32T
	Reserved3ac c.Uint32T
	Reserved3b0 c.Uint32T
	Reserved3b4 c.Uint32T
	Reserved3b8 c.Uint32T
	Reserved3bc c.Uint32T
	Reserved3c0 c.Uint32T
	Reserved3c4 c.Uint32T
	Reserved3c8 c.Uint32T
	Reserved3cc c.Uint32T
	Reserved3d0 c.Uint32T
	Reserved3d4 c.Uint32T
	Reserved3d8 c.Uint32T
	Reserved3dc c.Uint32T
	Reserved3e0 c.Uint32T
	Reserved3e4 c.Uint32T
	Reserved3e8 c.Uint32T
	Reserved3ec c.Uint32T
	Reserved3f0 c.Uint32T
	Reserved3f4 c.Uint32T
	Reserved3f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type SpiMemDevT SpiMemDevS

/*
Stores a bunch of per-spi-peripheral data.
*/
type SpiSignalConnT struct {
	SpiclkOut      c.Uint8T
	SpiclkIn       c.Uint8T
	SpidOut        c.Uint8T
	SpiqOut        c.Uint8T
	SpiwpOut       c.Uint8T
	SpihdOut       c.Uint8T
	Spid4Out       c.Uint8T
	Spid5Out       c.Uint8T
	Spid6Out       c.Uint8T
	Spid7Out       c.Uint8T
	SpidIn         c.Uint8T
	SpiqIn         c.Uint8T
	SpiwpIn        c.Uint8T
	SpihdIn        c.Uint8T
	Spid4In        c.Uint8T
	Spid5In        c.Uint8T
	Spid6In        c.Uint8T
	Spid7In        c.Uint8T
	SpicsOut       [6]c.Uint8T
	SpicsIn        c.Uint8T
	SpidqsOut      c.Uint8T
	SpicdOut       c.Uint8T
	SpiclkIomuxPin c.Uint8T
	SpidIomuxPin   c.Uint8T
	SpiqIomuxPin   c.Uint8T
	SpiwpIomuxPin  c.Uint8T
	SpihdIomuxPin  c.Uint8T
	Spics0IomuxPin c.Uint8T
	Irq            c.Uint8T
	IrqDma         c.Uint8T
	Func           c.Int
	Hw             *SpiDevT
}
type SocRootClkT c.Int

const (
	SOC_ROOT_CLK_INT_RC_FAST SocRootClkT = 0
	SOC_ROOT_CLK_INT_RC_SLOW SocRootClkT = 1
	SOC_ROOT_CLK_EXT_XTAL    SocRootClkT = 2
	SOC_ROOT_CLK_EXT_XTAL32K SocRootClkT = 3
)

type SocCpuClkSrcT c.Int

const (
	SOC_CPU_CLK_SRC_XTAL    SocCpuClkSrcT = 0
	SOC_CPU_CLK_SRC_PLL     SocCpuClkSrcT = 1
	SOC_CPU_CLK_SRC_RC_FAST SocCpuClkSrcT = 2
	SOC_CPU_CLK_SRC_INVALID SocCpuClkSrcT = 3
)

type SocRtcSlowClkSrcT c.Int

const (
	SOC_RTC_SLOW_CLK_SRC_RC_SLOW      SocRtcSlowClkSrcT = 0
	SOC_RTC_SLOW_CLK_SRC_XTAL32K      SocRtcSlowClkSrcT = 1
	SOC_RTC_SLOW_CLK_SRC_RC_FAST_D256 SocRtcSlowClkSrcT = 2
	SOC_RTC_SLOW_CLK_SRC_INVALID      SocRtcSlowClkSrcT = 3
)

type SocRtcFastClkSrcT c.Int

const (
	SOC_RTC_FAST_CLK_SRC_XTAL_D2  SocRtcFastClkSrcT = 0
	SOC_RTC_FAST_CLK_SRC_XTAL_DIV SocRtcFastClkSrcT = 0
	SOC_RTC_FAST_CLK_SRC_RC_FAST  SocRtcFastClkSrcT = 1
	SOC_RTC_FAST_CLK_SRC_INVALID  SocRtcFastClkSrcT = 2
)

type SocXtalFreqT c.Int

const (
	SOC_XTAL_FREQ_32M SocXtalFreqT = 32
	SOC_XTAL_FREQ_40M SocXtalFreqT = 40
)

type SocModuleClkT c.Int

const (
	SOC_MOD_CLK_CPU          SocModuleClkT = 1
	SOC_MOD_CLK_RTC_FAST     SocModuleClkT = 2
	SOC_MOD_CLK_RTC_SLOW     SocModuleClkT = 3
	SOC_MOD_CLK_APB          SocModuleClkT = 4
	SOC_MOD_CLK_PLL_F80M     SocModuleClkT = 5
	SOC_MOD_CLK_PLL_F160M    SocModuleClkT = 6
	SOC_MOD_CLK_PLL_D2       SocModuleClkT = 7
	SOC_MOD_CLK_XTAL32K      SocModuleClkT = 8
	SOC_MOD_CLK_RC_FAST      SocModuleClkT = 9
	SOC_MOD_CLK_RC_FAST_D256 SocModuleClkT = 10
	SOC_MOD_CLK_XTAL         SocModuleClkT = 11
	SOC_MOD_CLK_TEMP_SENSOR  SocModuleClkT = 12
	SOC_MOD_CLK_INVALID      SocModuleClkT = 13
)

type SocPeriphSystimerClkSrcT c.Int

const (
	SYSTIMER_CLK_SRC_XTAL    SocPeriphSystimerClkSrcT = 11
	SYSTIMER_CLK_SRC_DEFAULT SocPeriphSystimerClkSrcT = 11
)

type SocPeriphGptimerClkSrcT c.Int

const (
	GPTIMER_CLK_SRC_APB     SocPeriphGptimerClkSrcT = 4
	GPTIMER_CLK_SRC_XTAL    SocPeriphGptimerClkSrcT = 11
	GPTIMER_CLK_SRC_DEFAULT SocPeriphGptimerClkSrcT = 4
)

type SocPeriphTgClkSrcLegacyT c.Int

const (
	TIMER_SRC_CLK_APB     SocPeriphTgClkSrcLegacyT = 4
	TIMER_SRC_CLK_XTAL    SocPeriphTgClkSrcLegacyT = 11
	TIMER_SRC_CLK_DEFAULT SocPeriphTgClkSrcLegacyT = 4
)

type SocPeriphLcdClkSrcT c.Int

const (
	LCD_CLK_SRC_PLL160M SocPeriphLcdClkSrcT = 6
	LCD_CLK_SRC_PLL240M SocPeriphLcdClkSrcT = 7
	LCD_CLK_SRC_XTAL    SocPeriphLcdClkSrcT = 11
	LCD_CLK_SRC_DEFAULT SocPeriphLcdClkSrcT = 6
)

type SocPeriphRmtClkSrcT c.Int

const (
	RMT_CLK_SRC_APB     SocPeriphRmtClkSrcT = 4
	RMT_CLK_SRC_RC_FAST SocPeriphRmtClkSrcT = 9
	RMT_CLK_SRC_XTAL    SocPeriphRmtClkSrcT = 11
	RMT_CLK_SRC_DEFAULT SocPeriphRmtClkSrcT = 4
)

type SocPeriphRmtClkSrcLegacyT c.Int

const (
	RMT_BASECLK_APB     SocPeriphRmtClkSrcLegacyT = 4
	RMT_BASECLK_XTAL    SocPeriphRmtClkSrcLegacyT = 11
	RMT_BASECLK_DEFAULT SocPeriphRmtClkSrcLegacyT = 4
)

type SocPeriphTemperatureSensorClkSrcT c.Int

const (
	TEMPERATURE_SENSOR_CLK_SRC_RC_FAST SocPeriphTemperatureSensorClkSrcT = 12
	TEMPERATURE_SENSOR_CLK_SRC_DEFAULT SocPeriphTemperatureSensorClkSrcT = 12
)

type SocPeriphUartClkSrcLegacyT c.Int

const (
	UART_SCLK_APB     SocPeriphUartClkSrcLegacyT = 4
	UART_SCLK_RTC     SocPeriphUartClkSrcLegacyT = 9
	UART_SCLK_XTAL    SocPeriphUartClkSrcLegacyT = 11
	UART_SCLK_DEFAULT SocPeriphUartClkSrcLegacyT = 4
)

type SocPeriphMcpwmTimerClkSrcT c.Int

const (
	MCPWM_TIMER_CLK_SRC_PLL160M SocPeriphMcpwmTimerClkSrcT = 6
	MCPWM_TIMER_CLK_SRC_DEFAULT SocPeriphMcpwmTimerClkSrcT = 6
)

type SocPeriphMcpwmCaptureClkSrcT c.Int

const (
	MCPWM_CAPTURE_CLK_SRC_APB     SocPeriphMcpwmCaptureClkSrcT = 4
	MCPWM_CAPTURE_CLK_SRC_DEFAULT SocPeriphMcpwmCaptureClkSrcT = 4
)

type SocPeriphMcpwmCarrierClkSrcT c.Int

const (
	MCPWM_CARRIER_CLK_SRC_PLL160M SocPeriphMcpwmCarrierClkSrcT = 6
	MCPWM_CARRIER_CLK_SRC_DEFAULT SocPeriphMcpwmCarrierClkSrcT = 6
)

type SocPeriphI2sClkSrcT c.Int

const (
	I2S_CLK_SRC_DEFAULT  SocPeriphI2sClkSrcT = 6
	I2S_CLK_SRC_PLL_160M SocPeriphI2sClkSrcT = 6
	I2S_CLK_SRC_XTAL     SocPeriphI2sClkSrcT = 11
	I2S_CLK_SRC_EXTERNAL SocPeriphI2sClkSrcT = -1
)

type SocPeriphI2cClkSrcT c.Int

const (
	I2C_CLK_SRC_XTAL    SocPeriphI2cClkSrcT = 11
	I2C_CLK_SRC_RC_FAST SocPeriphI2cClkSrcT = 9
	I2C_CLK_SRC_DEFAULT SocPeriphI2cClkSrcT = 11
)

type SocPeriphSpiClkSrcT c.Int

const (
	SPI_CLK_SRC_DEFAULT SocPeriphSpiClkSrcT = 4
	SPI_CLK_SRC_APB     SocPeriphSpiClkSrcT = 4
	SPI_CLK_SRC_XTAL    SocPeriphSpiClkSrcT = 11
)

type SocPeriphSdmClkSrcT c.Int

const (
	SDM_CLK_SRC_APB     SocPeriphSdmClkSrcT = 4
	SDM_CLK_SRC_DEFAULT SocPeriphSdmClkSrcT = 4
)

type SocPeriphGlitchFilterClkSrcT c.Int

const (
	GLITCH_FILTER_CLK_SRC_APB     SocPeriphGlitchFilterClkSrcT = 4
	GLITCH_FILTER_CLK_SRC_DEFAULT SocPeriphGlitchFilterClkSrcT = 4
)

type SocPeriphTwaiClkSrcT c.Int

const (
	TWAI_CLK_SRC_APB     SocPeriphTwaiClkSrcT = 4
	TWAI_CLK_SRC_DEFAULT SocPeriphTwaiClkSrcT = 4
)

type SocPeriphAdcDigiClkSrcT c.Int

const (
	ADC_DIGI_CLK_SRC_APB       SocPeriphAdcDigiClkSrcT = 4
	ADC_DIGI_CLK_SRC_PLL_F240M SocPeriphAdcDigiClkSrcT = 7
	ADC_DIGI_CLK_SRC_DEFAULT   SocPeriphAdcDigiClkSrcT = 4
)

type SocPeriphAdcRtcClkSrcT c.Int

const (
	ADC_RTC_CLK_SRC_RC_FAST SocPeriphAdcRtcClkSrcT = 9
	ADC_RTC_CLK_SRC_DEFAULT SocPeriphAdcRtcClkSrcT = 9
)

type SocPeriphMwdtClkSrcT c.Int

const (
	MWDT_CLK_SRC_APB     SocPeriphMwdtClkSrcT = 4
	MWDT_CLK_SRC_DEFAULT SocPeriphMwdtClkSrcT = 4
)

type SocPeriphLedcClkSrcLegacyT c.Int

const (
	LEDC_AUTO_CLK        SocPeriphLedcClkSrcLegacyT = 0
	LEDC_USE_APB_CLK     SocPeriphLedcClkSrcLegacyT = 4
	LEDC_USE_RC_FAST_CLK SocPeriphLedcClkSrcLegacyT = 9
	LEDC_USE_XTAL_CLK    SocPeriphLedcClkSrcLegacyT = 11
	LEDC_USE_RTC8M_CLK   SocPeriphLedcClkSrcLegacyT = 9
)

type SocPeriphSdmmcClkSrcT c.Int

const (
	SDMMC_CLK_SRC_DEFAULT SocPeriphSdmmcClkSrcT = 6
	SDMMC_CLK_SRC_PLL160M SocPeriphSdmmcClkSrcT = 6
	SDMMC_CLK_SRC_XTAL    SocPeriphSdmmcClkSrcT = 11
)

type SocClkoutSigIdT c.Int

const (
	CLKOUT_SIG_PLL      SocClkoutSigIdT = 1
	CLKOUT_SIG_RC_SLOW  SocClkoutSigIdT = 4
	CLKOUT_SIG_XTAL     SocClkoutSigIdT = 5
	CLKOUT_SIG_PLL_F80M SocClkoutSigIdT = 13
	CLKOUT_SIG_RC_FAST  SocClkoutSigIdT = 14
	CLKOUT_SIG_INVALID  SocClkoutSigIdT = 255
)

type SpiHostDeviceT c.Int

const (
	SPI1_HOST    SpiHostDeviceT = 0
	SPI2_HOST    SpiHostDeviceT = 1
	SPI3_HOST    SpiHostDeviceT = 2
	SPI_HOST_MAX SpiHostDeviceT = 3
)

type SpiClockSourceT SocPeriphSpiClkSrcT
type SpiEventT c.Int

const (
	SPI_EV_BUF_TX         SpiEventT = 1
	SPI_EV_BUF_RX         SpiEventT = 2
	SPI_EV_SEND_DMA_READY SpiEventT = 4
	SPI_EV_SEND           SpiEventT = 8
	SPI_EV_RECV_DMA_READY SpiEventT = 16
	SPI_EV_RECV           SpiEventT = 32
	SPI_EV_CMD9           SpiEventT = 64
	SPI_EV_CMDA           SpiEventT = 128
	SPI_EV_TRANS          SpiEventT = 256
)

/**
 * @brief Line mode of SPI transaction phases: CMD, ADDR, DOUT/DIN.
 */

type SpiLineModeT struct {
	CmdLines  c.Uint8T
	AddrLines c.Uint8T
	DataLines c.Uint8T
}
type SpiCommandT c.Int

const (
	SPI_CMD_HD_WRBUF   SpiCommandT = 1
	SPI_CMD_HD_RDBUF   SpiCommandT = 2
	SPI_CMD_HD_WRDMA   SpiCommandT = 4
	SPI_CMD_HD_RDDMA   SpiCommandT = 8
	SPI_CMD_HD_SEG_END SpiCommandT = 16
	SPI_CMD_HD_EN_QPI  SpiCommandT = 32
	SPI_CMD_HD_WR_END  SpiCommandT = 64
	SPI_CMD_HD_INT0    SpiCommandT = 128
	SPI_CMD_HD_INT1    SpiCommandT = 256
	SPI_CMD_HD_INT2    SpiCommandT = 512
)

type SpiSamplingPointT c.Int

const (
	SPI_SAMPLING_POINT_PHASE_0 SpiSamplingPointT = 0
	SPI_SAMPLING_POINT_PHASE_1 SpiSamplingPointT = 1
)

type UChar c.Char
type UShort uint16
type UInt c.Uint
type ULong c.Ulong
type Ushort uint16
type Uint c.Uint
type UQuadT UInt64T
type QuadT c.Int64T
type QaddrT *QuadT
type CaddrT *c.Char
type DaddrT c.Int32T
type FixptT UInt32T
type BlkcntT X__darwinBlkcntT
type BlksizeT X__darwinBlksizeT
type GidT X__darwinGidT
type InAddrT X__uint32T
type InPortT X__uint16T
type InoT X__darwinInoT
type Ino64T X__darwinIno64T
type KeyT X__int32T
type NlinkT X__uint16T
type SegszT c.Int32T
type SwblkT c.Int32T
type ClockT X__darwinClockT
type TimeT X__darwinTimeT
type UsecondsT X__darwinUsecondsT
type SusecondsT X__darwinSusecondsT

type FdSet struct {
	FdsBits [32]X__int32T
}
type FdMask X__int32T
type PthreadCondT X__darwinPthreadCondT
type PthreadCondattrT X__darwinPthreadCondattrT
type PthreadMutexT X__darwinPthreadMutexT
type PthreadMutexattrT X__darwinPthreadMutexattrT
type PthreadOnceT X__darwinPthreadOnceT
type PthreadRwlockT X__darwinPthreadRwlockT
type PthreadRwlockattrT X__darwinPthreadRwlockattrT
type PthreadT X__darwinPthreadT
type PthreadKeyT X__darwinPthreadKeyT
type FsblkcntT X__darwinFsblkcntT
type FsfilcntT X__darwinFsfilcntT

type SpiFlashLlClockRegT struct {
}

/**
 * Generic driver context structure for all chips using the SPI peripheral.
 * Include this into the HEAD of the driver data for other driver
 * implementations that also use the SPI peripheral.
 */

type SpiFlashHalContextT struct {
	Inst         SpiFlashHostInstT
	Spi          *SpiDevT
	CsNum        c.Int
	ClockConf    SpiFlashLlClockRegT
	BaseIoMode   EspFlashIoModeT
	Flags        c.Uint32T
	SusCfg       SpiFlashSusCmdConf
	SlicerFlags  c.Uint32T
	FreqMhz      c.Int
	TsusVal      c.Uint8T
	AutoWaitiPes bool
}

// / This struct provide MSPI Flash necessary timing related config, should be consistent with that in union in `spi_flash_hal_config_t`.
type SpiFlashHalTimingConfigT struct {
	ExtraDummy  c.Uint32T
	CsHold      c.Uint32T
	CsSetup     c.Uint8T
	ClockConfig SpiFlashLlClockRegT
}

// / Configuration structure for the SPI driver.
type SpiFlashHalConfigT struct {
	Iomux             bool
	InputDelayNs      c.Int
	Speed             EspFlashSpeedS
	HostId            SpiHostDeviceT
	CsNum             c.Int
	AutoSusEn         bool
	OctalModeEn       bool
	UsingTimingTuning bool
	DefaultIoMode     EspFlashIoModeT
	FreqMhz           c.Int
	ClockSrcFreq      c.Int
	TsusVal           c.Uint8T
	AutoWaitiPes      bool
}

/**
 * @brief Structure for flash dummy bits.
 *        For some flash chips, dummy bits are configurable under different conditions.
 */

type SpiFlashHpmDummyConfT struct {
	DioDummy    c.Uint8T
	DoutDummy   c.Uint8T
	QioDummy    c.Uint8T
	QoutDummy   c.Uint8T
	FastrdDummy c.Uint8T
}
type SpiFlashRequirementT c.Int

const (
	SPI_FLASH_HPM_CMD_NEEDED      SpiFlashRequirementT = 0
	SPI_FLASH_HPM_DUMMY_NEEDED    SpiFlashRequirementT = 1
	SPI_FLASH_HPM_WRITE_SR_NEEDED SpiFlashRequirementT = 2
	SPI_FLASH_HPM_UNNEEDED        SpiFlashRequirementT = 3
	SPI_FLASH_HPM_BEYOND_LIMIT    SpiFlashRequirementT = 4
)

// llgo:type C
type SpiFlashHpmEnableFnT func()

// llgo:type C
type SpiFlashHpfCheckFnT func() EspErrT

// llgo:type C
type SpiFlashGetChipDummyFnT func(*SpiFlashHpmDummyConfT)

// llgo:type C
type SpiFlashHpmProbeFnT func(c.Uint32T) EspErrT

// llgo:type C
type SpiFlashHpmChipRequirementCheckT func(c.Uint32T, c.Uint32T, c.Int, c.Int) SpiFlashRequirementT

type SpiFlashHpmInfoT struct {
	Method                  *c.Char
	Probe                   SpiFlashHpmProbeFnT
	ChipHpmRequirementCheck SpiFlashHpmChipRequirementCheckT
	FlashHpmEnable          SpiFlashHpmEnableFnT
	FlashHpfCheck           SpiFlashHpfCheckFnT
	FlashGetDummy           SpiFlashGetChipDummyFnT
}
type SpiFlashWrapSizeT c.Int

const (
	FLASH_WRAP_SIZE_8B  SpiFlashWrapSizeT = 8
	FLASH_WRAP_SIZE_16B SpiFlashWrapSizeT = 16
	FLASH_WRAP_SIZE_32B SpiFlashWrapSizeT = 32
	FLASH_WRAP_SIZE_64B SpiFlashWrapSizeT = 64
)

// llgo:type C
type SpiFlashWrapProbeFnT func(c.Uint32T) EspErrT

// llgo:type C
type SpiFlashWrapSetFnT func(SpiFlashWrapSizeT) EspErrT

// llgo:type C
type SpiFlashWrapClrFnT func() EspErrT

type SpiFlashWrapInfoT struct {
	Method      *c.Char
	Probe       SpiFlashWrapProbeFnT
	ChipWrapSet SpiFlashWrapSetFnT
	ChipWrapClr SpiFlashWrapClrFnT
}
type EspMspiIoT c.Int

const (
	ESP_MSPI_IO_CLK EspMspiIoT = 0
	ESP_MSPI_IO_Q   EspMspiIoT = 1
	ESP_MSPI_IO_D   EspMspiIoT = 2
	ESP_MSPI_IO_CS0 EspMspiIoT = 3
	ESP_MSPI_IO_HD  EspMspiIoT = 4
	ESP_MSPI_IO_WP  EspMspiIoT = 5
	ESP_MSPI_IO_DQS EspMspiIoT = 6
	ESP_MSPI_IO_D4  EspMspiIoT = 7
	ESP_MSPI_IO_D5  EspMspiIoT = 8
	ESP_MSPI_IO_D6  EspMspiIoT = 9
	ESP_MSPI_IO_D7  EspMspiIoT = 10
	ESP_MSPI_IO_MAX EspMspiIoT = 11
)

// llgo:type C
type SpiFlashGuardStartFuncT func()

// llgo:type C
type SpiFlashGuardEndFuncT func()

/**
 * Structure holding SPI flash access critical sections management functions.
 *
 * Flash API uses two types of flash access management functions:
 * 1) Functions which prepare/restore flash cache and interrupts before calling
 *    appropriate ROM functions (SPIWrite, SPIRead and SPIEraseBlock):
 *   - 'start' function should disables flash cache and non-IRAM interrupts and
 *      is invoked before the call to one of ROM function above.
 *   - 'end' function should restore state of flash cache and non-IRAM interrupts and
 *      is invoked after the call to one of ROM function above.
 *    These two functions are not recursive.
 *
 * Different versions of the guarding functions should be used depending on the context of
 * execution (with or without functional OS). In normal conditions when flash API is called
 * from task the functions use OS primitives. When there is no OS at all or when
 * it is not guaranteed that OS is functional (accessing flash from exception handler) these
 * functions cannot use OS primitives or even does not need them (multithreaded access is not possible).
 *
 * @note Structure and corresponding guard functions should not reside in flash.
 *       For example structure can be placed in DRAM and functions in IRAM sections.
 */

type SpiFlashGuardFuncsT struct {
	Start SpiFlashGuardStartFuncT
	End   SpiFlashGuardEndFuncT
}
