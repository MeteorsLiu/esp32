package spi_flash

import (
	"github.com/goplus/lib/c"
	_ "unsafe"
)

const CONFIG_SOC_ADC_SUPPORTED = 1
const CONFIG_SOC_DAC_SUPPORTED = 1
const CONFIG_SOC_UART_SUPPORTED = 1
const CONFIG_SOC_TWAI_SUPPORTED = 1
const CONFIG_SOC_CP_DMA_SUPPORTED = 1
const CONFIG_SOC_DEDICATED_GPIO_SUPPORTED = 1
const CONFIG_SOC_GPTIMER_SUPPORTED = 1
const CONFIG_SOC_SUPPORTS_SECURE_DL_MODE = 1
const CONFIG_SOC_ULP_FSM_SUPPORTED = 1
const CONFIG_SOC_RISCV_COPROC_SUPPORTED = 1
const CONFIG_SOC_USB_OTG_SUPPORTED = 1
const CONFIG_SOC_PCNT_SUPPORTED = 1
const CONFIG_SOC_PHY_SUPPORTED = 1
const CONFIG_SOC_WIFI_SUPPORTED = 1
const CONFIG_SOC_ULP_SUPPORTED = 1
const CONFIG_SOC_CCOMP_TIMER_SUPPORTED = 1
const CONFIG_SOC_ASYNC_MEMCPY_SUPPORTED = 1
const CONFIG_SOC_EFUSE_KEY_PURPOSE_FIELD = 1
const CONFIG_SOC_EFUSE_SUPPORTED = 1
const CONFIG_SOC_TEMP_SENSOR_SUPPORTED = 1
const CONFIG_SOC_CACHE_SUPPORT_WRAP = 1
const CONFIG_SOC_RTC_FAST_MEM_SUPPORTED = 1
const CONFIG_SOC_RTC_SLOW_MEM_SUPPORTED = 1
const CONFIG_SOC_RTC_MEM_SUPPORTED = 1
const CONFIG_SOC_PSRAM_DMA_CAPABLE = 1
const CONFIG_SOC_XT_WDT_SUPPORTED = 1
const CONFIG_SOC_I2S_SUPPORTED = 1
const CONFIG_SOC_RMT_SUPPORTED = 1
const CONFIG_SOC_SDM_SUPPORTED = 1
const CONFIG_SOC_GPSPI_SUPPORTED = 1
const CONFIG_SOC_LEDC_SUPPORTED = 1
const CONFIG_SOC_I2C_SUPPORTED = 1
const CONFIG_SOC_SYSTIMER_SUPPORTED = 1
const CONFIG_SOC_AES_SUPPORTED = 1
const CONFIG_SOC_MPI_SUPPORTED = 1
const CONFIG_SOC_SHA_SUPPORTED = 1
const CONFIG_SOC_HMAC_SUPPORTED = 1
const CONFIG_SOC_DIG_SIGN_SUPPORTED = 1
const CONFIG_SOC_FLASH_ENC_SUPPORTED = 1
const CONFIG_SOC_SECURE_BOOT_SUPPORTED = 1
const CONFIG_SOC_MEMPROT_SUPPORTED = 1
const CONFIG_SOC_TOUCH_SENSOR_SUPPORTED = 1
const CONFIG_SOC_BOD_SUPPORTED = 1
const CONFIG_SOC_CLK_TREE_SUPPORTED = 1
const CONFIG_SOC_MPU_SUPPORTED = 1
const CONFIG_SOC_WDT_SUPPORTED = 1
const CONFIG_SOC_SPI_FLASH_SUPPORTED = 1
const CONFIG_SOC_RNG_SUPPORTED = 1
const CONFIG_SOC_LIGHT_SLEEP_SUPPORTED = 1
const CONFIG_SOC_DEEP_SLEEP_SUPPORTED = 1
const CONFIG_SOC_LP_PERIPH_SHARE_INTERRUPT = 1
const CONFIG_SOC_PM_SUPPORTED = 1
const CONFIG_SOC_XTAL_SUPPORT_40M = 1
const CONFIG_SOC_ADC_RTC_CTRL_SUPPORTED = 1
const CONFIG_SOC_ADC_DIG_CTRL_SUPPORTED = 1
const CONFIG_SOC_ADC_ARBITER_SUPPORTED = 1
const CONFIG_SOC_ADC_DIG_IIR_FILTER_SUPPORTED = 1
const CONFIG_SOC_ADC_DIG_IIR_FILTER_UNIT_BINDED = 1
const CONFIG_SOC_ADC_MONITOR_SUPPORTED = 1
const CONFIG_SOC_ADC_DMA_SUPPORTED = 1
const CONFIG_SOC_ADC_PERIPH_NUM = 2
const CONFIG_SOC_ADC_MAX_CHANNEL_NUM = 10
const CONFIG_SOC_ADC_ATTEN_NUM = 4
const CONFIG_SOC_ADC_DIGI_CONTROLLER_NUM = 2
const CONFIG_SOC_ADC_PATT_LEN_MAX = 32
const CONFIG_SOC_ADC_DIGI_MIN_BITWIDTH = 12
const CONFIG_SOC_ADC_DIGI_MAX_BITWIDTH = 12
const CONFIG_SOC_ADC_DIGI_IIR_FILTER_NUM = 2
const CONFIG_SOC_ADC_DIGI_RESULT_BYTES = 2
const CONFIG_SOC_ADC_DIGI_DATA_BYTES_PER_CONV = 2
const CONFIG_SOC_ADC_DIGI_MONITOR_NUM = 2
const CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_HIGH = 83333
const CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_LOW = 611
const CONFIG_SOC_ADC_RTC_MIN_BITWIDTH = 13
const CONFIG_SOC_ADC_RTC_MAX_BITWIDTH = 13
const CONFIG_SOC_ADC_CALIBRATION_V1_SUPPORTED = 1
const CONFIG_SOC_ADC_SELF_HW_CALI_SUPPORTED = 1
const CONFIG_SOC_ADC_SHARED_POWER = 1
const CONFIG_SOC_BROWNOUT_RESET_SUPPORTED = 1
const CONFIG_SOC_CACHE_WRITEBACK_SUPPORTED = 1
const CONFIG_SOC_CP_DMA_MAX_BUFFER_SIZE = 4095
const CONFIG_SOC_CPU_CORES_NUM = 1
const CONFIG_SOC_CPU_INTR_NUM = 32
const CONFIG_SOC_CPU_BREAKPOINTS_NUM = 2
const CONFIG_SOC_CPU_WATCHPOINTS_NUM = 2
const CONFIG_SOC_CPU_WATCHPOINT_MAX_REGION_SIZE = 64
const CONFIG_SOC_DAC_CHAN_NUM = 2
const CONFIG_SOC_DAC_RESOLUTION = 8
const CONFIG_SOC_GPIO_PORT = 1
const CONFIG_SOC_GPIO_PIN_COUNT = 47
const CONFIG_SOC_GPIO_SUPPORT_PIN_GLITCH_FILTER = 1
const CONFIG_SOC_GPIO_FILTER_CLK_SUPPORT_APB = 1
const CONFIG_SOC_GPIO_SUPPORT_RTC_INDEPENDENT = 1
const CONFIG_SOC_GPIO_SUPPORT_FORCE_HOLD = 1
const CONFIG_SOC_GPIO_VALID_GPIO_MASK = 0x7FFFFFFFFFFF
const CONFIG_SOC_GPIO_IN_RANGE_MAX = 46
const CONFIG_SOC_GPIO_OUT_RANGE_MAX = 45
const CONFIG_SOC_GPIO_VALID_DIGITAL_IO_PAD_MASK = 0x00007FFFFC000000
const CONFIG_SOC_GPIO_CLOCKOUT_BY_IO_MUX = 1
const CONFIG_SOC_GPIO_CLOCKOUT_CHANNEL_NUM = 3
const CONFIG_SOC_GPIO_SUPPORT_HOLD_IO_IN_DSLP = 1
const CONFIG_SOC_DEDIC_GPIO_OUT_CHANNELS_NUM = 8
const CONFIG_SOC_DEDIC_GPIO_IN_CHANNELS_NUM = 8
const CONFIG_SOC_DEDIC_GPIO_ALLOW_REG_ACCESS = 1
const CONFIG_SOC_DEDIC_GPIO_HAS_INTERRUPT = 1
const CONFIG_SOC_DEDIC_GPIO_OUT_AUTO_ENABLE = 1
const CONFIG_SOC_I2C_NUM = 2
const CONFIG_SOC_HP_I2C_NUM = 2
const CONFIG_SOC_I2C_FIFO_LEN = 32
const CONFIG_SOC_I2C_CMD_REG_NUM = 16
const CONFIG_SOC_I2C_SUPPORT_SLAVE = 1
const CONFIG_SOC_I2C_SLAVE_CAN_GET_STRETCH_CAUSE = 1
const CONFIG_SOC_I2C_SUPPORT_HW_CLR_BUS = 1
const CONFIG_SOC_I2C_SUPPORT_REF_TICK = 1
const CONFIG_SOC_I2C_SUPPORT_APB = 1
const CONFIG_SOC_I2S_NUM = 1
const CONFIG_SOC_I2S_HW_VERSION_1 = 1
const CONFIG_SOC_I2S_SUPPORTS_APLL = 1
const CONFIG_SOC_I2S_SUPPORTS_PLL_F160M = 1
const CONFIG_SOC_I2S_SUPPORTS_DMA_EQUAL = 1
const CONFIG_SOC_I2S_SUPPORTS_LCD_CAMERA = 1
const CONFIG_SOC_I2S_MAX_DATA_WIDTH = 24
const CONFIG_SOC_I2S_APLL_MIN_FREQ = 250000000
const CONFIG_SOC_I2S_APLL_MAX_FREQ = 500000000
const CONFIG_SOC_I2S_APLL_MIN_RATE = 10675
const CONFIG_SOC_I2S_LCD_I80_VARIANT = 1
const CONFIG_SOC_LCD_I80_SUPPORTED = 1
const CONFIG_SOC_LCD_I80_BUSES = 1
const CONFIG_SOC_LCD_I80_BUS_WIDTH = 24
const CONFIG_SOC_LEDC_HAS_TIMER_SPECIFIC_MUX = 1
const CONFIG_SOC_LEDC_SUPPORT_APB_CLOCK = 1
const CONFIG_SOC_LEDC_SUPPORT_REF_TICK = 1
const CONFIG_SOC_LEDC_SUPPORT_XTAL_CLOCK = 1
const CONFIG_SOC_LEDC_TIMER_NUM = 4
const CONFIG_SOC_LEDC_CHANNEL_NUM = 8
const CONFIG_SOC_LEDC_TIMER_BIT_WIDTH = 14
const CONFIG_SOC_LEDC_SUPPORT_FADE_STOP = 1
const CONFIG_SOC_MMU_LINEAR_ADDRESS_REGION_NUM = 5
const CONFIG_SOC_MMU_PERIPH_NUM = 1
const CONFIG_SOC_MPU_MIN_REGION_SIZE = 0x20000000
const CONFIG_SOC_MPU_REGIONS_MAX_NUM = 8
const CONFIG_SOC_PCNT_GROUPS = 1
const CONFIG_SOC_PCNT_UNITS_PER_GROUP = 4
const CONFIG_SOC_PCNT_CHANNELS_PER_UNIT = 2
const CONFIG_SOC_PCNT_THRES_POINT_PER_UNIT = 2
const CONFIG_SOC_RMT_GROUPS = 1
const CONFIG_SOC_RMT_TX_CANDIDATES_PER_GROUP = 4
const CONFIG_SOC_RMT_RX_CANDIDATES_PER_GROUP = 4
const CONFIG_SOC_RMT_CHANNELS_PER_GROUP = 4
const CONFIG_SOC_RMT_MEM_WORDS_PER_CHANNEL = 64
const CONFIG_SOC_RMT_SUPPORT_RX_DEMODULATION = 1
const CONFIG_SOC_RMT_SUPPORT_TX_ASYNC_STOP = 1
const CONFIG_SOC_RMT_SUPPORT_TX_LOOP_COUNT = 1
const CONFIG_SOC_RMT_SUPPORT_TX_SYNCHRO = 1
const CONFIG_SOC_RMT_SUPPORT_TX_CARRIER_DATA_ONLY = 1
const CONFIG_SOC_RMT_SUPPORT_REF_TICK = 1
const CONFIG_SOC_RMT_SUPPORT_APB = 1
const CONFIG_SOC_RMT_CHANNEL_CLK_INDEPENDENT = 1
const CONFIG_SOC_RTCIO_PIN_COUNT = 22
const CONFIG_SOC_RTCIO_INPUT_OUTPUT_SUPPORTED = 1
const CONFIG_SOC_RTCIO_HOLD_SUPPORTED = 1
const CONFIG_SOC_RTCIO_WAKE_SUPPORTED = 1
const CONFIG_SOC_LP_IO_CLOCK_IS_INDEPENDENT = 1
const CONFIG_SOC_SDM_GROUPS = 1
const CONFIG_SOC_SDM_CHANNELS_PER_GROUP = 8
const CONFIG_SOC_SDM_CLK_SUPPORT_APB = 1
const CONFIG_SOC_SPI_HD_BOTH_INOUT_SUPPORTED = 1
const CONFIG_SOC_SPI_PERIPH_NUM = 3
const CONFIG_SOC_SPI_DMA_CHAN_NUM = 3
const CONFIG_SOC_SPI_MAX_CS_NUM = 6
const CONFIG_SOC_SPI_MAXIMUM_BUFFER_SIZE = 72
const CONFIG_SOC_SPI_MAX_PRE_DIVIDER = 8192
const CONFIG_SOC_SPI_SUPPORT_DDRCLK = 1
const CONFIG_SOC_SPI_SLAVE_SUPPORT_SEG_TRANS = 1
const CONFIG_SOC_SPI_SUPPORT_CD_SIG = 1
const CONFIG_SOC_SPI_SUPPORT_CONTINUOUS_TRANS = 1
const CONFIG_SOC_SPI_SUPPORT_CLK_APB = 1
const CONFIG_SOC_SPI_SUPPORT_SLAVE_HD_VER2 = 1
const CONFIG_SOC_SPI_PERIPH_SUPPORT_CONTROL_DUMMY_OUT = 1
const CONFIG_SOC_SPI_SUPPORT_OCT = 1
const CONFIG_SOC_SPI_SCT_SUPPORTED = 1
const CONFIG_SOC_SPI_SCT_REG_NUM = 27
const CONFIG_SOC_SPI_SCT_BUFFER_NUM_MAX = 1
const CONFIG_SOC_SPI_SCT_CONF_BITLEN_MAX = 0x7FFFFD
const CONFIG_SOC_MEMSPI_IS_INDEPENDENT = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED = 1
const CONFIG_SOC_SYSTIMER_COUNTER_NUM = 1
const CONFIG_SOC_SYSTIMER_ALARM_NUM = 3
const CONFIG_SOC_SYSTIMER_BIT_WIDTH_LO = 32
const CONFIG_SOC_SYSTIMER_BIT_WIDTH_HI = 32
const CONFIG_SOC_TIMER_GROUPS = 2
const CONFIG_SOC_TIMER_GROUP_TIMERS_PER_GROUP = 2
const CONFIG_SOC_TIMER_GROUP_COUNTER_BIT_WIDTH = 64
const CONFIG_SOC_TIMER_GROUP_SUPPORT_XTAL = 1
const CONFIG_SOC_TIMER_GROUP_SUPPORT_APB = 1
const CONFIG_SOC_TIMER_GROUP_TOTAL_TIMERS = 4
const CONFIG_SOC_LP_TIMER_BIT_WIDTH_LO = 32
const CONFIG_SOC_LP_TIMER_BIT_WIDTH_HI = 16
const CONFIG_SOC_TOUCH_SENSOR_VERSION = 2
const CONFIG_SOC_TOUCH_SENSOR_NUM = 15
const CONFIG_SOC_TOUCH_SUPPORT_SLEEP_WAKEUP = 1
const CONFIG_SOC_TOUCH_SUPPORT_WATERPROOF = 1
const CONFIG_SOC_TOUCH_SUPPORT_PROX_SENSING = 1
const CONFIG_SOC_TOUCH_PROXIMITY_CHANNEL_NUM = 3
const CONFIG_SOC_TOUCH_SAMPLE_CFG_NUM = 1
const CONFIG_SOC_TWAI_CONTROLLER_NUM = 1
const CONFIG_SOC_TWAI_CLK_SUPPORT_APB = 1
const CONFIG_SOC_TWAI_BRP_MIN = 2
const CONFIG_SOC_TWAI_BRP_MAX = 32768
const CONFIG_SOC_TWAI_SUPPORTS_RX_STATUS = 1
const CONFIG_SOC_UART_NUM = 2
const CONFIG_SOC_UART_HP_NUM = 2
const CONFIG_SOC_UART_SUPPORT_WAKEUP_INT = 1
const CONFIG_SOC_UART_SUPPORT_APB_CLK = 1
const CONFIG_SOC_UART_SUPPORT_REF_TICK = 1
const CONFIG_SOC_UART_FIFO_LEN = 128
const CONFIG_SOC_UART_BITRATE_MAX = 5000000
const CONFIG_SOC_SPIRAM_SUPPORTED = 1
const CONFIG_SOC_SPIRAM_XIP_SUPPORTED = 1
const CONFIG_SOC_USB_OTG_PERIPH_NUM = 1
const CONFIG_SOC_SHA_DMA_MAX_BUFFER_SIZE = 3968
const CONFIG_SOC_SHA_SUPPORT_DMA = 1
const CONFIG_SOC_SHA_SUPPORT_RESUME = 1
const CONFIG_SOC_SHA_CRYPTO_DMA = 1
const CONFIG_SOC_SHA_SUPPORT_SHA1 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA224 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA256 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA384 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512_224 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512_256 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512_T = 1
const CONFIG_SOC_MPI_MEM_BLOCKS_NUM = 4
const CONFIG_SOC_MPI_OPERATIONS_NUM = 3
const CONFIG_SOC_RSA_MAX_BIT_LEN = 4096
const CONFIG_SOC_AES_SUPPORT_DMA = 1
const CONFIG_SOC_AES_SUPPORT_GCM = 1
const CONFIG_SOC_EFUSE_DIS_DOWNLOAD_ICACHE = 1
const CONFIG_SOC_EFUSE_DIS_DOWNLOAD_DCACHE = 1
const CONFIG_SOC_EFUSE_HARD_DIS_JTAG = 1
const CONFIG_SOC_EFUSE_SOFT_DIS_JTAG = 1
const CONFIG_SOC_EFUSE_DIS_BOOT_REMAP = 1
const CONFIG_SOC_EFUSE_DIS_LEGACY_SPI_BOOT = 1
const CONFIG_SOC_EFUSE_DIS_ICACHE = 1
const CONFIG_SOC_SECURE_BOOT_V2_RSA = 1
const CONFIG_SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 3
const CONFIG_SOC_EFUSE_REVOKE_BOOT_KEY_DIGESTS = 1
const CONFIG_SOC_SUPPORT_SECURE_BOOT_REVOKE_KEY = 1
const CONFIG_SOC_FLASH_ENCRYPTED_XTS_AES_BLOCK_MAX = 64
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES = 1
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES_OPTIONS = 1
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES_128 = 1
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES_256 = 1
const CONFIG_SOC_MEMPROT_CPU_PREFETCH_PAD_SIZE = 16
const CONFIG_SOC_MEMPROT_MEM_ALIGN_SIZE = 4
const CONFIG_SOC_AES_CRYPTO_DMA = 1
const CONFIG_SOC_AES_SUPPORT_AES_128 = 1
const CONFIG_SOC_AES_SUPPORT_AES_192 = 1
const CONFIG_SOC_AES_SUPPORT_AES_256 = 1
const CONFIG_SOC_PHY_DIG_REGS_MEM_SIZE = 21
const CONFIG_SOC_WIFI_LIGHT_SLEEP_CLK_WIDTH = 12
const CONFIG_SOC_SPI_MEM_SUPPORT_AUTO_WAIT_IDLE = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_SW_SUSPEND = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_CONFIG_GPIO_BY_EFUSE = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_WRAP = 1
const CONFIG_SOC_PM_SUPPORT_EXT0_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_EXT1_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_EXT_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_WIFI_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_TOUCH_SENSOR_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_WIFI_PD = 1
const CONFIG_SOC_PM_SUPPORT_RTC_PERIPH_PD = 1
const CONFIG_SOC_PM_SUPPORT_RTC_FAST_MEM_PD = 1
const CONFIG_SOC_PM_SUPPORT_RTC_SLOW_MEM_PD = 1
const CONFIG_SOC_PM_SUPPORT_RC_FAST_PD = 1
const CONFIG_SOC_PM_SUPPORT_VDDSDIO_PD = 1
const CONFIG_SOC_CONFIGURABLE_VDDSDIO_SUPPORTED = 1
const CONFIG_SOC_PM_MODEM_PD_BY_SW = 1
const CONFIG_SOC_CLK_APLL_SUPPORTED = 1
const CONFIG_SOC_CLK_RC_FAST_D256_SUPPORTED = 1
const CONFIG_SOC_RTC_SLOW_CLK_SUPPORT_RC_FAST_D256 = 1
const CONFIG_SOC_CLK_RC_FAST_SUPPORT_CALIBRATION = 1
const CONFIG_SOC_CLK_XTAL32K_SUPPORTED = 1
const CONFIG_SOC_COEX_HW_PTI = 1
const CONFIG_SOC_EXTERNAL_COEX_LEADER_TX_LINE = 1
const CONFIG_SOC_TEMPERATURE_SENSOR_SUPPORT_FAST_RC = 1
const CONFIG_SOC_WIFI_HW_TSF = 1
const CONFIG_SOC_WIFI_FTM_SUPPORT = 1
const CONFIG_SOC_WIFI_WAPI_SUPPORT = 1
const CONFIG_SOC_WIFI_CSI_SUPPORT = 1
const CONFIG_SOC_WIFI_MESH_SUPPORT = 1
const CONFIG_SOC_WIFI_SUPPORT_VARIABLE_BEACON_WINDOW = 1
const CONFIG_SOC_WIFI_NAN_SUPPORT = 1
const CONFIG_SOC_ULP_HAS_ADC = 1
const CONFIG_IDF_CMAKE = 1
const CONFIG_IDF_TOOLCHAIN = "gcc"
const CONFIG_IDF_TOOLCHAIN_GCC = 1
const CONFIG_IDF_TARGET_ARCH_XTENSA = 1
const CONFIG_IDF_TARGET_ARCH = "xtensa"
const CONFIG_IDF_TARGET = "esp32s2"
const CONFIG_IDF_INIT_VERSION = "5.4.2"
const CONFIG_IDF_TARGET_ESP32S2 = 1
const CONFIG_IDF_FIRMWARE_CHIP_ID = 0x0002
const CONFIG_APP_BUILD_TYPE_APP_2NDBOOT = 1
const CONFIG_APP_BUILD_GENERATE_BINARIES = 1
const CONFIG_APP_BUILD_BOOTLOADER = 1
const CONFIG_APP_BUILD_USE_FLASH_SECTIONS = 1
const CONFIG_BOOTLOADER_COMPILE_TIME_DATE = 1
const CONFIG_BOOTLOADER_PROJECT_VER = 1
const CONFIG_BOOTLOADER_OFFSET_IN_FLASH = 0x1000
const CONFIG_BOOTLOADER_COMPILER_OPTIMIZATION_SIZE = 1
const CONFIG_BOOTLOADER_LOG_LEVEL_INFO = 1
const CONFIG_BOOTLOADER_LOG_LEVEL = 3
const CONFIG_BOOTLOADER_LOG_TIMESTAMP_SOURCE_CPU_TICKS = 1
const CONFIG_BOOTLOADER_FLASH_XMC_SUPPORT = 1
const CONFIG_BOOTLOADER_VDDSDIO_BOOST_1_9V = 1
const CONFIG_BOOTLOADER_REGION_PROTECTION_ENABLE = 1
const CONFIG_BOOTLOADER_WDT_ENABLE = 1
const CONFIG_BOOTLOADER_WDT_TIME_MS = 9000
const CONFIG_BOOTLOADER_RESERVE_RTC_SIZE = 0x0
const CONFIG_SECURE_BOOT_V2_RSA_SUPPORTED = 1
const CONFIG_SECURE_BOOT_V2_PREFERRED = 1
const CONFIG_SECURE_ROM_DL_MODE_ENABLED = 1
const CONFIG_APP_COMPILE_TIME_DATE = 1
const CONFIG_APP_RETRIEVE_LEN_ELF_SHA = 9
const CONFIG_ESP_ROM_HAS_CRC_LE = 1
const CONFIG_ESP_ROM_HAS_MZ_CRC32 = 1
const CONFIG_ESP_ROM_HAS_UART_BUF_SWITCH = 1
const CONFIG_ESP_ROM_NEEDS_SWSETUP_WORKAROUND = 1
const CONFIG_ESP_ROM_HAS_REGI2C_BUG = 1
const CONFIG_ESP_ROM_HAS_NEWLIB = 1
const CONFIG_ESP_ROM_HAS_NEWLIB_NANO_FORMAT = 1
const CONFIG_ESP_ROM_HAS_NEWLIB_32BIT_TIME = 1
const CONFIG_ESP_ROM_USB_OTG_NUM = 3
const CONFIG_ESP_ROM_HAS_FLASH_COUNT_PAGES_BUG = 1
const CONFIG_ESP_ROM_HAS_SW_FLOAT = 1
const CONFIG_ESP_ROM_SUPPORT_DEEP_SLEEP_WAKEUP_STUB = 1
const CONFIG_ESP_ROM_HAS_VPRINTF_FUNC = 1
const CONFIG_ESP_ROM_HAS_OUTPUT_TO_CHANNELS_FUNC = 1
const CONFIG_ESP_ROM_HAS_OUTPUT_PUTC_FUNC = 1
const CONFIG_BOOT_ROM_LOG_ALWAYS_ON = 1
const CONFIG_ESPTOOLPY_FLASHMODE_DIO = 1
const CONFIG_ESPTOOLPY_FLASH_SAMPLE_MODE_STR = 1
const CONFIG_ESPTOOLPY_FLASHMODE = "dio"
const CONFIG_ESPTOOLPY_FLASHFREQ_80M = 1
const CONFIG_ESPTOOLPY_FLASHFREQ = "80m"
const CONFIG_ESPTOOLPY_FLASHSIZE_2MB = 1
const CONFIG_ESPTOOLPY_FLASHSIZE = "2MB"
const CONFIG_ESPTOOLPY_BEFORE_RESET = 1
const CONFIG_ESPTOOLPY_BEFORE = "default_reset"
const CONFIG_ESPTOOLPY_AFTER_RESET = 1
const CONFIG_ESPTOOLPY_AFTER = "hard_reset"
const CONFIG_ESPTOOLPY_MONITOR_BAUD = 115200
const CONFIG_PARTITION_TABLE_SINGLE_APP = 1
const CONFIG_PARTITION_TABLE_CUSTOM_FILENAME = "partitions.csv"
const CONFIG_PARTITION_TABLE_FILENAME = "partitions_singleapp.csv"
const CONFIG_PARTITION_TABLE_OFFSET = 0x8000
const CONFIG_PARTITION_TABLE_MD5 = 1
const CONFIG_COMPILER_OPTIMIZATION_DEBUG = 1
const CONFIG_COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE = 1
const CONFIG_COMPILER_ASSERT_NDEBUG_EVALUATE = 1
const CONFIG_COMPILER_FLOAT_LIB_FROM_GCCLIB = 1
const CONFIG_COMPILER_OPTIMIZATION_ASSERTION_LEVEL = 2
const CONFIG_COMPILER_HIDE_PATHS_MACROS = 1
const CONFIG_COMPILER_STACK_CHECK_MODE_NONE = 1
const CONFIG_COMPILER_DISABLE_DEFAULT_ERRORS = 1
const CONFIG_COMPILER_RT_LIB_GCCLIB = 1
const CONFIG_COMPILER_RT_LIB_NAME = "gcc"
const CONFIG_COMPILER_ORPHAN_SECTIONS_WARNING = 1
const CONFIG_APPTRACE_DEST_NONE = 1
const CONFIG_APPTRACE_DEST_UART_NONE = 1
const CONFIG_APPTRACE_UART_TASK_PRIO = 1
const CONFIG_APPTRACE_LOCK_ENABLE = 1
const CONFIG_TWAI_ERRATA_FIX_LISTEN_ONLY_DOM = 1
const CONFIG_ADC_DISABLE_DAC = 1
const CONFIG_EFUSE_MAX_BLK_LEN = 256
const CONFIG_ESP_TLS_USING_MBEDTLS = 1
const CONFIG_ESP_TLS_USE_DS_PERIPHERAL = 1
const CONFIG_ADC_DISABLE_DAC_OUTPUT = 1
const CONFIG_ESP_COEX_ENABLED = 1
const CONFIG_ESP_ERR_TO_NAME_LOOKUP = 1
const CONFIG_GPTIMER_ISR_HANDLER_IN_IRAM = 1
const CONFIG_GPTIMER_OBJ_CACHE_SAFE = 1
const CONFIG_SPI_MASTER_ISR_IN_IRAM = 1
const CONFIG_SPI_SLAVE_ISR_IN_IRAM = 1
const CONFIG_ETH_ENABLED = 1
const CONFIG_ETH_USE_SPI_ETHERNET = 1
const CONFIG_ESP_EVENT_POST_FROM_ISR = 1
const CONFIG_ESP_EVENT_POST_FROM_IRAM_ISR = 1
const CONFIG_ESP_GDBSTUB_ENABLED = 1
const CONFIG_ESP_GDBSTUB_SUPPORT_TASKS = 1
const CONFIG_ESP_GDBSTUB_MAX_TASKS = 32
const CONFIG_ESPHID_TASK_SIZE_BT = 2048
const CONFIG_ESPHID_TASK_SIZE_BLE = 4096
const CONFIG_ESP_HTTP_CLIENT_ENABLE_HTTPS = 1
const CONFIG_ESP_HTTP_CLIENT_EVENT_POST_TIMEOUT = 2000
const CONFIG_HTTPD_MAX_REQ_HDR_LEN = 512
const CONFIG_HTTPD_MAX_URI_LEN = 512
const CONFIG_HTTPD_ERR_RESP_NO_DELAY = 1
const CONFIG_HTTPD_PURGE_BUF_LEN = 32
const CONFIG_HTTPD_SERVER_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP_HTTPS_OTA_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP_HTTPS_SERVER_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP32S2_REV_MIN_0 = 1
const CONFIG_ESP32S2_REV_MIN_FULL = 0
const CONFIG_ESP_REV_MIN_FULL = 0
const CONFIG_ESP32S2_REV_MAX_FULL = 199
const CONFIG_ESP_REV_MAX_FULL = 199
const CONFIG_ESP_EFUSE_BLOCK_REV_MIN_FULL = 0
const CONFIG_ESP_EFUSE_BLOCK_REV_MAX_FULL = 99
const CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_STA = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_AP = 1
const CONFIG_ESP_MAC_UNIVERSAL_MAC_ADDRESSES_TWO = 1
const CONFIG_ESP_MAC_UNIVERSAL_MAC_ADDRESSES = 2
const CONFIG_ESP32S2_UNIVERSAL_MAC_ADDRESSES_TWO = 1
const CONFIG_ESP32S2_UNIVERSAL_MAC_ADDRESSES = 2
const CONFIG_ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND = 1
const CONFIG_ESP_SLEEP_RTC_BUS_ISO_WORKAROUND = 1
const CONFIG_ESP_SLEEP_WAIT_FLASH_READY_EXTRA_DELAY = 0
const CONFIG_ESP_SLEEP_GPIO_ENABLE_INTERNAL_RESISTORS = 1
const CONFIG_RTC_CLK_SRC_INT_RC = 1
const CONFIG_RTC_CLK_CAL_CYCLES = 576
const CONFIG_XTAL_FREQ_40 = 1
const CONFIG_XTAL_FREQ = 40
const CONFIG_ESP_SPI_BUS_LOCK_ISR_FUNCS_IN_IRAM = 1
const CONFIG_ESP_NETIF_IP_LOST_TIMER_INTERVAL = 120
const CONFIG_ESP_NETIF_TCPIP_LWIP = 1
const CONFIG_ESP_NETIF_USES_TCPIP_WITH_BSD_API = 1
const CONFIG_ESP_NETIF_REPORT_DATA_TRAFFIC = 1
const CONFIG_ESP_PHY_ENABLED = 1
const CONFIG_ESP_PHY_CALIBRATION_AND_DATA_STORAGE = 1
const CONFIG_ESP_PHY_MAX_WIFI_TX_POWER = 20
const CONFIG_ESP_PHY_MAX_TX_POWER = 20
const CONFIG_ESP_PHY_RF_CAL_PARTIAL = 1
const CONFIG_ESP_PHY_CALIBRATION_MODE = 0
const CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_160 = 1
const CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ = 160
const CONFIG_ESP32S2_INSTRUCTION_CACHE_8KB = 1
const CONFIG_ESP32S2_INSTRUCTION_CACHE_SIZE = 0x2000
const CONFIG_ESP32S2_INSTRUCTION_CACHE_LINE_32B = 1
const CONFIG_ESP32S2_DATA_CACHE_8KB = 1
const CONFIG_ESP32S2_DATA_CACHE_SIZE = 0x2000
const CONFIG_ESP32S2_DATA_CACHE_LINE_32B = 1
const CONFIG_ESP32S2_TRACEMEM_RESERVE_DRAM = 0x0
const CONFIG_ESP_SYSTEM_PANIC_PRINT_REBOOT = 1
const CONFIG_ESP_SYSTEM_PANIC_REBOOT_DELAY_SECONDS = 0
const CONFIG_ESP_SYSTEM_SINGLE_CORE_MODE = 1
const CONFIG_ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK = 1
const CONFIG_ESP_SYSTEM_ALLOW_RTC_FAST_MEM_AS_HEAP = 1
const CONFIG_ESP_SYSTEM_MEMPROT_FEATURE = 1
const CONFIG_ESP_SYSTEM_MEMPROT_FEATURE_LOCK = 1
const CONFIG_ESP_SYSTEM_EVENT_QUEUE_SIZE = 32
const CONFIG_ESP_SYSTEM_EVENT_TASK_STACK_SIZE = 2304
const CONFIG_ESP_MAIN_TASK_STACK_SIZE = 3584
const CONFIG_ESP_MAIN_TASK_AFFINITY_CPU0 = 1
const CONFIG_ESP_MAIN_TASK_AFFINITY = 0x0
const CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE = 2048
const CONFIG_ESP_CONSOLE_UART_DEFAULT = 1
const CONFIG_ESP_CONSOLE_UART = 1
const CONFIG_ESP_CONSOLE_UART_NUM = 0
const CONFIG_ESP_CONSOLE_ROM_SERIAL_PORT_NUM = 0
const CONFIG_ESP_CONSOLE_UART_BAUDRATE = 115200
const CONFIG_ESP_INT_WDT = 1
const CONFIG_ESP_INT_WDT_TIMEOUT_MS = 300
const CONFIG_ESP_TASK_WDT_EN = 1
const CONFIG_ESP_TASK_WDT_INIT = 1
const CONFIG_ESP_TASK_WDT_TIMEOUT_S = 5
const CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0 = 1
const CONFIG_ESP_DEBUG_OCDAWARE = 1
const CONFIG_ESP_SYSTEM_CHECK_INT_LEVEL_4 = 1
const CONFIG_ESP_BROWNOUT_DET = 1
const CONFIG_ESP_BROWNOUT_DET_LVL_SEL_7 = 1
const CONFIG_ESP_BROWNOUT_DET_LVL = 7
const CONFIG_ESP_SYSTEM_BROWNOUT_INTR = 1
const CONFIG_ESP_IPC_TASK_STACK_SIZE = 1024
const CONFIG_ESP_TIME_FUNCS_USE_RTC_TIMER = 1
const CONFIG_ESP_TIME_FUNCS_USE_ESP_TIMER = 1
const CONFIG_ESP_TIMER_TASK_STACK_SIZE = 3584
const CONFIG_ESP_TIMER_INTERRUPT_LEVEL = 1
const CONFIG_ESP_TIMER_TASK_AFFINITY = 0x0
const CONFIG_ESP_TIMER_TASK_AFFINITY_CPU0 = 1
const CONFIG_ESP_TIMER_ISR_AFFINITY_CPU0 = 1
const CONFIG_ESP_TIMER_IMPL_SYSTIMER = 1
const CONFIG_ESP_WIFI_ENABLED = 1
const CONFIG_ESP_WIFI_STATIC_RX_BUFFER_NUM = 10
const CONFIG_ESP_WIFI_DYNAMIC_RX_BUFFER_NUM = 32
const CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER = 1
const CONFIG_ESP_WIFI_TX_BUFFER_TYPE = 1
const CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER_NUM = 32
const CONFIG_ESP_WIFI_STATIC_RX_MGMT_BUFFER = 1
const CONFIG_ESP_WIFI_DYNAMIC_RX_MGMT_BUF = 0
const CONFIG_ESP_WIFI_RX_MGMT_BUF_NUM_DEF = 5
const CONFIG_ESP_WIFI_AMPDU_TX_ENABLED = 1
const CONFIG_ESP_WIFI_TX_BA_WIN = 6
const CONFIG_ESP_WIFI_AMPDU_RX_ENABLED = 1
const CONFIG_ESP_WIFI_RX_BA_WIN = 6
const CONFIG_ESP_WIFI_NVS_ENABLED = 1
const CONFIG_ESP_WIFI_SOFTAP_BEACON_MAX_LEN = 752
const CONFIG_ESP_WIFI_MGMT_SBUF_NUM = 32
const CONFIG_ESP_WIFI_IRAM_OPT = 1
const CONFIG_ESP_WIFI_RX_IRAM_OPT = 1
const CONFIG_ESP_WIFI_ENABLE_WPA3_SAE = 1
const CONFIG_ESP_WIFI_ENABLE_SAE_PK = 1
const CONFIG_ESP_WIFI_SOFTAP_SAE_SUPPORT = 1
const CONFIG_ESP_WIFI_ENABLE_WPA3_OWE_STA = 1
const CONFIG_ESP_WIFI_SLP_DEFAULT_MIN_ACTIVE_TIME = 50
const CONFIG_ESP_WIFI_SLP_DEFAULT_MAX_ACTIVE_TIME = 10
const CONFIG_ESP_WIFI_SLP_DEFAULT_WAIT_BROADCAST_DATA_TIME = 15
const CONFIG_ESP_WIFI_STA_DISCONNECTED_PM_ENABLE = 1
const CONFIG_ESP_WIFI_GMAC_SUPPORT = 1
const CONFIG_ESP_WIFI_SOFTAP_SUPPORT = 1
const CONFIG_ESP_WIFI_ESPNOW_MAX_ENCRYPT_NUM = 7
const CONFIG_ESP_WIFI_MBEDTLS_CRYPTO = 1
const CONFIG_ESP_WIFI_MBEDTLS_TLS_CLIENT = 1
const CONFIG_ESP_WIFI_ENTERPRISE_SUPPORT = 1
const CONFIG_ESP_COREDUMP_ENABLE_TO_NONE = 1
const CONFIG_FATFS_VOLUME_COUNT = 2
const CONFIG_FATFS_LFN_NONE = 1
const CONFIG_FATFS_SECTOR_4096 = 1
const CONFIG_FATFS_CODEPAGE_437 = 1
const CONFIG_FATFS_CODEPAGE = 437
const CONFIG_FATFS_FS_LOCK = 0
const CONFIG_FATFS_TIMEOUT_MS = 10000
const CONFIG_FATFS_PER_FILE_CACHE = 1
const CONFIG_FATFS_USE_STRFUNC_NONE = 1
const CONFIG_FATFS_VFS_FSTAT_BLKSIZE = 0
const CONFIG_FATFS_LINK_LOCK = 1
const CONFIG_FATFS_DONT_TRUST_FREE_CLUSTER_CNT = 0
const CONFIG_FATFS_DONT_TRUST_LAST_ALLOC = 0
const CONFIG_FREERTOS_UNICORE = 1
const CONFIG_FREERTOS_HZ = 100
const CONFIG_FREERTOS_OPTIMIZED_SCHEDULER = 1
const CONFIG_FREERTOS_CHECK_STACKOVERFLOW_CANARY = 1
const CONFIG_FREERTOS_THREAD_LOCAL_STORAGE_POINTERS = 1
const CONFIG_FREERTOS_IDLE_TASK_STACKSIZE = 1536
const CONFIG_FREERTOS_MAX_TASK_NAME_LEN = 16
const CONFIG_FREERTOS_USE_TIMERS = 1
const CONFIG_FREERTOS_TIMER_SERVICE_TASK_NAME = "Tmr Svc"
const CONFIG_FREERTOS_TIMER_TASK_NO_AFFINITY = 1
const CONFIG_FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY = 0x7FFFFFFF
const CONFIG_FREERTOS_TIMER_TASK_PRIORITY = 1
const CONFIG_FREERTOS_TIMER_TASK_STACK_DEPTH = 2048
const CONFIG_FREERTOS_TIMER_QUEUE_LENGTH = 10
const CONFIG_FREERTOS_QUEUE_REGISTRY_SIZE = 0
const CONFIG_FREERTOS_TASK_NOTIFICATION_ARRAY_ENTRIES = 1
const CONFIG_FREERTOS_TASK_FUNCTION_WRAPPER = 1
const CONFIG_FREERTOS_TLSP_DELETION_CALLBACKS = 1
const CONFIG_FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER = 1
const CONFIG_FREERTOS_ISR_STACKSIZE = 1536
const CONFIG_FREERTOS_INTERRUPT_BACKTRACE = 1
const CONFIG_FREERTOS_TICK_SUPPORT_CORETIMER = 1
const CONFIG_FREERTOS_CORETIMER_0 = 1
const CONFIG_FREERTOS_SYSTICK_USES_CCOUNT = 1
const CONFIG_FREERTOS_PORT = 1
const CONFIG_FREERTOS_NO_AFFINITY = 0x7FFFFFFF
const CONFIG_FREERTOS_SUPPORT_STATIC_ALLOCATION = 1
const CONFIG_FREERTOS_DEBUG_OCDAWARE = 1
const CONFIG_FREERTOS_ENABLE_TASK_SNAPSHOT = 1
const CONFIG_FREERTOS_PLACE_SNAPSHOT_FUNS_INTO_FLASH = 1
const CONFIG_FREERTOS_NUMBER_OF_CORES = 1
const CONFIG_HAL_ASSERTION_EQUALS_SYSTEM = 1
const CONFIG_HAL_DEFAULT_ASSERTION_LEVEL = 2
const CONFIG_HAL_SPI_MASTER_FUNC_IN_IRAM = 1
const CONFIG_HAL_SPI_SLAVE_FUNC_IN_IRAM = 1
const CONFIG_HEAP_POISONING_DISABLED = 1
const CONFIG_HEAP_TRACING_OFF = 1
const CONFIG_LOG_DEFAULT_LEVEL_INFO = 1
const CONFIG_LOG_DEFAULT_LEVEL = 3
const CONFIG_LOG_MAXIMUM_EQUALS_DEFAULT = 1
const CONFIG_LOG_MAXIMUM_LEVEL = 3
const CONFIG_LOG_DYNAMIC_LEVEL_CONTROL = 1
const CONFIG_LOG_TAG_LEVEL_IMPL_CACHE_AND_LINKED_LIST = 1
const CONFIG_LOG_TAG_LEVEL_CACHE_BINARY_MIN_HEAP = 1
const CONFIG_LOG_TAG_LEVEL_IMPL_CACHE_SIZE = 31
const CONFIG_LOG_TIMESTAMP_SOURCE_RTOS = 1
const CONFIG_LWIP_ENABLE = 1
const CONFIG_LWIP_LOCAL_HOSTNAME = "espressif"
const CONFIG_LWIP_TCPIP_TASK_PRIO = 18
const CONFIG_LWIP_DNS_SUPPORT_MDNS_QUERIES = 1
const CONFIG_LWIP_TIMERS_ONDEMAND = 1
const CONFIG_LWIP_ND6 = 1
const CONFIG_LWIP_MAX_SOCKETS = 10
const CONFIG_LWIP_SO_REUSE = 1
const CONFIG_LWIP_SO_REUSE_RXTOALL = 1
const CONFIG_LWIP_IP_DEFAULT_TTL = 64
const CONFIG_LWIP_IP4_FRAG = 1
const CONFIG_LWIP_IP6_FRAG = 1
const CONFIG_LWIP_IP_REASS_MAX_PBUFS = 10
const CONFIG_LWIP_ESP_GRATUITOUS_ARP = 1
const CONFIG_LWIP_GARP_TMR_INTERVAL = 60
const CONFIG_LWIP_ESP_MLDV6_REPORT = 1
const CONFIG_LWIP_MLDV6_TMR_INTERVAL = 40
const CONFIG_LWIP_TCPIP_RECVMBOX_SIZE = 32
const CONFIG_LWIP_DHCP_DOES_ARP_CHECK = 1
const CONFIG_LWIP_DHCP_DISABLE_VENDOR_CLASS_ID = 1
const CONFIG_LWIP_DHCP_OPTIONS_LEN = 68
const CONFIG_LWIP_NUM_NETIF_CLIENT_DATA = 0
const CONFIG_LWIP_DHCP_COARSE_TIMER_SECS = 1
const CONFIG_LWIP_DHCPS = 1
const CONFIG_LWIP_DHCPS_LEASE_UNIT = 60
const CONFIG_LWIP_DHCPS_MAX_STATION_NUM = 8
const CONFIG_LWIP_DHCPS_STATIC_ENTRIES = 1
const CONFIG_LWIP_DHCPS_ADD_DNS = 1
const CONFIG_LWIP_IPV4 = 1
const CONFIG_LWIP_IPV6 = 1
const CONFIG_LWIP_IPV6_NUM_ADDRESSES = 3
const CONFIG_LWIP_NETIF_LOOPBACK = 1
const CONFIG_LWIP_LOOPBACK_MAX_PBUFS = 8
const CONFIG_LWIP_MAX_ACTIVE_TCP = 16
const CONFIG_LWIP_MAX_LISTENING_TCP = 16
const CONFIG_LWIP_TCP_HIGH_SPEED_RETRANSMISSION = 1
const CONFIG_LWIP_TCP_MAXRTX = 12
const CONFIG_LWIP_TCP_SYNMAXRTX = 12
const CONFIG_LWIP_TCP_MSS = 1440
const CONFIG_LWIP_TCP_TMR_INTERVAL = 250
const CONFIG_LWIP_TCP_MSL = 60000
const CONFIG_LWIP_TCP_FIN_WAIT_TIMEOUT = 20000
const CONFIG_LWIP_TCP_SND_BUF_DEFAULT = 5760
const CONFIG_LWIP_TCP_WND_DEFAULT = 5760
const CONFIG_LWIP_TCP_RECVMBOX_SIZE = 6
const CONFIG_LWIP_TCP_ACCEPTMBOX_SIZE = 6
const CONFIG_LWIP_TCP_QUEUE_OOSEQ = 1
const CONFIG_LWIP_TCP_OOSEQ_TIMEOUT = 6
const CONFIG_LWIP_TCP_OOSEQ_MAX_PBUFS = 4
const CONFIG_LWIP_TCP_OVERSIZE_MSS = 1
const CONFIG_LWIP_TCP_RTO_TIME = 1500
const CONFIG_LWIP_MAX_UDP_PCBS = 16
const CONFIG_LWIP_UDP_RECVMBOX_SIZE = 6
const CONFIG_LWIP_CHECKSUM_CHECK_ICMP = 1
const CONFIG_LWIP_TCPIP_TASK_STACK_SIZE = 3072
const CONFIG_LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY = 1
const CONFIG_LWIP_TCPIP_TASK_AFFINITY = 0x7FFFFFFF
const CONFIG_LWIP_IPV6_MEMP_NUM_ND6_QUEUE = 3
const CONFIG_LWIP_IPV6_ND6_NUM_NEIGHBORS = 5
const CONFIG_LWIP_IPV6_ND6_NUM_PREFIXES = 5
const CONFIG_LWIP_IPV6_ND6_NUM_ROUTERS = 3
const CONFIG_LWIP_IPV6_ND6_NUM_DESTINATIONS = 10
const CONFIG_LWIP_ICMP = 1
const CONFIG_LWIP_MAX_RAW_PCBS = 16
const CONFIG_LWIP_SNTP_MAX_SERVERS = 1
const CONFIG_LWIP_SNTP_UPDATE_DELAY = 3600000
const CONFIG_LWIP_SNTP_STARTUP_DELAY = 1
const CONFIG_LWIP_SNTP_MAXIMUM_STARTUP_DELAY = 5000
const CONFIG_LWIP_DNS_MAX_HOST_IP = 1
const CONFIG_LWIP_DNS_MAX_SERVERS = 3
const CONFIG_LWIP_BRIDGEIF_MAX_PORTS = 7
const CONFIG_LWIP_ESP_LWIP_ASSERT = 1
const CONFIG_LWIP_HOOK_TCP_ISN_DEFAULT = 1
const CONFIG_LWIP_HOOK_IP6_ROUTE_NONE = 1
const CONFIG_LWIP_HOOK_ND6_GET_GW_NONE = 1
const CONFIG_LWIP_HOOK_IP6_SELECT_SRC_ADDR_NONE = 1
const CONFIG_LWIP_HOOK_NETCONN_EXT_RESOLVE_NONE = 1
const CONFIG_LWIP_HOOK_DNS_EXT_RESOLVE_NONE = 1
const CONFIG_LWIP_HOOK_IP6_INPUT_DEFAULT = 1
const CONFIG_MBEDTLS_INTERNAL_MEM_ALLOC = 1
const CONFIG_MBEDTLS_ASYMMETRIC_CONTENT_LEN = 1
const CONFIG_MBEDTLS_SSL_IN_CONTENT_LEN = 16384
const CONFIG_MBEDTLS_SSL_OUT_CONTENT_LEN = 4096
const CONFIG_MBEDTLS_SSL_KEEP_PEER_CERTIFICATE = 1
const CONFIG_MBEDTLS_PKCS7_C = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS = 200
const CONFIG_MBEDTLS_CMAC_C = 1
const CONFIG_MBEDTLS_HARDWARE_AES = 1
const CONFIG_MBEDTLS_AES_USE_INTERRUPT = 1
const CONFIG_MBEDTLS_AES_INTERRUPT_LEVEL = 0
const CONFIG_MBEDTLS_HARDWARE_GCM = 1
const CONFIG_MBEDTLS_GCM_SUPPORT_NON_AES_CIPHER = 1
const CONFIG_MBEDTLS_HARDWARE_MPI = 1
const CONFIG_MBEDTLS_MPI_USE_INTERRUPT = 1
const CONFIG_MBEDTLS_MPI_INTERRUPT_LEVEL = 0
const CONFIG_MBEDTLS_HARDWARE_SHA = 1
const CONFIG_MBEDTLS_ROM_MD5 = 1
const CONFIG_MBEDTLS_HAVE_TIME = 1
const CONFIG_MBEDTLS_ECDSA_DETERMINISTIC = 1
const CONFIG_MBEDTLS_SHA1_C = 1
const CONFIG_MBEDTLS_SHA512_C = 1
const CONFIG_MBEDTLS_TLS_SERVER_AND_CLIENT = 1
const CONFIG_MBEDTLS_TLS_SERVER = 1
const CONFIG_MBEDTLS_TLS_CLIENT = 1
const CONFIG_MBEDTLS_TLS_ENABLED = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_RSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_RSA = 1
const CONFIG_MBEDTLS_SSL_RENEGOTIATION = 1
const CONFIG_MBEDTLS_SSL_PROTO_TLS1_2 = 1
const CONFIG_MBEDTLS_SSL_ALPN = 1
const CONFIG_MBEDTLS_CLIENT_SSL_SESSION_TICKETS = 1
const CONFIG_MBEDTLS_SERVER_SSL_SESSION_TICKETS = 1
const CONFIG_MBEDTLS_AES_C = 1
const CONFIG_MBEDTLS_CCM_C = 1
const CONFIG_MBEDTLS_GCM_C = 1
const CONFIG_MBEDTLS_PEM_PARSE_C = 1
const CONFIG_MBEDTLS_PEM_WRITE_C = 1
const CONFIG_MBEDTLS_X509_CRL_PARSE_C = 1
const CONFIG_MBEDTLS_X509_CSR_PARSE_C = 1
const CONFIG_MBEDTLS_ECP_C = 1
const CONFIG_MBEDTLS_PK_PARSE_EC_EXTENDED = 1
const CONFIG_MBEDTLS_PK_PARSE_EC_COMPRESSED = 1
const CONFIG_MBEDTLS_ECDH_C = 1
const CONFIG_MBEDTLS_ECDSA_C = 1
const CONFIG_MBEDTLS_ECP_DP_SECP192R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP224R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP256R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP384R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP521R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP192K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP224K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP256K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP256R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP384R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP512R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_CURVE25519_ENABLED = 1
const CONFIG_MBEDTLS_ECP_NIST_OPTIM = 1
const CONFIG_MBEDTLS_ERROR_STRINGS = 1
const CONFIG_MBEDTLS_FS_IO = 1
const CONFIG_MQTT_PROTOCOL_311 = 1
const CONFIG_MQTT_TRANSPORT_SSL = 1
const CONFIG_MQTT_TRANSPORT_WEBSOCKET = 1
const CONFIG_MQTT_TRANSPORT_WEBSOCKET_SECURE = 1
const CONFIG_NEWLIB_STDOUT_LINE_ENDING_CRLF = 1
const CONFIG_NEWLIB_STDIN_LINE_ENDING_CR = 1
const CONFIG_NEWLIB_TIME_SYSCALL_USE_RTC_HRT = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_0 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_1 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_2 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_PATCH_VERSION = 1
const CONFIG_PTHREAD_TASK_PRIO_DEFAULT = 5
const CONFIG_PTHREAD_TASK_STACK_SIZE_DEFAULT = 3072
const CONFIG_PTHREAD_STACK_MIN = 768
const CONFIG_PTHREAD_TASK_NAME_DEFAULT = "pthread"
const CONFIG_MMU_PAGE_SIZE_64KB = 1
const CONFIG_MMU_PAGE_MODE = "64KB"
const CONFIG_MMU_PAGE_SIZE = 0x10000
const CONFIG_SPI_FLASH_BROWNOUT_RESET_XMC = 1
const CONFIG_SPI_FLASH_BROWNOUT_RESET = 1
const CONFIG_SPI_FLASH_SUSPEND_TSUS_VAL_US = 50
const CONFIG_SPI_FLASH_ROM_DRIVER_PATCH = 1
const CONFIG_SPI_FLASH_DANGEROUS_WRITE_ABORTS = 1
const CONFIG_SPI_FLASH_YIELD_DURING_ERASE = 1
const CONFIG_SPI_FLASH_ERASE_YIELD_DURATION_MS = 20
const CONFIG_SPI_FLASH_ERASE_YIELD_TICKS = 1
const CONFIG_SPI_FLASH_WRITE_CHUNK_SIZE = 8192
const CONFIG_SPI_FLASH_VENDOR_XMC_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_GD_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_ISSI_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_MXIC_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_WINBOND_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_BOYA_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_TH_SUPPORTED = 1
const CONFIG_SPI_FLASH_SUPPORT_ISSI_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_MXIC_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_GD_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_WINBOND_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_BOYA_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_TH_CHIP = 1
const CONFIG_SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE = 1
const CONFIG_SPIFFS_MAX_PARTITIONS = 3
const CONFIG_SPIFFS_CACHE = 1
const CONFIG_SPIFFS_CACHE_WR = 1
const CONFIG_SPIFFS_PAGE_CHECK = 1
const CONFIG_SPIFFS_GC_MAX_RUNS = 10
const CONFIG_SPIFFS_PAGE_SIZE = 256
const CONFIG_SPIFFS_OBJ_NAME_LEN = 32
const CONFIG_SPIFFS_USE_MAGIC = 1
const CONFIG_SPIFFS_USE_MAGIC_LENGTH = 1
const CONFIG_SPIFFS_META_LENGTH = 4
const CONFIG_SPIFFS_USE_MTIME = 1
const CONFIG_WS_TRANSPORT = 1
const CONFIG_WS_BUFFER_SIZE = 1024
const CONFIG_UNITY_ENABLE_FLOAT = 1
const CONFIG_UNITY_ENABLE_DOUBLE = 1
const CONFIG_UNITY_ENABLE_IDF_TEST_RUNNER = 1
const CONFIG_USB_HOST_CONTROL_TRANSFER_MAX_SIZE = 256
const CONFIG_USB_HOST_HW_BUFFER_BIAS_BALANCED = 1
const CONFIG_USB_HOST_DEBOUNCE_DELAY_MS = 250
const CONFIG_USB_HOST_RESET_HOLD_MS = 30
const CONFIG_USB_HOST_RESET_RECOVERY_MS = 30
const CONFIG_USB_HOST_SET_ADDR_RECOVERY_MS = 10
const CONFIG_USB_OTG_SUPPORTED = 1
const CONFIG_VFS_SUPPORT_IO = 1
const CONFIG_VFS_SUPPORT_DIR = 1
const CONFIG_VFS_SUPPORT_SELECT = 1
const CONFIG_VFS_SUPPRESS_SELECT_DEBUG_OUTPUT = 1
const CONFIG_VFS_SUPPORT_TERMIOS = 1
const CONFIG_VFS_MAX_COUNT = 8
const CONFIG_VFS_SEMIHOSTFS_MAX_MOUNT_POINTS = 1
const CONFIG_VFS_INITIALIZE_DEV_NULL = 1
const CONFIG_WL_SECTOR_SIZE_4096 = 1
const CONFIG_WL_SECTOR_SIZE = 4096
const CONFIG_WIFI_PROV_SCAN_MAX_ENTRIES = 16
const CONFIG_WIFI_PROV_AUTOSTOP_TIMEOUT = 30
const CONFIG_WIFI_PROV_STA_ALL_CHANNEL_SCAN = 1
const X__bool_true_false_are_defined = 1
const True = 1
const False = 0
const X_NEWLIB_VERSION_H__ = 1
const X_NEWLIB_VERSION = "4.3.0"
const X__NEWLIB__ = 4
const X__NEWLIB_MINOR__ = 3
const X__NEWLIB_PATCHLEVEL__ = 0
const X_DEFAULT_SOURCE = 1
const X_POSIX_SOURCE = 1
const X_ATFILE_SOURCE = 1
const X__ATFILE_VISIBLE = 1
const X__BSD_VISIBLE = 1
const X__GNU_VISIBLE = 0
const X__ISO_C_VISIBLE = 2011
const X__LARGEFILE_VISIBLE = 0
const X__MISC_VISIBLE = 1
const X__POSIX_VISIBLE = 200809
const X__SVID_VISIBLE = 1
const X__XSI_VISIBLE = 0
const X__SSP_FORTIFY_LEVEL = 0
const X_POSIX_THREADS = 1
const X_POSIX_TIMEOUTS = 1
const X_POSIX_TIMERS = 1
const X_UNIX98_THREAD_MUTEX_ATTRIBUTES = 1
const X__have_longlong64 = 1
const X__have_long32 = 1
const X___int8_t_defined = 1
const X___int16_t_defined = 1
const X___int32_t_defined = 1
const X___int64_t_defined = 1
const X___int_least8_t_defined = 1
const X___int_least16_t_defined = 1
const X___int_least32_t_defined = 1
const X___int_least64_t_defined = 1
const X__INT8 = "hh"
const X__INT16 = "h"
const X__INT64 = "ll"
const X__FAST8 = "hh"
const X__FAST16 = "h"
const X__FAST64 = "ll"
const X__LEAST8 = "hh"
const X__LEAST16 = "h"
const X__LEAST64 = "ll"
const X__int8_t_defined = 1
const X__int16_t_defined = 1
const X__int32_t_defined = 1
const X__int64_t_defined = 1
const X__int_least8_t_defined = 1
const X__int_least16_t_defined = 1
const X__int_least32_t_defined = 1
const X__int_least64_t_defined = 1
const X__int_fast8_t_defined = 1
const X__int_fast16_t_defined = 1
const X__int_fast32_t_defined = 1
const X__int_fast64_t_defined = 1
const X__NEWLIB_H__ = 1
const X_ATEXIT_DYNAMIC_ALLOC = 1
const X_FSEEK_OPTIMIZATION = 1
const X_FVWRITE_IN_STREAMIO = 1
const X_HAVE_INITFINI_ARRAY = 1
const X_HAVE_LONG_DOUBLE = 1
const X_ICONV_ENABLED = 1
const X_LDBL_EQ_DBL = 1
const X_MB_LEN_MAX = 1
const X_NANO_MALLOC = 1
const X_REENT_CHECK_VERIFY = 1
const X_RETARGETABLE_LOCKING = 1
const X_UNBUF_STREAM_OPT = 1
const X_WANT_IO_C99_FORMATS = 1
const X_WANT_IO_LONG_LONG = 1
const X_WANT_IO_POS_ARGS = 1
const X_WANT_REENT_BACKWARD_BINARY_COMPAT = 1
const X_WANT_REENT_SMALL = 1
const X_WANT_USE_GDTOA = 1
const X__OBSOLETE_MATH_DEFAULT = 1
const X__BUFSIZ__ = 128
const X__RAND_MAX = 0x7fffffff
const X__GNUCLIKE_ASM = 3
const X__GNUCLIKE___TYPEOF = 1
const X__GNUCLIKE___SECTION = 1
const X__GNUCLIKE_CTOR_SECTION_HANDLING = 1
const X__GNUCLIKE_BUILTIN_CONSTANT_P = 1
const X__GNUCLIKE_BUILTIN_VARARGS = 1
const X__GNUCLIKE_BUILTIN_STDARG = 1
const X__GNUCLIKE_BUILTIN_VAALIST = 1
const X__GNUC_VA_LIST_COMPATIBILITY = 1
const X__GNUCLIKE_BUILTIN_NEXT_ARG = 1
const X__GNUCLIKE_BUILTIN_MEMCPY = 1
const X__CC_SUPPORTS_INLINE = 1
const X__CC_SUPPORTS___INLINE = 1
const X__CC_SUPPORTS___INLINE__ = 1
const X__CC_SUPPORTS___FUNC__ = 1
const X__CC_SUPPORTS_WARNING = 1
const X__CC_SUPPORTS_VARADIC_XXX = 1
const X__CC_SUPPORTS_DYNAMIC_ARRAY_INIT = 1
const X_NULL = 0
const X_ATEXIT_SIZE = 32
const X_REENT_EMERGENCY_SIZE = 25
const X_REENT_ASCTIME_SIZE = 26
const X_REENT_SIGNAL_SIZE = 24
const EXIT_FAILURE = 1
const EXIT_SUCCESS = 0
const X__SLBF = 0x0001
const X__SNBF = 0x0002
const X__SRD = 0x0004
const X__SWR = 0x0008
const X__SRW = 0x0010
const X__SEOF = 0x0020
const X__SERR = 0x0040
const X__SMBF = 0x0080
const X__SAPP = 0x0100
const X__SSTR = 0x0200
const X__SOPT = 0x0400
const X__SNPT = 0x0800
const X__SOFF = 0x1000
const X__SORD = 0x2000
const X__SL64 = 0x8000
const X__SNLK = 0x0001
const X__SWID = 0x2000
const X_IOFBF = 0
const X_IOLBF = 1
const X_IONBF = 2
const FOPEN_MAX = 20
const FILENAME_MAX = 1024
const P_tmpdir = "/tmp"
const SEEK_SET = 0
const SEEK_CUR = 1
const SEEK_END = 2
const TMP_MAX = 26
const L_ctermid = 16
const ESP_OK = 0
const ESP_ERR_NO_MEM = 0x101
const ESP_ERR_INVALID_ARG = 0x102
const ESP_ERR_INVALID_STATE = 0x103
const ESP_ERR_INVALID_SIZE = 0x104
const ESP_ERR_NOT_FOUND = 0x105
const ESP_ERR_NOT_SUPPORTED = 0x106
const ESP_ERR_TIMEOUT = 0x107
const ESP_ERR_INVALID_RESPONSE = 0x108
const ESP_ERR_INVALID_CRC = 0x109
const ESP_ERR_INVALID_VERSION = 0x10A
const ESP_ERR_INVALID_MAC = 0x10B
const ESP_ERR_NOT_FINISHED = 0x10C
const ESP_ERR_NOT_ALLOWED = 0x10D
const ESP_ERR_WIFI_BASE = 0x3000
const ESP_ERR_MESH_BASE = 0x4000
const ESP_ERR_FLASH_BASE = 0x6000
const ESP_ERR_HW_CRYPTO_BASE = 0xc000
const ESP_ERR_MEMPROT_BASE = 0xd000
const BIT31 = 0x80000000
const BIT30 = 0x40000000
const BIT29 = 0x20000000
const BIT28 = 0x10000000
const BIT27 = 0x08000000
const BIT26 = 0x04000000
const BIT25 = 0x02000000
const BIT24 = 0x01000000
const BIT23 = 0x00800000
const BIT22 = 0x00400000
const BIT21 = 0x00200000
const BIT20 = 0x00100000
const BIT19 = 0x00080000
const BIT18 = 0x00040000
const BIT17 = 0x00020000
const BIT16 = 0x00010000
const BIT15 = 0x00008000
const BIT14 = 0x00004000
const BIT13 = 0x00002000
const BIT12 = 0x00001000
const BIT11 = 0x00000800
const BIT10 = 0x00000400
const BIT9 = 0x00000200
const BIT8 = 0x00000100
const BIT7 = 0x00000080
const BIT6 = 0x00000040
const BIT5 = 0x00000020
const BIT4 = 0x00000010
const BIT3 = 0x00000008
const BIT2 = 0x00000004
const BIT1 = 0x00000002
const BIT0 = 0x00000001
const SPI_FLASH_OPI_FLAG = 16
const SOC_CLK_RC_FAST_FREQ_APPROX = 8500000
const SOC_CLK_RC_SLOW_FREQ_APPROX = 90000
const SOC_CLK_XTAL32K_FREQ_APPROX = 32768
const SOC_ADC_SUPPORTED = 1
const SOC_DAC_SUPPORTED = 1
const SOC_UART_SUPPORTED = 1
const SOC_TWAI_SUPPORTED = 1
const SOC_CP_DMA_SUPPORTED = 1
const SOC_DEDICATED_GPIO_SUPPORTED = 1
const SOC_GPTIMER_SUPPORTED = 1
const SOC_SUPPORTS_SECURE_DL_MODE = 1
const SOC_ULP_FSM_SUPPORTED = 1
const SOC_RISCV_COPROC_SUPPORTED = 1
const SOC_USB_OTG_SUPPORTED = 1
const SOC_PCNT_SUPPORTED = 1
const SOC_PHY_SUPPORTED = 1
const SOC_WIFI_SUPPORTED = 1
const SOC_ULP_SUPPORTED = 1
const SOC_CCOMP_TIMER_SUPPORTED = 1
const SOC_ASYNC_MEMCPY_SUPPORTED = 1
const SOC_EFUSE_KEY_PURPOSE_FIELD = 1
const SOC_EFUSE_SUPPORTED = 1
const SOC_TEMP_SENSOR_SUPPORTED = 1
const SOC_CACHE_SUPPORT_WRAP = 1
const SOC_RTC_FAST_MEM_SUPPORTED = 1
const SOC_RTC_SLOW_MEM_SUPPORTED = 1
const SOC_RTC_MEM_SUPPORTED = 1
const SOC_PSRAM_DMA_CAPABLE = 1
const SOC_XT_WDT_SUPPORTED = 1
const SOC_I2S_SUPPORTED = 1
const SOC_RMT_SUPPORTED = 1
const SOC_SDM_SUPPORTED = 1
const SOC_GPSPI_SUPPORTED = 1
const SOC_LEDC_SUPPORTED = 1
const SOC_I2C_SUPPORTED = 1
const SOC_SYSTIMER_SUPPORTED = 1
const SOC_SUPPORT_COEXISTENCE = 0
const SOC_AES_SUPPORTED = 1
const SOC_MPI_SUPPORTED = 1
const SOC_SHA_SUPPORTED = 1
const SOC_HMAC_SUPPORTED = 1
const SOC_DIG_SIGN_SUPPORTED = 1
const SOC_FLASH_ENC_SUPPORTED = 1
const SOC_SECURE_BOOT_SUPPORTED = 1
const SOC_MEMPROT_SUPPORTED = 1
const SOC_TOUCH_SENSOR_SUPPORTED = 1
const SOC_BOD_SUPPORTED = 1
const SOC_CLK_TREE_SUPPORTED = 1
const SOC_MPU_SUPPORTED = 1
const SOC_WDT_SUPPORTED = 1
const SOC_SPI_FLASH_SUPPORTED = 1
const SOC_RNG_SUPPORTED = 1
const SOC_LIGHT_SLEEP_SUPPORTED = 1
const SOC_DEEP_SLEEP_SUPPORTED = 1
const SOC_LP_PERIPH_SHARE_INTERRUPT = 1
const SOC_PM_SUPPORTED = 1
const SOC_XTAL_SUPPORT_40M = 1
const SOC_ADC_RTC_CTRL_SUPPORTED = 1
const SOC_ADC_DIG_CTRL_SUPPORTED = 1
const SOC_ADC_ARBITER_SUPPORTED = 1
const SOC_ADC_DIG_IIR_FILTER_SUPPORTED = 1
const SOC_ADC_DIG_IIR_FILTER_UNIT_BINDED = 1
const SOC_ADC_MONITOR_SUPPORTED = 1
const SOC_ADC_DMA_SUPPORTED = 1
const SOC_ADC_SAMPLE_FREQ_THRES_HIGH = 83333
const SOC_ADC_SAMPLE_FREQ_THRES_LOW = 611
const SOC_ADC_SHARED_POWER = 1
const SOC_BROWNOUT_RESET_SUPPORTED = 1
const SOC_CACHE_WRITEBACK_SUPPORTED = 1
const SOC_CPU_INTR_NUM = 32
const SOC_CPU_BREAKPOINTS_NUM = 2
const SOC_CPU_WATCHPOINTS_NUM = 2
const SOC_CPU_WATCHPOINT_MAX_REGION_SIZE = 64
const SOC_DAC_CHAN_NUM = 2
const SOC_DAC_RESOLUTION = 8
const SOC_GPIO_PIN_COUNT = 47
const SOC_GPIO_SUPPORT_PIN_GLITCH_FILTER = 1
const SOC_GPIO_FILTER_CLK_SUPPORT_APB = 1
const SOC_GPIO_IN_RANGE_MAX = 46
const SOC_GPIO_OUT_RANGE_MAX = 45
const SOC_MMU_LINEAR_ADDRESS_REGION_NUM = 5
const SOC_MPU_CONFIGURABLE_REGIONS_SUPPORTED = 0
const SOC_MPU_REGIONS_MAX_NUM = 8
const SOC_MPU_REGION_RO_SUPPORTED = 0
const SOC_MPU_REGION_WO_SUPPORTED = 0
const SOC_RMT_TX_CANDIDATES_PER_GROUP = 4
const SOC_RMT_RX_CANDIDATES_PER_GROUP = 4
const SOC_RMT_CHANNELS_PER_GROUP = 4
const SOC_RMT_MEM_WORDS_PER_CHANNEL = 64
const SOC_RMT_SUPPORT_RX_DEMODULATION = 1
const SOC_RMT_SUPPORT_TX_ASYNC_STOP = 1
const SOC_RMT_SUPPORT_TX_LOOP_COUNT = 1
const SOC_RMT_SUPPORT_TX_SYNCHRO = 1
const SOC_RMT_SUPPORT_TX_CARRIER_DATA_ONLY = 1
const SOC_RMT_SUPPORT_REF_TICK = 1
const SOC_RMT_SUPPORT_APB = 1
const SOC_RMT_CHANNEL_CLK_INDEPENDENT = 1
const SOC_RTCIO_PIN_COUNT = 22
const SOC_RTCIO_INPUT_OUTPUT_SUPPORTED = 1
const SOC_RTCIO_HOLD_SUPPORTED = 1
const SOC_RTCIO_WAKE_SUPPORTED = 1
const SOC_LP_IO_CLOCK_IS_INDEPENDENT = 1
const SOC_SDM_CHANNELS_PER_GROUP = 8
const SOC_SDM_CLK_SUPPORT_APB = 1
const SOC_SPI_HD_BOTH_INOUT_SUPPORTED = 1
const SOC_SPI_PERIPH_NUM = 3
const SOC_SPI_DMA_CHAN_NUM = 3
const SOC_SPI_MAX_CS_NUM = 6
const SOC_SPI_MAXIMUM_BUFFER_SIZE = 72
const SOC_SPI_MAX_PRE_DIVIDER = 8192
const SOC_SPI_SUPPORT_DDRCLK = 1
const SOC_SPI_SLAVE_SUPPORT_SEG_TRANS = 1
const SOC_SPI_SUPPORT_CD_SIG = 1
const SOC_SPI_SUPPORT_CONTINUOUS_TRANS = 1
const SOC_SPI_SUPPORT_CLK_APB = 1
const SOC_SPI_SUPPORT_SLAVE_HD_VER2 = 1
const SOC_SPI_PERIPH_SUPPORT_CONTROL_DUMMY_OUT = 1
const SOC_SPI_SUPPORT_OCT = 1
const SOC_SPI_SCT_SUPPORTED = 1
const SOC_SPI_SCT_REG_NUM = 27
const SOC_SPI_SCT_CONF_BITLEN_MAX = 0x7FFFFD
const SOC_MEMSPI_IS_INDEPENDENT = 1
const SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED = 1
const SOC_SYSTIMER_COUNTER_NUM = 1
const SOC_SYSTIMER_ALARM_NUM = 3
const SOC_SYSTIMER_BIT_WIDTH_LO = 32
const SOC_SYSTIMER_BIT_WIDTH_HI = 32
const SOC_LP_TIMER_BIT_WIDTH_LO = 32
const SOC_LP_TIMER_BIT_WIDTH_HI = 16
const SOC_TWAI_CLK_SUPPORT_APB = 1
const SOC_TWAI_BRP_MIN = 2
const SOC_TWAI_BRP_MAX = 32768
const SOC_TWAI_SUPPORTS_RX_STATUS = 1
const SOC_SPIRAM_SUPPORTED = 1
const SOC_SPIRAM_XIP_SUPPORTED = 1
const SOC_EFUSE_DIS_DOWNLOAD_ICACHE = 1
const SOC_EFUSE_DIS_DOWNLOAD_DCACHE = 1
const SOC_EFUSE_HARD_DIS_JTAG = 1
const SOC_EFUSE_SOFT_DIS_JTAG = 1
const SOC_EFUSE_DIS_BOOT_REMAP = 1
const SOC_EFUSE_DIS_LEGACY_SPI_BOOT = 1
const SOC_EFUSE_DIS_ICACHE = 1
const SOC_SECURE_BOOT_V2_RSA = 1
const SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 3
const SOC_EFUSE_REVOKE_BOOT_KEY_DIGESTS = 1
const SOC_SUPPORT_SECURE_BOOT_REVOKE_KEY = 1
const SOC_FLASH_ENCRYPTION_XTS_AES = 1
const SOC_FLASH_ENCRYPTION_XTS_AES_OPTIONS = 1
const SOC_FLASH_ENCRYPTION_XTS_AES_128 = 1
const SOC_FLASH_ENCRYPTION_XTS_AES_256 = 1
const SOC_MEMPROT_CPU_PREFETCH_PAD_SIZE = 16
const SOC_MEMPROT_MEM_ALIGN_SIZE = 4
const DR_REG_SYSTEM_BASE = 0x3f4c0000
const DR_REG_SENSITIVE_BASE = 0x3f4c1000
const DR_REG_INTERRUPT_BASE = 0x3f4c2000
const DR_REG_DMA_COPY_BASE = 0x3f4c3000
const DR_REG_EXTMEM_BASE = 0x61800000
const DR_REG_MMU_TABLE = 0x61801000
const DR_REG_ITAG_TABLE = 0x61802000
const DR_REG_DTAG_TABLE = 0x61803000
const DR_REG_AES_BASE = 0x6003a000
const DR_REG_SHA_BASE = 0x6003b000
const DR_REG_RSA_BASE = 0x6003c000
const DR_REG_HMAC_BASE = 0x6003e000
const DR_REG_DIGITAL_SIGNATURE_BASE = 0x6003d000
const DR_REG_CRYPTO_DMA_BASE = 0x6003f000
const DR_REG_ASSIST_DEBUG_BASE = 0x3f4ce000
const DR_REG_DEDICATED_GPIO_BASE = 0x3f4cf000
const DR_REG_INTRUSION_BASE = 0x3f4d0000
const DR_REG_UART_BASE = 0x3f400000
const DR_REG_SPI1_BASE = 0x3f402000
const DR_REG_SPI0_BASE = 0x3f403000
const DR_REG_GPIO_BASE = 0x3f404000
const DR_REG_GPIO_SD_BASE = 0x3f404f00
const DR_REG_FE2_BASE = 0x3f405000
const DR_REG_FE_BASE = 0x3f406000
const DR_REG_FRC_TIMER_BASE = 0x3f407000
const DR_REG_RTCCNTL_BASE = 0x3f408000
const DR_REG_RTCIO_BASE = 0x3f408400
const DR_REG_SENS_BASE = 0x3f408800
const DR_REG_RTC_I2C_BASE = 0x3f408C00
const DR_REG_IO_MUX_BASE = 0x3f409000
const DR_REG_HINF_BASE = 0x3f40B000
const DR_REG_I2S_BASE = 0x3f40F000
const DR_REG_UART1_BASE = 0x3f410000
const DR_REG_I2C_EXT_BASE = 0x3f413000
const DR_REG_UHCI0_BASE = 0x3f414000
const DR_REG_SLCHOST_BASE = 0x3f415000
const DR_REG_RMT_BASE = 0x3f416000
const DR_REG_PCNT_BASE = 0x3f417000
const DR_REG_SLC_BASE = 0x3f418000
const DR_REG_LEDC_BASE = 0x3f419000
const DR_REG_CP_BASE = 0x3f4c3000
const DR_REG_EFUSE_BASE = 0x3f41A000
const DR_REG_NRX_BASE = 0x3f41CC00
const DR_REG_BB_BASE = 0x3f41D000
const DR_REG_TIMERGROUP0_BASE = 0x3f41F000
const DR_REG_TIMERGROUP1_BASE = 0x3f420000
const DR_REG_RTC_SLOWMEM_BASE = 0x3f421000
const DR_REG_SYSTIMER_BASE = 0x3f423000
const DR_REG_SPI2_BASE = 0x3f424000
const DR_REG_SPI3_BASE = 0x3f425000
const DR_REG_SYSCON_BASE = 0x3f426000
const DR_REG_APB_CTRL_BASE = 0x3f426000
const DR_REG_I2C1_EXT_BASE = 0x3f427000
const DR_REG_USB_WRAP_BASE = 0x3f439000
const DR_REG_APB_SARADC_BASE = 0x3f440000
const DR_REG_USB_BASE = 0x60080000
const SPI_CLK_DIV = 4
const TICKS_PER_US_ROM = 40
const SOC_DROM_LOW = 0x3F000000
const SOC_DROM_HIGH = 0x3FF80000
const SOC_IROM_LOW = 0x40080000
const SOC_IROM_HIGH = 0x40800000
const SOC_IROM_MASK_LOW = 0x40000000
const SOC_IROM_MASK_HIGH = 0x40020000
const SOC_IRAM_LOW = 0x40020000
const SOC_IRAM_HIGH = 0x40070000
const SOC_DRAM_LOW = 0x3FFB0000
const SOC_DRAM_HIGH = 0x40000000
const SOC_RTC_IRAM_LOW = 0x40070000
const SOC_RTC_IRAM_HIGH = 0x40072000
const SOC_RTC_DRAM_LOW = 0x3ff9e000
const SOC_RTC_DRAM_HIGH = 0x3ffa0000
const SOC_RTC_DATA_LOW = 0x50000000
const SOC_RTC_DATA_HIGH = 0x50002000
const SOC_EXTRAM_DATA_LOW = 0x3F500000
const SOC_EXTRAM_DATA_HIGH = 0x3FF80000
const SOC_DIRAM_IRAM_LOW = 0x40020000
const SOC_DIRAM_IRAM_HIGH = 0x40070000
const SOC_DIRAM_DRAM_LOW = 0x3FFB0000
const SOC_DIRAM_DRAM_HIGH = 0x40000000
const SOC_DMA_LOW = 0x3FFB0000
const SOC_DMA_HIGH = 0x40000000
const SOC_DMA_EXT_LOW = 0x3F500000
const SOC_DMA_EXT_HIGH = 0x3FF80000
const SOC_BYTE_ACCESSIBLE_LOW = 0x3FF9E000
const SOC_BYTE_ACCESSIBLE_HIGH = 0x40000000
const SOC_MEM_INTERNAL_LOW = 0x3FF9E000
const SOC_MEM_INTERNAL_HIGH = 0x40072000
const SOC_ROM_STACK_START = 0x3fffe70c
const ETS_WMAC_INUM = 0
const ETS_WBB_INUM = 4
const ETS_T1_WDT_INUM = 24
const ETS_MEMACCESS_ERR_INUM = 25
const ETS_SLC_INUM = 1
const ETS_UART0_INUM = 5
const ETS_UART1_INUM = 5
const ETS_SPI2_INUM = 1
const ETS_FRC_TIMER2_INUM = 10
const ETS_GPIO_INUM = 4
const ETS_INVALID_INUM = 6
const MSPI_FUNC_NUM = 0
const MSPI_IOMUX_PIN_NUM_CS1 = 26
const MSPI_IOMUX_PIN_NUM_HD = 27
const MSPI_IOMUX_PIN_NUM_WP = 28
const MSPI_IOMUX_PIN_NUM_CS0 = 29
const MSPI_IOMUX_PIN_NUM_CLK = 30
const MSPI_IOMUX_PIN_NUM_MISO = 31
const MSPI_IOMUX_PIN_NUM_MOSI = 32
const MSPI_IOMUX_PIN_NUM_D4 = 33
const MSPI_IOMUX_PIN_NUM_D5 = 34
const MSPI_IOMUX_PIN_NUM_D6 = 35
const MSPI_IOMUX_PIN_NUM_D7 = 36
const MSPI_IOMUX_PIN_NUM_DQS = 37
const SPI2_FUNC_NUM = 4
const SPI2_IOMUX_PIN_NUM_HD = 9
const SPI2_IOMUX_PIN_NUM_CS = 10
const SPI2_IOMUX_PIN_NUM_MOSI = 11
const SPI2_IOMUX_PIN_NUM_CLK = 12
const SPI2_IOMUX_PIN_NUM_MISO = 13
const SPI2_IOMUX_PIN_NUM_WP = 14
const SPI2_FUNC_NUM_OCT = 2
const SPI2_IOMUX_PIN_NUM_HD_OCT = 33
const SPI2_IOMUX_PIN_NUM_CS_OCT = 34
const SPI2_IOMUX_PIN_NUM_MOSI_OCT = 35
const SPI2_IOMUX_PIN_NUM_CLK_OCT = 36
const SPI2_IOMUX_PIN_NUM_MISO_OCT = 37
const SPI2_IOMUX_PIN_NUM_WP_OCT = 38
const SPI2_IOMUX_PIN_NUM_IO4_OCT = 10
const SPI2_IOMUX_PIN_NUM_IO5_OCT = 11
const SPI2_IOMUX_PIN_NUM_IO6_OCT = 12
const SPI2_IOMUX_PIN_NUM_IO7_OCT = 13
const SPI_USR_V = 0x1
const SPI_USR_S = 24
const SPI_CONF_BITLEN = 0x007FFFFF
const SPI_CONF_BITLEN_V = 0x7FFFFF
const SPI_CONF_BITLEN_S = 0
const SPI_USR_ADDR_VALUE = 0xFFFFFFFF
const SPI_USR_ADDR_VALUE_V = 0xFFFFFFFF
const SPI_USR_ADDR_VALUE_S = 0
const SPI_WR_BIT_ORDER_V = 0x1
const SPI_WR_BIT_ORDER_S = 26
const SPI_RD_BIT_ORDER_V = 0x1
const SPI_RD_BIT_ORDER_S = 25
const SPI_WP_REG_V = 0x1
const SPI_WP_REG_S = 21
const SPI_D_POL_V = 0x1
const SPI_D_POL_S = 19
const SPI_Q_POL_V = 0x1
const SPI_Q_POL_S = 18
const SPI_FREAD_OCT_V = 0x1
const SPI_FREAD_OCT_S = 16
const SPI_FREAD_QUAD_V = 0x1
const SPI_FREAD_QUAD_S = 15
const SPI_FREAD_DUAL_V = 0x1
const SPI_FREAD_DUAL_S = 14
const SPI_FCMD_OCT_V = 0x1
const SPI_FCMD_OCT_S = 10
const SPI_FCMD_QUAD_V = 0x1
const SPI_FCMD_QUAD_S = 9
const SPI_FCMD_DUAL_V = 0x1
const SPI_FCMD_DUAL_S = 8
const SPI_FADDR_OCT_V = 0x1
const SPI_FADDR_OCT_S = 7
const SPI_FADDR_QUAD_V = 0x1
const SPI_FADDR_QUAD_S = 6
const SPI_FADDR_DUAL_V = 0x1
const SPI_FADDR_DUAL_S = 5
const SPI_DUMMY_OUT_V = 0x1
const SPI_DUMMY_OUT_S = 3
const SPI_EXT_HOLD_EN_V = 0x1
const SPI_EXT_HOLD_EN_S = 2
const SPI_CS_HOLD_DELAY = 0x0000003F
const SPI_CS_HOLD_DELAY_V = 0x3F
const SPI_CS_HOLD_DELAY_S = 14
const SPI_W16_17_WR_ENA_V = 0x1
const SPI_W16_17_WR_ENA_S = 4
const SPI_RSCK_DATA_OUT_V = 0x1
const SPI_RSCK_DATA_OUT_S = 3
const SPI_CLK_MODE_13_V = 0x1
const SPI_CLK_MODE_13_S = 2
const SPI_CLK_MODE = 0x00000003
const SPI_CLK_MODE_V = 0x3
const SPI_CLK_MODE_S = 0
const SPI_CS_DELAY_NUM = 0x00000003
const SPI_CS_DELAY_NUM_V = 0x3
const SPI_CS_DELAY_NUM_S = 29
const SPI_CS_DELAY_MODE = 0x00000007
const SPI_CS_DELAY_MODE_V = 0x7
const SPI_CS_DELAY_MODE_S = 26
const SPI_CS_HOLD_TIME = 0x00001FFF
const SPI_CS_HOLD_TIME_V = 0x1FFF
const SPI_CS_HOLD_TIME_S = 13
const SPI_CS_SETUP_TIME = 0x00001FFF
const SPI_CS_SETUP_TIME_V = 0x1FFF
const SPI_CS_SETUP_TIME_S = 0
const SPI_CLK_EQU_SYSCLK_V = 0x1
const SPI_CLK_EQU_SYSCLK_S = 31
const SPI_CLKDIV_PRE = 0x00001FFF
const SPI_CLKDIV_PRE_V = 0x1FFF
const SPI_CLKDIV_PRE_S = 18
const SPI_CLKCNT_N = 0x0000003F
const SPI_CLKCNT_N_V = 0x3F
const SPI_CLKCNT_N_S = 12
const SPI_CLKCNT_H = 0x0000003F
const SPI_CLKCNT_H_V = 0x3F
const SPI_CLKCNT_H_S = 6
const SPI_CLKCNT_L = 0x0000003F
const SPI_CLKCNT_L_V = 0x3F
const SPI_CLKCNT_L_S = 0
const SPI_USR_COMMAND_V = 0x1
const SPI_USR_COMMAND_S = 31
const SPI_USR_ADDR_V = 0x1
const SPI_USR_ADDR_S = 30
const SPI_USR_DUMMY_V = 0x1
const SPI_USR_DUMMY_S = 29
const SPI_USR_MISO_V = 0x1
const SPI_USR_MISO_S = 28
const SPI_USR_MOSI_V = 0x1
const SPI_USR_MOSI_S = 27
const SPI_USR_DUMMY_IDLE_V = 0x1
const SPI_USR_DUMMY_IDLE_S = 26
const SPI_USR_MOSI_HIGHPART_V = 0x1
const SPI_USR_MOSI_HIGHPART_S = 25
const SPI_USR_MISO_HIGHPART_V = 0x1
const SPI_USR_MISO_HIGHPART_S = 24
const SPI_USR_PREP_HOLD_V = 0x1
const SPI_USR_PREP_HOLD_S = 23
const SPI_USR_CMD_HOLD_V = 0x1
const SPI_USR_CMD_HOLD_S = 22
const SPI_USR_ADDR_HOLD_V = 0x1
const SPI_USR_ADDR_HOLD_S = 21
const SPI_USR_DUMMY_HOLD_V = 0x1
const SPI_USR_DUMMY_HOLD_S = 20
const SPI_USR_DIN_HOLD_V = 0x1
const SPI_USR_DIN_HOLD_S = 19
const SPI_USR_DOUT_HOLD_V = 0x1
const SPI_USR_DOUT_HOLD_S = 18
const SPI_USR_HOLD_POL_V = 0x1
const SPI_USR_HOLD_POL_S = 17
const SPI_SIO_V = 0x1
const SPI_SIO_S = 16
const SPI_USR_CONF_NXT_V = 0x1
const SPI_USR_CONF_NXT_S = 15
const SPI_FWRITE_OCT_V = 0x1
const SPI_FWRITE_OCT_S = 14
const SPI_FWRITE_QUAD_V = 0x1
const SPI_FWRITE_QUAD_S = 13
const SPI_FWRITE_DUAL_V = 0x1
const SPI_FWRITE_DUAL_S = 12
const SPI_WR_BYTE_ORDER_V = 0x1
const SPI_WR_BYTE_ORDER_S = 11
const SPI_RD_BYTE_ORDER_V = 0x1
const SPI_RD_BYTE_ORDER_S = 10
const SPI_CK_OUT_EDGE_V = 0x1
const SPI_CK_OUT_EDGE_S = 9
const SPI_RSCK_I_EDGE_V = 0x1
const SPI_RSCK_I_EDGE_S = 8
const SPI_CS_SETUP_V = 0x1
const SPI_CS_SETUP_S = 7
const SPI_CS_HOLD_V = 0x1
const SPI_CS_HOLD_S = 6
const SPI_TSCK_I_EDGE_V = 0x1
const SPI_TSCK_I_EDGE_S = 5
const SPI_OPI_MODE_V = 0x1
const SPI_OPI_MODE_S = 4
const SPI_QPI_MODE_V = 0x1
const SPI_QPI_MODE_S = 3
const SPI_DOUTDIN_V = 0x1
const SPI_DOUTDIN_S = 0
const SPI_USR_ADDR_BITLEN = 0x0000001F
const SPI_USR_ADDR_BITLEN_V = 0x1F
const SPI_USR_ADDR_BITLEN_S = 27
const SPI_USR_DUMMY_CYCLELEN = 0x000000FF
const SPI_USR_DUMMY_CYCLELEN_V = 0xFF
const SPI_USR_DUMMY_CYCLELEN_S = 0
const SPI_USR_COMMAND_BITLEN = 0x0000000F
const SPI_USR_COMMAND_BITLEN_V = 0xF
const SPI_USR_COMMAND_BITLEN_S = 28
const SPI_USR_COMMAND_VALUE = 0x0000FFFF
const SPI_USR_COMMAND_VALUE_V = 0xFFFF
const SPI_USR_COMMAND_VALUE_S = 0
const SPI_USR_MOSI_DBITLEN = 0x007FFFFF
const SPI_USR_MOSI_DBITLEN_V = 0x7FFFFF
const SPI_USR_MOSI_DBITLEN_S = 0
const SPI_USR_MISO_DBITLEN = 0x007FFFFF
const SPI_USR_MISO_DBITLEN_V = 0x7FFFFF
const SPI_USR_MISO_DBITLEN_S = 0
const SPI_QUAD_DIN_PIN_SWAP_V = 0x1
const SPI_QUAD_DIN_PIN_SWAP_S = 31
const SPI_CS_KEEP_ACTIVE_V = 0x1
const SPI_CS_KEEP_ACTIVE_S = 30
const SPI_CK_IDLE_EDGE_V = 0x1
const SPI_CK_IDLE_EDGE_S = 29
const SPI_CD_IDLE_EDGE_V = 0x1
const SPI_CD_IDLE_EDGE_S = 26
const SPI_CD_CMD_SET_V = 0x1
const SPI_CD_CMD_SET_S = 25
const SPI_DQS_IDLE_EDGE_V = 0x1
const SPI_DQS_IDLE_EDGE_S = 24
const SPI_SLAVE_CS_POL_V = 0x1
const SPI_SLAVE_CS_POL_S = 23
const SPI_CD_ADDR_SET_V = 0x1
const SPI_CD_ADDR_SET_S = 22
const SPI_CD_DUMMY_SET_V = 0x1
const SPI_CD_DUMMY_SET_S = 21
const SPI_CD_DATA_SET_V = 0x1
const SPI_CD_DATA_SET_S = 20
const SPI_CMD_DTR_EN_V = 0x1
const SPI_CMD_DTR_EN_S = 19
const SPI_ADDR_DTR_EN_V = 0x1
const SPI_ADDR_DTR_EN_S = 18
const SPI_DATA_DTR_EN_V = 0x1
const SPI_DATA_DTR_EN_S = 17
const SPI_CLK_DATA_DTR_EN_V = 0x1
const SPI_CLK_DATA_DTR_EN_S = 16
const SPI_MASTER_CS_POL = 0x0000003F
const SPI_MASTER_CS_POL_V = 0x3F
const SPI_MASTER_CS_POL_S = 7
const SPI_CK_DIS_V = 0x1
const SPI_CK_DIS_S = 6
const SPI_CS5_DIS_V = 0x1
const SPI_CS5_DIS_S = 5
const SPI_CS4_DIS_V = 0x1
const SPI_CS4_DIS_S = 4
const SPI_CS3_DIS_V = 0x1
const SPI_CS3_DIS_S = 3
const SPI_CS2_DIS_V = 0x1
const SPI_CS2_DIS_S = 2
const SPI_CS1_DIS_V = 0x1
const SPI_CS1_DIS_S = 1
const SPI_CS0_DIS_V = 0x1
const SPI_CS0_DIS_S = 0
const SPI_SOFT_RESET_V = 0x1
const SPI_SOFT_RESET_S = 31
const SPI_SLAVE_MODE_V = 0x1
const SPI_SLAVE_MODE_S = 30
const SPI_TRANS_DONE_AUTO_CLR_EN_V = 0x1
const SPI_TRANS_DONE_AUTO_CLR_EN_S = 29
const SPI_TRANS_CNT = 0x0000000F
const SPI_TRANS_CNT_V = 0xF
const SPI_TRANS_CNT_S = 23
const SPI_SEG_MAGIC_ERR_INT_EN_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_EN_S = 11
const SPI_INT_DMA_SEG_TRANS_EN_V = 0x1
const SPI_INT_DMA_SEG_TRANS_EN_S = 10
const SPI_INT_TRANS_DONE_EN_V = 0x1
const SPI_INT_TRANS_DONE_EN_S = 9
const SPI_INT_WR_DMA_DONE_EN_V = 0x1
const SPI_INT_WR_DMA_DONE_EN_S = 8
const SPI_INT_RD_DMA_DONE_EN_V = 0x1
const SPI_INT_RD_DMA_DONE_EN_S = 7
const SPI_INT_WR_BUF_DONE_EN_V = 0x1
const SPI_INT_WR_BUF_DONE_EN_S = 6
const SPI_INT_RD_BUF_DONE_EN_V = 0x1
const SPI_INT_RD_BUF_DONE_EN_S = 5
const SPI_TRANS_DONE_V = 0x1
const SPI_TRANS_DONE_S = 4
const SPI_SLV_LAST_ADDR = 0x000000FF
const SPI_SLV_LAST_ADDR_V = 0xFF
const SPI_SLV_LAST_ADDR_S = 24
const SPI_SLV_LAST_COMMAND = 0x000000FF
const SPI_SLV_LAST_COMMAND_V = 0xFF
const SPI_SLV_LAST_COMMAND_S = 16
const SPI_SLV_WR_DMA_DONE_V = 0x1
const SPI_SLV_WR_DMA_DONE_S = 15
const SPI_SLV_CMD_ERR_V = 0x1
const SPI_SLV_CMD_ERR_S = 14
const SPI_SLV_ADDR_ERR_V = 0x1
const SPI_SLV_ADDR_ERR_S = 13
const SPI_SLV_NO_QPI_EN_V = 0x1
const SPI_SLV_NO_QPI_EN_S = 12
const SPI_SLV_CMD_ERR_CLR_V = 0x1
const SPI_SLV_CMD_ERR_CLR_S = 11
const SPI_SLV_ADDR_ERR_CLR_V = 0x1
const SPI_SLV_ADDR_ERR_CLR_S = 10
const SPI_CONF_BASE_BITLEN = 0x0000007F
const SPI_CONF_BASE_BITLEN_V = 0x7F
const SPI_CONF_BASE_BITLEN_S = 25
const SPI_SLV_WR_BUF_DONE_V = 0x1
const SPI_SLV_WR_BUF_DONE_S = 24
const SPI_SEG_MAGIC_ERR_V = 0x1
const SPI_SEG_MAGIC_ERR_S = 25
const SPI_SLV_RD_BUF_DONE_V = 0x1
const SPI_SLV_RD_BUF_DONE_S = 24
const SPI_SLV_DMA_RD_BYTELEN = 0x000FFFFF
const SPI_SLV_DMA_RD_BYTELEN_V = 0xFFFFF
const SPI_SLV_DMA_RD_BYTELEN_S = 0
const SPI_USR_CONF_V = 0x1
const SPI_USR_CONF_S = 31
const SPI_SLV_RD_DMA_DONE_V = 0x1
const SPI_SLV_RD_DMA_DONE_S = 30
const SPI_DMA_SEG_MAGIC_VALUE = 0x0000000F
const SPI_DMA_SEG_MAGIC_VALUE_V = 0xF
const SPI_DMA_SEG_MAGIC_VALUE_S = 24
const SPI_SLV_WRBUF_BYTELEN_EN_V = 0x1
const SPI_SLV_WRBUF_BYTELEN_EN_S = 23
const SPI_SLV_RDBUF_BYTELEN_EN_V = 0x1
const SPI_SLV_RDBUF_BYTELEN_EN_S = 22
const SPI_SLV_WRDMA_BYTELEN_EN_V = 0x1
const SPI_SLV_WRDMA_BYTELEN_EN_S = 21
const SPI_SLV_RDDMA_BYTELEN_EN_V = 0x1
const SPI_SLV_RDDMA_BYTELEN_EN_S = 20
const SPI_SLV_DATA_BYTELEN = 0x000FFFFF
const SPI_SLV_DATA_BYTELEN_V = 0xFFFFF
const SPI_SLV_DATA_BYTELEN_S = 0
const SPI_MST_DMA_RD_BYTELEN = 0x000FFFFF
const SPI_MST_DMA_RD_BYTELEN_V = 0xFFFFF
const SPI_MST_DMA_RD_BYTELEN_S = 12
const SPI_ST = 0x0000000F
const SPI_ST_V = 0xF
const SPI_ST_S = 0
const SPI_DMA_SEG_TRANS_DONE_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_S = 7
const SPI_HOLD_OUT_TIME = 0x00000007
const SPI_HOLD_OUT_TIME_V = 0x7
const SPI_HOLD_OUT_TIME_S = 4
const SPI_HOLD_OUT_EN_V = 0x1
const SPI_HOLD_OUT_EN_S = 3
const SPI_HOLD_VAL_REG_V = 0x1
const SPI_HOLD_VAL_REG_S = 2
const SPI_INT_HOLD_ENA = 0x00000003
const SPI_INT_HOLD_ENA_V = 0x3
const SPI_INT_HOLD_ENA_S = 0
const SPI_DMA_SEG_TRANS_CLR_V = 0x1
const SPI_DMA_SEG_TRANS_CLR_S = 28
const SPI_EXT_MEM_BK_SIZE = 0x00000003
const SPI_EXT_MEM_BK_SIZE_V = 0x3
const SPI_EXT_MEM_BK_SIZE_S = 26
const SPI_DMA_OUTFIFO_EMPTY_CLR_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_CLR_S = 23
const SPI_DMA_INFIFO_FULL_CLR_V = 0x1
const SPI_DMA_INFIFO_FULL_CLR_S = 22
const SPI_RX_EOF_EN_V = 0x1
const SPI_RX_EOF_EN_S = 21
const SPI_SLV_TX_SEG_TRANS_CLR_EN_V = 0x1
const SPI_SLV_TX_SEG_TRANS_CLR_EN_S = 20
const SPI_SLV_RX_SEG_TRANS_CLR_EN_V = 0x1
const SPI_SLV_RX_SEG_TRANS_CLR_EN_S = 19
const SPI_DMA_SLV_SEG_TRANS_EN_V = 0x1
const SPI_DMA_SLV_SEG_TRANS_EN_S = 18
const SPI_SLV_LAST_SEG_POP_CLR_V = 0x1
const SPI_SLV_LAST_SEG_POP_CLR_S = 17
const SPI_DMA_CONTINUE_V = 0x1
const SPI_DMA_CONTINUE_S = 16
const SPI_DMA_TX_STOP_V = 0x1
const SPI_DMA_TX_STOP_S = 15
const SPI_DMA_RX_STOP_V = 0x1
const SPI_DMA_RX_STOP_S = 14
const SPI_MEM_TRANS_EN_V = 0x1
const SPI_MEM_TRANS_EN_S = 13
const SPI_OUT_DATA_BURST_EN_V = 0x1
const SPI_OUT_DATA_BURST_EN_S = 12
const SPI_INDSCR_BURST_EN_V = 0x1
const SPI_INDSCR_BURST_EN_S = 11
const SPI_OUTDSCR_BURST_EN_V = 0x1
const SPI_OUTDSCR_BURST_EN_S = 10
const SPI_OUT_EOF_MODE_V = 0x1
const SPI_OUT_EOF_MODE_S = 9
const SPI_OUT_AUTO_WRBACK_V = 0x1
const SPI_OUT_AUTO_WRBACK_S = 8
const SPI_OUT_LOOP_TEST_V = 0x1
const SPI_OUT_LOOP_TEST_S = 7
const SPI_IN_LOOP_TEST_V = 0x1
const SPI_IN_LOOP_TEST_S = 6
const SPI_AHBM_RST_V = 0x1
const SPI_AHBM_RST_S = 5
const SPI_AHBM_FIFO_RST_V = 0x1
const SPI_AHBM_FIFO_RST_S = 4
const SPI_OUT_RST_V = 0x1
const SPI_OUT_RST_S = 3
const SPI_IN_RST_V = 0x1
const SPI_IN_RST_S = 2
const SPI_DMA_TX_ENA_V = 0x1
const SPI_DMA_TX_ENA_S = 31
const SPI_OUTLINK_RESTART_V = 0x1
const SPI_OUTLINK_RESTART_S = 30
const SPI_OUTLINK_START_V = 0x1
const SPI_OUTLINK_START_S = 29
const SPI_OUTLINK_STOP_V = 0x1
const SPI_OUTLINK_STOP_S = 28
const SPI_OUTLINK_ADDR = 0x000FFFFF
const SPI_OUTLINK_ADDR_V = 0xFFFFF
const SPI_OUTLINK_ADDR_S = 0
const SPI_DMA_RX_ENA_V = 0x1
const SPI_DMA_RX_ENA_S = 31
const SPI_INLINK_RESTART_V = 0x1
const SPI_INLINK_RESTART_S = 30
const SPI_INLINK_START_V = 0x1
const SPI_INLINK_START_S = 29
const SPI_INLINK_STOP_V = 0x1
const SPI_INLINK_STOP_S = 28
const SPI_INLINK_AUTO_RET_V = 0x1
const SPI_INLINK_AUTO_RET_S = 20
const SPI_INLINK_ADDR = 0x000FFFFF
const SPI_INLINK_ADDR_V = 0xFFFFF
const SPI_INLINK_ADDR_S = 0
const SPI_SLV_CMDA_INT_ENA_V = 0x1
const SPI_SLV_CMDA_INT_ENA_S = 15
const SPI_SLV_CMD9_INT_ENA_V = 0x1
const SPI_SLV_CMD9_INT_ENA_S = 14
const SPI_SLV_CMD8_INT_ENA_V = 0x1
const SPI_SLV_CMD8_INT_ENA_S = 13
const SPI_SLV_CMD7_INT_ENA_V = 0x1
const SPI_SLV_CMD7_INT_ENA_S = 12
const SPI_SLV_CMD6_INT_ENA_V = 0x1
const SPI_SLV_CMD6_INT_ENA_S = 11
const SPI_OUTFIFO_EMPTY_ERR_INT_ENA_V = 0x1
const SPI_OUTFIFO_EMPTY_ERR_INT_ENA_S = 10
const SPI_INFIFO_FULL_ERR_INT_ENA_V = 0x1
const SPI_INFIFO_FULL_ERR_INT_ENA_S = 9
const SPI_OUT_TOTAL_EOF_INT_ENA_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_ENA_S = 8
const SPI_OUT_EOF_INT_ENA_V = 0x1
const SPI_OUT_EOF_INT_ENA_S = 7
const SPI_OUT_DONE_INT_ENA_V = 0x1
const SPI_OUT_DONE_INT_ENA_S = 6
const SPI_IN_SUC_EOF_INT_ENA_V = 0x1
const SPI_IN_SUC_EOF_INT_ENA_S = 5
const SPI_IN_ERR_EOF_INT_ENA_V = 0x1
const SPI_IN_ERR_EOF_INT_ENA_S = 4
const SPI_IN_DONE_INT_ENA_V = 0x1
const SPI_IN_DONE_INT_ENA_S = 3
const SPI_INLINK_DSCR_ERROR_INT_ENA_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_ENA_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_ENA_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_ENA_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_ENA_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_ENA_S = 0
const SPI_SLV_CMDA_INT_RAW_V = 0x1
const SPI_SLV_CMDA_INT_RAW_S = 15
const SPI_SLV_CMD9_INT_RAW_V = 0x1
const SPI_SLV_CMD9_INT_RAW_S = 14
const SPI_SLV_CMD8_INT_RAW_V = 0x1
const SPI_SLV_CMD8_INT_RAW_S = 13
const SPI_SLV_CMD7_INT_RAW_V = 0x1
const SPI_SLV_CMD7_INT_RAW_S = 12
const SPI_SLV_CMD6_INT_RAW_V = 0x1
const SPI_SLV_CMD6_INT_RAW_S = 11
const SPI_OUTFIFO_EMPTY_ERR_INT_RAW_V = 0x1
const SPI_OUTFIFO_EMPTY_ERR_INT_RAW_S = 10
const SPI_INFIFO_FULL_ERR_INT_RAW_V = 0x1
const SPI_INFIFO_FULL_ERR_INT_RAW_S = 9
const SPI_OUT_TOTAL_EOF_INT_RAW_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_RAW_S = 8
const SPI_OUT_EOF_INT_RAW_V = 0x1
const SPI_OUT_EOF_INT_RAW_S = 7
const SPI_OUT_DONE_INT_RAW_V = 0x1
const SPI_OUT_DONE_INT_RAW_S = 6
const SPI_IN_SUC_EOF_INT_RAW_V = 0x1
const SPI_IN_SUC_EOF_INT_RAW_S = 5
const SPI_IN_ERR_EOF_INT_RAW_V = 0x1
const SPI_IN_ERR_EOF_INT_RAW_S = 4
const SPI_IN_DONE_INT_RAW_V = 0x1
const SPI_IN_DONE_INT_RAW_S = 3
const SPI_INLINK_DSCR_ERROR_INT_RAW_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_RAW_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_RAW_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_RAW_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_RAW_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_RAW_S = 0
const SPI_SLV_CMDA_INT_ST_V = 0x1
const SPI_SLV_CMDA_INT_ST_S = 15
const SPI_SLV_CMD9_INT_ST_V = 0x1
const SPI_SLV_CMD9_INT_ST_S = 14
const SPI_SLV_CMD8_INT_ST_V = 0x1
const SPI_SLV_CMD8_INT_ST_S = 13
const SPI_SLV_CMD7_INT_ST_V = 0x1
const SPI_SLV_CMD7_INT_ST_S = 12
const SPI_SLV_CMD6_INT_ST_V = 0x1
const SPI_SLV_CMD6_INT_ST_S = 11
const SPI_OUTFIFO_EMPTY_ERR_INT_ST_V = 0x1
const SPI_OUTFIFO_EMPTY_ERR_INT_ST_S = 10
const SPI_INFIFO_FULL_ERR_INT_ST_V = 0x1
const SPI_INFIFO_FULL_ERR_INT_ST_S = 9
const SPI_OUT_TOTAL_EOF_INT_ST_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_ST_S = 8
const SPI_OUT_EOF_INT_ST_V = 0x1
const SPI_OUT_EOF_INT_ST_S = 7
const SPI_OUT_DONE_INT_ST_V = 0x1
const SPI_OUT_DONE_INT_ST_S = 6
const SPI_IN_SUC_EOF_INT_ST_V = 0x1
const SPI_IN_SUC_EOF_INT_ST_S = 5
const SPI_IN_ERR_EOF_INT_ST_V = 0x1
const SPI_IN_ERR_EOF_INT_ST_S = 4
const SPI_IN_DONE_INT_ST_V = 0x1
const SPI_IN_DONE_INT_ST_S = 3
const SPI_INLINK_DSCR_ERROR_INT_ST_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_ST_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_ST_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_ST_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_ST_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_ST_S = 0
const SPI_SLV_CMDA_INT_CLR_V = 0x1
const SPI_SLV_CMDA_INT_CLR_S = 15
const SPI_SLV_CMD9_INT_CLR_V = 0x1
const SPI_SLV_CMD9_INT_CLR_S = 14
const SPI_SLV_CMD8_INT_CLR_V = 0x1
const SPI_SLV_CMD8_INT_CLR_S = 13
const SPI_SLV_CMD7_INT_CLR_V = 0x1
const SPI_SLV_CMD7_INT_CLR_S = 12
const SPI_SLV_CMD6_INT_CLR_V = 0x1
const SPI_SLV_CMD6_INT_CLR_S = 11
const SPI_OUTFIFO_EMPTY_ERR_INT_CLR_V = 0x1
const SPI_OUTFIFO_EMPTY_ERR_INT_CLR_S = 10
const SPI_INFIFO_FULL_ERR_INT_CLR_V = 0x1
const SPI_INFIFO_FULL_ERR_INT_CLR_S = 9
const SPI_OUT_TOTAL_EOF_INT_CLR_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_CLR_S = 8
const SPI_OUT_EOF_INT_CLR_V = 0x1
const SPI_OUT_EOF_INT_CLR_S = 7
const SPI_OUT_DONE_INT_CLR_V = 0x1
const SPI_OUT_DONE_INT_CLR_S = 6
const SPI_IN_SUC_EOF_INT_CLR_V = 0x1
const SPI_IN_SUC_EOF_INT_CLR_S = 5
const SPI_IN_ERR_EOF_INT_CLR_V = 0x1
const SPI_IN_ERR_EOF_INT_CLR_S = 4
const SPI_IN_DONE_INT_CLR_V = 0x1
const SPI_IN_DONE_INT_CLR_S = 3
const SPI_INLINK_DSCR_ERROR_INT_CLR_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_CLR_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_CLR_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_CLR_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_CLR_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_CLR_S = 0
const SPI_DMA_IN_ERR_EOF_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_IN_ERR_EOF_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_IN_ERR_EOF_DES_ADDR_S = 0
const SPI_DMA_IN_SUC_EOF_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_IN_SUC_EOF_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_IN_SUC_EOF_DES_ADDR_S = 0
const SPI_DMA_INLINK_DSCR = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_V = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_S = 0
const SPI_DMA_INLINK_DSCR_BF0 = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF0_V = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF0_S = 0
const SPI_DMA_INLINK_DSCR_BF1 = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF1_V = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF1_S = 0
const SPI_DMA_OUT_EOF_BFR_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_BFR_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_BFR_DES_ADDR_S = 0
const SPI_DMA_OUT_EOF_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_DES_ADDR_S = 0
const SPI_DMA_OUTLINK_DSCR = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_V = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_S = 0
const SPI_DMA_OUTLINK_DSCR_BF0 = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF0_V = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF0_S = 0
const SPI_DMA_OUTLINK_DSCR_BF1 = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF1_V = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF1_S = 0
const SPI_DMA_OUTFIFO_EMPTY_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_S = 31
const SPI_DMA_OUTFIFO_FULL_V = 0x1
const SPI_DMA_OUTFIFO_FULL_S = 30
const SPI_DMA_OUTFIFO_CNT = 0x0000007F
const SPI_DMA_OUTFIFO_CNT_V = 0x7F
const SPI_DMA_OUTFIFO_CNT_S = 23
const SPI_DMA_OUT_STATE = 0x00000007
const SPI_DMA_OUT_STATE_V = 0x7
const SPI_DMA_OUT_STATE_S = 20
const SPI_DMA_OUTDSCR_STATE = 0x00000003
const SPI_DMA_OUTDSCR_STATE_V = 0x3
const SPI_DMA_OUTDSCR_STATE_S = 18
const SPI_DMA_OUTDSCR_ADDR = 0x0003FFFF
const SPI_DMA_OUTDSCR_ADDR_V = 0x3FFFF
const SPI_DMA_OUTDSCR_ADDR_S = 0
const SPI_DMA_INFIFO_EMPTY_V = 0x1
const SPI_DMA_INFIFO_EMPTY_S = 31
const SPI_DMA_INFIFO_FULL_V = 0x1
const SPI_DMA_INFIFO_FULL_S = 30
const SPI_DMA_INFIFO_CNT = 0x0000007F
const SPI_DMA_INFIFO_CNT_V = 0x7F
const SPI_DMA_INFIFO_CNT_S = 23
const SPI_DMA_IN_STATE = 0x00000007
const SPI_DMA_IN_STATE_V = 0x7
const SPI_DMA_IN_STATE_S = 20
const SPI_DMA_INDSCR_STATE = 0x00000003
const SPI_DMA_INDSCR_STATE_V = 0x3
const SPI_DMA_INDSCR_STATE_S = 18
const SPI_DMA_INDSCR_ADDR = 0x0003FFFF
const SPI_DMA_INDSCR_ADDR_V = 0x3FFFF
const SPI_DMA_INDSCR_ADDR_S = 0
const SPI_BUF0 = 0xFFFFFFFF
const SPI_BUF0_V = 0xFFFFFFFF
const SPI_BUF0_S = 0
const SPI_BUF1 = 0xFFFFFFFF
const SPI_BUF1_V = 0xFFFFFFFF
const SPI_BUF1_S = 0
const SPI_BUF2 = 0xFFFFFFFF
const SPI_BUF2_V = 0xFFFFFFFF
const SPI_BUF2_S = 0
const SPI_BUF3 = 0xFFFFFFFF
const SPI_BUF3_V = 0xFFFFFFFF
const SPI_BUF3_S = 0
const SPI_BUF4 = 0xFFFFFFFF
const SPI_BUF4_V = 0xFFFFFFFF
const SPI_BUF4_S = 0
const SPI_BUF5 = 0xFFFFFFFF
const SPI_BUF5_V = 0xFFFFFFFF
const SPI_BUF5_S = 0
const SPI_BUF6 = 0xFFFFFFFF
const SPI_BUF6_V = 0xFFFFFFFF
const SPI_BUF6_S = 0
const SPI_BUF7 = 0xFFFFFFFF
const SPI_BUF7_V = 0xFFFFFFFF
const SPI_BUF7_S = 0
const SPI_BUF8 = 0xFFFFFFFF
const SPI_BUF8_V = 0xFFFFFFFF
const SPI_BUF8_S = 0
const SPI_BUF9 = 0xFFFFFFFF
const SPI_BUF9_V = 0xFFFFFFFF
const SPI_BUF9_S = 0
const SPI_BUF10 = 0xFFFFFFFF
const SPI_BUF10_V = 0xFFFFFFFF
const SPI_BUF10_S = 0
const SPI_BUF11 = 0xFFFFFFFF
const SPI_BUF11_V = 0xFFFFFFFF
const SPI_BUF11_S = 0
const SPI_BUF12 = 0xFFFFFFFF
const SPI_BUF12_V = 0xFFFFFFFF
const SPI_BUF12_S = 0
const SPI_BUF13 = 0xFFFFFFFF
const SPI_BUF13_V = 0xFFFFFFFF
const SPI_BUF13_S = 0
const SPI_BUF14 = 0xFFFFFFFF
const SPI_BUF14_V = 0xFFFFFFFF
const SPI_BUF14_S = 0
const SPI_BUF15 = 0xFFFFFFFF
const SPI_BUF15_V = 0xFFFFFFFF
const SPI_BUF15_S = 0
const SPI_BUF16 = 0xFFFFFFFF
const SPI_BUF16_V = 0xFFFFFFFF
const SPI_BUF16_S = 0
const SPI_BUF17 = 0xFFFFFFFF
const SPI_BUF17_V = 0xFFFFFFFF
const SPI_BUF17_S = 0
const SPI_TIMING_CLK_ENA_V = 0x1
const SPI_TIMING_CLK_ENA_S = 24
const SPI_DIN7_MODE = 0x00000007
const SPI_DIN7_MODE_V = 0x7
const SPI_DIN7_MODE_S = 21
const SPI_DIN6_MODE = 0x00000007
const SPI_DIN6_MODE_V = 0x7
const SPI_DIN6_MODE_S = 18
const SPI_DIN5_MODE = 0x00000007
const SPI_DIN5_MODE_V = 0x7
const SPI_DIN5_MODE_S = 15
const SPI_DIN4_MODE = 0x00000007
const SPI_DIN4_MODE_V = 0x7
const SPI_DIN4_MODE_S = 12
const SPI_DIN3_MODE = 0x00000007
const SPI_DIN3_MODE_V = 0x7
const SPI_DIN3_MODE_S = 9
const SPI_DIN2_MODE = 0x00000007
const SPI_DIN2_MODE_V = 0x7
const SPI_DIN2_MODE_S = 6
const SPI_DIN1_MODE = 0x00000007
const SPI_DIN1_MODE_V = 0x7
const SPI_DIN1_MODE_S = 3
const SPI_DIN0_MODE = 0x00000007
const SPI_DIN0_MODE_V = 0x7
const SPI_DIN0_MODE_S = 0
const SPI_DIN7_NUM = 0x00000003
const SPI_DIN7_NUM_V = 0x3
const SPI_DIN7_NUM_S = 14
const SPI_DIN6_NUM = 0x00000003
const SPI_DIN6_NUM_V = 0x3
const SPI_DIN6_NUM_S = 12
const SPI_DIN5_NUM = 0x00000003
const SPI_DIN5_NUM_V = 0x3
const SPI_DIN5_NUM_S = 10
const SPI_DIN4_NUM = 0x00000003
const SPI_DIN4_NUM_V = 0x3
const SPI_DIN4_NUM_S = 8
const SPI_DIN3_NUM = 0x00000003
const SPI_DIN3_NUM_V = 0x3
const SPI_DIN3_NUM_S = 6
const SPI_DIN2_NUM = 0x00000003
const SPI_DIN2_NUM_V = 0x3
const SPI_DIN2_NUM_S = 4
const SPI_DIN1_NUM = 0x00000003
const SPI_DIN1_NUM_V = 0x3
const SPI_DIN1_NUM_S = 2
const SPI_DIN0_NUM = 0x00000003
const SPI_DIN0_NUM_V = 0x3
const SPI_DIN0_NUM_S = 0
const SPI_DOUT7_MODE = 0x00000007
const SPI_DOUT7_MODE_V = 0x7
const SPI_DOUT7_MODE_S = 21
const SPI_DOUT6_MODE = 0x00000007
const SPI_DOUT6_MODE_V = 0x7
const SPI_DOUT6_MODE_S = 18
const SPI_DOUT5_MODE = 0x00000007
const SPI_DOUT5_MODE_V = 0x7
const SPI_DOUT5_MODE_S = 15
const SPI_DOUT4_MODE = 0x00000007
const SPI_DOUT4_MODE_V = 0x7
const SPI_DOUT4_MODE_S = 12
const SPI_DOUT3_MODE = 0x00000007
const SPI_DOUT3_MODE_V = 0x7
const SPI_DOUT3_MODE_S = 9
const SPI_DOUT2_MODE = 0x00000007
const SPI_DOUT2_MODE_V = 0x7
const SPI_DOUT2_MODE_S = 6
const SPI_DOUT1_MODE = 0x00000007
const SPI_DOUT1_MODE_V = 0x7
const SPI_DOUT1_MODE_S = 3
const SPI_DOUT0_MODE = 0x00000007
const SPI_DOUT0_MODE_V = 0x7
const SPI_DOUT0_MODE_S = 0
const SPI_DOUT7_NUM = 0x00000003
const SPI_DOUT7_NUM_V = 0x3
const SPI_DOUT7_NUM_S = 14
const SPI_DOUT6_NUM = 0x00000003
const SPI_DOUT6_NUM_V = 0x3
const SPI_DOUT6_NUM_S = 12
const SPI_DOUT5_NUM = 0x00000003
const SPI_DOUT5_NUM_V = 0x3
const SPI_DOUT5_NUM_S = 10
const SPI_DOUT4_NUM = 0x00000003
const SPI_DOUT4_NUM_V = 0x3
const SPI_DOUT4_NUM_S = 8
const SPI_DOUT3_NUM = 0x00000003
const SPI_DOUT3_NUM_V = 0x3
const SPI_DOUT3_NUM_S = 6
const SPI_DOUT2_NUM = 0x00000003
const SPI_DOUT2_NUM_V = 0x3
const SPI_DOUT2_NUM_S = 4
const SPI_DOUT1_NUM = 0x00000003
const SPI_DOUT1_NUM_V = 0x3
const SPI_DOUT1_NUM_S = 2
const SPI_DOUT0_NUM = 0x00000003
const SPI_DOUT0_NUM_V = 0x3
const SPI_DOUT0_NUM_S = 0
const SPI_LCD_MODE_EN_V = 0x1
const SPI_LCD_MODE_EN_S = 31
const SPI_LCD_VT_HEIGHT = 0x000003FF
const SPI_LCD_VT_HEIGHT_V = 0x3FF
const SPI_LCD_VT_HEIGHT_S = 21
const SPI_LCD_VA_HEIGHT = 0x000003FF
const SPI_LCD_VA_HEIGHT_V = 0x3FF
const SPI_LCD_VA_HEIGHT_S = 11
const SPI_LCD_HB_FRONT = 0x000007FF
const SPI_LCD_HB_FRONT_V = 0x7FF
const SPI_LCD_HB_FRONT_S = 0
const SPI_LCD_HT_WIDTH = 0x00000FFF
const SPI_LCD_HT_WIDTH_V = 0xFFF
const SPI_LCD_HT_WIDTH_S = 20
const SPI_LCD_HA_WIDTH = 0x00000FFF
const SPI_LCD_HA_WIDTH_V = 0xFFF
const SPI_LCD_HA_WIDTH_S = 8
const SPI_LCD_VB_FRONT = 0x000000FF
const SPI_LCD_VB_FRONT_V = 0xFF
const SPI_LCD_VB_FRONT_S = 0
const SPI_LCD_HSYNC_POSITION = 0x000000FF
const SPI_LCD_HSYNC_POSITION_V = 0xFF
const SPI_LCD_HSYNC_POSITION_S = 24
const SPI_HSYNC_IDLE_POL_V = 0x1
const SPI_HSYNC_IDLE_POL_S = 23
const SPI_LCD_HSYNC_WIDTH = 0x0000007F
const SPI_LCD_HSYNC_WIDTH_V = 0x7F
const SPI_LCD_HSYNC_WIDTH_S = 16
const SPI_VSYNC_IDLE_POL_V = 0x1
const SPI_VSYNC_IDLE_POL_S = 7
const SPI_LCD_VSYNC_WIDTH = 0x0000007F
const SPI_LCD_VSYNC_WIDTH_V = 0x7F
const SPI_LCD_VSYNC_WIDTH_S = 0
const SPI_HS_BLANK_EN_V = 0x1
const SPI_HS_BLANK_EN_S = 16
const SPI_DE_IDLE_POL_V = 0x1
const SPI_DE_IDLE_POL_S = 15
const SPI_D_VSYNC_MODE = 0x00000007
const SPI_D_VSYNC_MODE_V = 0x7
const SPI_D_VSYNC_MODE_S = 12
const SPI_D_HSYNC_MODE = 0x00000007
const SPI_D_HSYNC_MODE_V = 0x7
const SPI_D_HSYNC_MODE_S = 9
const SPI_D_DE_MODE = 0x00000007
const SPI_D_DE_MODE_V = 0x7
const SPI_D_DE_MODE_S = 6
const SPI_D_CD_MODE = 0x00000007
const SPI_D_CD_MODE_V = 0x7
const SPI_D_CD_MODE_S = 3
const SPI_D_DQS_MODE = 0x00000007
const SPI_D_DQS_MODE_V = 0x7
const SPI_D_DQS_MODE_S = 0
const SPI_D_VSYNC_NUM = 0x00000003
const SPI_D_VSYNC_NUM_V = 0x3
const SPI_D_VSYNC_NUM_S = 8
const SPI_D_HSYNC_NUM = 0x00000003
const SPI_D_HSYNC_NUM_V = 0x3
const SPI_D_HSYNC_NUM_S = 6
const SPI_D_DE_NUM = 0x00000003
const SPI_D_DE_NUM_V = 0x3
const SPI_D_DE_NUM_S = 4
const SPI_D_CD_NUM = 0x00000003
const SPI_D_CD_NUM_V = 0x3
const SPI_D_CD_NUM_S = 2
const SPI_D_DQS_NUM = 0x00000003
const SPI_D_DQS_NUM_V = 0x3
const SPI_D_DQS_NUM_S = 0
const SPI_DATE = 0x0FFFFFFF
const SPI_DATE_V = 0xFFFFFFF
const SPI_DATE_S = 0
const SPIQ_IN_IDX = 0
const SPIQ_OUT_IDX = 0
const SPID_IN_IDX = 1
const SPID_OUT_IDX = 1
const SPIHD_IN_IDX = 2
const SPIHD_OUT_IDX = 2
const SPIWP_IN_IDX = 3
const SPIWP_OUT_IDX = 3
const SPICLK_OUT_MUX_IDX = 4
const SPICS0_OUT_IDX = 5
const SPICS1_OUT_IDX = 6
const SPID4_IN_IDX = 7
const SPID4_OUT_IDX = 7
const SPID5_IN_IDX = 8
const SPID5_OUT_IDX = 8
const SPID6_IN_IDX = 9
const SPID6_OUT_IDX = 9
const SPID7_IN_IDX = 10
const SPID7_OUT_IDX = 10
const SPIDQS_IN_IDX = 11
const SPIDQS_OUT_IDX = 11
const U0RXD_IN_IDX = 14
const U0TXD_OUT_IDX = 14
const U0CTS_IN_IDX = 15
const U0RTS_OUT_IDX = 15
const U0DSR_IN_IDX = 16
const U0DTR_OUT_IDX = 16
const U1RXD_IN_IDX = 17
const U1TXD_OUT_IDX = 17
const U1CTS_IN_IDX = 18
const U1RTS_OUT_IDX = 18
const U1DSR_IN_IDX = 21
const U1DTR_OUT_IDX = 21
const I2S0O_BCK_IN_IDX = 23
const I2S0O_BCK_OUT_IDX = 23
const I2S0O_WS_IN_IDX = 25
const I2S0O_WS_OUT_IDX = 25
const I2S0I_BCK_IN_IDX = 27
const I2S0I_BCK_OUT_IDX = 27
const I2S0I_WS_IN_IDX = 28
const I2S0I_WS_OUT_IDX = 28
const I2CEXT0_SCL_IN_IDX = 29
const I2CEXT0_SCL_OUT_IDX = 29
const I2CEXT0_SDA_IN_IDX = 30
const I2CEXT0_SDA_OUT_IDX = 30
const SDIO_TOHOST_INT_OUT_IDX = 31
const GPIO_BT_ACTIVE_IDX = 37
const GPIO_BT_PRIORITY_IDX = 38
const PCNT_SIG_CH0_IN0_IDX = 39
const GPIO_WLAN_PRIO_IDX = 39
const PCNT_SIG_CH1_IN0_IDX = 40
const GPIO_WLAN_ACTIVE_IDX = 40
const PCNT_CTRL_CH0_IN0_IDX = 41
const BB_DIAG0_IDX = 41
const PCNT_CTRL_CH1_IN0_IDX = 42
const BB_DIAG1_IDX = 42
const PCNT_SIG_CH0_IN1_IDX = 43
const BB_DIAG2_IDX = 43
const PCNT_SIG_CH1_IN1_IDX = 44
const BB_DIAG3_IDX = 44
const PCNT_CTRL_CH0_IN1_IDX = 45
const BB_DIAG4_IDX = 45
const PCNT_CTRL_CH1_IN1_IDX = 46
const BB_DIAG5_IDX = 46
const PCNT_SIG_CH0_IN2_IDX = 47
const BB_DIAG6_IDX = 47
const PCNT_SIG_CH1_IN2_IDX = 48
const BB_DIAG7_IDX = 48
const PCNT_CTRL_CH0_IN2_IDX = 49
const BB_DIAG8_IDX = 49
const PCNT_CTRL_CH1_IN2_IDX = 50
const BB_DIAG9_IDX = 50
const PCNT_SIG_CH0_IN3_IDX = 51
const BB_DIAG10_IDX = 51
const PCNT_SIG_CH1_IN3_IDX = 52
const BB_DIAG11_IDX = 52
const PCNT_CTRL_CH0_IN3_IDX = 53
const BB_DIAG12_IDX = 53
const PCNT_CTRL_CH1_IN3_IDX = 54
const BB_DIAG13_IDX = 54
const BB_DIAG14_IDX = 55
const BB_DIAG15_IDX = 56
const BB_DIAG16_IDX = 57
const BB_DIAG17_IDX = 58
const BB_DIAG18_IDX = 59
const BB_DIAG19_IDX = 60
const USB_EXTPHY_VP_IDX = 61
const USB_EXTPHY_OEN_IDX = 61
const USB_EXTPHY_VM_IDX = 62
const USB_EXTPHY_SPEED_IDX = 62
const USB_EXTPHY_RCV_IDX = 63
const USB_EXTPHY_VPO_IDX = 63
const USB_OTG_IDDIG_IN_IDX = 64
const USB_EXTPHY_VMO_IDX = 64
const USB_OTG_AVALID_IN_IDX = 65
const USB_EXTPHY_SUSPND_IDX = 65
const USB_SRP_BVALID_IN_IDX = 66
const USB_OTG_IDPULLUP_IDX = 66
const USB_OTG_VBUSVALID_IN_IDX = 67
const USB_OTG_DPPULLDOWN_IDX = 67
const USB_SRP_SESSEND_IN_IDX = 68
const USB_OTG_DMPULLDOWN_IDX = 68
const USB_OTG_DRVVBUS_IDX = 69
const USB_SRP_CHRGVBUS_IDX = 70
const USB_SRP_DISCHRGVBUS_IDX = 71
const SPI3_CLK_IN_IDX = 72
const SPI3_CLK_OUT_MUX_IDX = 72
const SPI3_Q_IN_IDX = 73
const SPI3_Q_OUT_IDX = 73
const SPI3_D_IN_IDX = 74
const SPI3_D_OUT_IDX = 74
const SPI3_HD_IN_IDX = 75
const SPI3_HD_OUT_IDX = 75
const SPI3_CS0_IN_IDX = 76
const SPI3_CS0_OUT_IDX = 76
const SPI3_CS1_OUT_IDX = 77
const SPI3_CS2_OUT_IDX = 78
const LEDC_LS_SIG_OUT0_IDX = 79
const LEDC_LS_SIG_OUT1_IDX = 80
const LEDC_LS_SIG_OUT2_IDX = 81
const LEDC_LS_SIG_OUT3_IDX = 82
const RMT_SIG_IN0_IDX = 83
const LEDC_LS_SIG_OUT4_IDX = 83
const RMT_SIG_IN1_IDX = 84
const LEDC_LS_SIG_OUT5_IDX = 84
const RMT_SIG_IN2_IDX = 85
const LEDC_LS_SIG_OUT6_IDX = 85
const RMT_SIG_IN3_IDX = 86
const LEDC_LS_SIG_OUT7_IDX = 86
const RMT_SIG_OUT0_IDX = 87
const RMT_SIG_OUT1_IDX = 88
const RMT_SIG_OUT2_IDX = 89
const RMT_SIG_OUT3_IDX = 90
const EXT_ADC_START_IDX = 93
const I2CEXT1_SCL_IN_IDX = 95
const I2CEXT1_SCL_OUT_IDX = 95
const I2CEXT1_SDA_IN_IDX = 96
const I2CEXT1_SDA_OUT_IDX = 96
const GPIO_SD0_OUT_IDX = 100
const GPIO_SD1_OUT_IDX = 101
const GPIO_SD2_OUT_IDX = 102
const GPIO_SD3_OUT_IDX = 103
const GPIO_SD4_OUT_IDX = 104
const GPIO_SD5_OUT_IDX = 105
const GPIO_SD6_OUT_IDX = 106
const GPIO_SD7_OUT_IDX = 107
const FSPICLK_IN_IDX = 108
const FSPICLK_OUT_MUX_IDX = 108
const FSPIQ_IN_IDX = 109
const FSPIQ_OUT_IDX = 109
const FSPID_IN_IDX = 110
const FSPID_OUT_IDX = 110
const FSPIHD_IN_IDX = 111
const FSPIHD_OUT_IDX = 111
const FSPIWP_IN_IDX = 112
const FSPIWP_OUT_IDX = 112
const FSPIIO4_IN_IDX = 113
const FSPIIO4_OUT_IDX = 113
const FSPIIO5_IN_IDX = 114
const FSPIIO5_OUT_IDX = 114
const FSPIIO6_IN_IDX = 115
const FSPIIO6_OUT_IDX = 115
const FSPIIO7_IN_IDX = 116
const FSPIIO7_OUT_IDX = 116
const FSPICS0_IN_IDX = 117
const FSPICS0_OUT_IDX = 117
const FSPICS1_OUT_IDX = 118
const FSPICS2_OUT_IDX = 119
const FSPICS3_OUT_IDX = 120
const FSPICS4_OUT_IDX = 121
const FSPICS5_OUT_IDX = 122
const TWAI_RX_IDX = 123
const TWAI_TX_IDX = 123
const TWAI_BUS_OFF_ON_IDX = 124
const TWAI_CLKOUT_IDX = 125
const SUBSPICLK_OUT_MUX_IDX = 126
const SUBSPIQ_IN_IDX = 127
const SUBSPIQ_OUT_IDX = 127
const SUBSPID_IN_IDX = 128
const SUBSPID_OUT_IDX = 128
const SUBSPIHD_IN_IDX = 129
const SUBSPIHD_OUT_IDX = 129
const SUBSPIWP_IN_IDX = 130
const SUBSPIWP_OUT_IDX = 130
const SUBSPICS0_OUT_IDX = 131
const SUBSPICS1_OUT_IDX = 132
const FSPIDQS_OUT_IDX = 133
const FSPI_HSYNC_OUT_IDX = 134
const FSPI_VSYNC_OUT_IDX = 135
const FSPI_DE_OUT_IDX = 136
const FSPICD_OUT_IDX = 137
const SPI3_CD_OUT_IDX = 139
const SPI3_DQS_OUT_IDX = 140
const I2S0I_DATA_IN0_IDX = 143
const I2S0O_DATA_OUT0_IDX = 143
const I2S0I_DATA_IN1_IDX = 144
const I2S0O_DATA_OUT1_IDX = 144
const I2S0I_DATA_IN2_IDX = 145
const I2S0O_DATA_OUT2_IDX = 145
const I2S0I_DATA_IN3_IDX = 146
const I2S0O_DATA_OUT3_IDX = 146
const I2S0I_DATA_IN4_IDX = 147
const I2S0O_DATA_OUT4_IDX = 147
const I2S0I_DATA_IN5_IDX = 148
const I2S0O_DATA_OUT5_IDX = 148
const I2S0I_DATA_IN6_IDX = 149
const I2S0O_DATA_OUT6_IDX = 149
const I2S0I_DATA_IN7_IDX = 150
const I2S0O_DATA_OUT7_IDX = 150
const I2S0I_DATA_IN8_IDX = 151
const I2S0O_DATA_OUT8_IDX = 151
const I2S0I_DATA_IN9_IDX = 152
const I2S0O_DATA_OUT9_IDX = 152
const I2S0I_DATA_IN10_IDX = 153
const I2S0O_DATA_OUT10_IDX = 153
const I2S0I_DATA_IN11_IDX = 154
const I2S0O_DATA_OUT11_IDX = 154
const I2S0I_DATA_IN12_IDX = 155
const I2S0O_DATA_OUT12_IDX = 155
const I2S0I_DATA_IN13_IDX = 156
const I2S0O_DATA_OUT13_IDX = 156
const I2S0I_DATA_IN14_IDX = 157
const I2S0O_DATA_OUT14_IDX = 157
const I2S0I_DATA_IN15_IDX = 158
const I2S0O_DATA_OUT15_IDX = 158
const I2S0O_DATA_OUT16_IDX = 159
const I2S0O_DATA_OUT17_IDX = 160
const I2S0O_DATA_OUT18_IDX = 161
const I2S0O_DATA_OUT19_IDX = 162
const I2S0O_DATA_OUT20_IDX = 163
const I2S0O_DATA_OUT21_IDX = 164
const I2S0O_DATA_OUT22_IDX = 165
const I2S0O_DATA_OUT23_IDX = 166
const SUBSPID4_IN_IDX = 167
const SUBSPID4_OUT_IDX = 167
const SUBSPID5_IN_IDX = 168
const SUBSPID5_OUT_IDX = 168
const SUBSPID6_IN_IDX = 169
const SUBSPID6_OUT_IDX = 169
const SUBSPID7_IN_IDX = 170
const SUBSPID7_OUT_IDX = 170
const SUBSPIDQS_IN_IDX = 171
const SUBSPIDQS_OUT_IDX = 171
const I2S0I_H_SYNC_IDX = 193
const I2S0I_V_SYNC_IDX = 194
const I2S0I_H_ENABLE_IDX = 195
const PCMFSYNC_IN_IDX = 203
const BT_AUDIO0_IRQ_IDX = 203
const PCMCLK_IN_IDX = 204
const BT_AUDIO1_IRQ_IDX = 204
const PCMDIN_IDX = 205
const BT_AUDIO2_IRQ_IDX = 205
const RW_WAKEUP_REQ_IDX = 206
const BLE_AUDIO0_IRQ_IDX = 206
const BLE_AUDIO1_IRQ_IDX = 207
const BLE_AUDIO2_IRQ_IDX = 208
const PCMFSYNC_OUT_IDX = 209
const PCMCLK_OUT_IDX = 210
const PCMDOUT_IDX = 211
const BLE_AUDIO_SYNC0_P_IDX = 212
const BLE_AUDIO_SYNC1_P_IDX = 213
const BLE_AUDIO_SYNC2_P_IDX = 214
const ANT_SEL0_IDX = 215
const ANT_SEL1_IDX = 216
const ANT_SEL2_IDX = 217
const ANT_SEL3_IDX = 218
const ANT_SEL4_IDX = 219
const ANT_SEL5_IDX = 220
const ANT_SEL6_IDX = 221
const ANT_SEL7_IDX = 222
const SIG_IN_FUNC_223_IDX = 223
const SIG_IN_FUNC223_IDX = 223
const SIG_IN_FUNC_224_IDX = 224
const SIG_IN_FUNC224_IDX = 224
const SIG_IN_FUNC_225_IDX = 225
const SIG_IN_FUNC225_IDX = 225
const SIG_IN_FUNC_226_IDX = 226
const SIG_IN_FUNC226_IDX = 226
const SIG_IN_FUNC_227_IDX = 227
const SIG_IN_FUNC227_IDX = 227
const PRO_ALONEGPIO_IN0_IDX = 235
const PRO_ALONEGPIO_OUT0_IDX = 235
const PRO_ALONEGPIO_IN1_IDX = 236
const PRO_ALONEGPIO_OUT1_IDX = 236
const PRO_ALONEGPIO_IN2_IDX = 237
const PRO_ALONEGPIO_OUT2_IDX = 237
const PRO_ALONEGPIO_IN3_IDX = 238
const PRO_ALONEGPIO_OUT3_IDX = 238
const PRO_ALONEGPIO_IN4_IDX = 239
const PRO_ALONEGPIO_OUT4_IDX = 239
const PRO_ALONEGPIO_IN5_IDX = 240
const PRO_ALONEGPIO_OUT5_IDX = 240
const PRO_ALONEGPIO_IN6_IDX = 241
const PRO_ALONEGPIO_OUT6_IDX = 241
const PRO_ALONEGPIO_IN7_IDX = 242
const PRO_ALONEGPIO_OUT7_IDX = 242
const CLK_I2S_MUX_IDX = 251
const SIG_GPIO_OUT_IDX = 256
const GPIO_MAP_DATE_IDX = 0x1904100
const SPI_MEM_FLASH_READ_V = 0x1
const SPI_MEM_FLASH_READ_S = 31
const SPI_MEM_FLASH_WREN_V = 0x1
const SPI_MEM_FLASH_WREN_S = 30
const SPI_MEM_FLASH_WRDI_V = 0x1
const SPI_MEM_FLASH_WRDI_S = 29
const SPI_MEM_FLASH_RDID_V = 0x1
const SPI_MEM_FLASH_RDID_S = 28
const SPI_MEM_FLASH_RDSR_V = 0x1
const SPI_MEM_FLASH_RDSR_S = 27
const SPI_MEM_FLASH_WRSR_V = 0x1
const SPI_MEM_FLASH_WRSR_S = 26
const SPI_MEM_FLASH_PP_V = 0x1
const SPI_MEM_FLASH_PP_S = 25
const SPI_MEM_FLASH_SE_V = 0x1
const SPI_MEM_FLASH_SE_S = 24
const SPI_MEM_FLASH_BE_V = 0x1
const SPI_MEM_FLASH_BE_S = 23
const SPI_MEM_FLASH_CE_V = 0x1
const SPI_MEM_FLASH_CE_S = 22
const SPI_MEM_FLASH_DP_V = 0x1
const SPI_MEM_FLASH_DP_S = 21
const SPI_MEM_FLASH_RES_V = 0x1
const SPI_MEM_FLASH_RES_S = 20
const SPI_MEM_FLASH_HPM_V = 0x1
const SPI_MEM_FLASH_HPM_S = 19
const SPI_MEM_USR_V = 0x1
const SPI_MEM_USR_S = 18
const SPI_MEM_FLASH_PE_V = 0x1
const SPI_MEM_FLASH_PE_S = 17
const SPI_MEM_USR_ADDR_VALUE = 0xFFFFFFFF
const SPI_MEM_USR_ADDR_VALUE_V = 0xFFFFFFFF
const SPI_MEM_USR_ADDR_VALUE_S = 0
const SPI_MEM_FREAD_QIO_V = 0x1
const SPI_MEM_FREAD_QIO_S = 24
const SPI_MEM_FREAD_DIO_V = 0x1
const SPI_MEM_FREAD_DIO_S = 23
const SPI_MEM_WRSR_2B_V = 0x1
const SPI_MEM_WRSR_2B_S = 22
const SPI_MEM_WP_REG_V = 0x1
const SPI_MEM_WP_REG_S = 21
const SPI_MEM_FREAD_QUAD_V = 0x1
const SPI_MEM_FREAD_QUAD_S = 20
const SPI_MEM_D_POL_V = 0x1
const SPI_MEM_D_POL_S = 19
const SPI_MEM_Q_POL_V = 0x1
const SPI_MEM_Q_POL_S = 18
const SPI_MEM_RESANDRES_V = 0x1
const SPI_MEM_RESANDRES_S = 15
const SPI_MEM_FREAD_DUAL_V = 0x1
const SPI_MEM_FREAD_DUAL_S = 14
const SPI_MEM_FASTRD_MODE_V = 0x1
const SPI_MEM_FASTRD_MODE_S = 13
const SPI_MEM_TX_CRC_EN_V = 0x1
const SPI_MEM_TX_CRC_EN_S = 11
const SPI_MEM_FCS_CRC_EN_V = 0x1
const SPI_MEM_FCS_CRC_EN_S = 10
const SPI_MEM_FCMD_OCT_V = 0x1
const SPI_MEM_FCMD_OCT_S = 9
const SPI_MEM_FCMD_QUAD_V = 0x1
const SPI_MEM_FCMD_QUAD_S = 8
const SPI_MEM_FCMD_DUAL_V = 0x1
const SPI_MEM_FCMD_DUAL_S = 7
const SPI_MEM_FADDR_OCT_V = 0x1
const SPI_MEM_FADDR_OCT_S = 6
const SPI_MEM_FDIN_OCT_V = 0x1
const SPI_MEM_FDIN_OCT_S = 5
const SPI_MEM_FDOUT_OCT_V = 0x1
const SPI_MEM_FDOUT_OCT_S = 4
const SPI_MEM_FDUMMY_OUT_V = 0x1
const SPI_MEM_FDUMMY_OUT_S = 3
const SPI_MEM_CS_DLY_EDGE_V = 0x1
const SPI_MEM_CS_DLY_EDGE_S = 31
const SPI_MEM_CS_DLY_MODE = 0x00000007
const SPI_MEM_CS_DLY_MODE_V = 0x7
const SPI_MEM_CS_DLY_MODE_S = 28
const SPI_MEM_CS_DLY_NUM = 0x00000003
const SPI_MEM_CS_DLY_NUM_V = 0x3
const SPI_MEM_CS_DLY_NUM_S = 26
const SPI_MEM_CS_HOLD_DLY = 0x00000FFF
const SPI_MEM_CS_HOLD_DLY_V = 0xFFF
const SPI_MEM_CS_HOLD_DLY_S = 14
const SPI_MEM_CS_HOLD_DLY_RES = 0x00000FFF
const SPI_MEM_CS_HOLD_DLY_RES_V = 0xFFF
const SPI_MEM_CS_HOLD_DLY_RES_S = 2
const SPI_MEM_CLK_MODE = 0x00000003
const SPI_MEM_CLK_MODE_V = 0x3
const SPI_MEM_CLK_MODE_S = 0
const SPI_MEM_SYNC_RESET_V = 0x1
const SPI_MEM_SYNC_RESET_S = 31
const SPI_MEM_CS_HOLD_TIME = 0x00001FFF
const SPI_MEM_CS_HOLD_TIME_V = 0x1FFF
const SPI_MEM_CS_HOLD_TIME_S = 13
const SPI_MEM_CS_SETUP_TIME = 0x00001FFF
const SPI_MEM_CS_SETUP_TIME_V = 0x1FFF
const SPI_MEM_CS_SETUP_TIME_S = 0
const SPI_MEM_CLK_EQU_SYSCLK_V = 0x1
const SPI_MEM_CLK_EQU_SYSCLK_S = 31
const SPI_MEM_CLKCNT_N = 0x000000FF
const SPI_MEM_CLKCNT_N_V = 0xFF
const SPI_MEM_CLKCNT_N_S = 16
const SPI_MEM_CLKCNT_H = 0x000000FF
const SPI_MEM_CLKCNT_H_V = 0xFF
const SPI_MEM_CLKCNT_H_S = 8
const SPI_MEM_CLKCNT_L = 0x000000FF
const SPI_MEM_CLKCNT_L_V = 0xFF
const SPI_MEM_CLKCNT_L_S = 0
const SPI_MEM_USR_COMMAND_V = 0x1
const SPI_MEM_USR_COMMAND_S = 31
const SPI_MEM_USR_ADDR_V = 0x1
const SPI_MEM_USR_ADDR_S = 30
const SPI_MEM_USR_DUMMY_V = 0x1
const SPI_MEM_USR_DUMMY_S = 29
const SPI_MEM_USR_MISO_V = 0x1
const SPI_MEM_USR_MISO_S = 28
const SPI_MEM_USR_MOSI_V = 0x1
const SPI_MEM_USR_MOSI_S = 27
const SPI_MEM_USR_DUMMY_IDLE_V = 0x1
const SPI_MEM_USR_DUMMY_IDLE_S = 26
const SPI_MEM_USR_MOSI_HIGHPART_V = 0x1
const SPI_MEM_USR_MOSI_HIGHPART_S = 25
const SPI_MEM_USR_MISO_HIGHPART_V = 0x1
const SPI_MEM_USR_MISO_HIGHPART_S = 24
const SPI_MEM_FWRITE_QIO_V = 0x1
const SPI_MEM_FWRITE_QIO_S = 15
const SPI_MEM_FWRITE_DIO_V = 0x1
const SPI_MEM_FWRITE_DIO_S = 14
const SPI_MEM_FWRITE_QUAD_V = 0x1
const SPI_MEM_FWRITE_QUAD_S = 13
const SPI_MEM_FWRITE_DUAL_V = 0x1
const SPI_MEM_FWRITE_DUAL_S = 12
const SPI_MEM_CK_OUT_EDGE_V = 0x1
const SPI_MEM_CK_OUT_EDGE_S = 9
const SPI_MEM_CS_SETUP_V = 0x1
const SPI_MEM_CS_SETUP_S = 7
const SPI_MEM_CS_HOLD_V = 0x1
const SPI_MEM_CS_HOLD_S = 6
const SPI_MEM_USR_ADDR_BITLEN = 0x0000003F
const SPI_MEM_USR_ADDR_BITLEN_V = 0x3F
const SPI_MEM_USR_ADDR_BITLEN_S = 26
const SPI_MEM_USR_DUMMY_CYCLELEN = 0x000000FF
const SPI_MEM_USR_DUMMY_CYCLELEN_V = 0xFF
const SPI_MEM_USR_DUMMY_CYCLELEN_S = 0
const SPI_MEM_USR_COMMAND_BITLEN = 0x0000000F
const SPI_MEM_USR_COMMAND_BITLEN_V = 0xF
const SPI_MEM_USR_COMMAND_BITLEN_S = 28
const SPI_MEM_USR_COMMAND_VALUE = 0x0000FFFF
const SPI_MEM_USR_COMMAND_VALUE_V = 0xFFFF
const SPI_MEM_USR_COMMAND_VALUE_S = 0
const SPI_MEM_USR_MOSI_DBITLEN = 0x000007FF
const SPI_MEM_USR_MOSI_DBITLEN_V = 0x7FF
const SPI_MEM_USR_MOSI_DBITLEN_S = 0
const SPI_MEM_USR_MISO_DBITLEN = 0x000007FF
const SPI_MEM_USR_MISO_DBITLEN_V = 0x7FF
const SPI_MEM_USR_MISO_DBITLEN_S = 0
const SPI_MEM_WB_MODE = 0x000000FF
const SPI_MEM_WB_MODE_V = 0xFF
const SPI_MEM_WB_MODE_S = 16
const SPI_MEM_STATUS = 0x0000FFFF
const SPI_MEM_STATUS_V = 0xFFFF
const SPI_MEM_STATUS_S = 0
const SPI_MEM_EXT_ADDR = 0xFFFFFFFF
const SPI_MEM_EXT_ADDR_V = 0xFFFFFFFF
const SPI_MEM_EXT_ADDR_S = 0
const SPI_MEM_AUTO_PER_V = 0x1
const SPI_MEM_AUTO_PER_S = 11
const SPI_MEM_CS_KEEP_ACTIVE_V = 0x1
const SPI_MEM_CS_KEEP_ACTIVE_S = 10
const SPI_MEM_CK_IDLE_EDGE_V = 0x1
const SPI_MEM_CK_IDLE_EDGE_S = 9
const SPI_MEM_SSUB_PIN_V = 0x1
const SPI_MEM_SSUB_PIN_S = 8
const SPI_MEM_FSUB_PIN_V = 0x1
const SPI_MEM_FSUB_PIN_S = 7
const SPI_MEM_CS_POL = 0x00000003
const SPI_MEM_CS_POL_V = 0x3
const SPI_MEM_CS_POL_S = 5
const SPI_MEM_TRANS_END_INT_ENA_V = 0x1
const SPI_MEM_TRANS_END_INT_ENA_S = 4
const SPI_MEM_TRANS_END_V = 0x1
const SPI_MEM_TRANS_END_S = 3
const SPI_MEM_CS1_DIS_V = 0x1
const SPI_MEM_CS1_DIS_S = 1
const SPI_MEM_CS0_DIS_V = 0x1
const SPI_MEM_CS0_DIS_S = 0
const SPI_MEM_TX_CRC_DATA = 0xFFFFFFFF
const SPI_MEM_TX_CRC_DATA_V = 0xFFFFFFFF
const SPI_MEM_TX_CRC_DATA_S = 0
const SPI_MEM_FADDR_QUAD_V = 0x1
const SPI_MEM_FADDR_QUAD_S = 8
const SPI_MEM_FDOUT_QUAD_V = 0x1
const SPI_MEM_FDOUT_QUAD_S = 7
const SPI_MEM_FDIN_QUAD_V = 0x1
const SPI_MEM_FDIN_QUAD_S = 6
const SPI_MEM_FADDR_DUAL_V = 0x1
const SPI_MEM_FADDR_DUAL_S = 5
const SPI_MEM_FDOUT_DUAL_V = 0x1
const SPI_MEM_FDOUT_DUAL_S = 4
const SPI_MEM_FDIN_DUAL_V = 0x1
const SPI_MEM_FDIN_DUAL_S = 3
const SPI_MEM_CACHE_FLASH_USR_CMD_V = 0x1
const SPI_MEM_CACHE_FLASH_USR_CMD_S = 2
const SPI_MEM_CACHE_USR_CMD_4BYTE_V = 0x1
const SPI_MEM_CACHE_USR_CMD_4BYTE_S = 1
const SPI_MEM_CACHE_REQ_EN_V = 0x1
const SPI_MEM_CACHE_REQ_EN_S = 0
const SPI_MEM_SRAM_WDUMMY_CYCLELEN = 0x000000FF
const SPI_MEM_SRAM_WDUMMY_CYCLELEN_V = 0xFF
const SPI_MEM_SRAM_WDUMMY_CYCLELEN_S = 22
const SPI_MEM_SRAM_OCT_V = 0x1
const SPI_MEM_SRAM_OCT_S = 21
const SPI_MEM_CACHE_SRAM_USR_WCMD_V = 0x1
const SPI_MEM_CACHE_SRAM_USR_WCMD_S = 20
const SPI_MEM_SRAM_ADDR_BITLEN = 0x0000003F
const SPI_MEM_SRAM_ADDR_BITLEN_V = 0x3F
const SPI_MEM_SRAM_ADDR_BITLEN_S = 14
const SPI_MEM_SRAM_RDUMMY_CYCLELEN = 0x000000FF
const SPI_MEM_SRAM_RDUMMY_CYCLELEN_V = 0xFF
const SPI_MEM_SRAM_RDUMMY_CYCLELEN_S = 6
const SPI_MEM_CACHE_SRAM_USR_RCMD_V = 0x1
const SPI_MEM_CACHE_SRAM_USR_RCMD_S = 5
const SPI_MEM_USR_RD_SRAM_DUMMY_V = 0x1
const SPI_MEM_USR_RD_SRAM_DUMMY_S = 4
const SPI_MEM_USR_WR_SRAM_DUMMY_V = 0x1
const SPI_MEM_USR_WR_SRAM_DUMMY_S = 3
const SPI_MEM_USR_SRAM_QIO_V = 0x1
const SPI_MEM_USR_SRAM_QIO_S = 2
const SPI_MEM_USR_SRAM_DIO_V = 0x1
const SPI_MEM_USR_SRAM_DIO_S = 1
const SPI_MEM_CACHE_USR_SCMD_4BYTE_V = 0x1
const SPI_MEM_CACHE_USR_SCMD_4BYTE_S = 0
const SPI_MEM_SDUMMY_OUT_V = 0x1
const SPI_MEM_SDUMMY_OUT_S = 22
const SPI_MEM_SCMD_OCT_V = 0x1
const SPI_MEM_SCMD_OCT_S = 21
const SPI_MEM_SADDR_OCT_V = 0x1
const SPI_MEM_SADDR_OCT_S = 20
const SPI_MEM_SDOUT_OCT_V = 0x1
const SPI_MEM_SDOUT_OCT_S = 19
const SPI_MEM_SDIN_OCT_V = 0x1
const SPI_MEM_SDIN_OCT_S = 18
const SPI_MEM_SCMD_QUAD_V = 0x1
const SPI_MEM_SCMD_QUAD_S = 17
const SPI_MEM_SADDR_QUAD_V = 0x1
const SPI_MEM_SADDR_QUAD_S = 16
const SPI_MEM_SDOUT_QUAD_V = 0x1
const SPI_MEM_SDOUT_QUAD_S = 15
const SPI_MEM_SDIN_QUAD_V = 0x1
const SPI_MEM_SDIN_QUAD_S = 14
const SPI_MEM_SCMD_DUAL_V = 0x1
const SPI_MEM_SCMD_DUAL_S = 13
const SPI_MEM_SADDR_DUAL_V = 0x1
const SPI_MEM_SADDR_DUAL_S = 12
const SPI_MEM_SDOUT_DUAL_V = 0x1
const SPI_MEM_SDOUT_DUAL_S = 11
const SPI_MEM_SDIN_DUAL_V = 0x1
const SPI_MEM_SDIN_DUAL_S = 10
const SPI_MEM_SWB_MODE = 0x000000FF
const SPI_MEM_SWB_MODE_V = 0xFF
const SPI_MEM_SWB_MODE_S = 2
const SPI_MEM_SCLK_MODE = 0x00000003
const SPI_MEM_SCLK_MODE_V = 0x3
const SPI_MEM_SCLK_MODE_S = 0
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_BITLEN = 0x0000000F
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_BITLEN_V = 0xF
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_BITLEN_S = 28
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE = 0x0000FFFF
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE_V = 0xFFFF
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE_S = 0
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_BITLEN = 0x0000000F
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_BITLEN_V = 0xF
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_BITLEN_S = 28
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE = 0x0000FFFF
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE_V = 0xFFFF
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE_S = 0
const SPI_MEM_SCLK_EQU_SYSCLK_V = 0x1
const SPI_MEM_SCLK_EQU_SYSCLK_S = 31
const SPI_MEM_SCLKCNT_N = 0x000000FF
const SPI_MEM_SCLKCNT_N_V = 0xFF
const SPI_MEM_SCLKCNT_N_S = 16
const SPI_MEM_SCLKCNT_H = 0x000000FF
const SPI_MEM_SCLKCNT_H_V = 0xFF
const SPI_MEM_SCLKCNT_H_S = 8
const SPI_MEM_SCLKCNT_L = 0x000000FF
const SPI_MEM_SCLKCNT_L_V = 0xFF
const SPI_MEM_SCLKCNT_L_S = 0
const SPI_MEM_ST = 0x00000007
const SPI_MEM_ST_V = 0x7
const SPI_MEM_ST_S = 0
const SPI_MEM_BUF0 = 0xFFFFFFFF
const SPI_MEM_BUF0_V = 0xFFFFFFFF
const SPI_MEM_BUF0_S = 0
const SPI_MEM_BUF1 = 0xFFFFFFFF
const SPI_MEM_BUF1_V = 0xFFFFFFFF
const SPI_MEM_BUF1_S = 0
const SPI_MEM_BUF2 = 0xFFFFFFFF
const SPI_MEM_BUF2_V = 0xFFFFFFFF
const SPI_MEM_BUF2_S = 0
const SPI_MEM_BUF3 = 0xFFFFFFFF
const SPI_MEM_BUF3_V = 0xFFFFFFFF
const SPI_MEM_BUF3_S = 0
const SPI_MEM_BUF4 = 0xFFFFFFFF
const SPI_MEM_BUF4_V = 0xFFFFFFFF
const SPI_MEM_BUF4_S = 0
const SPI_MEM_BUF5 = 0xFFFFFFFF
const SPI_MEM_BUF5_V = 0xFFFFFFFF
const SPI_MEM_BUF5_S = 0
const SPI_MEM_BUF6 = 0xFFFFFFFF
const SPI_MEM_BUF6_V = 0xFFFFFFFF
const SPI_MEM_BUF6_S = 0
const SPI_MEM_BUF7 = 0xFFFFFFFF
const SPI_MEM_BUF7_V = 0xFFFFFFFF
const SPI_MEM_BUF7_S = 0
const SPI_MEM_BUF8 = 0xFFFFFFFF
const SPI_MEM_BUF8_V = 0xFFFFFFFF
const SPI_MEM_BUF8_S = 0
const SPI_MEM_BUF9 = 0xFFFFFFFF
const SPI_MEM_BUF9_V = 0xFFFFFFFF
const SPI_MEM_BUF9_S = 0
const SPI_MEM_BUF10 = 0xFFFFFFFF
const SPI_MEM_BUF10_V = 0xFFFFFFFF
const SPI_MEM_BUF10_S = 0
const SPI_MEM_BUF11 = 0xFFFFFFFF
const SPI_MEM_BUF11_V = 0xFFFFFFFF
const SPI_MEM_BUF11_S = 0
const SPI_MEM_BUF12 = 0xFFFFFFFF
const SPI_MEM_BUF12_V = 0xFFFFFFFF
const SPI_MEM_BUF12_S = 0
const SPI_MEM_BUF13 = 0xFFFFFFFF
const SPI_MEM_BUF13_V = 0xFFFFFFFF
const SPI_MEM_BUF13_S = 0
const SPI_MEM_BUF14 = 0xFFFFFFFF
const SPI_MEM_BUF14_V = 0xFFFFFFFF
const SPI_MEM_BUF14_S = 0
const SPI_MEM_BUF15 = 0xFFFFFFFF
const SPI_MEM_BUF15_V = 0xFFFFFFFF
const SPI_MEM_BUF15_S = 0
const SPI_MEM_WAITI_DUMMY_CYCLELEN = 0x000000FF
const SPI_MEM_WAITI_DUMMY_CYCLELEN_V = 0xFF
const SPI_MEM_WAITI_DUMMY_CYCLELEN_S = 10
const SPI_MEM_WAITI_CMD = 0x000000FF
const SPI_MEM_WAITI_CMD_V = 0xFF
const SPI_MEM_WAITI_CMD_S = 2
const SPI_MEM_WAITI_DUMMY_V = 0x1
const SPI_MEM_WAITI_DUMMY_S = 1
const SPI_MEM_WAITI_EN_V = 0x1
const SPI_MEM_WAITI_EN_S = 0
const SPI_MEM_FLASH_PES_V = 0x1
const SPI_MEM_FLASH_PES_S = 1
const SPI_MEM_FLASH_PER_V = 0x1
const SPI_MEM_FLASH_PER_S = 0
const SPI_MEM_FLASH_PES_COMMAND = 0x000000FF
const SPI_MEM_FLASH_PES_COMMAND_V = 0xFF
const SPI_MEM_FLASH_PES_COMMAND_S = 9
const SPI_MEM_FLASH_PER_COMMAND = 0x000000FF
const SPI_MEM_FLASH_PER_COMMAND_V = 0xFF
const SPI_MEM_FLASH_PER_COMMAND_S = 1
const SPI_MEM_FLASH_PES_EN_V = 0x1
const SPI_MEM_FLASH_PES_EN_S = 0
const SPI_MEM_FLASH_SUS_V = 0x1
const SPI_MEM_FLASH_SUS_S = 0
const SPI_MEM_EXTRA_DUMMY_CYCLELEN = 0x00000003
const SPI_MEM_EXTRA_DUMMY_CYCLELEN_V = 0x3
const SPI_MEM_EXTRA_DUMMY_CYCLELEN_S = 2
const SPI_MEM_TIMING_CALI_V = 0x1
const SPI_MEM_TIMING_CALI_S = 1
const SPI_MEM_TIMING_CLK_ENA_V = 0x1
const SPI_MEM_TIMING_CLK_ENA_S = 0
const SPI_MEM_DINS_MODE = 0x00000007
const SPI_MEM_DINS_MODE_V = 0x7
const SPI_MEM_DINS_MODE_S = 24
const SPI_MEM_DIN7_MODE = 0x00000007
const SPI_MEM_DIN7_MODE_V = 0x7
const SPI_MEM_DIN7_MODE_S = 21
const SPI_MEM_DIN6_MODE = 0x00000007
const SPI_MEM_DIN6_MODE_V = 0x7
const SPI_MEM_DIN6_MODE_S = 18
const SPI_MEM_DIN5_MODE = 0x00000007
const SPI_MEM_DIN5_MODE_V = 0x7
const SPI_MEM_DIN5_MODE_S = 15
const SPI_MEM_DIN4_MODE = 0x00000007
const SPI_MEM_DIN4_MODE_V = 0x7
const SPI_MEM_DIN4_MODE_S = 12
const SPI_MEM_DIN3_MODE = 0x00000007
const SPI_MEM_DIN3_MODE_V = 0x7
const SPI_MEM_DIN3_MODE_S = 9
const SPI_MEM_DIN2_MODE = 0x00000007
const SPI_MEM_DIN2_MODE_V = 0x7
const SPI_MEM_DIN2_MODE_S = 6
const SPI_MEM_DIN1_MODE = 0x00000007
const SPI_MEM_DIN1_MODE_V = 0x7
const SPI_MEM_DIN1_MODE_S = 3
const SPI_MEM_DIN0_MODE = 0x00000007
const SPI_MEM_DIN0_MODE_V = 0x7
const SPI_MEM_DIN0_MODE_S = 0
const SPI_MEM_DINS_NUM = 0x00000003
const SPI_MEM_DINS_NUM_V = 0x3
const SPI_MEM_DINS_NUM_S = 16
const SPI_MEM_DIN7_NUM = 0x00000003
const SPI_MEM_DIN7_NUM_V = 0x3
const SPI_MEM_DIN7_NUM_S = 14
const SPI_MEM_DIN6_NUM = 0x00000003
const SPI_MEM_DIN6_NUM_V = 0x3
const SPI_MEM_DIN6_NUM_S = 12
const SPI_MEM_DIN5_NUM = 0x00000003
const SPI_MEM_DIN5_NUM_V = 0x3
const SPI_MEM_DIN5_NUM_S = 10
const SPI_MEM_DIN4_NUM = 0x00000003
const SPI_MEM_DIN4_NUM_V = 0x3
const SPI_MEM_DIN4_NUM_S = 8
const SPI_MEM_DIN3_NUM = 0x00000003
const SPI_MEM_DIN3_NUM_V = 0x3
const SPI_MEM_DIN3_NUM_S = 6
const SPI_MEM_DIN2_NUM = 0x00000003
const SPI_MEM_DIN2_NUM_V = 0x3
const SPI_MEM_DIN2_NUM_S = 4
const SPI_MEM_DIN1_NUM = 0x00000003
const SPI_MEM_DIN1_NUM_V = 0x3
const SPI_MEM_DIN1_NUM_S = 2
const SPI_MEM_DIN0_NUM = 0x00000003
const SPI_MEM_DIN0_NUM_V = 0x3
const SPI_MEM_DIN0_NUM_S = 0
const SPI_MEM_DOUTS_MODE = 0x00000007
const SPI_MEM_DOUTS_MODE_V = 0x7
const SPI_MEM_DOUTS_MODE_S = 24
const SPI_MEM_DOUT7_MODE = 0x00000007
const SPI_MEM_DOUT7_MODE_V = 0x7
const SPI_MEM_DOUT7_MODE_S = 21
const SPI_MEM_DOUT6_MODE = 0x00000007
const SPI_MEM_DOUT6_MODE_V = 0x7
const SPI_MEM_DOUT6_MODE_S = 18
const SPI_MEM_DOUT5_MODE = 0x00000007
const SPI_MEM_DOUT5_MODE_V = 0x7
const SPI_MEM_DOUT5_MODE_S = 15
const SPI_MEM_DOUT4_MODE = 0x00000007
const SPI_MEM_DOUT4_MODE_V = 0x7
const SPI_MEM_DOUT4_MODE_S = 12
const SPI_MEM_DOUT3_MODE = 0x00000007
const SPI_MEM_DOUT3_MODE_V = 0x7
const SPI_MEM_DOUT3_MODE_S = 9
const SPI_MEM_DOUT2_MODE = 0x00000007
const SPI_MEM_DOUT2_MODE_V = 0x7
const SPI_MEM_DOUT2_MODE_S = 6
const SPI_MEM_DOUT1_MODE = 0x00000007
const SPI_MEM_DOUT1_MODE_V = 0x7
const SPI_MEM_DOUT1_MODE_S = 3
const SPI_MEM_DOUT0_MODE = 0x00000007
const SPI_MEM_DOUT0_MODE_V = 0x7
const SPI_MEM_DOUT0_MODE_S = 0
const SPI_MEM_DOUTS_NUM = 0x00000003
const SPI_MEM_DOUTS_NUM_V = 0x3
const SPI_MEM_DOUTS_NUM_S = 16
const SPI_MEM_DOUT7_NUM = 0x00000003
const SPI_MEM_DOUT7_NUM_V = 0x3
const SPI_MEM_DOUT7_NUM_S = 14
const SPI_MEM_DOUT6_NUM = 0x00000003
const SPI_MEM_DOUT6_NUM_V = 0x3
const SPI_MEM_DOUT6_NUM_S = 12
const SPI_MEM_DOUT5_NUM = 0x00000003
const SPI_MEM_DOUT5_NUM_V = 0x3
const SPI_MEM_DOUT5_NUM_S = 10
const SPI_MEM_DOUT4_NUM = 0x00000003
const SPI_MEM_DOUT4_NUM_V = 0x3
const SPI_MEM_DOUT4_NUM_S = 8
const SPI_MEM_DOUT3_NUM = 0x00000003
const SPI_MEM_DOUT3_NUM_V = 0x3
const SPI_MEM_DOUT3_NUM_S = 6
const SPI_MEM_DOUT2_NUM = 0x00000003
const SPI_MEM_DOUT2_NUM_V = 0x3
const SPI_MEM_DOUT2_NUM_S = 4
const SPI_MEM_DOUT1_NUM = 0x00000003
const SPI_MEM_DOUT1_NUM_V = 0x3
const SPI_MEM_DOUT1_NUM_S = 2
const SPI_MEM_DOUT0_NUM = 0x00000003
const SPI_MEM_DOUT0_NUM_V = 0x3
const SPI_MEM_DOUT0_NUM_S = 0
const SPI_MEM_SPI_SMEM_EXTRA_DUMMY_CYCLELEN = 0x00000003
const SPI_MEM_SPI_SMEM_EXTRA_DUMMY_CYCLELEN_V = 0x3
const SPI_MEM_SPI_SMEM_EXTRA_DUMMY_CYCLELEN_S = 2
const SPI_MEM_SPI_SMEM_TIMING_CALI_V = 0x1
const SPI_MEM_SPI_SMEM_TIMING_CALI_S = 1
const SPI_MEM_SPI_SMEM_TIMING_CLK_ENA_V = 0x1
const SPI_MEM_SPI_SMEM_TIMING_CLK_ENA_S = 0
const SPI_MEM_SPI_SMEM_DINS_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DINS_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DINS_MODE_S = 24
const SPI_MEM_SPI_SMEM_DIN7_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN7_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN7_MODE_S = 21
const SPI_MEM_SPI_SMEM_DIN6_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN6_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN6_MODE_S = 18
const SPI_MEM_SPI_SMEM_DIN5_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN5_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN5_MODE_S = 15
const SPI_MEM_SPI_SMEM_DIN4_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN4_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN4_MODE_S = 12
const SPI_MEM_SPI_SMEM_DIN3_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN3_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN3_MODE_S = 9
const SPI_MEM_SPI_SMEM_DIN2_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN2_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN2_MODE_S = 6
const SPI_MEM_SPI_SMEM_DIN1_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN1_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN1_MODE_S = 3
const SPI_MEM_SPI_SMEM_DIN0_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN0_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN0_MODE_S = 0
const SPI_MEM_SPI_SMEM_DINS_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DINS_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DINS_NUM_S = 16
const SPI_MEM_SPI_SMEM_DIN7_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN7_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN7_NUM_S = 14
const SPI_MEM_SPI_SMEM_DIN6_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN6_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN6_NUM_S = 12
const SPI_MEM_SPI_SMEM_DIN5_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN5_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN5_NUM_S = 10
const SPI_MEM_SPI_SMEM_DIN4_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN4_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN4_NUM_S = 8
const SPI_MEM_SPI_SMEM_DIN3_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN3_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN3_NUM_S = 6
const SPI_MEM_SPI_SMEM_DIN2_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN2_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN2_NUM_S = 4
const SPI_MEM_SPI_SMEM_DIN1_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN1_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN1_NUM_S = 2
const SPI_MEM_SPI_SMEM_DIN0_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN0_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN0_NUM_S = 0
const SPI_MEM_SPI_SMEM_DOUTS_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUTS_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUTS_MODE_S = 24
const SPI_MEM_SPI_SMEM_DOUT7_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT7_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT7_MODE_S = 21
const SPI_MEM_SPI_SMEM_DOUT6_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT6_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT6_MODE_S = 18
const SPI_MEM_SPI_SMEM_DOUT5_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT5_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT5_MODE_S = 15
const SPI_MEM_SPI_SMEM_DOUT4_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT4_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT4_MODE_S = 12
const SPI_MEM_SPI_SMEM_DOUT3_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT3_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT3_MODE_S = 9
const SPI_MEM_SPI_SMEM_DOUT2_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT2_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT2_MODE_S = 6
const SPI_MEM_SPI_SMEM_DOUT1_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT1_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT1_MODE_S = 3
const SPI_MEM_SPI_SMEM_DOUT0_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT0_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT0_MODE_S = 0
const SPI_MEM_SPI_SMEM_DOUTS_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUTS_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUTS_NUM_S = 16
const SPI_MEM_SPI_SMEM_DOUT7_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT7_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT7_NUM_S = 14
const SPI_MEM_SPI_SMEM_DOUT6_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT6_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT6_NUM_S = 12
const SPI_MEM_SPI_SMEM_DOUT5_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT5_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT5_NUM_S = 10
const SPI_MEM_SPI_SMEM_DOUT4_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT4_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT4_NUM_S = 8
const SPI_MEM_SPI_SMEM_DOUT3_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT3_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT3_NUM_S = 6
const SPI_MEM_SPI_SMEM_DOUT2_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT2_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT2_NUM_S = 4
const SPI_MEM_SPI_SMEM_DOUT1_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT1_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT1_NUM_S = 2
const SPI_MEM_SPI_SMEM_DOUT0_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT0_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT0_NUM_S = 0
const SPI_MEM_SPI_SMEM_CS_HOLD_TIME = 0x00001FFF
const SPI_MEM_SPI_SMEM_CS_HOLD_TIME_V = 0x1FFF
const SPI_MEM_SPI_SMEM_CS_HOLD_TIME_S = 15
const SPI_MEM_SPI_SMEM_CS_SETUP_TIME = 0x00001FFF
const SPI_MEM_SPI_SMEM_CS_SETUP_TIME_V = 0x1FFF
const SPI_MEM_SPI_SMEM_CS_SETUP_TIME_S = 2
const SPI_MEM_SPI_SMEM_CS_HOLD_V = 0x1
const SPI_MEM_SPI_SMEM_CS_HOLD_S = 1
const SPI_MEM_SPI_SMEM_CS_SETUP_V = 0x1
const SPI_MEM_SPI_SMEM_CS_SETUP_S = 0
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_MODE = 0x00000003
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_MODE_V = 0x3
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_MODE_S = 22
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_S = 21
const SPI_MEM_SPI_FMEM_USR_DDR_DQS_THD = 0x000000FF
const SPI_MEM_SPI_FMEM_USR_DDR_DQS_THD_V = 0xFF
const SPI_MEM_SPI_FMEM_USR_DDR_DQS_THD_S = 13
const SPI_MEM_SPI_FMEM_OUTMINBYTELEN = 0x000000FF
const SPI_MEM_SPI_FMEM_OUTMINBYTELEN_V = 0xFF
const SPI_MEM_SPI_FMEM_OUTMINBYTELEN_S = 5
const SPI_MEM_SPI_FMEM_DDR_CMD_DIS_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_CMD_DIS_S = 4
const SPI_MEM_SPI_FMEM_DDR_WDAT_SWP_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_WDAT_SWP_S = 3
const SPI_MEM_SPI_FMEM_DDR_RDAT_SWP_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_RDAT_SWP_S = 2
const SPI_MEM_SPI_FMEM_VAR_DUMMY_V = 0x1
const SPI_MEM_SPI_FMEM_VAR_DUMMY_S = 1
const SPI_MEM_SPI_FMEM_DDR_EN_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_EN_S = 0
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_MODE = 0x00000003
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_MODE_V = 0x3
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_MODE_S = 22
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_S = 21
const SPI_MEM_SPI_SMEM_USR_DDR_DQS_THD = 0x000000FF
const SPI_MEM_SPI_SMEM_USR_DDR_DQS_THD_V = 0xFF
const SPI_MEM_SPI_SMEM_USR_DDR_DQS_THD_S = 13
const SPI_MEM_SPI_SMEM_OUTMINBYTELEN = 0x000000FF
const SPI_MEM_SPI_SMEM_OUTMINBYTELEN_V = 0xFF
const SPI_MEM_SPI_SMEM_OUTMINBYTELEN_S = 5
const SPI_MEM_SPI_SMEM_DDR_CMD_DIS_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_CMD_DIS_S = 4
const SPI_MEM_SPI_SMEM_DDR_WDAT_SWP_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_WDAT_SWP_S = 3
const SPI_MEM_SPI_SMEM_DDR_RDAT_SWP_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_RDAT_SWP_S = 2
const SPI_MEM_SPI_SMEM_VAR_DUMMY_V = 0x1
const SPI_MEM_SPI_SMEM_VAR_DUMMY_S = 1
const SPI_MEM_SPI_SMEM_DDR_EN_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_EN_S = 0
const SPI_MEM_CLK_EN_V = 0x1
const SPI_MEM_CLK_EN_S = 0
const SPI_MEM_DATE = 0x0FFFFFFF
const SPI_MEM_DATE_V = 0xFFFFFFF
const SPI_MEM_DATE_S = 0
const SPI_FREAD_DIO = 0
const SPI_FREAD_QIO = 0
const SPI_FWRITE_DIO = 0
const SPI_FWRITE_QIO = 0
const ARG_MAX = 65536
const CHILD_MAX = 40
const LINK_MAX = 32767
const MAX_CANON = 255
const MAX_INPUT = 255
const NAME_MAX = 255
const NGROUPS_MAX = 16
const OPEN_MAX = 64
const PATH_MAX = 1024
const PIPE_BUF = 512
const IOV_MAX = 1024
const BC_BASE_MAX = 99
const BC_DIM_MAX = 2048
const BC_SCALE_MAX = 99
const BC_STRING_MAX = 1000
const COLL_WEIGHTS_MAX = 0
const EXPR_NEST_MAX = 32
const LINE_MAX = 2048
const RE_DUP_MAX = 255
const X_LITTLE_ENDIAN = 1234
const X_BIG_ENDIAN = 4321
const X_PDP_ENDIAN = 3412
const X_QUAD_HIGHWORD = 1
const X_QUAD_LOWWORD = 0
const NBBY = 8
const GPSPI_FLASH_LL_PERIPHERAL_FREQUENCY_MHZ = 80
const SPI_FLASH_HAL_MAX_WRITE_BYTES = 64
const SPI_FLASH_HAL_MAX_READ_BYTES = 64
const FLASH_ID_GD25LQ32C = 0xC86016
const STACK_OVERHEAD_CHECKER = 0
const STACK_OVERHEAD_OPTIMIZATION = 0
const STACK_OVERHEAD_APPTRACE = 0
const STACK_OVERHEAD_WATCHPOINT = 0
const XTHAL_RELEASE_MAJOR = 12000
const XTHAL_RELEASE_MINOR = 9
const XTHAL_RELEASE_NAME = "12.0.9"
const XTHAL_REL_12 = 1
const XTHAL_REL_12_0 = 1
const XTHAL_REL_12_0_9 = 1
const XTHAL_MAX_CPS = 8
const XTHAL_LITTLEENDIAN = 0
const XTHAL_BIGENDIAN = 1
const XTHAL_PREFETCH_DISABLE = 0xFFFF0000
const XTHAL_DCACHE_PREFETCH_L1_OFF = 0x90000000
const XTHAL_DCACHE_PREFETCH_L1 = 0x90001000
const XTHAL_ICACHE_PREFETCH_L1_OFF = 0xA0000000
const XTHAL_ICACHE_PREFETCH_L1 = 0xA0002000
const XTHAL_DISASM_BUFSIZE = 80
const XTHAL_DISASM_OPT_ADDR = 0x0001
const XTHAL_DISASM_OPT_OPHEX = 0x0002
const XTHAL_DISASM_OPT_OPCODE = 0x0004
const XTHAL_DISASM_OPT_PARMS = 0x0008
const XTHAL_DISASM_OPT_ALL = 0x0FFF
const XTHAL_MAX_INTERRUPTS = 32
const XTHAL_MAX_INTLEVELS = 16
const XTHAL_MAX_TIMERS = 4
const XTHAL_INTTYPE_UNCONFIGURED = 0
const XTHAL_INTTYPE_SOFTWARE = 1
const XTHAL_INTTYPE_EXTERN_EDGE = 2
const XTHAL_INTTYPE_EXTERN_LEVEL = 3
const XTHAL_INTTYPE_TIMER = 4
const XTHAL_INTTYPE_NMI = 5
const XTHAL_INTTYPE_WRITE_ERROR = 6
const XTHAL_INTTYPE_PROFILING = 7
const XTHAL_INTTYPE_IDMA_DONE = 8
const XTHAL_INTTYPE_IDMA_ERR = 9
const XTHAL_INTTYPE_GS_ERR = 10
const XTHAL_INTTYPE_SG_ERR = 10
const XTHAL_MAX_INTTYPES = 11
const XTHAL_MEMEP_PARITY = 1
const XTHAL_MEMEP_ECC = 2
const XTHAL_MEMEP_F_LOCAL = 0
const XTHAL_MEMEP_F_DCACHE_DATA = 4
const XTHAL_MEMEP_F_DCACHE_TAG = 5
const XTHAL_MEMEP_F_ICACHE_DATA = 6
const XTHAL_MEMEP_F_ICACHE_TAG = 7
const XTHAL_MEMEP_F_CORRECTABLE = 16
const XTHAL_AMB_EXCEPTION = 0
const XTHAL_AMB_HITCACHE = 1
const XTHAL_AMB_ALLOCATE = 2
const XTHAL_AMB_WRITETHRU = 3
const XTHAL_AMB_ISOLATE = 4
const XTHAL_AMB_GUARD = 5
const XTHAL_AMB_COHERENT = 6
const XTHAL_FAM_EXCEPTION = 0x001
const XTHAL_FAM_BYPASS = 0x000
const XTHAL_FAM_CACHED = 0x006
const XTHAL_LAM_EXCEPTION = 0x001
const XTHAL_LAM_ISOLATE = 0x012
const XTHAL_LAM_BYPASS = 0x000
const XTHAL_LAM_BYPASSG = 0x020
const XTHAL_LAM_CACHED_NOALLOC = 0x002
const XTHAL_LAM_NACACHEDG = 0x022
const XTHAL_LAM_CACHED = 0x006
const XTHAL_LAM_COHCACHED = 0x046
const XTHAL_SAM_EXCEPTION = 0x001
const XTHAL_SAM_ISOLATE = 0x032
const XTHAL_SAM_BYPASS = 0x028
const XTHAL_SAM_WRITETHRU = 0x02A
const XTHAL_SAM_WRITEBACK = 0x026
const XTHAL_SAM_WRITEBACK_NOALLOC = 0x022
const XTHAL_SAM_COHWRITEBACK = 0x066
const XTHAL_PAM_BYPASS = 0x000
const XTHAL_PAM_BYPASS_BUF = 0x010
const XTHAL_PAM_CACHED_NOALLOC = 0x030
const XTHAL_PAM_WRITETHRU = 0x0B0
const XTHAL_PAM_WRITEBACK_NOALLOC = 0x0F0
const XTHAL_PAM_WRITEBACK = 0x1F0
const XTHAL_CAFLAG_EXPAND = 0x000100
const XTHAL_CAFLAG_EXACT = 0x000200
const XTHAL_CAFLAG_NO_PARTIAL = 0x000400
const XTHAL_CAFLAG_NO_AUTO_WB = 0x000800
const XTHAL_CAFLAG_NO_AUTO_INV = 0x001000
const XTHAL_SUCCESS = 0
const XTHAL_AR_NONE = 0
const XTHAL_AR_R = 4
const XTHAL_AR_RX = 5
const XTHAL_AR_RW = 6
const XTHAL_AR_RWX = 7
const XTHAL_AR_Ww = 8
const XTHAL_AR_RWrwx = 9
const XTHAL_AR_RWr = 10
const XTHAL_AR_RWXrx = 11
const XTHAL_AR_Rr = 12
const XTHAL_AR_RXrx = 13
const XTHAL_AR_RWrw = 14
const XTHAL_AR_RWXrwx = 15
const XTHAL_AR_WIDTH = 4
const XTHAL_MPU_USE_EXISTING_ACCESS_RIGHTS = 0x00002000
const XTHAL_MPU_USE_EXISTING_MEMORY_TYPE = 0x00004000
const XTHAL_MEM_DEVICE = 0x00008000
const XTHAL_MEM_NON_CACHEABLE = 0x00090000
const XTHAL_MEM_WRITETHRU_NOALLOC = 0x00080000
const XTHAL_MEM_WRITETHRU = 0x00040000
const XTHAL_MEM_WRITETHRU_WRITEALLOC = 0x00060000
const XTHAL_MEM_WRITEBACK_NOALLOC = 0x00050000
const XTHAL_MEM_WRITEBACK = 0x00070000
const XTHAL_MEM_INTERRUPTIBLE = 0x08000000
const XTHAL_MEM_BUFFERABLE = 0x01000000
const XTHAL_MEM_NON_SHAREABLE = 0x00000000
const XTHAL_MEM_INNER_SHAREABLE = 0x02000000
const XTHAL_MEM_OUTER_SHAREABLE = 0x04000000
const XTHAL_MEM_SYSTEM_SHAREABLE = 0x06000000
const X_XTHAL_SYSTEM_CACHE_BITS = 0x000f0000
const X_XTHAL_LOCAL_CACHE_BITS = 0x00f00000
const X_XTHAL_MEM_SYSTEM_RWC_MASK = 0x00070000
const X_XTHAL_MEM_LOCAL_RWC_MASK = 0x00700000
const X_XTHAL_SHIFT_RWC = 16
const XTHAL_MEM_SW_SHAREABLE = 0
const XTENSA_HWVERSION_T1020_0 = 102000
const XTENSA_HWCIDSCHEME_T1020_0 = 10
const XTENSA_HWCIDVERS_T1020_0 = 2
const XTENSA_HWVERSION_T1020_1 = 102001
const XTENSA_HWCIDSCHEME_T1020_1 = 10
const XTENSA_HWCIDVERS_T1020_1 = 3
const XTENSA_HWVERSION_T1020_2 = 102002
const XTENSA_HWCIDSCHEME_T1020_2 = 10
const XTENSA_HWCIDVERS_T1020_2 = 4
const XTENSA_HWVERSION_T1020_2B = 102002
const XTENSA_HWCIDSCHEME_T1020_2B = 10
const XTENSA_HWCIDVERS_T1020_2B = 5
const XTENSA_HWVERSION_T1020_3 = 102003
const XTENSA_HWCIDSCHEME_T1020_3 = 10
const XTENSA_HWCIDVERS_T1020_3 = 6
const XTENSA_HWVERSION_T1020_4 = 102004
const XTENSA_HWCIDSCHEME_T1020_4 = 10
const XTENSA_HWCIDVERS_T1020_4 = 7
const XTENSA_HWVERSION_T1030_0 = 103000
const XTENSA_HWCIDSCHEME_T1030_0 = 10
const XTENSA_HWCIDVERS_T1030_0 = 9
const XTENSA_HWVERSION_T1030_1 = 103001
const XTENSA_HWCIDSCHEME_T1030_1 = 10
const XTENSA_HWCIDVERS_T1030_1 = 10
const XTENSA_HWVERSION_T1030_2 = 103002
const XTENSA_HWCIDSCHEME_T1030_2 = 10
const XTENSA_HWCIDVERS_T1030_2 = 11
const XTENSA_HWVERSION_T1030_3 = 103003
const XTENSA_HWCIDSCHEME_T1030_3 = 10
const XTENSA_HWCIDVERS_T1030_3 = 12
const XTENSA_HWVERSION_T1040_0 = 104000
const XTENSA_HWCIDSCHEME_T1040_0 = 10
const XTENSA_HWCIDVERS_T1040_0 = 15
const XTENSA_HWVERSION_T1040_1 = 104001
const XTENSA_HWCIDSCHEME_T1040_1 = 1
const XTENSA_HWCIDVERS_T1040_1 = 32
const XTENSA_HWVERSION_T1040_1P = 104001
const XTENSA_HWCIDSCHEME_T1040_1P = 10
const XTENSA_HWCIDVERS_T1040_1P = 16
const XTENSA_HWVERSION_T1040_2 = 104002
const XTENSA_HWCIDSCHEME_T1040_2 = 1
const XTENSA_HWCIDVERS_T1040_2 = 33
const XTENSA_HWVERSION_T1040_3 = 104003
const XTENSA_HWCIDSCHEME_T1040_3 = 1
const XTENSA_HWCIDVERS_T1040_3 = 34
const XTENSA_HWVERSION_T1050_0 = 105000
const XTENSA_HWCIDSCHEME_T1050_0 = 1100
const XTENSA_HWCIDVERS_T1050_0 = 1
const XTENSA_HWVERSION_T1050_1 = 105001
const XTENSA_HWCIDSCHEME_T1050_1 = 1100
const XTENSA_HWCIDVERS_T1050_1 = 2
const XTENSA_HWVERSION_T1050_2 = 105002
const XTENSA_HWCIDSCHEME_T1050_2 = 1100
const XTENSA_HWCIDVERS_T1050_2 = 4
const XTENSA_HWVERSION_T1050_3 = 105003
const XTENSA_HWCIDSCHEME_T1050_3 = 1100
const XTENSA_HWCIDVERS_T1050_3 = 6
const XTENSA_HWVERSION_T1050_4 = 105004
const XTENSA_HWCIDSCHEME_T1050_4 = 1100
const XTENSA_HWCIDVERS_T1050_4 = 7
const XTENSA_HWVERSION_T1050_5 = 105005
const XTENSA_HWCIDSCHEME_T1050_5 = 1100
const XTENSA_HWCIDVERS_T1050_5 = 8
const XTENSA_HWVERSION_RA_2004_1 = 210000
const XTENSA_HWCIDSCHEME_RA_2004_1 = 1100
const XTENSA_HWCIDVERS_RA_2004_1 = 3
const XTENSA_HWVERSION_RA_2005_1 = 210001
const XTENSA_HWCIDSCHEME_RA_2005_1 = 1100
const XTENSA_HWCIDVERS_RA_2005_1 = 20
const XTENSA_HWVERSION_RA_2005_2 = 210002
const XTENSA_HWCIDSCHEME_RA_2005_2 = 1100
const XTENSA_HWCIDVERS_RA_2005_2 = 21
const XTENSA_HWVERSION_RA_2005_3 = 210003
const XTENSA_HWCIDSCHEME_RA_2005_3 = 1100
const XTENSA_HWCIDVERS_RA_2005_3 = 22
const XTENSA_HWVERSION_RA_2006_4 = 210004
const XTENSA_HWCIDSCHEME_RA_2006_4 = 1100
const XTENSA_HWCIDVERS_RA_2006_4 = 23
const XTENSA_HWVERSION_RA_2006_5 = 210005
const XTENSA_HWCIDSCHEME_RA_2006_5 = 1100
const XTENSA_HWCIDVERS_RA_2006_5 = 24
const XTENSA_HWVERSION_RA_2006_6 = 210006
const XTENSA_HWCIDSCHEME_RA_2006_6 = 1100
const XTENSA_HWCIDVERS_RA_2006_6 = 25
const XTENSA_HWVERSION_RA_2007_7 = 210007
const XTENSA_HWCIDSCHEME_RA_2007_7 = 1100
const XTENSA_HWCIDVERS_RA_2007_7 = 26
const XTENSA_HWVERSION_RA_2008_8 = 210008
const XTENSA_HWCIDSCHEME_RA_2008_8 = 1100
const XTENSA_HWCIDVERS_RA_2008_8 = 27
const XTENSA_HWVERSION_RB_2006_0 = 220000
const XTENSA_HWCIDSCHEME_RB_2006_0 = 1100
const XTENSA_HWCIDVERS_RB_2006_0 = 48
const XTENSA_HWVERSION_RB_2007_1 = 220001
const XTENSA_HWCIDSCHEME_RB_2007_1 = 1100
const XTENSA_HWCIDVERS_RB_2007_1 = 49
const XTENSA_HWVERSION_RB_2007_2 = 221000
const XTENSA_HWCIDSCHEME_RB_2007_2 = 1100
const XTENSA_HWCIDVERS_RB_2007_2 = 52
const XTENSA_HWVERSION_RB_2008_3 = 221001
const XTENSA_HWCIDSCHEME_RB_2008_3 = 1100
const XTENSA_HWCIDVERS_RB_2008_3 = 53
const XTENSA_HWVERSION_RB_2008_4 = 221002
const XTENSA_HWCIDSCHEME_RB_2008_4 = 1100
const XTENSA_HWCIDVERS_RB_2008_4 = 54
const XTENSA_HWVERSION_RB_2009_5 = 221003
const XTENSA_HWCIDSCHEME_RB_2009_5 = 1100
const XTENSA_HWCIDVERS_RB_2009_5 = 55
const XTENSA_HWVERSION_RB_2007_2_MP = 221100
const XTENSA_HWCIDSCHEME_RB_2007_2_MP = 1100
const XTENSA_HWCIDVERS_RB_2007_2_MP = 64
const XTENSA_HWVERSION_RC_2009_0 = 230000
const XTENSA_HWCIDSCHEME_RC_2009_0 = 1100
const XTENSA_HWCIDVERS_RC_2009_0 = 65
const XTENSA_HWVERSION_RC_2010_1 = 230001
const XTENSA_HWCIDSCHEME_RC_2010_1 = 1100
const XTENSA_HWCIDVERS_RC_2010_1 = 66
const XTENSA_HWVERSION_RC_2010_2 = 230002
const XTENSA_HWCIDSCHEME_RC_2010_2 = 1100
const XTENSA_HWCIDVERS_RC_2010_2 = 67
const XTENSA_HWVERSION_RC_2011_3 = 230003
const XTENSA_HWCIDSCHEME_RC_2011_3 = 1100
const XTENSA_HWCIDVERS_RC_2011_3 = 68
const XTENSA_HWVERSION_RD_2010_0 = 240000
const XTENSA_HWCIDSCHEME_RD_2010_0 = 1100
const XTENSA_HWCIDVERS_RD_2010_0 = 80
const XTENSA_HWVERSION_RD_2011_1 = 240001
const XTENSA_HWCIDSCHEME_RD_2011_1 = 1100
const XTENSA_HWCIDVERS_RD_2011_1 = 81
const XTENSA_HWVERSION_RD_2011_2 = 240002
const XTENSA_HWCIDSCHEME_RD_2011_2 = 1100
const XTENSA_HWCIDVERS_RD_2011_2 = 82
const XTENSA_HWVERSION_RD_2011_3 = 240003
const XTENSA_HWCIDSCHEME_RD_2011_3 = 1100
const XTENSA_HWCIDVERS_RD_2011_3 = 83
const XTENSA_HWVERSION_RD_2012_4 = 240004
const XTENSA_HWCIDSCHEME_RD_2012_4 = 1100
const XTENSA_HWCIDVERS_RD_2012_4 = 84
const XTENSA_HWVERSION_RD_2012_5 = 240005
const XTENSA_HWCIDSCHEME_RD_2012_5 = 1100
const XTENSA_HWCIDVERS_RD_2012_5 = 85
const XTENSA_HWVERSION_RE_2012_0 = 250000
const XTENSA_HWCIDSCHEME_RE_2012_0 = 1100
const XTENSA_HWCIDVERS_RE_2012_0 = 96
const XTENSA_HWVERSION_RE_2012_1 = 250001
const XTENSA_HWCIDSCHEME_RE_2012_1 = 1100
const XTENSA_HWCIDVERS_RE_2012_1 = 97
const XTENSA_HWVERSION_RE_2013_2 = 250002
const XTENSA_HWCIDSCHEME_RE_2013_2 = 1100
const XTENSA_HWCIDVERS_RE_2013_2 = 98
const XTENSA_HWVERSION_RE_2013_3 = 250003
const XTENSA_HWCIDSCHEME_RE_2013_3 = 1100
const XTENSA_HWCIDVERS_RE_2013_3 = 99
const XTENSA_HWVERSION_RE_2013_4 = 250004
const XTENSA_HWCIDSCHEME_RE_2013_4 = 1100
const XTENSA_HWCIDVERS_RE_2013_4 = 100
const XTENSA_HWVERSION_RE_2014_5 = 250005
const XTENSA_HWCIDSCHEME_RE_2014_5 = 1100
const XTENSA_HWCIDVERS_RE_2014_5 = 101
const XTENSA_HWVERSION_RE_2015_6 = 250006
const XTENSA_HWCIDSCHEME_RE_2015_6 = 1100
const XTENSA_HWCIDVERS_RE_2015_6 = 102
const XTENSA_HWVERSION_RF_2014_0 = 260000
const XTENSA_HWCIDSCHEME_RF_2014_0 = 1100
const XTENSA_HWCIDVERS_RF_2014_0 = 112
const XTENSA_HWVERSION_RF_2014_1 = 260001
const XTENSA_HWCIDSCHEME_RF_2014_1 = 1100
const XTENSA_HWCIDVERS_RF_2014_1 = 113
const XTENSA_HWVERSION_RF_2015_2 = 260002
const XTENSA_HWCIDSCHEME_RF_2015_2 = 1100
const XTENSA_HWCIDVERS_RF_2015_2 = 114
const XTENSA_HWVERSION_RF_2015_3 = 260003
const XTENSA_HWCIDSCHEME_RF_2015_3 = 1100
const XTENSA_HWCIDVERS_RF_2015_3 = 115
const XTENSA_HWVERSION_RF_2016_4 = 260004
const XTENSA_HWCIDSCHEME_RF_2016_4 = 1100
const XTENSA_HWCIDVERS_RF_2016_4 = 116
const XTENSA_HWVERSION_RG_2015_0 = 270000
const XTENSA_HWCIDSCHEME_RG_2015_0 = 1100
const XTENSA_HWCIDVERS_RG_2015_0 = 128
const XTENSA_HWVERSION_RG_2015_1 = 270001
const XTENSA_HWCIDSCHEME_RG_2015_1 = 1100
const XTENSA_HWCIDVERS_RG_2015_1 = 129
const XTENSA_HWVERSION_RG_2015_2 = 270002
const XTENSA_HWCIDSCHEME_RG_2015_2 = 1100
const XTENSA_HWCIDVERS_RG_2015_2 = 130
const XTENSA_HWVERSION_RG_2016_3 = 270003
const XTENSA_HWCIDSCHEME_RG_2016_3 = 1100
const XTENSA_HWCIDVERS_RG_2016_3 = 131
const XTENSA_HWVERSION_RG_2016_4 = 270004
const XTENSA_HWCIDSCHEME_RG_2016_4 = 1100
const XTENSA_HWCIDVERS_RG_2016_4 = 132
const XTENSA_HWVERSION_RG_2017_5 = 270005
const XTENSA_HWCIDSCHEME_RG_2017_5 = 1100
const XTENSA_HWCIDVERS_RG_2017_5 = 133
const XTENSA_HWVERSION_RG_2017_6 = 270006
const XTENSA_HWCIDSCHEME_RG_2017_6 = 1100
const XTENSA_HWCIDVERS_RG_2017_6 = 134
const XTENSA_HWVERSION_RG_2017_7 = 270007
const XTENSA_HWCIDSCHEME_RG_2017_7 = 1100
const XTENSA_HWCIDVERS_RG_2017_7 = 135
const XTENSA_HWVERSION_RG_2017_8 = 270008
const XTENSA_HWCIDSCHEME_RG_2017_8 = 1100
const XTENSA_HWCIDVERS_RG_2017_8 = 136
const XTENSA_HWVERSION_RG_2018_9 = 270009
const XTENSA_HWCIDSCHEME_RG_2018_9 = 1100
const XTENSA_HWCIDVERS_RG_2018_9 = 137
const XTENSA_HWVERSION_RH_2016_0 = 280000
const XTENSA_HWCIDSCHEME_RH_2016_0 = 1100
const XTENSA_HWCIDVERS_RH_2016_0 = 144
const XTENSA_SWVERSION_T1020_0 = 102000
const XTENSA_SWVERSION_T1020_1 = 102001
const XTENSA_SWVERSION_T1020_2 = 102002
const XTENSA_SWVERSION_T1020_2B = 102002
const XTENSA_SWVERSION_T1020_3 = 102003
const XTENSA_SWVERSION_T1020_4 = 102004
const XTENSA_SWVERSION_T1030_0 = 103000
const XTENSA_SWVERSION_T1030_1 = 103001
const XTENSA_SWVERSION_T1030_2 = 103002
const XTENSA_SWVERSION_T1030_3 = 103003
const XTENSA_SWVERSION_T1040_0 = 104000
const XTENSA_SWVERSION_T1040_1 = 104001
const XTENSA_SWVERSION_T1040_1P = 104001
const XTENSA_SWVERSION_T1040_2 = 104002
const XTENSA_SWVERSION_T1040_3 = 104003
const XTENSA_SWVERSION_T1050_0 = 105000
const XTENSA_SWVERSION_T1050_1 = 105001
const XTENSA_SWVERSION_T1050_2 = 105002
const XTENSA_SWVERSION_T1050_3 = 105003
const XTENSA_SWVERSION_T1050_4 = 105004
const XTENSA_SWVERSION_T1050_5 = 105005
const XTENSA_SWVERSION_RA_2004_1 = 600000
const XTENSA_SWVERSION_RA_2005_1 = 600001
const XTENSA_SWVERSION_RA_2005_2 = 600002
const XTENSA_SWVERSION_RA_2005_3 = 600003
const XTENSA_SWVERSION_RA_2006_4 = 600004
const XTENSA_SWVERSION_RA_2006_5 = 600005
const XTENSA_SWVERSION_RA_2006_6 = 600006
const XTENSA_SWVERSION_RA_2007_7 = 600007
const XTENSA_SWVERSION_RA_2008_8 = 600008
const XTENSA_SWVERSION_RB_2006_0 = 700000
const XTENSA_SWVERSION_RB_2007_1 = 700001
const XTENSA_SWVERSION_RB_2007_2 = 701000
const XTENSA_SWVERSION_RB_2008_3 = 701001
const XTENSA_SWVERSION_RB_2008_4 = 701002
const XTENSA_SWVERSION_RB_2009_5 = 701003
const XTENSA_SWVERSION_RB_2007_2_MP = 701100
const XTENSA_SWVERSION_RC_2009_0 = 800000
const XTENSA_SWVERSION_RC_2010_1 = 800001
const XTENSA_SWVERSION_RC_2010_2 = 800002
const XTENSA_SWVERSION_RC_2011_3 = 800003
const XTENSA_SWVERSION_RD_2010_0 = 900000
const XTENSA_SWVERSION_RD_2011_1 = 900001
const XTENSA_SWVERSION_RD_2011_2 = 900002
const XTENSA_SWVERSION_RD_2011_3 = 900003
const XTENSA_SWVERSION_RD_2012_4 = 900004
const XTENSA_SWVERSION_RD_2012_5 = 900005
const XTENSA_SWVERSION_RE_2012_0 = 1000000
const XTENSA_SWVERSION_RE_2012_1 = 1000001
const XTENSA_SWVERSION_RE_2013_2 = 1000002
const XTENSA_SWVERSION_RE_2013_3 = 1000003
const XTENSA_SWVERSION_RE_2013_4 = 1000004
const XTENSA_SWVERSION_RE_2014_5 = 1000005
const XTENSA_SWVERSION_RE_2015_6 = 1000006
const XTENSA_SWVERSION_RF_2014_0 = 1100000
const XTENSA_SWVERSION_RF_2014_1 = 1100001
const XTENSA_SWVERSION_RF_2015_2 = 1100002
const XTENSA_SWVERSION_RF_2015_3 = 1100003
const XTENSA_SWVERSION_RF_2016_4 = 1100004
const XTENSA_SWVERSION_RG_2015_0 = 1200000
const XTENSA_SWVERSION_RG_2015_1 = 1200001
const XTENSA_SWVERSION_RG_2015_2 = 1200002
const XTENSA_SWVERSION_RG_2016_3 = 1200003
const XTENSA_SWVERSION_RG_2016_4 = 1200004
const XTENSA_SWVERSION_RG_2017_5 = 1200005
const XTENSA_SWVERSION_RG_2017_6 = 1200006
const XTENSA_SWVERSION_RG_2017_7 = 1200007
const XTENSA_SWVERSION_RG_2017_8 = 1200008
const XTENSA_SWVERSION_RG_2018_9 = 1200009
const XTENSA_SWVERSION_RH_2016_0 = 1300000
const XTENSA_RELEASE_NAME = "RG-2018.9"
const XTENSA_RELEASE_CANONICAL_NAME = "RG-2018.9"
const XTENSA_SWVERSION_NAME = "12.0.9"
const XTENSA_SWVERSION_NAME_IDENT = 12_0_9
const XTENSA_SWVERSION_CANONICAL_NAME = "12.0.9"
const XTENSA_SWVERSION_MAJORMID_NAME = "12.0"
const XTENSA_SWVERSION_MAJOR_NAME = "12"
const XTENSA_SWVERSION_LICENSE_NAME = "12.0"
const XCHAL_HAVE_BE = 0
const XCHAL_HAVE_WINDOWED = 1
const XCHAL_NUM_AREGS = 64
const XCHAL_NUM_AREGS_LOG2 = 6
const XCHAL_MAX_INSTRUCTION_SIZE = 3
const XCHAL_HAVE_DEBUG = 1
const XCHAL_HAVE_DENSITY = 1
const XCHAL_HAVE_LOOPS = 0
const XCHAL_LOOP_BUFFER_SIZE = 0
const XCHAL_HAVE_NSA = 1
const XCHAL_HAVE_MINMAX = 1
const XCHAL_HAVE_SEXT = 1
const XCHAL_HAVE_DEPBITS = 0
const XCHAL_HAVE_CLAMPS = 1
const XCHAL_HAVE_MUL16 = 1
const XCHAL_HAVE_MUL32 = 1
const XCHAL_HAVE_MUL32_HIGH = 1
const XCHAL_HAVE_DIV32 = 1
const XCHAL_HAVE_L32R = 1
const XCHAL_HAVE_ABSOLUTE_LITERALS = 0
const XCHAL_HAVE_CONST16 = 0
const XCHAL_HAVE_ADDX = 1
const XCHAL_HAVE_EXCLUSIVE = 0
const XCHAL_HAVE_WIDE_BRANCHES = 0
const XCHAL_HAVE_PREDICTED_BRANCHES = 0
const XCHAL_HAVE_CALL4AND12 = 1
const XCHAL_HAVE_ABS = 1
const XCHAL_HAVE_RELEASE_SYNC = 1
const XCHAL_HAVE_S32C1I = 0
const XCHAL_HAVE_SPECULATION = 0
const XCHAL_HAVE_FULL_RESET = 1
const XCHAL_NUM_CONTEXTS = 1
const XCHAL_NUM_MISC_REGS = 4
const XCHAL_HAVE_TAP_MASTER = 0
const XCHAL_HAVE_PRID = 1
const XCHAL_HAVE_EXTERN_REGS = 1
const XCHAL_HAVE_MX = 0
const XCHAL_HAVE_MP_INTERRUPTS = 0
const XCHAL_HAVE_MP_RUNSTALL = 0
const XCHAL_HAVE_PSO = 0
const XCHAL_HAVE_PSO_CDM = 0
const XCHAL_HAVE_PSO_FULL_RETENTION = 0
const XCHAL_HAVE_THREADPTR = 1
const XCHAL_HAVE_BOOLEANS = 0
const XCHAL_HAVE_CP = 1
const XCHAL_CP_MAXCFG = 8
const XCHAL_HAVE_MAC16 = 0
const XCHAL_HAVE_FUSION = 0
const XCHAL_HAVE_FUSION_FP = 0
const XCHAL_HAVE_FUSION_LOW_POWER = 0
const XCHAL_HAVE_FUSION_AES = 0
const XCHAL_HAVE_FUSION_CONVENC = 0
const XCHAL_HAVE_FUSION_LFSR_CRC = 0
const XCHAL_HAVE_FUSION_BITOPS = 0
const XCHAL_HAVE_FUSION_AVS = 0
const XCHAL_HAVE_FUSION_16BIT_BASEBAND = 0
const XCHAL_HAVE_FUSION_VITERBI = 0
const XCHAL_HAVE_FUSION_SOFTDEMAP = 0
const XCHAL_HAVE_HIFIPRO = 0
const XCHAL_HAVE_HIFI4 = 0
const XCHAL_HAVE_HIFI4_VFPU = 0
const XCHAL_HAVE_HIFI3 = 0
const XCHAL_HAVE_HIFI3_VFPU = 0
const XCHAL_HAVE_HIFI3Z = 0
const XCHAL_HAVE_HIFI3Z_VFPU = 0
const XCHAL_HAVE_HIFI2 = 0
const XCHAL_HAVE_HIFI2EP = 0
const XCHAL_HAVE_HIFI_MINI = 0
const XCHAL_HAVE_VECTORFPU2005 = 0
const XCHAL_HAVE_USER_DPFPU = 0
const XCHAL_HAVE_USER_SPFPU = 0
const XCHAL_HAVE_FP = 0
const XCHAL_HAVE_FP_DIV = 0
const XCHAL_HAVE_FP_RECIP = 0
const XCHAL_HAVE_FP_SQRT = 0
const XCHAL_HAVE_FP_RSQRT = 0
const XCHAL_HAVE_DFP = 0
const XCHAL_HAVE_DFP_DIV = 0
const XCHAL_HAVE_DFP_RECIP = 0
const XCHAL_HAVE_DFP_SQRT = 0
const XCHAL_HAVE_DFP_RSQRT = 0
const XCHAL_HAVE_DFP_ACCEL = 0
const XCHAL_HAVE_DFPU_SINGLE_ONLY = 0
const XCHAL_HAVE_DFPU_SINGLE_DOUBLE = 0
const XCHAL_HAVE_VECTRA1 = 0
const XCHAL_HAVE_VECTRALX = 0
const XCHAL_HAVE_FUSIONG = 0
const XCHAL_HAVE_FUSIONG3 = 0
const XCHAL_HAVE_FUSIONG6 = 0
const XCHAL_HAVE_FUSIONG_SP_VFPU = 0
const XCHAL_HAVE_FUSIONG_DP_VFPU = 0
const XCHAL_FUSIONG_SIMD32 = 0
const XCHAL_HAVE_PDX = 0
const XCHAL_PDX_SIMD32 = 0
const XCHAL_HAVE_PDX4 = 0
const XCHAL_HAVE_PDX8 = 0
const XCHAL_HAVE_PDX16 = 0
const XCHAL_HAVE_CONNXD2 = 0
const XCHAL_HAVE_CONNXD2_DUALLSFLIX = 0
const XCHAL_HAVE_BBE16 = 0
const XCHAL_HAVE_BBE16_RSQRT = 0
const XCHAL_HAVE_BBE16_VECDIV = 0
const XCHAL_HAVE_BBE16_DESPREAD = 0
const XCHAL_HAVE_BBENEP = 0
const XCHAL_HAVE_BBENEP_SP_VFPU = 0
const XCHAL_HAVE_BSP3 = 0
const XCHAL_HAVE_BSP3_TRANSPOSE = 0
const XCHAL_HAVE_SSP16 = 0
const XCHAL_HAVE_SSP16_VITERBI = 0
const XCHAL_HAVE_TURBO16 = 0
const XCHAL_HAVE_BBP16 = 0
const XCHAL_HAVE_FLIX3 = 0
const XCHAL_HAVE_GRIVPEP = 0
const XCHAL_HAVE_GRIVPEP_HISTOGRAM = 0
const XCHAL_HAVE_VISION = 0
const XCHAL_VISION_SIMD16 = 0
const XCHAL_VISION_TYPE = 0
const XCHAL_VISION_QUAD_MAC_TYPE = 0
const XCHAL_HAVE_VISION_HISTOGRAM = 0
const XCHAL_HAVE_VISION_SP_VFPU = 0
const XCHAL_HAVE_VISION_HP_VFPU = 0
const XCHAL_HAVE_VISIONC = 0
const XCHAL_NUM_LOADSTORE_UNITS = 1
const XCHAL_NUM_WRITEBUFFER_ENTRIES = 4
const XCHAL_INST_FETCH_WIDTH = 4
const XCHAL_DATA_WIDTH = 4
const XCHAL_DATA_PIPE_DELAY = 2
const XCHAL_CLOCK_GATING_GLOBAL = 0
const XCHAL_CLOCK_GATING_FUNCUNIT = 0
const XCHAL_UNALIGNED_LOAD_EXCEPTION = 0
const XCHAL_UNALIGNED_STORE_EXCEPTION = 0
const XCHAL_UNALIGNED_LOAD_HW = 1
const XCHAL_UNALIGNED_STORE_HW = 1
const XCHAL_SW_VERSION = 1200008
const XCHAL_CORE_ID = "test_0731_1_TIE_GPIO_f"
const XCHAL_BUILD_UNIQUE_ID = 0x00075F76
const XCHAL_HW_CONFIGID0 = 0xC2ECFAFE
const XCHAL_HW_CONFIGID1 = 0x22075F76
const XCHAL_HW_VERSION_NAME = "LX7.0.8"
const XCHAL_HW_VERSION_MAJOR = 2700
const XCHAL_HW_VERSION_MINOR = 8
const XCHAL_HW_VERSION = 270008
const XCHAL_HW_REL_LX7 = 1
const XCHAL_HW_REL_LX7_0 = 1
const XCHAL_HW_REL_LX7_0_8 = 1
const XCHAL_HW_CONFIGID_RELIABLE = 1
const XCHAL_HW_MIN_VERSION_MAJOR = 2700
const XCHAL_HW_MIN_VERSION_MINOR = 8
const XCHAL_HW_MIN_VERSION = 270008
const XCHAL_HW_MAX_VERSION_MAJOR = 2700
const XCHAL_HW_MAX_VERSION_MINOR = 8
const XCHAL_HW_MAX_VERSION = 270008
const XCHAL_ICACHE_LINESIZE = 4
const XCHAL_DCACHE_LINESIZE = 4
const XCHAL_ICACHE_LINEWIDTH = 2
const XCHAL_DCACHE_LINEWIDTH = 2
const XCHAL_ICACHE_SIZE = 0
const XCHAL_DCACHE_SIZE = 0
const XCHAL_DCACHE_IS_WRITEBACK = 0
const XCHAL_DCACHE_IS_COHERENT = 0
const XCHAL_HAVE_PREFETCH = 0
const XCHAL_HAVE_PREFETCH_L1 = 0
const XCHAL_PREFETCH_CASTOUT_LINES = 0
const XCHAL_PREFETCH_ENTRIES = 0
const XCHAL_PREFETCH_BLOCK_ENTRIES = 0
const XCHAL_HAVE_CACHE_BLOCKOPS = 0
const XCHAL_HAVE_ICACHE_TEST = 0
const XCHAL_HAVE_DCACHE_TEST = 0
const XCHAL_HAVE_ICACHE_DYN_WAYS = 0
const XCHAL_HAVE_DCACHE_DYN_WAYS = 0
const XCHAL_HAVE_PIF = 1
const XCHAL_HAVE_AXI = 0
const XCHAL_HAVE_AXI_ECC = 0
const XCHAL_HAVE_ACELITE = 0
const XCHAL_HAVE_PIF_WR_RESP = 0
const XCHAL_HAVE_PIF_REQ_ATTR = 1
const XCHAL_ICACHE_SETWIDTH = 0
const XCHAL_DCACHE_SETWIDTH = 0
const XCHAL_ICACHE_WAYS = 1
const XCHAL_DCACHE_WAYS = 1
const XCHAL_ICACHE_LINE_LOCKABLE = 0
const XCHAL_DCACHE_LINE_LOCKABLE = 0
const XCHAL_ICACHE_ECC_PARITY = 0
const XCHAL_DCACHE_ECC_PARITY = 0
const XCHAL_ICACHE_ACCESS_SIZE = 1
const XCHAL_DCACHE_ACCESS_SIZE = 1
const XCHAL_DCACHE_BANKS = 0
const XCHAL_CA_BITS = 4
const XCHAL_NUM_INSTROM = 1
const XCHAL_NUM_INSTRAM = 2
const XCHAL_NUM_DATAROM = 1
const XCHAL_NUM_DATARAM = 2
const XCHAL_NUM_URAM = 0
const XCHAL_NUM_XLMI = 1
const XCHAL_INSTROM0_VADDR = 0x40800000
const XCHAL_INSTROM0_PADDR = 0x40800000
const XCHAL_INSTROM0_SIZE = 4194304
const XCHAL_INSTROM0_ECC_PARITY = 0
const XCHAL_INSTRAM0_VADDR = 0x40000000
const XCHAL_INSTRAM0_PADDR = 0x40000000
const XCHAL_INSTRAM0_SIZE = 4194304
const XCHAL_INSTRAM0_ECC_PARITY = 0
const XCHAL_HAVE_INSTRAM0 = 1
const XCHAL_INSTRAM0_HAVE_IDMA = 0
const XCHAL_INSTRAM1_VADDR = 0x40400000
const XCHAL_INSTRAM1_PADDR = 0x40400000
const XCHAL_INSTRAM1_SIZE = 4194304
const XCHAL_INSTRAM1_ECC_PARITY = 0
const XCHAL_HAVE_INSTRAM1 = 1
const XCHAL_INSTRAM1_HAVE_IDMA = 0
const XCHAL_DATAROM0_VADDR = 0x3F400000
const XCHAL_DATAROM0_PADDR = 0x3F400000
const XCHAL_DATAROM0_SIZE = 4194304
const XCHAL_DATAROM0_ECC_PARITY = 0
const XCHAL_DATAROM0_BANKS = 1
const XCHAL_DATARAM0_VADDR = 0x3FF80000
const XCHAL_DATARAM0_PADDR = 0x3FF80000
const XCHAL_DATARAM0_SIZE = 524288
const XCHAL_DATARAM0_ECC_PARITY = 0
const XCHAL_DATARAM0_BANKS = 1
const XCHAL_HAVE_DATARAM0 = 1
const XCHAL_DATARAM0_HAVE_IDMA = 0
const XCHAL_DATARAM1_VADDR = 0x3F800000
const XCHAL_DATARAM1_PADDR = 0x3F800000
const XCHAL_DATARAM1_SIZE = 4194304
const XCHAL_DATARAM1_ECC_PARITY = 0
const XCHAL_DATARAM1_BANKS = 1
const XCHAL_HAVE_DATARAM1 = 1
const XCHAL_DATARAM1_HAVE_IDMA = 0
const XCHAL_XLMI0_VADDR = 0x3FE00000
const XCHAL_XLMI0_PADDR = 0x3FE00000
const XCHAL_XLMI0_SIZE = 1048576
const XCHAL_XLMI0_ECC_PARITY = 0
const XCHAL_HAVE_IDMA = 0
const XCHAL_HAVE_IDMA_TRANSPOSE = 0
const XCHAL_HAVE_IMEM_LOADSTORE = 1
const XCHAL_HAVE_INTERRUPTS = 1
const XCHAL_HAVE_HIGHPRI_INTERRUPTS = 1
const XCHAL_HAVE_NMI = 1
const XCHAL_HAVE_CCOUNT = 1
const XCHAL_NUM_TIMERS = 3
const XCHAL_NUM_INTERRUPTS = 32
const XCHAL_NUM_INTERRUPTS_LOG2 = 5
const XCHAL_NUM_EXTINTERRUPTS = 26
const XCHAL_NUM_INTLEVELS = 6
const XCHAL_EXCM_LEVEL = 3
const XCHAL_INTLEVEL1_MASK = 0x000637FF
const XCHAL_INTLEVEL2_MASK = 0x00380000
const XCHAL_INTLEVEL3_MASK = 0x28C08800
const XCHAL_INTLEVEL4_MASK = 0x53000000
const XCHAL_INTLEVEL5_MASK = 0x84010000
const XCHAL_INTLEVEL6_MASK = 0x00000000
const XCHAL_INTLEVEL7_MASK = 0x00004000
const XCHAL_INTLEVEL1_ANDBELOW_MASK = 0x000637FF
const XCHAL_INTLEVEL2_ANDBELOW_MASK = 0x003E37FF
const XCHAL_INTLEVEL3_ANDBELOW_MASK = 0x28FEBFFF
const XCHAL_INTLEVEL4_ANDBELOW_MASK = 0x7BFEBFFF
const XCHAL_INTLEVEL5_ANDBELOW_MASK = 0xFFFFBFFF
const XCHAL_INTLEVEL6_ANDBELOW_MASK = 0xFFFFBFFF
const XCHAL_INTLEVEL7_ANDBELOW_MASK = 0xFFFFFFFF
const XCHAL_INT0_LEVEL = 1
const XCHAL_INT1_LEVEL = 1
const XCHAL_INT2_LEVEL = 1
const XCHAL_INT3_LEVEL = 1
const XCHAL_INT4_LEVEL = 1
const XCHAL_INT5_LEVEL = 1
const XCHAL_INT6_LEVEL = 1
const XCHAL_INT7_LEVEL = 1
const XCHAL_INT8_LEVEL = 1
const XCHAL_INT9_LEVEL = 1
const XCHAL_INT10_LEVEL = 1
const XCHAL_INT11_LEVEL = 3
const XCHAL_INT12_LEVEL = 1
const XCHAL_INT13_LEVEL = 1
const XCHAL_INT14_LEVEL = 7
const XCHAL_INT15_LEVEL = 3
const XCHAL_INT16_LEVEL = 5
const XCHAL_INT17_LEVEL = 1
const XCHAL_INT18_LEVEL = 1
const XCHAL_INT19_LEVEL = 2
const XCHAL_INT20_LEVEL = 2
const XCHAL_INT21_LEVEL = 2
const XCHAL_INT22_LEVEL = 3
const XCHAL_INT23_LEVEL = 3
const XCHAL_INT24_LEVEL = 4
const XCHAL_INT25_LEVEL = 4
const XCHAL_INT26_LEVEL = 5
const XCHAL_INT27_LEVEL = 3
const XCHAL_INT28_LEVEL = 4
const XCHAL_INT29_LEVEL = 3
const XCHAL_INT30_LEVEL = 4
const XCHAL_INT31_LEVEL = 5
const XCHAL_DEBUGLEVEL = 6
const XCHAL_HAVE_DEBUG_EXTERN_INT = 1
const XCHAL_NMILEVEL = 7
const XCHAL_INTTYPE_MASK_UNCONFIGURED = 0x00000000
const XCHAL_INTTYPE_MASK_SOFTWARE = 0x20000080
const XCHAL_INTTYPE_MASK_EXTERN_EDGE = 0x50400400
const XCHAL_INTTYPE_MASK_EXTERN_LEVEL = 0x8FBE333F
const XCHAL_INTTYPE_MASK_TIMER = 0x00018040
const XCHAL_INTTYPE_MASK_NMI = 0x00004000
const XCHAL_INTTYPE_MASK_WRITE_ERROR = 0x00000000
const XCHAL_INTTYPE_MASK_PROFILING = 0x00000800
const XCHAL_INTTYPE_MASK_IDMA_DONE = 0x00000000
const XCHAL_INTTYPE_MASK_IDMA_ERR = 0x00000000
const XCHAL_INTTYPE_MASK_GS_ERR = 0x00000000
const XCHAL_TIMER0_INTERRUPT = 6
const XCHAL_TIMER1_INTERRUPT = 15
const XCHAL_TIMER2_INTERRUPT = 16
const XCHAL_NMI_INTERRUPT = 14
const XCHAL_PROFILING_INTERRUPT = 11
const XCHAL_INTLEVEL7_NUM = 14
const XCHAL_EXTINT0_NUM = 0
const XCHAL_EXTINT1_NUM = 1
const XCHAL_EXTINT2_NUM = 2
const XCHAL_EXTINT3_NUM = 3
const XCHAL_EXTINT4_NUM = 4
const XCHAL_EXTINT5_NUM = 5
const XCHAL_EXTINT6_NUM = 8
const XCHAL_EXTINT7_NUM = 9
const XCHAL_EXTINT8_NUM = 10
const XCHAL_EXTINT9_NUM = 12
const XCHAL_EXTINT10_NUM = 13
const XCHAL_EXTINT11_NUM = 14
const XCHAL_EXTINT12_NUM = 17
const XCHAL_EXTINT13_NUM = 18
const XCHAL_EXTINT14_NUM = 19
const XCHAL_EXTINT15_NUM = 20
const XCHAL_EXTINT16_NUM = 21
const XCHAL_EXTINT17_NUM = 22
const XCHAL_EXTINT18_NUM = 23
const XCHAL_EXTINT19_NUM = 24
const XCHAL_EXTINT20_NUM = 25
const XCHAL_EXTINT21_NUM = 26
const XCHAL_EXTINT22_NUM = 27
const XCHAL_EXTINT23_NUM = 28
const XCHAL_EXTINT24_NUM = 30
const XCHAL_EXTINT25_NUM = 31
const XCHAL_INT0_EXTNUM = 0
const XCHAL_INT1_EXTNUM = 1
const XCHAL_INT2_EXTNUM = 2
const XCHAL_INT3_EXTNUM = 3
const XCHAL_INT4_EXTNUM = 4
const XCHAL_INT5_EXTNUM = 5
const XCHAL_INT8_EXTNUM = 6
const XCHAL_INT9_EXTNUM = 7
const XCHAL_INT10_EXTNUM = 8
const XCHAL_INT12_EXTNUM = 9
const XCHAL_INT13_EXTNUM = 10
const XCHAL_INT14_EXTNUM = 11
const XCHAL_INT17_EXTNUM = 12
const XCHAL_INT18_EXTNUM = 13
const XCHAL_INT19_EXTNUM = 14
const XCHAL_INT20_EXTNUM = 15
const XCHAL_INT21_EXTNUM = 16
const XCHAL_INT22_EXTNUM = 17
const XCHAL_INT23_EXTNUM = 18
const XCHAL_INT24_EXTNUM = 19
const XCHAL_INT25_EXTNUM = 20
const XCHAL_INT26_EXTNUM = 21
const XCHAL_INT27_EXTNUM = 22
const XCHAL_INT28_EXTNUM = 23
const XCHAL_INT30_EXTNUM = 24
const XCHAL_INT31_EXTNUM = 25
const XCHAL_XEA_VERSION = 2
const XCHAL_HAVE_XEA1 = 0
const XCHAL_HAVE_XEA2 = 1
const XCHAL_HAVE_XEAX = 0
const XCHAL_HAVE_EXCEPTIONS = 1
const XCHAL_HAVE_HALT = 0
const XCHAL_HAVE_BOOTLOADER = 0
const XCHAL_HAVE_MEM_ECC_PARITY = 0
const XCHAL_HAVE_VECTOR_SELECT = 1
const XCHAL_HAVE_VECBASE = 1
const XCHAL_VECBASE_RESET_VADDR = 0x40000000
const XCHAL_VECBASE_RESET_PADDR = 0x40000000
const XCHAL_RESET_VECBASE_OVERLAP = 0
const XCHAL_RESET_VECTOR0_VADDR = 0x50000000
const XCHAL_RESET_VECTOR0_PADDR = 0x50000000
const XCHAL_RESET_VECTOR1_VADDR = 0x40000400
const XCHAL_RESET_VECTOR1_PADDR = 0x40000400
const XCHAL_RESET_VECTOR_VADDR = 0x40000400
const XCHAL_RESET_VECTOR_PADDR = 0x40000400
const XCHAL_USER_VECOFS = 0x00000340
const XCHAL_USER_VECTOR_VADDR = 0x40000340
const XCHAL_USER_VECTOR_PADDR = 0x40000340
const XCHAL_KERNEL_VECOFS = 0x00000300
const XCHAL_KERNEL_VECTOR_VADDR = 0x40000300
const XCHAL_KERNEL_VECTOR_PADDR = 0x40000300
const XCHAL_DOUBLEEXC_VECOFS = 0x000003C0
const XCHAL_DOUBLEEXC_VECTOR_VADDR = 0x400003C0
const XCHAL_DOUBLEEXC_VECTOR_PADDR = 0x400003C0
const XCHAL_WINDOW_OF4_VECOFS = 0x00000000
const XCHAL_WINDOW_UF4_VECOFS = 0x00000040
const XCHAL_WINDOW_OF8_VECOFS = 0x00000080
const XCHAL_WINDOW_UF8_VECOFS = 0x000000C0
const XCHAL_WINDOW_OF12_VECOFS = 0x00000100
const XCHAL_WINDOW_UF12_VECOFS = 0x00000140
const XCHAL_WINDOW_VECTORS_VADDR = 0x40000000
const XCHAL_WINDOW_VECTORS_PADDR = 0x40000000
const XCHAL_INTLEVEL2_VECOFS = 0x00000180
const XCHAL_INTLEVEL2_VECTOR_VADDR = 0x40000180
const XCHAL_INTLEVEL2_VECTOR_PADDR = 0x40000180
const XCHAL_INTLEVEL3_VECOFS = 0x000001C0
const XCHAL_INTLEVEL3_VECTOR_VADDR = 0x400001C0
const XCHAL_INTLEVEL3_VECTOR_PADDR = 0x400001C0
const XCHAL_INTLEVEL4_VECOFS = 0x00000200
const XCHAL_INTLEVEL4_VECTOR_VADDR = 0x40000200
const XCHAL_INTLEVEL4_VECTOR_PADDR = 0x40000200
const XCHAL_INTLEVEL5_VECOFS = 0x00000240
const XCHAL_INTLEVEL5_VECTOR_VADDR = 0x40000240
const XCHAL_INTLEVEL5_VECTOR_PADDR = 0x40000240
const XCHAL_INTLEVEL6_VECOFS = 0x00000280
const XCHAL_INTLEVEL6_VECTOR_VADDR = 0x40000280
const XCHAL_INTLEVEL6_VECTOR_PADDR = 0x40000280
const XCHAL_NMI_VECOFS = 0x000002C0
const XCHAL_NMI_VECTOR_VADDR = 0x400002C0
const XCHAL_NMI_VECTOR_PADDR = 0x400002C0
const XCHAL_HAVE_DEBUG_ERI = 1
const XCHAL_HAVE_DEBUG_APB = 0
const XCHAL_HAVE_DEBUG_JTAG = 1
const XCHAL_HAVE_OCD = 1
const XCHAL_NUM_IBREAK = 2
const XCHAL_NUM_DBREAK = 2
const XCHAL_HAVE_OCD_DIR_ARRAY = 0
const XCHAL_HAVE_OCD_LS32DDR = 1
const XCHAL_HAVE_TRAX = 1
const XCHAL_TRAX_MEM_SIZE = 16384
const XCHAL_TRAX_MEM_SHAREABLE = 1
const XCHAL_TRAX_ATB_WIDTH = 0
const XCHAL_TRAX_TIME_WIDTH = 0
const XCHAL_NUM_PERF_COUNTERS = 2
const XCHAL_HAVE_TLBS = 1
const XCHAL_HAVE_SPANNING_WAY = 1
const XCHAL_SPANNING_WAY = 0
const XCHAL_HAVE_IDENTITY_MAP = 1
const XCHAL_HAVE_CACHEATTR = 0
const XCHAL_HAVE_MIMIC_CACHEATTR = 1
const XCHAL_HAVE_XLT_CACHEATTR = 0
const XCHAL_HAVE_PTP_MMU = 0
const XCHAL_MMU_ASID_BITS = 0
const XCHAL_MMU_RINGS = 1
const XCHAL_MMU_RING_BITS = 0
const XCHAL_HAVE_MPU = 0
const XCHAL_MPU_ENTRIES = 0
const XCHAL_MPU_ALIGN_REQ = 1
const XCHAL_MPU_BACKGROUND_ENTRIES = 0
const XCHAL_MPU_BG_CACHEADRDIS = 0
const XCHAL_MPU_ALIGN_BITS = 0
const XCHAL_MPU_ALIGN = 0
const XCHAL_CA_BYPASS = 2
const XCHAL_CA_BYPASSBUF = 6
const XCHAL_CA_WRITETHRU = 1
const XCHAL_CA_WRITEBACK = 2
const XCHAL_HAVE_CA_WRITEBACK_NOALLOC = 0
const XCHAL_CA_WRITEBACK_NOALLOC = 2
const XCHAL_CA_BYPASS_RW = 0
const XCHAL_CA_WRITETHRU_RW = 0
const XCHAL_CA_WRITEBACK_RW = 0
const XCHAL_CA_WRITEBACK_NOALLOC_RW = 0
const XCHAL_CA_ILLEGAL = 15
const XCHAL_CA_ISOLATE = 0
const XCHAL_MMU_ASID_INVALID = 0
const XCHAL_MMU_ASID_KERNEL = 0
const XCHAL_MMU_SR_BITS = 0
const XCHAL_MMU_CA_BITS = 4
const XCHAL_MMU_MAX_PTE_PAGE_SIZE = 29
const XCHAL_MMU_MIN_PTE_PAGE_SIZE = 29
const XCHAL_ITLB_WAY_BITS = 0
const XCHAL_ITLB_WAYS = 1
const XCHAL_ITLB_ARF_WAYS = 0
const XCHAL_ITLB_SETS = 1
const XCHAL_ITLB_WAY0_SET = 0
const XCHAL_ITLB_ARF_SETS = 0
const XCHAL_ITLB_MINWIRED_SETS = 0
const XCHAL_ITLB_SET0_WAY = 0
const XCHAL_ITLB_SET0_WAYS = 1
const XCHAL_ITLB_SET0_ENTRIES_LOG2 = 3
const XCHAL_ITLB_SET0_ENTRIES = 8
const XCHAL_ITLB_SET0_ARF = 0
const XCHAL_ITLB_SET0_PAGESIZES = 1
const XCHAL_ITLB_SET0_PAGESZ_BITS = 0
const XCHAL_ITLB_SET0_PAGESZ_LOG2_MIN = 29
const XCHAL_ITLB_SET0_PAGESZ_LOG2_MAX = 29
const XCHAL_ITLB_SET0_PAGESZ_LOG2_LIST = 29
const XCHAL_ITLB_SET0_ASID_CONSTMASK = 0
const XCHAL_ITLB_SET0_VPN_CONSTMASK = 0x00000000
const XCHAL_ITLB_SET0_PPN_CONSTMASK = 0xE0000000
const XCHAL_ITLB_SET0_CA_CONSTMASK = 0
const XCHAL_ITLB_SET0_ASID_RESET = 0
const XCHAL_ITLB_SET0_VPN_RESET = 0
const XCHAL_ITLB_SET0_PPN_RESET = 0
const XCHAL_ITLB_SET0_CA_RESET = 1
const XCHAL_ITLB_SET0_E0_VPN_CONST = 0x00000000
const XCHAL_ITLB_SET0_E1_VPN_CONST = 0x20000000
const XCHAL_ITLB_SET0_E2_VPN_CONST = 0x40000000
const XCHAL_ITLB_SET0_E3_VPN_CONST = 0x60000000
const XCHAL_ITLB_SET0_E4_VPN_CONST = 0x80000000
const XCHAL_ITLB_SET0_E5_VPN_CONST = 0xA0000000
const XCHAL_ITLB_SET0_E6_VPN_CONST = 0xC0000000
const XCHAL_ITLB_SET0_E7_VPN_CONST = 0xE0000000
const XCHAL_ITLB_SET0_E0_PPN_CONST = 0x00000000
const XCHAL_ITLB_SET0_E1_PPN_CONST = 0x20000000
const XCHAL_ITLB_SET0_E2_PPN_CONST = 0x40000000
const XCHAL_ITLB_SET0_E3_PPN_CONST = 0x60000000
const XCHAL_ITLB_SET0_E4_PPN_CONST = 0x80000000
const XCHAL_ITLB_SET0_E5_PPN_CONST = 0xA0000000
const XCHAL_ITLB_SET0_E6_PPN_CONST = 0xC0000000
const XCHAL_ITLB_SET0_E7_PPN_CONST = 0xE0000000
const XCHAL_ITLB_SET0_E0_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E1_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E2_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E3_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E4_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E5_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E6_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E7_CA_RESET = 0x02
const XCHAL_DTLB_WAY_BITS = 0
const XCHAL_DTLB_WAYS = 1
const XCHAL_DTLB_ARF_WAYS = 0
const XCHAL_DTLB_SETS = 1
const XCHAL_DTLB_WAY0_SET = 0
const XCHAL_DTLB_ARF_SETS = 0
const XCHAL_DTLB_MINWIRED_SETS = 0
const XCHAL_DTLB_SET0_WAY = 0
const XCHAL_DTLB_SET0_WAYS = 1
const XCHAL_DTLB_SET0_ENTRIES_LOG2 = 3
const XCHAL_DTLB_SET0_ENTRIES = 8
const XCHAL_DTLB_SET0_ARF = 0
const XCHAL_DTLB_SET0_PAGESIZES = 1
const XCHAL_DTLB_SET0_PAGESZ_BITS = 0
const XCHAL_DTLB_SET0_PAGESZ_LOG2_MIN = 29
const XCHAL_DTLB_SET0_PAGESZ_LOG2_MAX = 29
const XCHAL_DTLB_SET0_PAGESZ_LOG2_LIST = 29
const XCHAL_DTLB_SET0_ASID_CONSTMASK = 0
const XCHAL_DTLB_SET0_VPN_CONSTMASK = 0x00000000
const XCHAL_DTLB_SET0_PPN_CONSTMASK = 0xE0000000
const XCHAL_DTLB_SET0_CA_CONSTMASK = 0
const XCHAL_DTLB_SET0_ASID_RESET = 0
const XCHAL_DTLB_SET0_VPN_RESET = 0
const XCHAL_DTLB_SET0_PPN_RESET = 0
const XCHAL_DTLB_SET0_CA_RESET = 1
const XCHAL_DTLB_SET0_E0_VPN_CONST = 0x00000000
const XCHAL_DTLB_SET0_E1_VPN_CONST = 0x20000000
const XCHAL_DTLB_SET0_E2_VPN_CONST = 0x40000000
const XCHAL_DTLB_SET0_E3_VPN_CONST = 0x60000000
const XCHAL_DTLB_SET0_E4_VPN_CONST = 0x80000000
const XCHAL_DTLB_SET0_E5_VPN_CONST = 0xA0000000
const XCHAL_DTLB_SET0_E6_VPN_CONST = 0xC0000000
const XCHAL_DTLB_SET0_E7_VPN_CONST = 0xE0000000
const XCHAL_DTLB_SET0_E0_PPN_CONST = 0x00000000
const XCHAL_DTLB_SET0_E1_PPN_CONST = 0x20000000
const XCHAL_DTLB_SET0_E2_PPN_CONST = 0x40000000
const XCHAL_DTLB_SET0_E3_PPN_CONST = 0x60000000
const XCHAL_DTLB_SET0_E4_PPN_CONST = 0x80000000
const XCHAL_DTLB_SET0_E5_PPN_CONST = 0xA0000000
const XCHAL_DTLB_SET0_E6_PPN_CONST = 0xC0000000
const XCHAL_DTLB_SET0_E7_PPN_CONST = 0xE0000000
const XCHAL_DTLB_SET0_E0_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E1_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E2_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E3_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E4_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E5_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E6_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E7_CA_RESET = 0x02
const XCHAL_CP_NUM = 0
const XCHAL_CP_MAX = 0
const XCHAL_CP_MASK = 0x00
const XCHAL_CP_PORT_MASK = 0x00
const XCHAL_NCP_SA_SIZE = 4
const XCHAL_NCP_SA_ALIGN = 4
const XCHAL_TOTAL_SA_SIZE = 16
const XCHAL_TOTAL_SA_ALIGN = 4
const XCHAL_NCP_SA_NUM = 1
const XCHAL_CP0_SA_NUM = 0
const XCHAL_CP1_SA_NUM = 0
const XCHAL_CP2_SA_NUM = 0
const XCHAL_CP3_SA_NUM = 0
const XCHAL_CP4_SA_NUM = 0
const XCHAL_CP5_SA_NUM = 0
const XCHAL_CP6_SA_NUM = 0
const XCHAL_CP7_SA_NUM = 0
const XCHAL_ERRATUM_453 = 0
const XCHAL_ERRATUM_497 = 0
const XCHAL_HAVE_LE = 1
const XCHAL_NUM_LOWPRI_LEVELS = 1
const XCHAL_INTLEVEL0_MASK = 0x00000000
const XCHAL_INTLEVEL8_MASK = 0x00000000
const XCHAL_INTLEVEL9_MASK = 0x00000000
const XCHAL_INTLEVEL10_MASK = 0x00000000
const XCHAL_INTLEVEL11_MASK = 0x00000000
const XCHAL_INTLEVEL12_MASK = 0x00000000
const XCHAL_INTLEVEL13_MASK = 0x00000000
const XCHAL_INTLEVEL14_MASK = 0x00000000
const XCHAL_INTLEVEL15_MASK = 0x00000000
const XCHAL_INTLEVEL0_ANDBELOW_MASK = 0x00000000
const XCHAL_EXCCAUSE_ILLEGAL_INSTRUCTION = 0
const XCHAL_EXCCAUSE_SYSTEM_CALL = 1
const XCHAL_EXCCAUSE_INSTRUCTION_FETCH_ERROR = 2
const XCHAL_EXCCAUSE_LOAD_STORE_ERROR = 3
const XCHAL_EXCCAUSE_LEVEL1_INTERRUPT = 4
const XCHAL_EXCCAUSE_ALLOCA = 5
const XCHAL_EXCCAUSE_INTEGER_DIVIDE_BY_ZERO = 6
const XCHAL_EXCCAUSE_SPECULATION = 7
const XCHAL_EXCCAUSE_PRIVILEGED = 8
const XCHAL_EXCCAUSE_UNALIGNED = 9
const XCHAL_EXCCAUSE_ITLB_MISS = 16
const XCHAL_EXCCAUSE_ITLB_MULTIHIT = 17
const XCHAL_EXCCAUSE_ITLB_PRIVILEGE = 18
const XCHAL_EXCCAUSE_ITLB_SIZE_RESTRICTION = 19
const XCHAL_EXCCAUSE_FETCH_CACHE_ATTRIBUTE = 20
const XCHAL_EXCCAUSE_DTLB_MISS = 24
const XCHAL_EXCCAUSE_DTLB_MULTIHIT = 25
const XCHAL_EXCCAUSE_DTLB_PRIVILEGE = 26
const XCHAL_EXCCAUSE_DTLB_SIZE_RESTRICTION = 27
const XCHAL_EXCCAUSE_LOAD_CACHE_ATTRIBUTE = 28
const XCHAL_EXCCAUSE_STORE_CACHE_ATTRIBUTE = 29
const XCHAL_EXCCAUSE_COPROCESSOR0_DISABLED = 32
const XCHAL_EXCCAUSE_COPROCESSOR1_DISABLED = 33
const XCHAL_EXCCAUSE_COPROCESSOR2_DISABLED = 34
const XCHAL_EXCCAUSE_COPROCESSOR3_DISABLED = 35
const XCHAL_EXCCAUSE_COPROCESSOR4_DISABLED = 36
const XCHAL_EXCCAUSE_COPROCESSOR5_DISABLED = 37
const XCHAL_EXCCAUSE_COPROCESSOR6_DISABLED = 38
const XCHAL_EXCCAUSE_COPROCESSOR7_DISABLED = 39
const XCHAL_DBREAKC_VALIDMASK = 0xC000003F
const XCHAL_DBREAKC_MASK_BITS = 6
const XCHAL_DBREAKC_MASK_NUM = 64
const XCHAL_DBREAKC_MASK_SHIFT = 0
const XCHAL_DBREAKC_MASK_MASK = 0x0000003F
const XCHAL_DBREAKC_LOADBREAK_BITS = 1
const XCHAL_DBREAKC_LOADBREAK_NUM = 2
const XCHAL_DBREAKC_LOADBREAK_SHIFT = 30
const XCHAL_DBREAKC_LOADBREAK_MASK = 0x40000000
const XCHAL_DBREAKC_STOREBREAK_BITS = 1
const XCHAL_DBREAKC_STOREBREAK_NUM = 2
const XCHAL_DBREAKC_STOREBREAK_SHIFT = 31
const XCHAL_DBREAKC_STOREBREAK_MASK = 0x80000000
const XCHAL_PS_VALIDMASK = 0x00070F3F
const XCHAL_PS_INTLEVEL_BITS = 4
const XCHAL_PS_INTLEVEL_NUM = 16
const XCHAL_PS_INTLEVEL_SHIFT = 0
const XCHAL_PS_INTLEVEL_MASK = 0x0000000F
const XCHAL_PS_EXCM_BITS = 1
const XCHAL_PS_EXCM_NUM = 2
const XCHAL_PS_EXCM_SHIFT = 4
const XCHAL_PS_EXCM_MASK = 0x00000010
const XCHAL_PS_UM_BITS = 1
const XCHAL_PS_UM_NUM = 2
const XCHAL_PS_UM_SHIFT = 5
const XCHAL_PS_UM_MASK = 0x00000020
const XCHAL_PS_RING_BITS = 2
const XCHAL_PS_RING_NUM = 4
const XCHAL_PS_RING_SHIFT = 6
const XCHAL_PS_RING_MASK = 0x000000C0
const XCHAL_PS_OWB_BITS = 4
const XCHAL_PS_OWB_NUM = 16
const XCHAL_PS_OWB_SHIFT = 8
const XCHAL_PS_OWB_MASK = 0x00000F00
const XCHAL_PS_CALLINC_BITS = 2
const XCHAL_PS_CALLINC_NUM = 4
const XCHAL_PS_CALLINC_SHIFT = 16
const XCHAL_PS_CALLINC_MASK = 0x00030000
const XCHAL_PS_WOE_BITS = 1
const XCHAL_PS_WOE_NUM = 2
const XCHAL_PS_WOE_SHIFT = 18
const XCHAL_PS_WOE_MASK = 0x00040000
const XCHAL_EXCCAUSE_VALIDMASK = 0x0000003F
const XCHAL_EXCCAUSE_BITS = 6
const XCHAL_EXCCAUSE_NUM = 64
const XCHAL_EXCCAUSE_SHIFT = 0
const XCHAL_EXCCAUSE_MASK = 0x0000003F
const XCHAL_DEBUGCAUSE_VALIDMASK = 0x0000003F
const XCHAL_DEBUGCAUSE_ICOUNT_BITS = 1
const XCHAL_DEBUGCAUSE_ICOUNT_NUM = 2
const XCHAL_DEBUGCAUSE_ICOUNT_SHIFT = 0
const XCHAL_DEBUGCAUSE_ICOUNT_MASK = 0x00000001
const XCHAL_DEBUGCAUSE_IBREAK_BITS = 1
const XCHAL_DEBUGCAUSE_IBREAK_NUM = 2
const XCHAL_DEBUGCAUSE_IBREAK_SHIFT = 1
const XCHAL_DEBUGCAUSE_IBREAK_MASK = 0x00000002
const XCHAL_DEBUGCAUSE_DBREAK_BITS = 1
const XCHAL_DEBUGCAUSE_DBREAK_NUM = 2
const XCHAL_DEBUGCAUSE_DBREAK_SHIFT = 2
const XCHAL_DEBUGCAUSE_DBREAK_MASK = 0x00000004
const XCHAL_DEBUGCAUSE_BREAK_BITS = 1
const XCHAL_DEBUGCAUSE_BREAK_NUM = 2
const XCHAL_DEBUGCAUSE_BREAK_SHIFT = 3
const XCHAL_DEBUGCAUSE_BREAK_MASK = 0x00000008
const XCHAL_DEBUGCAUSE_BREAKN_BITS = 1
const XCHAL_DEBUGCAUSE_BREAKN_NUM = 2
const XCHAL_DEBUGCAUSE_BREAKN_SHIFT = 4
const XCHAL_DEBUGCAUSE_BREAKN_MASK = 0x00000010
const XCHAL_DEBUGCAUSE_DEBUGINT_BITS = 1
const XCHAL_DEBUGCAUSE_DEBUGINT_NUM = 2
const XCHAL_DEBUGCAUSE_DEBUGINT_SHIFT = 5
const XCHAL_DEBUGCAUSE_DEBUGINT_MASK = 0x00000020
const XCHAL_CACHE_PREFCTL_DEFAULT = 0x01044
const XCHAL_ICACHE_TAG_V_SHIFT = 0
const XCHAL_ICACHE_TAG_V = 0x1
const XCHAL_ICACHE_TAG_F_SHIFT = 0
const XCHAL_ICACHE_TAG_F = 0
const XCHAL_ICACHE_TAG_L = 0
const XCHAL_DCACHE_TAG_V_SHIFT = 0
const XCHAL_DCACHE_TAG_V = 0x1
const XCHAL_DCACHE_TAG_F_SHIFT = 0
const XCHAL_DCACHE_TAG_F = 0
const XCHAL_DCACHE_TAG_D = 0
const XCHAL_DCACHE_TAG_L = 0
const X_MEMCTL_SNOOP_EN = 0x00
const X_MEMCTL_L0IBUF_EN = 0x00
const XCHAL_CP0_NAME = 0
const XCHAL_CP0_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP1_NAME = 0
const XCHAL_CP1_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP2_NAME = 0
const XCHAL_CP2_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP3_NAME = 0
const XCHAL_CP3_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP4_NAME = 0
const XCHAL_CP4_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP5_NAME = 0
const XCHAL_CP5_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP6_NAME = 0
const XCHAL_CP6_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP7_NAME = 0
const XCHAL_CP7_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP0_SA_SIZE = 0
const XCHAL_CP0_SA_ALIGN = 1
const XCHAL_CP1_SA_SIZE = 0
const XCHAL_CP1_SA_ALIGN = 1
const XCHAL_CP2_SA_SIZE = 0
const XCHAL_CP2_SA_ALIGN = 1
const XCHAL_CP3_SA_SIZE = 0
const XCHAL_CP3_SA_ALIGN = 1
const XCHAL_CP4_SA_SIZE = 0
const XCHAL_CP4_SA_ALIGN = 1
const XCHAL_CP5_SA_SIZE = 0
const XCHAL_CP5_SA_ALIGN = 1
const XCHAL_CP6_SA_SIZE = 0
const XCHAL_CP6_SA_ALIGN = 1
const XCHAL_CP7_SA_SIZE = 0
const XCHAL_CP7_SA_ALIGN = 1
const XCHAL_INST_ILLN = 0xF06D
const XCHAL_INST_ILLN_BYTE0 = 0x6D
const XCHAL_INST_ILLN_BYTE1 = 0xF0
const XTHAL_INST_ILL = 0x000000
const XSHAL_USE_ABSOLUTE_LITERALS = 0
const XSHAL_HAVE_TEXT_SECTION_LITERALS = 1
const XTHAL_ABI_WINDOWED = 0
const XTHAL_ABI_CALL0 = 1
const XTHAL_CLIB_NEWLIB = 0
const XTHAL_CLIB_UCLIBC = 1
const XTHAL_CLIB_XCLIB = 2
const XSHAL_USE_FLOATING_POINT = 1
const XSHAL_FLOATING_POINT_ABI = 0
const XSHAL_FUNC_SAFETY_ENABLED = 0
const XSHAL_IOBLOCK_CACHED_VADDR = 0x70000000
const XSHAL_IOBLOCK_CACHED_PADDR = 0x70000000
const XSHAL_IOBLOCK_CACHED_SIZE = 0x0E000000
const XSHAL_IOBLOCK_BYPASS_VADDR = 0x90000000
const XSHAL_IOBLOCK_BYPASS_PADDR = 0x90000000
const XSHAL_IOBLOCK_BYPASS_SIZE = 0x0E000000
const XSHAL_ROM_VADDR = 0x50000000
const XSHAL_ROM_PADDR = 0x50000000
const XSHAL_ROM_SIZE = 0x01000000
const XSHAL_ROM_AVAIL_VADDR = 0x50000000
const XSHAL_ROM_AVAIL_VSIZE = 0x01000000
const XSHAL_RAM_VADDR = 0x60000000
const XSHAL_RAM_PADDR = 0x60000000
const XSHAL_RAM_VSIZE = 0x20000000
const XSHAL_RAM_PSIZE = 0x20000000
const XSHAL_RAM_AVAIL_VADDR = 0x60000000
const XSHAL_RAM_AVAIL_VSIZE = 0x20000000
const XSHAL_RAM_BYPASS_VADDR = 0xA0000000
const XSHAL_RAM_BYPASS_PADDR = 0xA0000000
const XSHAL_RAM_BYPASS_PSIZE = 0x20000000
const XSHAL_SIMIO_CACHED_VADDR = 0xC0000000
const XSHAL_SIMIO_BYPASS_VADDR = 0xC0000000
const XSHAL_SIMIO_PADDR = 0xC0000000
const XSHAL_SIMIO_SIZE = 0x20000000
const XSHAL_MAGIC_EXIT = 0x0
const XSHAL_ALLVALID_CACHEATTR_WRITEBACK = 0x22221112
const XSHAL_ALLVALID_CACHEATTR_WRITEALLOC = 0x22221112
const XSHAL_ALLVALID_CACHEATTR_WRITETHRU = 0x22221112
const XSHAL_ALLVALID_CACHEATTR_BYPASS = 0x22222222
const XSHAL_STRICT_CACHEATTR_WRITEBACK = 0xFFFF111F
const XSHAL_STRICT_CACHEATTR_WRITEALLOC = 0xFFFF111F
const XSHAL_STRICT_CACHEATTR_WRITETHRU = 0xFFFF111F
const XSHAL_STRICT_CACHEATTR_BYPASS = 0xFFFF222F
const XSHAL_TRAPNULL_CACHEATTR_WRITEBACK = 0x2222111F
const XSHAL_TRAPNULL_CACHEATTR_WRITEALLOC = 0x2222111F
const XSHAL_TRAPNULL_CACHEATTR_WRITETHRU = 0x2222111F
const XSHAL_TRAPNULL_CACHEATTR_BYPASS = 0x2222222F
const XSHAL_ISS_PIPE_REGIONS = 0
const XSHAL_ISS_SDRAM_REGIONS = 0
const XSHAL_XT2000_CACHEATTR_WRITEBACK = 0xFF22111F
const XSHAL_XT2000_CACHEATTR_WRITEALLOC = 0xFF22111F
const XSHAL_XT2000_CACHEATTR_WRITETHRU = 0xFF22111F
const XSHAL_XT2000_CACHEATTR_BYPASS = 0xFF22222F
const XSHAL_XT2000_PIPE_REGIONS = 0x00000000
const XSHAL_XT2000_SDRAM_REGIONS = 0x00000440
const XSHAL_VECTORS_PACKED = 0
const XSHAL_STATIC_VECTOR_SELECT = 1
const XSHAL_RESET_VECTOR_VADDR = 0x40000400
const XSHAL_RESET_VECTOR_PADDR = 0x40000400
const XSHAL_RESET_VECTOR_SIZE = 0x00000300
const XSHAL_RESET_VECTOR_ISROM = 0
const XSHAL_USER_VECTOR_SIZE = 0x00000038
const XSHAL_USER_VECTOR_ISROM = 0
const XSHAL_KERNEL_VECTOR_SIZE = 0x00000038
const XSHAL_KERNEL_VECTOR_ISROM = 0
const XSHAL_DOUBLEEXC_VECTOR_SIZE = 0x00000040
const XSHAL_DOUBLEEXC_VECTOR_ISROM = 0
const XSHAL_WINDOW_VECTORS_SIZE = 0x00000178
const XSHAL_WINDOW_VECTORS_ISROM = 0
const XSHAL_INTLEVEL2_VECTOR_SIZE = 0x00000038
const XSHAL_INTLEVEL2_VECTOR_ISROM = 0
const XSHAL_INTLEVEL3_VECTOR_SIZE = 0x00000038
const XSHAL_INTLEVEL3_VECTOR_ISROM = 0
const XSHAL_INTLEVEL4_VECTOR_SIZE = 0x00000038
const XSHAL_INTLEVEL4_VECTOR_ISROM = 0
const XSHAL_INTLEVEL5_VECTOR_SIZE = 0x00000038
const XSHAL_INTLEVEL5_VECTOR_ISROM = 0
const XSHAL_INTLEVEL6_VECTOR_SIZE = 0x00000038
const XSHAL_INTLEVEL6_VECTOR_ISROM = 0
const XSHAL_NMI_VECTOR_SIZE = 0x00000038
const XSHAL_NMI_VECTOR_ISROM = 0
const EXCCAUSE_EXCCAUSE_SHIFT = 0
const EXCCAUSE_EXCCAUSE_MASK = 0x3F
const EXCCAUSE_ILLEGAL = 0
const EXCCAUSE_SYSCALL = 1
const EXCCAUSE_INSTR_ERROR = 2
const EXCCAUSE_IFETCHERROR = 2
const EXCCAUSE_LOAD_STORE_ERROR = 3
const EXCCAUSE_LOADSTOREERROR = 3
const EXCCAUSE_LEVEL1_INTERRUPT = 4
const EXCCAUSE_LEVEL1INTERRUPT = 4
const EXCCAUSE_ALLOCA = 5
const EXCCAUSE_DIVIDE_BY_ZERO = 6
const EXCCAUSE_SPECULATION = 7
const EXCCAUSE_PC_ERROR = 7
const EXCCAUSE_PRIVILEGED = 8
const EXCCAUSE_UNALIGNED = 9
const EXCCAUSE_EXTREG_PRIVILEGE = 10
const EXCCAUSE_EXCLUSIVE_ERROR = 11
const EXCCAUSE_INSTR_DATA_ERROR = 12
const EXCCAUSE_LOAD_STORE_DATA_ERROR = 13
const EXCCAUSE_INSTR_ADDR_ERROR = 14
const EXCCAUSE_LOAD_STORE_ADDR_ERROR = 15
const EXCCAUSE_ITLB_MISS = 16
const EXCCAUSE_ITLB_MULTIHIT = 17
const EXCCAUSE_INSTR_RING = 18
const EXCCAUSE_INSTR_PROHIBITED = 20
const EXCCAUSE_DTLB_MISS = 24
const EXCCAUSE_DTLB_MULTIHIT = 25
const EXCCAUSE_LOAD_STORE_RING = 26
const EXCCAUSE_LOAD_PROHIBITED = 28
const EXCCAUSE_STORE_PROHIBITED = 29
const EXCCAUSE_CP0_DISABLED = 32
const EXCCAUSE_CP1_DISABLED = 33
const EXCCAUSE_CP2_DISABLED = 34
const EXCCAUSE_CP3_DISABLED = 35
const EXCCAUSE_CP4_DISABLED = 36
const EXCCAUSE_CP5_DISABLED = 37
const EXCCAUSE_CP6_DISABLED = 38
const EXCCAUSE_CP7_DISABLED = 39
const PS_WOE_SHIFT = 18
const PS_WOE_MASK = 0x00040000
const PS_CALLINC_SHIFT = 16
const PS_CALLINC_MASK = 0x00030000
const PS_OWB_SHIFT = 8
const PS_OWB_MASK = 0x00000F00
const PS_RING_SHIFT = 6
const PS_RING_MASK = 0x000000C0
const PS_UM_SHIFT = 5
const PS_UM_MASK = 0x00000020
const PS_EXCM_SHIFT = 4
const PS_EXCM_MASK = 0x00000010
const PS_INTLEVEL_SHIFT = 0
const PS_INTLEVEL_MASK = 0x0000000F
const DBREAKC_MASK_SHIFT = 0
const DBREAKC_MASK_MASK = 0x0000003F
const DBREAKC_LOADBREAK_SHIFT = 30
const DBREAKC_LOADBREAK_MASK = 0x40000000
const DBREAKC_STOREBREAK_SHIFT = 31
const DBREAKC_STOREBREAK_MASK = 0x80000000
const DEBUGCAUSE_DEBUGINT_SHIFT = 5
const DEBUGCAUSE_DEBUGINT_MASK = 0x20
const DEBUGCAUSE_BREAKN_SHIFT = 4
const DEBUGCAUSE_BREAKN_MASK = 0x10
const DEBUGCAUSE_BREAK_SHIFT = 3
const DEBUGCAUSE_BREAK_MASK = 0x08
const DEBUGCAUSE_DBREAK_SHIFT = 2
const DEBUGCAUSE_DBREAK_MASK = 0x04
const DEBUGCAUSE_IBREAK_SHIFT = 1
const DEBUGCAUSE_IBREAK_MASK = 0x02
const DEBUGCAUSE_ICOUNT_SHIFT = 0
const DEBUGCAUSE_ICOUNT_MASK = 0x01
const MESR_MEME = 0x00000001
const MESR_MEME_SHIFT = 0
const MESR_DME = 0x00000002
const MESR_DME_SHIFT = 1
const MESR_RCE = 0x00000010
const MESR_RCE_SHIFT = 4
const MESR_ERRENAB = 0x00000100
const MESR_ERRENAB_SHIFT = 8
const MESR_ERRTEST = 0x00000200
const MESR_ERRTEST_SHIFT = 9
const MESR_DATEXC = 0x00000400
const MESR_DATEXC_SHIFT = 10
const MESR_INSEXC = 0x00000800
const MESR_INSEXC_SHIFT = 11
const MESR_WAYNUM_SHIFT = 16
const MESR_ACCTYPE_SHIFT = 20
const MESR_MEMTYPE_SHIFT = 24
const MESR_ERRTYPE_SHIFT = 30
const MEMCTL_SNOOP_EN_SHIFT = 1
const MEMCTL_SNOOP_EN = 0x02
const MEMCTL_L0IBUF_EN_SHIFT = 0
const MEMCTL_L0IBUF_EN = 0x01
const MEMCTL_INV_EN_SHIFT = 23
const MEMCTL_INV_EN = 0x00800000
const MEMCTL_DCWU_SHIFT = 8
const MEMCTL_DCWU_BITS = 5
const MEMCTL_DCWA_SHIFT = 13
const MEMCTL_DCWA_BITS = 5
const MEMCTL_ICWU_SHIFT = 18
const MEMCTL_ICWU_BITS = 5
const MEMCTL_DCWU_MASK = 0x00001F00
const MEMCTL_DCWA_MASK = 0x0003E000
const MEMCTL_ICWU_MASK = 0x007C0000
const CALL0_ABI = 0
const KERNELSTACKSIZE = 1024
const XT_CP_SIZE = 0
const CORE_ID_REGVAL_PRO = 0xCDCD
const CORE_ID_REGVAL_APP = 0xABAB
const STK_INTEXC_EXTRA = 0
const XT_USE_THREAD_SAFE_CLIB = 1
const XT_HAVE_THREAD_SAFE_CLIB = 1
const XT_USER_SIZE = 0x400
const ConfigXT_SIMULATOR = 0
const ConfigXT_BOARD = 1
const ConfigXT_TIMER_INDEX = 0
const ConfigXT_INTEXC_HOOKS = 0
const ConfigBENCHMARK = 0
const ConfigUSE_PORT_OPTIMISED_TASK_SELECTION = 1
const ConfigUSE_NEWLIB_REENTRANT = 1
const ConfigINCLUDE_FREERTOS_TASK_C_ADDITIONS_H = 1
const INCLUDE_xTaskDelayUntil = 1
const INCLUDE_uxTaskGetStackHighWaterMark2 = 1
const ConfigSTACK_ALIGNMENT = 16
const ConfigUSE_PREEMPTION = 1
const ConfigUSE_TIME_SLICING = 1
const ConfigUSE_16_BIT_TICKS = 0
const ConfigIDLE_SHOULD_YIELD = 0
const ConfigKERNEL_INTERRUPT_PRIORITY = 1
const ConfigUSE_MUTEXES = 1
const ConfigUSE_RECURSIVE_MUTEXES = 1
const ConfigUSE_COUNTING_SEMAPHORES = 1
const ConfigUSE_QUEUE_SETS = 1
const ConfigUSE_TASK_NOTIFICATIONS = 1
const ConfigENABLE_BACKWARD_COMPATIBILITY = 0
const ConfigSUPPORT_STATIC_ALLOCATION = 1
const ConfigSUPPORT_DYNAMIC_ALLOCATION = 1
const ConfigAPPLICATION_ALLOCATED_HEAP = 1
const ConfigSTACK_ALLOCATION_FROM_SEPARATE_HEAP = 0
const ConfigUSE_IDLE_HOOK = 0
const ConfigUSE_TICK_HOOK = 0
const ConfigCHECK_FOR_STACK_OVERFLOW = 2
const ConfigRECORD_STACK_HIGH_ADDRESS = 1
const ConfigUSE_CO_ROUTINES = 0
const ConfigMAX_CO_ROUTINE_PRIORITIES = 2
const ConfigUSE_TIMERS = 1
const INCLUDE_vTaskPrioritySet = 1
const INCLUDE_uxTaskPriorityGet = 1
const INCLUDE_vTaskDelete = 1
const INCLUDE_vTaskSuspend = 1
const INCLUDE_vTaskDelay = 1
const INCLUDE_xTaskGetIdleTaskHandle = 1
const INCLUDE_xTaskAbortDelay = 1
const INCLUDE_xSemaphoreGetMutexHolder = 1
const INCLUDE_xTaskGetHandle = 1
const INCLUDE_uxTaskGetStackHighWaterMark = 1
const INCLUDE_eTaskGetState = 1
const INCLUDE_xTaskResumeFromISR = 1
const INCLUDE_xTimerPendFunctionCall = 1
const INCLUDE_xTaskGetSchedulerState = 1
const INCLUDE_xTaskGetCurrentTaskHandle = 1
const ConfigTHREAD_LOCAL_STORAGE_DELETE_CALLBACKS = 1
const ConfigCHECK_MUTEX_GIVEN_BY_OWNER = 1
const PdFREERTOS_ERRNO_NONE = 0
const PdFREERTOS_ERRNO_ENOENT = 2
const PdFREERTOS_ERRNO_EINTR = 4
const PdFREERTOS_ERRNO_EIO = 5
const PdFREERTOS_ERRNO_ENXIO = 6
const PdFREERTOS_ERRNO_EBADF = 9
const PdFREERTOS_ERRNO_EAGAIN = 11
const PdFREERTOS_ERRNO_EWOULDBLOCK = 11
const PdFREERTOS_ERRNO_ENOMEM = 12
const PdFREERTOS_ERRNO_EACCES = 13
const PdFREERTOS_ERRNO_EFAULT = 14
const PdFREERTOS_ERRNO_EBUSY = 16
const PdFREERTOS_ERRNO_EEXIST = 17
const PdFREERTOS_ERRNO_EXDEV = 18
const PdFREERTOS_ERRNO_ENODEV = 19
const PdFREERTOS_ERRNO_ENOTDIR = 20
const PdFREERTOS_ERRNO_EISDIR = 21
const PdFREERTOS_ERRNO_EINVAL = 22
const PdFREERTOS_ERRNO_ENOSPC = 28
const PdFREERTOS_ERRNO_ESPIPE = 29
const PdFREERTOS_ERRNO_EROFS = 30
const PdFREERTOS_ERRNO_EUNATCH = 42
const PdFREERTOS_ERRNO_EBADE = 50
const PdFREERTOS_ERRNO_EFTYPE = 79
const PdFREERTOS_ERRNO_ENMFILE = 89
const PdFREERTOS_ERRNO_ENOTEMPTY = 90
const PdFREERTOS_ERRNO_ENAMETOOLONG = 91
const PdFREERTOS_ERRNO_EOPNOTSUPP = 95
const PdFREERTOS_ERRNO_ENOBUFS = 105
const PdFREERTOS_ERRNO_ENOPROTOOPT = 109
const PdFREERTOS_ERRNO_EADDRINUSE = 112
const PdFREERTOS_ERRNO_ETIMEDOUT = 116
const PdFREERTOS_ERRNO_EINPROGRESS = 119
const PdFREERTOS_ERRNO_EALREADY = 120
const PdFREERTOS_ERRNO_EADDRNOTAVAIL = 125
const PdFREERTOS_ERRNO_EISCONN = 127
const PdFREERTOS_ERRNO_ENOTCONN = 128
const PdFREERTOS_ERRNO_ENOMEDIUM = 135
const PdFREERTOS_ERRNO_EILSEQ = 138
const PdFREERTOS_ERRNO_ECANCELED = 140
const PdFREERTOS_LITTLE_ENDIAN = 0
const PdFREERTOS_BIG_ENDIAN = 1
const SAR = 3
const WINDOWBASE = 72
const WINDOWSTART = 73
const IBREAKENABLE = 96
const DDR = 104
const IBREAKA_0 = 128
const IBREAKA_1 = 129
const DBREAKA_0 = 144
const DBREAKA_1 = 145
const DBREAKC_0 = 160
const DBREAKC_1 = 161
const CONFIGID0 = 176
const EPC_1 = 177
const EPC_2 = 178
const EPC_3 = 179
const EPC_4 = 180
const EPC_5 = 181
const EPC_6 = 182
const EPC_7 = 183
const DEPC = 192
const EPS_2 = 194
const EPS_3 = 195
const EPS_4 = 196
const EPS_5 = 197
const EPS_6 = 198
const EPS_7 = 199
const CONFIGID1 = 208
const EXCSAVE_1 = 209
const EXCSAVE_2 = 210
const EXCSAVE_3 = 211
const EXCSAVE_4 = 212
const EXCSAVE_5 = 213
const EXCSAVE_6 = 214
const EXCSAVE_7 = 215
const CPENABLE = 224
const INTERRUPT = 226
const INTENABLE = 228
const PS = 230
const VECBASE = 231
const EXCCAUSE = 232
const DEBUGCAUSE = 233
const CCOUNT = 234
const PRID = 235
const ICOUNT = 236
const ICOUNTLEVEL = 237
const EXCVADDR = 238
const CCOMPARE_0 = 240
const CCOMPARE_1 = 241
const CCOMPARE_2 = 242
const MISC_REG_0 = 244
const MISC_REG_1 = 245
const MISC_REG_2 = 246
const MISC_REG_3 = 247
const IBREAKA = 128
const DBREAKA = 144
const DBREAKC = 160
const EPC = 176
const EPS = 192
const EXCSAVE = 208
const CCOMPARE = 240
const INTREAD = 226
const INTSET = 226
const INTCLEAR = 227
const CORE_STATE_SIGNATURE = 0xB1C5AFED
const XTOS_KEEPON_MEM = 0x00000100
const XTOS_KEEPON_MEM_SHIFT = 8
const XTOS_KEEPON_DEBUG = 0x00001000
const XTOS_KEEPON_DEBUG_SHIFT = 12
const XTOS_IDMA_NO_WAIT = 0x00010000
const XTOS_IDMA_WAIT_STANDBY = 0x00020000
const XTOS_COREF_PSO = 0x00000001
const XTOS_COREF_PSO_SHIFT = 0
const EXTRA_SAVE_AREA_SIZE = 32
const BASE_SAVE_AREA_SIZE = 16
const BASE_AREA_SP_OFFSET = 12
const DSRSET = 0x10200C
const ESP_CPU_INTR_DESC_FLAG_SPECIAL = 0x01
const ESP_CPU_INTR_DESC_FLAG_RESVD = 0x02
const SPINLOCK_FREE = 0xB33FFFFF
const SPINLOCK_NO_WAIT = 0
const SPINLOCK_OWNER_ID_0 = 0xCDCD
const SPINLOCK_OWNER_ID_1 = 0xABAB
const ESP_IDF_VERSION_MAJOR = 5
const ESP_IDF_VERSION_MINOR = 4
const ESP_IDF_VERSION_PATCH = 2
const X_LIBC_LIMITS_H_ = 1
const NL_ARGMAX = 32
const X_POSIX2_RE_DUP_MAX = 255
const CHAR_MIN = 0
const PortCRITICAL_NESTING_IN_TCB = 0
const PortBYTE_ALIGNMENT = 16
const PortTICK_TYPE_IS_ATOMIC = 1
const PortUSING_MPU_WRAPPERS = 0
const PortNUM_CONFIGURABLE_REGIONS = 1
const PortHAS_STACK_OVERFLOW_CHECKING = 0
const ConfigUSE_C_RUNTIME_TLS_SUPPORT = 1
const INCLUDE_xQueueGetMutexHolder = 0
const ConfigUSE_DAEMON_TASK_STARTUP_HOOK = 0
const ConfigUSE_APPLICATION_TASK_TAG = 0
const ConfigUSE_ALTERNATIVE_API = 0
const ConfigASSERT_DEFINED = 1
const ConfigPRECONDITION_DEFINED = 0
const ConfigUSE_MINI_LIST_ITEM = 1
const ConfigGENERATE_RUN_TIME_STATS = 0
const ConfigUSE_MALLOC_FAILED_HOOK = 0
const ConfigEXPECTED_IDLE_TIME_BEFORE_SLEEP = 2
const ConfigINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS = 0
const ConfigUSE_STATS_FORMATTING_FUNCTIONS = 0
const ConfigUSE_TRACE_FACILITY = 0
const ConfigUSE_POSIX_ERRNO = 0
const ConfigUSE_SB_COMPLETED_CALLBACK = 0
const ConfigINITIAL_TICK_COUNT = 0
const ConfigUSE_TASK_FPU_SUPPORT = 1
const ConfigENABLE_MPU = 0
const ConfigENABLE_FPU = 1
const ConfigENABLE_MVE = 0
const ConfigENABLE_TRUSTZONE = 1
const ConfigRUN_FREERTOS_SECURE_ONLY = 0
const ConfigRUN_ADDITIONAL_TESTS = 0
const BUS_LOCK_DEBUG = 0
const DEV_NUM_MAX = 6

type PtrdiffT c.Int
type WcharT c.Int

type MaxAlignT struct {
	X__clangMaxAlignNonce1 c.LongLong
	X__clangMaxAlignNonce2 c.Double
}
type X__int8T c.Char
type X__uint8T c.Char
type X__int16T int16
type X__uint16T uint16
type X__int32T c.Int
type X__uint32T c.Uint
type X__int64T c.LongLong
type X__uint64T c.UlongLong
type X__intLeast8T c.Char
type X__uintLeast8T c.Char
type X__intLeast16T int16
type X__uintLeast16T uint16
type X__intLeast32T c.Int
type X__uintLeast32T c.Uint
type X__intLeast64T c.LongLong
type X__uintLeast64T c.UlongLong
type X__intmaxT c.LongLong
type X__uintmaxT c.UlongLong
type X__intptrT c.Int
type X__uintptrT c.Uint
type IntLeast8T X__intLeast8T
type UintLeast8T X__uintLeast8T
type IntLeast16T X__intLeast16T
type UintLeast16T X__uintLeast16T
type IntLeast32T X__intLeast32T
type UintLeast32T X__uintLeast32T
type IntLeast64T X__intLeast64T
type UintLeast64T X__uintLeast64T
type IntFast8T c.Char
type UintFast8T c.Char
type IntFast16T int16
type UintFast16T uint16
type IntFast32T c.Int
type UintFast32T c.Uint
type IntFast64T c.LongLong
type UintFast64T c.UlongLong
type X__gnucVaList c.Pointer
type WintT c.Uint
type X__blkcntT c.Long
type X__blksizeT c.Long
type X__fsblkcntT X__uint64T
type X__fsfilcntT X__uint32T
type X_offT c.Long
type X__pidT c.Int
type X__devT int16
type X__uidT uint16
type X__gidT uint16
type X__idT X__uint32T
type X__inoT uint16
type X__modeT X__uint32T
type X_off64T c.LongLong
type X__offT X_offT
type X__loffT X_off64T
type X__keyT c.Long
type X_fposT c.Long
type X__sizeT c.Uint
type X_ssizeT c.Int
type X__ssizeT X_ssizeT

type X_mbstateT struct {
	X__count c.Int
	X__value struct {
		X__wch WintT
	}
}
type X_iconvT c.Pointer
type X__clockT c.Ulong
type X__timeT X__intLeast64T
type X__clockidT c.Ulong
type X__daddrT c.Long
type X__timerT c.Ulong
type X__saFamilyT X__uint8T
type X__socklenT X__uint32T
type X__nlItem c.Int
type X__nlinkT uint16
type X__susecondsT c.Long
type X__usecondsT c.Ulong
type X__vaList c.Pointer
type X__ULong c.Ulong

type X__lock struct {
	Unused [8]uint8
}
type X_LOCKT *X__lock
type X_lockT X_LOCKT
type X_flockT X_LOCKT

type X_reent struct {
	Unused [8]uint8
}

type X__localeT struct {
	Unused [8]uint8
}

type X_Bigint struct {
	X_next   *X_Bigint
	X_k      c.Int
	X_maxwds c.Int
	X_sign   c.Int
	X_wds    c.Int
	X_x      [1]X__ULong
}

type X__tm struct {
	X__tmSec   c.Int
	X__tmMin   c.Int
	X__tmHour  c.Int
	X__tmMday  c.Int
	X__tmMon   c.Int
	X__tmYear  c.Int
	X__tmWday  c.Int
	X__tmYday  c.Int
	X__tmIsdst c.Int
}

type X_onExitArgs struct {
	X_fnargs    [32]c.Pointer
	X_dsoHandle [32]c.Pointer
	X_fntypes   X__ULong
	X_isCxa     X__ULong
}

type X_atexit struct {
	X_next          *X_atexit
	X_ind           c.Int
	X_fns           [32]c.Pointer
	X_onExitArgsPtr *X_onExitArgs
}

type X__sbuf struct {
	X_base *c.Char
	X_size c.Int
}

type X__sFILE struct {
	X_p       *c.Char
	X_r       c.Int
	X_w       c.Int
	X_flags   int16
	X_file    int16
	X_bf      X__sbuf
	X_lbfsize c.Int
	X_data    *X_reent
	X_cookie  c.Pointer
	X_read    c.Pointer
	X_write   c.Pointer
	X_seek    c.Pointer
	X_close   c.Pointer
	X_ub      X__sbuf
	X_up      *c.Char
	X_ur      c.Int
	X_ubuf    [3]c.Char
	X_nbuf    [1]c.Char
	X_lb      X__sbuf
	X_blksize c.Int
	X_offset  X_offT
	X_lock    X_flockT
	X_mbstate X_mbstateT
	X_flags2  c.Int
}
type X__FILE X__sFILE

type X_glue struct {
	X_next  *X_glue
	X_niobs c.Int
	X_iobs  *X__FILE
}

type X_rand48 struct {
	X_seed     [3]uint16
	X_mult     [3]uint16
	X_add      uint16
	X_randNext c.UlongLong
}

type X_mprec struct {
	X_result   *X_Bigint
	X_resultK  c.Int
	X_p5s      *X_Bigint
	X_freelist **X_Bigint
}

type X_miscReent struct {
	X_strtokLast     *c.Char
	X_mblenState     X_mbstateT
	X_wctombState    X_mbstateT
	X_mbtowcState    X_mbstateT
	X_l64aBuf        [8]c.Char
	X_getdateErr     c.Int
	X_mbrlenState    X_mbstateT
	X_mbrtowcState   X_mbstateT
	X_mbsrtowcsState X_mbstateT
	X_wcrtombState   X_mbstateT
	X_wcsrtombsState X_mbstateT
}

type DivT struct {
	Quot c.Int
	Rem  c.Int
}

type LdivT struct {
	Quot c.Long
	Rem  c.Long
}

type LldivT struct {
	Quot c.LongLong
	Rem  c.LongLong
}

// llgo:type C
type X__comparFnT func(c.Pointer, c.Pointer) c.Int
type FposT X_fposT
type OffT X__offT
type EspErrT c.Int

const (
	ESP_ERR_FLASH_SIZE_NOT_MATCH c.Int = 260
	ESP_ERR_FLASH_NO_RESPONSE    c.Int = 264
)

/** Definition of a common transaction. Also holds the return value. */

type SpiFlashTransT struct {
	Reserved      c.Uint8T
	MosiLen       c.Uint8T
	MisoLen       c.Uint8T
	AddressBitlen c.Uint8T
	Address       c.Uint32T
	MosiData      *c.Uint8T
	MisoData      *c.Uint8T
	Flags         c.Uint32T
	Command       c.Uint16T
	DummyBitlen   c.Uint8T
	IoMode        c.Uint32T
}
type EspFlashSpeedS c.Int

const (
	ESP_FLASH_5MHZ      EspFlashSpeedS = 5
	ESP_FLASH_10MHZ     EspFlashSpeedS = 10
	ESP_FLASH_20MHZ     EspFlashSpeedS = 20
	ESP_FLASH_26MHZ     EspFlashSpeedS = 26
	ESP_FLASH_40MHZ     EspFlashSpeedS = 40
	ESP_FLASH_80MHZ     EspFlashSpeedS = 80
	ESP_FLASH_120MHZ    EspFlashSpeedS = 120
	ESP_FLASH_SPEED_MAX EspFlashSpeedS = 121
)

type EspFlashSpeedT EspFlashSpeedS
type EspFlashIoModeT c.Int

const (
	SPI_FLASH_SLOWRD        EspFlashIoModeT = 0
	SPI_FLASH_FASTRD        EspFlashIoModeT = 1
	SPI_FLASH_DOUT          EspFlashIoModeT = 2
	SPI_FLASH_DIO           EspFlashIoModeT = 3
	SPI_FLASH_QOUT          EspFlashIoModeT = 4
	SPI_FLASH_QIO           EspFlashIoModeT = 5
	SPI_FLASH_OPI_STR       EspFlashIoModeT = 16
	SPI_FLASH_OPI_DTR       EspFlashIoModeT = 17
	SPI_FLASH_READ_MODE_MAX EspFlashIoModeT = 18
)

// / Configuration structure for the flash chip suspend feature.
type SpiFlashSusCmdConf struct {
	SusMask c.Uint32T
}

// / Structure for flash encryption operations.
type SpiFlashEncryptionT struct {
	FlashEncryptionEnable      c.Pointer
	FlashEncryptionDisable     c.Pointer
	FlashEncryptionDataPrepare c.Pointer
	FlashEncryptionDone        c.Pointer
	FlashEncryptionDestroy     c.Pointer
	FlashEncryptionCheck       c.Pointer
}

type SpiFlashHostDriverS struct {
	Unused [8]uint8
}
type SpiFlashHostDriverT SpiFlashHostDriverS

/** SPI Flash Host driver instance */

type SpiFlashHostInstT struct {
	Driver *SpiFlashHostDriverS
}
type SocRootClkT c.Int

const (
	SOC_ROOT_CLK_INT_RC_FAST SocRootClkT = 0
	SOC_ROOT_CLK_INT_RC_SLOW SocRootClkT = 1
	SOC_ROOT_CLK_EXT_XTAL    SocRootClkT = 2
	SOC_ROOT_CLK_EXT_XTAL32K SocRootClkT = 3
)

type SocCpuClkSrcT c.Int

const (
	SOC_CPU_CLK_SRC_XTAL    SocCpuClkSrcT = 0
	SOC_CPU_CLK_SRC_PLL     SocCpuClkSrcT = 1
	SOC_CPU_CLK_SRC_RC_FAST SocCpuClkSrcT = 2
	SOC_CPU_CLK_SRC_APLL    SocCpuClkSrcT = 3
	SOC_CPU_CLK_SRC_INVALID SocCpuClkSrcT = 4
)

type SocRtcSlowClkSrcT c.Int

const (
	SOC_RTC_SLOW_CLK_SRC_RC_SLOW      SocRtcSlowClkSrcT = 0
	SOC_RTC_SLOW_CLK_SRC_XTAL32K      SocRtcSlowClkSrcT = 1
	SOC_RTC_SLOW_CLK_SRC_RC_FAST_D256 SocRtcSlowClkSrcT = 2
	SOC_RTC_SLOW_CLK_SRC_INVALID      SocRtcSlowClkSrcT = 3
)

type SocRtcFastClkSrcT c.Int

const (
	SOC_RTC_FAST_CLK_SRC_XTAL_D4  SocRtcFastClkSrcT = 0
	SOC_RTC_FAST_CLK_SRC_XTAL_DIV SocRtcFastClkSrcT = 0
	SOC_RTC_FAST_CLK_SRC_RC_FAST  SocRtcFastClkSrcT = 1
	SOC_RTC_FAST_CLK_SRC_INVALID  SocRtcFastClkSrcT = 2
)

type SocXtalFreqT c.Int

const SOC_XTAL_FREQ_40M SocXtalFreqT = 40

type SocModuleClkT c.Int

const (
	SOC_MOD_CLK_CPU          SocModuleClkT = 1
	SOC_MOD_CLK_RTC_FAST     SocModuleClkT = 2
	SOC_MOD_CLK_RTC_SLOW     SocModuleClkT = 3
	SOC_MOD_CLK_APB          SocModuleClkT = 4
	SOC_MOD_CLK_PLL_F160M    SocModuleClkT = 5
	SOC_MOD_CLK_XTAL32K      SocModuleClkT = 6
	SOC_MOD_CLK_RC_FAST      SocModuleClkT = 7
	SOC_MOD_CLK_RC_FAST_D256 SocModuleClkT = 8
	SOC_MOD_CLK_XTAL         SocModuleClkT = 9
	SOC_MOD_CLK_REF_TICK     SocModuleClkT = 10
	SOC_MOD_CLK_APLL         SocModuleClkT = 11
	SOC_MOD_CLK_TEMP_SENSOR  SocModuleClkT = 12
	SOC_MOD_CLK_INVALID      SocModuleClkT = 13
)

type SocPeriphSystimerClkSrcT c.Int

const (
	SYSTIMER_CLK_SRC_XTAL    SocPeriphSystimerClkSrcT = 9
	SYSTIMER_CLK_SRC_DEFAULT SocPeriphSystimerClkSrcT = 9
)

type SocPeriphGptimerClkSrcT c.Int

const (
	GPTIMER_CLK_SRC_APB     SocPeriphGptimerClkSrcT = 4
	GPTIMER_CLK_SRC_XTAL    SocPeriphGptimerClkSrcT = 9
	GPTIMER_CLK_SRC_DEFAULT SocPeriphGptimerClkSrcT = 4
)

type SocPeriphTgClkSrcLegacyT c.Int

const (
	TIMER_SRC_CLK_APB     SocPeriphTgClkSrcLegacyT = 4
	TIMER_SRC_CLK_XTAL    SocPeriphTgClkSrcLegacyT = 9
	TIMER_SRC_CLK_DEFAULT SocPeriphTgClkSrcLegacyT = 4
)

type SocPeriphLcdClkSrcT c.Int

const (
	LCD_CLK_SRC_PLL160M SocPeriphLcdClkSrcT = 5
	LCD_CLK_SRC_DEFAULT SocPeriphLcdClkSrcT = 5
)

type SocPeriphRmtClkSrcT c.Int

const (
	RMT_CLK_SRC_APB      SocPeriphRmtClkSrcT = 4
	RMT_CLK_SRC_REF_TICK SocPeriphRmtClkSrcT = 10
	RMT_CLK_SRC_DEFAULT  SocPeriphRmtClkSrcT = 4
)

type SocPeriphRmtClkSrcLegacyT c.Int

const (
	RMT_BASECLK_APB     SocPeriphRmtClkSrcLegacyT = 4
	RMT_BASECLK_REF     SocPeriphRmtClkSrcLegacyT = 10
	RMT_BASECLK_DEFAULT SocPeriphRmtClkSrcLegacyT = 4
)

type SocPeriphTemperatureSensorClkSrcT c.Int

const (
	TEMPERATURE_SENSOR_CLK_SRC_RC_FAST SocPeriphTemperatureSensorClkSrcT = 12
	TEMPERATURE_SENSOR_CLK_SRC_DEFAULT SocPeriphTemperatureSensorClkSrcT = 12
)

type SocPeriphUartClkSrcLegacyT c.Int

const (
	UART_SCLK_APB      SocPeriphUartClkSrcLegacyT = 4
	UART_SCLK_REF_TICK SocPeriphUartClkSrcLegacyT = 10
	UART_SCLK_DEFAULT  SocPeriphUartClkSrcLegacyT = 4
)

type SocPeriphI2sClkSrcT c.Int

const (
	I2S_CLK_SRC_DEFAULT  SocPeriphI2sClkSrcT = 5
	I2S_CLK_SRC_PLL_160M SocPeriphI2sClkSrcT = 5
	I2S_CLK_SRC_APLL     SocPeriphI2sClkSrcT = 11
)

type SocPeriphI2cClkSrcT c.Int

const (
	I2C_CLK_SRC_APB      SocPeriphI2cClkSrcT = 4
	I2C_CLK_SRC_REF_TICK SocPeriphI2cClkSrcT = 10
	I2C_CLK_SRC_DEFAULT  SocPeriphI2cClkSrcT = 4
)

type SocPeriphSpiClkSrcT c.Int

const (
	SPI_CLK_SRC_DEFAULT SocPeriphSpiClkSrcT = 4
	SPI_CLK_SRC_APB     SocPeriphSpiClkSrcT = 4
)

type SocPeriphSdmClkSrcT c.Int

const (
	SDM_CLK_SRC_APB     SocPeriphSdmClkSrcT = 4
	SDM_CLK_SRC_DEFAULT SocPeriphSdmClkSrcT = 4
)

type SocPeriphGlitchFilterClkSrcT c.Int

const (
	GLITCH_FILTER_CLK_SRC_APB     SocPeriphGlitchFilterClkSrcT = 4
	GLITCH_FILTER_CLK_SRC_DEFAULT SocPeriphGlitchFilterClkSrcT = 4
)

type SocPeriphDacDigiClkSrcT c.Int

const (
	DAC_DIGI_CLK_SRC_APB     SocPeriphDacDigiClkSrcT = 4
	DAC_DIGI_CLK_SRC_APLL    SocPeriphDacDigiClkSrcT = 11
	DAC_DIGI_CLK_SRC_DEFAULT SocPeriphDacDigiClkSrcT = 4
)

type SocPeriphDacCosineClkSrcT c.Int

const (
	DAC_COSINE_CLK_SRC_RTC_FAST SocPeriphDacCosineClkSrcT = 2
	DAC_COSINE_CLK_SRC_DEFAULT  SocPeriphDacCosineClkSrcT = 2
)

type SocPeriphTwaiClkSrcT c.Int

const (
	TWAI_CLK_SRC_APB     SocPeriphTwaiClkSrcT = 4
	TWAI_CLK_SRC_DEFAULT SocPeriphTwaiClkSrcT = 4
)

type SocPeriphAdcDigiClkSrcT c.Int

const (
	ADC_DIGI_CLK_SRC_APB     SocPeriphAdcDigiClkSrcT = 4
	ADC_DIGI_CLK_SRC_APLL    SocPeriphAdcDigiClkSrcT = 11
	ADC_DIGI_CLK_SRC_DEFAULT SocPeriphAdcDigiClkSrcT = 4
)

type SocPeriphAdcRtcClkSrcT c.Int

const (
	ADC_RTC_CLK_SRC_RC_FAST SocPeriphAdcRtcClkSrcT = 7
	ADC_RTC_CLK_SRC_DEFAULT SocPeriphAdcRtcClkSrcT = 7
)

type SocPeriphMwdtClkSrcT c.Int

const (
	MWDT_CLK_SRC_APB     SocPeriphMwdtClkSrcT = 4
	MWDT_CLK_SRC_DEFAULT SocPeriphMwdtClkSrcT = 4
)

type SocPeriphLedcClkSrcLegacyT c.Int

const (
	LEDC_AUTO_CLK        SocPeriphLedcClkSrcLegacyT = 0
	LEDC_USE_APB_CLK     SocPeriphLedcClkSrcLegacyT = 4
	LEDC_USE_RC_FAST_CLK SocPeriphLedcClkSrcLegacyT = 7
	LEDC_USE_REF_TICK    SocPeriphLedcClkSrcLegacyT = 10
	LEDC_USE_XTAL_CLK    SocPeriphLedcClkSrcLegacyT = 9
	LEDC_USE_RTC8M_CLK   SocPeriphLedcClkSrcLegacyT = 7
)

type SocClkoutSigIdT c.Int

const (
	CLKOUT_SIG_PLL      SocClkoutSigIdT = 1
	CLKOUT_SIG_RC_SLOW  SocClkoutSigIdT = 4
	CLKOUT_SIG_XTAL     SocClkoutSigIdT = 5
	CLKOUT_SIG_APLL     SocClkoutSigIdT = 6
	CLKOUT_SIG_REF_TICK SocClkoutSigIdT = 12
	CLKOUT_SIG_PLL_F80M SocClkoutSigIdT = 13
	CLKOUT_SIG_RC_FAST  SocClkoutSigIdT = 14
	CLKOUT_SIG_INVALID  SocClkoutSigIdT = 255
)

type SpiHostDeviceT c.Int

const (
	SPI1_HOST    SpiHostDeviceT = 0
	SPI2_HOST    SpiHostDeviceT = 1
	SPI3_HOST    SpiHostDeviceT = 2
	SPI_HOST_MAX SpiHostDeviceT = 3
)

type SpiClockSourceT SocPeriphSpiClkSrcT
type SpiEventT c.Int

const (
	SPI_EV_BUF_TX         SpiEventT = 1
	SPI_EV_BUF_RX         SpiEventT = 2
	SPI_EV_SEND_DMA_READY SpiEventT = 4
	SPI_EV_SEND           SpiEventT = 8
	SPI_EV_RECV_DMA_READY SpiEventT = 16
	SPI_EV_RECV           SpiEventT = 32
	SPI_EV_CMD9           SpiEventT = 64
	SPI_EV_CMDA           SpiEventT = 128
	SPI_EV_TRANS          SpiEventT = 256
)

/**
 * @brief Line mode of SPI transaction phases: CMD, ADDR, DOUT/DIN.
 */

type SpiLineModeT struct {
	CmdLines  c.Uint8T
	AddrLines c.Uint8T
	DataLines c.Uint8T
}
type SpiCommandT c.Int

const (
	SPI_CMD_HD_WRBUF   SpiCommandT = 1
	SPI_CMD_HD_RDBUF   SpiCommandT = 2
	SPI_CMD_HD_WRDMA   SpiCommandT = 4
	SPI_CMD_HD_RDDMA   SpiCommandT = 8
	SPI_CMD_HD_SEG_END SpiCommandT = 16
	SPI_CMD_HD_EN_QPI  SpiCommandT = 32
	SPI_CMD_HD_WR_END  SpiCommandT = 64
	SPI_CMD_HD_INT0    SpiCommandT = 128
	SPI_CMD_HD_INT1    SpiCommandT = 256
	SPI_CMD_HD_INT2    SpiCommandT = 512
)

type SpiSamplingPointT c.Int

const (
	SPI_SAMPLING_POINT_PHASE_0 SpiSamplingPointT = 0
	SPI_SAMPLING_POINT_PHASE_1 SpiSamplingPointT = 1
)

type PeriphInterrputT c.Int

const (
	ETS_WIFI_MAC_INTR_SOURCE              PeriphInterrputT = 0
	ETS_WIFI_MAC_NMI_SOURCE               PeriphInterrputT = 1
	ETS_WIFI_PWR_INTR_SOURCE              PeriphInterrputT = 2
	ETS_WIFI_BB_INTR_SOURCE               PeriphInterrputT = 3
	ETS_BT_MAC_INTR_SOURCE                PeriphInterrputT = 4
	ETS_BT_BB_INTR_SOURCE                 PeriphInterrputT = 5
	ETS_BT_BB_NMI_SOURCE                  PeriphInterrputT = 6
	ETS_RWBT_INTR_SOURCE                  PeriphInterrputT = 7
	ETS_RWBLE_INTR_SOURCE                 PeriphInterrputT = 8
	ETS_RWBT_NMI_SOURCE                   PeriphInterrputT = 9
	ETS_RWBLE_NMI_SOURCE                  PeriphInterrputT = 10
	ETS_SLC0_INTR_SOURCE                  PeriphInterrputT = 11
	ETS_SLC1_INTR_SOURCE                  PeriphInterrputT = 12
	ETS_UHCI0_INTR_SOURCE                 PeriphInterrputT = 13
	ETS_UHCI1_INTR_SOURCE                 PeriphInterrputT = 14
	ETS_TG0_T0_LEVEL_INTR_SOURCE          PeriphInterrputT = 15
	ETS_TG0_T1_LEVEL_INTR_SOURCE          PeriphInterrputT = 16
	ETS_TG0_WDT_LEVEL_INTR_SOURCE         PeriphInterrputT = 17
	ETS_TG0_LACT_LEVEL_INTR_SOURCE        PeriphInterrputT = 18
	ETS_TG1_T0_LEVEL_INTR_SOURCE          PeriphInterrputT = 19
	ETS_TG1_T1_LEVEL_INTR_SOURCE          PeriphInterrputT = 20
	ETS_TG1_WDT_LEVEL_INTR_SOURCE         PeriphInterrputT = 21
	ETS_TG1_LACT_LEVEL_INTR_SOURCE        PeriphInterrputT = 22
	ETS_GPIO_INTR_SOURCE                  PeriphInterrputT = 23
	ETS_GPIO_NMI_SOURCE                   PeriphInterrputT = 24
	ETS_GPIO_INTR_SOURCE2                 PeriphInterrputT = 25
	ETS_GPIO_NMI_SOURCE2                  PeriphInterrputT = 26
	ETS_DEDICATED_GPIO_INTR_SOURCE        PeriphInterrputT = 27
	ETS_FROM_CPU_INTR0_SOURCE             PeriphInterrputT = 28
	ETS_FROM_CPU_INTR1_SOURCE             PeriphInterrputT = 29
	ETS_FROM_CPU_INTR2_SOURCE             PeriphInterrputT = 30
	ETS_FROM_CPU_INTR3_SOURCE             PeriphInterrputT = 31
	ETS_SPI1_INTR_SOURCE                  PeriphInterrputT = 32
	ETS_SPI2_INTR_SOURCE                  PeriphInterrputT = 33
	ETS_SPI3_INTR_SOURCE                  PeriphInterrputT = 34
	ETS_I2S0_INTR_SOURCE                  PeriphInterrputT = 35
	ETS_UART0_INTR_SOURCE                 PeriphInterrputT = 37
	ETS_UART1_INTR_SOURCE                 PeriphInterrputT = 38
	ETS_UART2_INTR_SOURCE                 PeriphInterrputT = 39
	ETS_SDIO_HOST_INTR_SOURCE             PeriphInterrputT = 40
	ETS_LEDC_INTR_SOURCE                  PeriphInterrputT = 45
	ETS_EFUSE_INTR_SOURCE                 PeriphInterrputT = 46
	ETS_TWAI_INTR_SOURCE                  PeriphInterrputT = 47
	ETS_USB_INTR_SOURCE                   PeriphInterrputT = 48
	ETS_RTC_CORE_INTR_SOURCE              PeriphInterrputT = 49
	ETS_RMT_INTR_SOURCE                   PeriphInterrputT = 50
	ETS_PCNT_INTR_SOURCE                  PeriphInterrputT = 51
	ETS_I2C_EXT0_INTR_SOURCE              PeriphInterrputT = 52
	ETS_I2C_EXT1_INTR_SOURCE              PeriphInterrputT = 53
	ETS_RSA_INTR_SOURCE                   PeriphInterrputT = 54
	ETS_SHA_INTR_SOURCE                   PeriphInterrputT = 55
	ETS_AES_INTR_SOURCE                   PeriphInterrputT = 56
	ETS_SPI2_DMA_INTR_SOURCE              PeriphInterrputT = 57
	ETS_SPI3_DMA_INTR_SOURCE              PeriphInterrputT = 58
	ETS_WDT_INTR_SOURCE                   PeriphInterrputT = 59
	ETS_TIMER1_INTR_SOURCE                PeriphInterrputT = 60
	ETS_TIMER2_INTR_SOURCE                PeriphInterrputT = 61
	ETS_TG0_T0_EDGE_INTR_SOURCE           PeriphInterrputT = 62
	ETS_TG0_T1_EDGE_INTR_SOURCE           PeriphInterrputT = 63
	ETS_TG0_WDT_EDGE_INTR_SOURCE          PeriphInterrputT = 64
	ETS_TG0_LACT_EDGE_INTR_SOURCE         PeriphInterrputT = 65
	ETS_TG1_T0_EDGE_INTR_SOURCE           PeriphInterrputT = 66
	ETS_TG1_T1_EDGE_INTR_SOURCE           PeriphInterrputT = 67
	ETS_TG1_WDT_EDGE_INTR_SOURCE          PeriphInterrputT = 68
	ETS_TG1_LACT_EDGE_INTR_SOURCE         PeriphInterrputT = 69
	ETS_CACHE_IA_INTR_SOURCE              PeriphInterrputT = 70
	ETS_SYSTIMER_TARGET0_INTR_SOURCE      PeriphInterrputT = 71
	ETS_SYSTIMER_TARGET1_INTR_SOURCE      PeriphInterrputT = 72
	ETS_SYSTIMER_TARGET2_INTR_SOURCE      PeriphInterrputT = 73
	ETS_SYSTIMER_TARGET0_EDGE_INTR_SOURCE PeriphInterrputT = 71
	ETS_SYSTIMER_TARGET1_EDGE_INTR_SOURCE PeriphInterrputT = 72
	ETS_SYSTIMER_TARGET2_EDGE_INTR_SOURCE PeriphInterrputT = 73
	ETS_ASSIST_DEBUG_INTR_SOURCE          PeriphInterrputT = 74
	ETS_PMS_PRO_IRAM0_ILG_INTR_SOURCE     PeriphInterrputT = 75
	ETS_PMS_PRO_DRAM0_ILG_INTR_SOURCE     PeriphInterrputT = 76
	ETS_PMS_PRO_DPORT_ILG_INTR_SOURCE     PeriphInterrputT = 77
	ETS_PMS_PRO_AHB_ILG_INTR_SOURCE       PeriphInterrputT = 78
	ETS_PMS_PRO_CACHE_ILG_INTR_SOURCE     PeriphInterrputT = 79
	ETS_PMS_DMA_APB_I_ILG_INTR_SOURCE     PeriphInterrputT = 80
	ETS_PMS_DMA_RX_I_ILG_INTR_SOURCE      PeriphInterrputT = 81
	ETS_PMS_DMA_TX_I_ILG_INTR_SOURCE      PeriphInterrputT = 82
	ETS_SPI_MEM_REJECT_CACHE_INTR_SOURCE  PeriphInterrputT = 83
	ETS_DMA_COPY_INTR_SOURCE              PeriphInterrputT = 84
	ETS_SPI4_DMA_INTR_SOURCE              PeriphInterrputT = 85
	ETS_SPI4_INTR_SOURCE                  PeriphInterrputT = 86
	ETS_ICACHE_PRELOAD_INTR_SOURCE        PeriphInterrputT = 87
	ETS_DCACHE_PRELOAD_INTR_SOURCE        PeriphInterrputT = 88
	ETS_APB_ADC_INTR_SOURCE               PeriphInterrputT = 89
	ETS_CRYPTO_DMA_INTR_SOURCE            PeriphInterrputT = 90
	ETS_CPU_PERI_ERROR_INTR_SOURCE        PeriphInterrputT = 91
	ETS_APB_PERI_ERROR_INTR_SOURCE        PeriphInterrputT = 92
	ETS_DCACHE_SYNC_INTR_SOURCE           PeriphInterrputT = 93
	ETS_ICACHE_SYNC_INTR_SOURCE           PeriphInterrputT = 94
	ETS_MAX_INTR_SOURCE                   PeriphInterrputT = 95
)

type SpiDevS struct {
	Cmd struct {
		Val c.Uint32T
	}
	Addr c.Uint32T
	Ctrl struct {
		Val c.Uint32T
	}
	Ctrl1 struct {
		Val c.Uint32T
	}
	Ctrl2 struct {
		Val c.Uint32T
	}
	Clock struct {
		Val c.Uint32T
	}
	User struct {
		Val c.Uint32T
	}
	User1 struct {
		Val c.Uint32T
	}
	User2 struct {
		Val c.Uint32T
	}
	MosiDlen struct {
		Val c.Uint32T
	}
	MisoDlen struct {
		Val c.Uint32T
	}
	Misc struct {
		Val c.Uint32T
	}
	Slave struct {
		Val c.Uint32T
	}
	Slave1 struct {
		Val c.Uint32T
	}
	SlvWrbufDlen struct {
		Val c.Uint32T
	}
	SlvRdbufDlen struct {
		Val c.Uint32T
	}
	SlvRdByte struct {
		Val c.Uint32T
	}
	Fsm struct {
		Val c.Uint32T
	}
	Hold struct {
		Val c.Uint32T
	}
	DmaConf struct {
		Val c.Uint32T
	}
	DmaOutLink struct {
		Val c.Uint32T
	}
	DmaInLink struct {
		Val c.Uint32T
	}
	DmaIntEna struct {
		Val c.Uint32T
	}
	DmaIntRaw struct {
		Val c.Uint32T
	}
	DmaIntSt struct {
		Val c.Uint32T
	}
	DmaIntClr struct {
		Val c.Uint32T
	}
	DmaInErrEofDesAddr  c.Uint32T
	DmaInSucEofDesAddr  c.Uint32T
	DmaInlinkDscr       c.Uint32T
	DmaInlinkDscrBf0    c.Uint32T
	DmaInlinkDscrBf1    c.Uint32T
	DmaOutEofBfrDesAddr c.Uint32T
	DmaOutEofDesAddr    c.Uint32T
	DmaOutlinkDscr      c.Uint32T
	DmaOutlinkDscrBf0   c.Uint32T
	DmaOutlinkDscrBf1   c.Uint32T
	DmaOutStatus        struct {
		Val c.Uint32T
	}
	DmaInStatus struct {
		Val c.Uint32T
	}
	DataBuf [18]c.Uint32T
	DinMode struct {
		Val c.Uint32T
	}
	DinNum struct {
		Val c.Uint32T
	}
	DoutMode struct {
		Val c.Uint32T
	}
	DoutNum struct {
		Val c.Uint32T
	}
	LcdCtrl struct {
		Val c.Uint32T
	}
	LcdCtrl1 struct {
		Val c.Uint32T
	}
	LcdCtrl2 struct {
		Val c.Uint32T
	}
	LcdDMode struct {
		Val c.Uint32T
	}
	LcdDNum struct {
		Val c.Uint32T
	}
	Reserved104 c.Uint32T
	Reserved108 c.Uint32T
	Reserved10c c.Uint32T
	Reserved110 c.Uint32T
	Reserved114 c.Uint32T
	Reserved118 c.Uint32T
	Reserved11c c.Uint32T
	Reserved120 c.Uint32T
	Reserved124 c.Uint32T
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	Reserved14c c.Uint32T
	Reserved150 c.Uint32T
	Reserved154 c.Uint32T
	Reserved158 c.Uint32T
	Reserved15c c.Uint32T
	Reserved160 c.Uint32T
	Reserved164 c.Uint32T
	Reserved168 c.Uint32T
	Reserved16c c.Uint32T
	Reserved170 c.Uint32T
	Reserved174 c.Uint32T
	Reserved178 c.Uint32T
	Reserved17c c.Uint32T
	Reserved180 c.Uint32T
	Reserved184 c.Uint32T
	Reserved188 c.Uint32T
	Reserved18c c.Uint32T
	Reserved190 c.Uint32T
	Reserved194 c.Uint32T
	Reserved198 c.Uint32T
	Reserved19c c.Uint32T
	Reserved1a0 c.Uint32T
	Reserved1a4 c.Uint32T
	Reserved1a8 c.Uint32T
	Reserved1ac c.Uint32T
	Reserved1b0 c.Uint32T
	Reserved1b4 c.Uint32T
	Reserved1b8 c.Uint32T
	Reserved1bc c.Uint32T
	Reserved1c0 c.Uint32T
	Reserved1c4 c.Uint32T
	Reserved1c8 c.Uint32T
	Reserved1cc c.Uint32T
	Reserved1d0 c.Uint32T
	Reserved1d4 c.Uint32T
	Reserved1d8 c.Uint32T
	Reserved1dc c.Uint32T
	Reserved1e0 c.Uint32T
	Reserved1e4 c.Uint32T
	Reserved1e8 c.Uint32T
	Reserved1ec c.Uint32T
	Reserved1f0 c.Uint32T
	Reserved1f4 c.Uint32T
	Reserved1f8 c.Uint32T
	Reserved1fc c.Uint32T
	Reserved200 c.Uint32T
	Reserved204 c.Uint32T
	Reserved208 c.Uint32T
	Reserved20c c.Uint32T
	Reserved210 c.Uint32T
	Reserved214 c.Uint32T
	Reserved218 c.Uint32T
	Reserved21c c.Uint32T
	Reserved220 c.Uint32T
	Reserved224 c.Uint32T
	Reserved228 c.Uint32T
	Reserved22c c.Uint32T
	Reserved230 c.Uint32T
	Reserved234 c.Uint32T
	Reserved238 c.Uint32T
	Reserved23c c.Uint32T
	Reserved240 c.Uint32T
	Reserved244 c.Uint32T
	Reserved248 c.Uint32T
	Reserved24c c.Uint32T
	Reserved250 c.Uint32T
	Reserved254 c.Uint32T
	Reserved258 c.Uint32T
	Reserved25c c.Uint32T
	Reserved260 c.Uint32T
	Reserved264 c.Uint32T
	Reserved268 c.Uint32T
	Reserved26c c.Uint32T
	Reserved270 c.Uint32T
	Reserved274 c.Uint32T
	Reserved278 c.Uint32T
	Reserved27c c.Uint32T
	Reserved280 c.Uint32T
	Reserved284 c.Uint32T
	Reserved288 c.Uint32T
	Reserved28c c.Uint32T
	Reserved290 c.Uint32T
	Reserved294 c.Uint32T
	Reserved298 c.Uint32T
	Reserved29c c.Uint32T
	Reserved2a0 c.Uint32T
	Reserved2a4 c.Uint32T
	Reserved2a8 c.Uint32T
	Reserved2ac c.Uint32T
	Reserved2b0 c.Uint32T
	Reserved2b4 c.Uint32T
	Reserved2b8 c.Uint32T
	Reserved2bc c.Uint32T
	Reserved2c0 c.Uint32T
	Reserved2c4 c.Uint32T
	Reserved2c8 c.Uint32T
	Reserved2cc c.Uint32T
	Reserved2d0 c.Uint32T
	Reserved2d4 c.Uint32T
	Reserved2d8 c.Uint32T
	Reserved2dc c.Uint32T
	Reserved2e0 c.Uint32T
	Reserved2e4 c.Uint32T
	Reserved2e8 c.Uint32T
	Reserved2ec c.Uint32T
	Reserved2f0 c.Uint32T
	Reserved2f4 c.Uint32T
	Reserved2f8 c.Uint32T
	Reserved2fc c.Uint32T
	Reserved300 c.Uint32T
	Reserved304 c.Uint32T
	Reserved308 c.Uint32T
	Reserved30c c.Uint32T
	Reserved310 c.Uint32T
	Reserved314 c.Uint32T
	Reserved318 c.Uint32T
	Reserved31c c.Uint32T
	Reserved320 c.Uint32T
	Reserved324 c.Uint32T
	Reserved328 c.Uint32T
	Reserved32c c.Uint32T
	Reserved330 c.Uint32T
	Reserved334 c.Uint32T
	Reserved338 c.Uint32T
	Reserved33c c.Uint32T
	Reserved340 c.Uint32T
	Reserved344 c.Uint32T
	Reserved348 c.Uint32T
	Reserved34c c.Uint32T
	Reserved350 c.Uint32T
	Reserved354 c.Uint32T
	Reserved358 c.Uint32T
	Reserved35c c.Uint32T
	Reserved360 c.Uint32T
	Reserved364 c.Uint32T
	Reserved368 c.Uint32T
	Reserved36c c.Uint32T
	Reserved370 c.Uint32T
	Reserved374 c.Uint32T
	Reserved378 c.Uint32T
	Reserved37c c.Uint32T
	Reserved380 c.Uint32T
	Reserved384 c.Uint32T
	Reserved388 c.Uint32T
	Reserved38c c.Uint32T
	Reserved390 c.Uint32T
	Reserved394 c.Uint32T
	Reserved398 c.Uint32T
	Reserved39c c.Uint32T
	Reserved3a0 c.Uint32T
	Reserved3a4 c.Uint32T
	Reserved3a8 c.Uint32T
	Reserved3ac c.Uint32T
	Reserved3b0 c.Uint32T
	Reserved3b4 c.Uint32T
	Reserved3b8 c.Uint32T
	Reserved3bc c.Uint32T
	Reserved3c0 c.Uint32T
	Reserved3c4 c.Uint32T
	Reserved3c8 c.Uint32T
	Reserved3cc c.Uint32T
	Reserved3d0 c.Uint32T
	Reserved3d4 c.Uint32T
	Reserved3d8 c.Uint32T
	Reserved3dc c.Uint32T
	Reserved3e0 c.Uint32T
	Reserved3e4 c.Uint32T
	Reserved3e8 c.Uint32T
	Reserved3ec c.Uint32T
	Reserved3f0 c.Uint32T
	Reserved3f4 c.Uint32T
	Reserved3f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type SpiDevT SpiDevS

type SpiMemDevS struct {
	Cmd struct {
		Val c.Uint32T
	}
	Addr c.Uint32T
	Ctrl struct {
		Val c.Uint32T
	}
	Ctrl1 struct {
		Val c.Uint32T
	}
	Ctrl2 struct {
		Val c.Uint32T
	}
	Clock struct {
		Val c.Uint32T
	}
	User struct {
		Val c.Uint32T
	}
	User1 struct {
		Val c.Uint32T
	}
	User2 struct {
		Val c.Uint32T
	}
	MosiDlen struct {
		Val c.Uint32T
	}
	MisoDlen struct {
		Val c.Uint32T
	}
	RdStatus struct {
		Val c.Uint32T
	}
	ExtAddr c.Uint32T
	Misc    struct {
		Val c.Uint32T
	}
	TxCrc      c.Uint32T
	CacheFctrl struct {
		Val c.Uint32T
	}
	CacheSctrl struct {
		Val c.Uint32T
	}
	SramCmd struct {
		Val c.Uint32T
	}
	SramDrdCmd struct {
		Val c.Uint32T
	}
	SramDwrCmd struct {
		Val c.Uint32T
	}
	SramClk struct {
		Val c.Uint32T
	}
	Fsm struct {
		Val c.Uint32T
	}
	DataBuf        [16]c.Uint32T
	FlashWaitiCtrl struct {
		Val c.Uint32T
	}
	FlashSusCmd struct {
		Val c.Uint32T
	}
	FlashSusCtrl struct {
		Val c.Uint32T
	}
	SusStatus struct {
		Val c.Uint32T
	}
	TimingCali struct {
		Val c.Uint32T
	}
	DinMode struct {
		Val c.Uint32T
	}
	DinNum struct {
		Val c.Uint32T
	}
	DoutMode struct {
		Val c.Uint32T
	}
	DoutNum struct {
		Val c.Uint32T
	}
	SpiSmemTimingCali struct {
		Val c.Uint32T
	}
	SpiSmemDinMode struct {
		Val c.Uint32T
	}
	SpiSmemDinNum struct {
		Val c.Uint32T
	}
	SpiSmemDoutMode struct {
		Val c.Uint32T
	}
	SpiSmemDoutNum struct {
		Val c.Uint32T
	}
	SpiSmemAc struct {
		Val c.Uint32T
	}
	Ddr struct {
		Val c.Uint32T
	}
	SpiSmemDdr struct {
		Val c.Uint32T
	}
	ClockGate struct {
		Val c.Uint32T
	}
	SpiCoreClkSel struct {
		Val c.Uint32T
	}
	ReservedE4  c.Uint32T
	ReservedE8  c.Uint32T
	ReservedEc  c.Uint32T
	ReservedF0  c.Uint32T
	ReservedF4  c.Uint32T
	ReservedF8  c.Uint32T
	ReservedFc  c.Uint32T
	Reserved100 c.Uint32T
	Reserved104 c.Uint32T
	Reserved108 c.Uint32T
	Reserved10c c.Uint32T
	Reserved110 c.Uint32T
	Reserved114 c.Uint32T
	Reserved118 c.Uint32T
	Reserved11c c.Uint32T
	Reserved120 c.Uint32T
	Reserved124 c.Uint32T
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	Reserved14c c.Uint32T
	Reserved150 c.Uint32T
	Reserved154 c.Uint32T
	Reserved158 c.Uint32T
	Reserved15c c.Uint32T
	Reserved160 c.Uint32T
	Reserved164 c.Uint32T
	Reserved168 c.Uint32T
	Reserved16c c.Uint32T
	Reserved170 c.Uint32T
	Reserved174 c.Uint32T
	Reserved178 c.Uint32T
	Reserved17c c.Uint32T
	Reserved180 c.Uint32T
	Reserved184 c.Uint32T
	Reserved188 c.Uint32T
	Reserved18c c.Uint32T
	Reserved190 c.Uint32T
	Reserved194 c.Uint32T
	Reserved198 c.Uint32T
	Reserved19c c.Uint32T
	Reserved1a0 c.Uint32T
	Reserved1a4 c.Uint32T
	Reserved1a8 c.Uint32T
	Reserved1ac c.Uint32T
	Reserved1b0 c.Uint32T
	Reserved1b4 c.Uint32T
	Reserved1b8 c.Uint32T
	Reserved1bc c.Uint32T
	Reserved1c0 c.Uint32T
	Reserved1c4 c.Uint32T
	Reserved1c8 c.Uint32T
	Reserved1cc c.Uint32T
	Reserved1d0 c.Uint32T
	Reserved1d4 c.Uint32T
	Reserved1d8 c.Uint32T
	Reserved1dc c.Uint32T
	Reserved1e0 c.Uint32T
	Reserved1e4 c.Uint32T
	Reserved1e8 c.Uint32T
	Reserved1ec c.Uint32T
	Reserved1f0 c.Uint32T
	Reserved1f4 c.Uint32T
	Reserved1f8 c.Uint32T
	Reserved1fc c.Uint32T
	Reserved200 c.Uint32T
	Reserved204 c.Uint32T
	Reserved208 c.Uint32T
	Reserved20c c.Uint32T
	Reserved210 c.Uint32T
	Reserved214 c.Uint32T
	Reserved218 c.Uint32T
	Reserved21c c.Uint32T
	Reserved220 c.Uint32T
	Reserved224 c.Uint32T
	Reserved228 c.Uint32T
	Reserved22c c.Uint32T
	Reserved230 c.Uint32T
	Reserved234 c.Uint32T
	Reserved238 c.Uint32T
	Reserved23c c.Uint32T
	Reserved240 c.Uint32T
	Reserved244 c.Uint32T
	Reserved248 c.Uint32T
	Reserved24c c.Uint32T
	Reserved250 c.Uint32T
	Reserved254 c.Uint32T
	Reserved258 c.Uint32T
	Reserved25c c.Uint32T
	Reserved260 c.Uint32T
	Reserved264 c.Uint32T
	Reserved268 c.Uint32T
	Reserved26c c.Uint32T
	Reserved270 c.Uint32T
	Reserved274 c.Uint32T
	Reserved278 c.Uint32T
	Reserved27c c.Uint32T
	Reserved280 c.Uint32T
	Reserved284 c.Uint32T
	Reserved288 c.Uint32T
	Reserved28c c.Uint32T
	Reserved290 c.Uint32T
	Reserved294 c.Uint32T
	Reserved298 c.Uint32T
	Reserved29c c.Uint32T
	Reserved2a0 c.Uint32T
	Reserved2a4 c.Uint32T
	Reserved2a8 c.Uint32T
	Reserved2ac c.Uint32T
	Reserved2b0 c.Uint32T
	Reserved2b4 c.Uint32T
	Reserved2b8 c.Uint32T
	Reserved2bc c.Uint32T
	Reserved2c0 c.Uint32T
	Reserved2c4 c.Uint32T
	Reserved2c8 c.Uint32T
	Reserved2cc c.Uint32T
	Reserved2d0 c.Uint32T
	Reserved2d4 c.Uint32T
	Reserved2d8 c.Uint32T
	Reserved2dc c.Uint32T
	Reserved2e0 c.Uint32T
	Reserved2e4 c.Uint32T
	Reserved2e8 c.Uint32T
	Reserved2ec c.Uint32T
	Reserved2f0 c.Uint32T
	Reserved2f4 c.Uint32T
	Reserved2f8 c.Uint32T
	Reserved2fc c.Uint32T
	Reserved300 c.Uint32T
	Reserved304 c.Uint32T
	Reserved308 c.Uint32T
	Reserved30c c.Uint32T
	Reserved310 c.Uint32T
	Reserved314 c.Uint32T
	Reserved318 c.Uint32T
	Reserved31c c.Uint32T
	Reserved320 c.Uint32T
	Reserved324 c.Uint32T
	Reserved328 c.Uint32T
	Reserved32c c.Uint32T
	Reserved330 c.Uint32T
	Reserved334 c.Uint32T
	Reserved338 c.Uint32T
	Reserved33c c.Uint32T
	Reserved340 c.Uint32T
	Reserved344 c.Uint32T
	Reserved348 c.Uint32T
	Reserved34c c.Uint32T
	Reserved350 c.Uint32T
	Reserved354 c.Uint32T
	Reserved358 c.Uint32T
	Reserved35c c.Uint32T
	Reserved360 c.Uint32T
	Reserved364 c.Uint32T
	Reserved368 c.Uint32T
	Reserved36c c.Uint32T
	Reserved370 c.Uint32T
	Reserved374 c.Uint32T
	Reserved378 c.Uint32T
	Reserved37c c.Uint32T
	Reserved380 c.Uint32T
	Reserved384 c.Uint32T
	Reserved388 c.Uint32T
	Reserved38c c.Uint32T
	Reserved390 c.Uint32T
	Reserved394 c.Uint32T
	Reserved398 c.Uint32T
	Reserved39c c.Uint32T
	Reserved3a0 c.Uint32T
	Reserved3a4 c.Uint32T
	Reserved3a8 c.Uint32T
	Reserved3ac c.Uint32T
	Reserved3b0 c.Uint32T
	Reserved3b4 c.Uint32T
	Reserved3b8 c.Uint32T
	Reserved3bc c.Uint32T
	Reserved3c0 c.Uint32T
	Reserved3c4 c.Uint32T
	Reserved3c8 c.Uint32T
	Reserved3cc c.Uint32T
	Reserved3d0 c.Uint32T
	Reserved3d4 c.Uint32T
	Reserved3d8 c.Uint32T
	Reserved3dc c.Uint32T
	Reserved3e0 c.Uint32T
	Reserved3e4 c.Uint32T
	Reserved3e8 c.Uint32T
	Reserved3ec c.Uint32T
	Reserved3f0 c.Uint32T
	Reserved3f4 c.Uint32T
	Reserved3f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type SpiMemDevT SpiMemDevS

/*
Stores a bunch of per-spi-peripheral data.
*/
type SpiSignalConnT struct {
	SpiclkOut      c.Uint8T
	SpiclkIn       c.Uint8T
	SpidOut        c.Uint8T
	SpiqOut        c.Uint8T
	SpiwpOut       c.Uint8T
	SpihdOut       c.Uint8T
	Spid4Out       c.Uint8T
	Spid5Out       c.Uint8T
	Spid6Out       c.Uint8T
	Spid7Out       c.Uint8T
	SpidIn         c.Uint8T
	SpiqIn         c.Uint8T
	SpiwpIn        c.Uint8T
	SpihdIn        c.Uint8T
	Spid4In        c.Uint8T
	Spid5In        c.Uint8T
	Spid6In        c.Uint8T
	Spid7In        c.Uint8T
	SpicsOut       [6]c.Uint8T
	SpicsIn        c.Uint8T
	SpidqsOut      c.Uint8T
	SpicdOut       c.Uint8T
	SpiclkIomuxPin c.Uint8T
	SpidIomuxPin   c.Uint8T
	SpiqIomuxPin   c.Uint8T
	SpiwpIomuxPin  c.Uint8T
	SpihdIomuxPin  c.Uint8T
	Spics0IomuxPin c.Uint8T
	Irq            c.Uint8T
	IrqDma         c.Uint8T
	Func           c.Int
	Hw             *SpiDevT
}
type GpspiFlashLlClockRegT c.Uint
type SpimemFlashLlClockRegT c.Uint

type SpiFlashLlClockRegT struct {
	Gpspi GpspiFlashLlClockRegT
}

/**
 * Generic driver context structure for all chips using the SPI peripheral.
 * Include this into the HEAD of the driver data for other driver
 * implementations that also use the SPI peripheral.
 */

type SpiFlashHalContextT struct {
	Inst         SpiFlashHostInstT
	Spi          *SpiDevT
	CsNum        c.Int
	ClockConf    SpiFlashLlClockRegT
	BaseIoMode   EspFlashIoModeT
	Flags        c.Uint32T
	SusCfg       SpiFlashSusCmdConf
	SlicerFlags  c.Uint32T
	FreqMhz      c.Int
	TsusVal      c.Uint8T
	AutoWaitiPes bool
}

// / This struct provide MSPI Flash necessary timing related config, should be consistent with that in union in `spi_flash_hal_config_t`.
type SpiFlashHalTimingConfigT struct {
	ExtraDummy  c.Uint32T
	CsHold      c.Uint32T
	CsSetup     c.Uint8T
	ClockConfig SpiFlashLlClockRegT
}

// / Configuration structure for the SPI driver.
type SpiFlashHalConfigT struct {
	Iomux             bool
	InputDelayNs      c.Int
	Speed             EspFlashSpeedS
	HostId            SpiHostDeviceT
	CsNum             c.Int
	AutoSusEn         bool
	OctalModeEn       bool
	UsingTimingTuning bool
	DefaultIoMode     EspFlashIoModeT
	FreqMhz           c.Int
	ClockSrcFreq      c.Int
	TsusVal           c.Uint8T
	AutoWaitiPes      bool
}
type EspRomSpiflashReadModeT c.Int

const (
	ESP_ROM_SPIFLASH_QIO_MODE         EspRomSpiflashReadModeT = 0
	ESP_ROM_SPIFLASH_QOUT_MODE        EspRomSpiflashReadModeT = 1
	ESP_ROM_SPIFLASH_DIO_MODE         EspRomSpiflashReadModeT = 2
	ESP_ROM_SPIFLASH_DOUT_MODE        EspRomSpiflashReadModeT = 3
	ESP_ROM_SPIFLASH_FASTRD_MODE      EspRomSpiflashReadModeT = 4
	ESP_ROM_SPIFLASH_SLOWRD_MODE      EspRomSpiflashReadModeT = 5
	ESP_ROM_SPIFLASH_OPI_STR_MODE     EspRomSpiflashReadModeT = 6
	ESP_ROM_SPIFLASH_OPI_DTR_MODE     EspRomSpiflashReadModeT = 7
	ESP_ROM_SPIFLASH_OOUT_MODE        EspRomSpiflashReadModeT = 8
	ESP_ROM_SPIFLASH_OIO_STR_MODE     EspRomSpiflashReadModeT = 9
	ESP_ROM_SPIFLASH_OIO_DTR_MODE     EspRomSpiflashReadModeT = 10
	ESP_ROM_SPIFLASH_QPI_MODE         EspRomSpiflashReadModeT = 11
	ESP_ROM_SPIFLASH_OPI_HEX_DTR_MODE EspRomSpiflashReadModeT = 12
)

type EspRomSpiflashChipT struct {
	DeviceId   c.Uint32T
	ChipSize   c.Uint32T
	BlockSize  c.Uint32T
	SectorSize c.Uint32T
	PageSize   c.Uint32T
	StatusMask c.Uint32T
}
type EspRomSpiflashResultT c.Int

const (
	ESP_ROM_SPIFLASH_RESULT_OK      EspRomSpiflashResultT = 0
	ESP_ROM_SPIFLASH_RESULT_ERR     EspRomSpiflashResultT = 1
	ESP_ROM_SPIFLASH_RESULT_TIMEOUT EspRomSpiflashResultT = 2
)

type GpioDevS struct {
	BtSelect c.Uint32T
	Out      c.Uint32T
	OutW1ts  c.Uint32T
	OutW1tc  c.Uint32T
	Out1     struct {
		Val c.Uint32T
	}
	Out1W1ts struct {
		Val c.Uint32T
	}
	Out1W1tc struct {
		Val c.Uint32T
	}
	SdioSelect struct {
		Val c.Uint32T
	}
	Enable     c.Uint32T
	EnableW1ts c.Uint32T
	EnableW1tc c.Uint32T
	Enable1    struct {
		Val c.Uint32T
	}
	Enable1W1ts struct {
		Val c.Uint32T
	}
	Enable1W1tc struct {
		Val c.Uint32T
	}
	Strap struct {
		Val c.Uint32T
	}
	In  c.Uint32T
	In1 struct {
		Val c.Uint32T
	}
	Status     c.Uint32T
	StatusW1ts c.Uint32T
	StatusW1tc c.Uint32T
	Status1    struct {
		Val c.Uint32T
	}
	Status1W1ts struct {
		Val c.Uint32T
	}
	Status1W1tc struct {
		Val c.Uint32T
	}
	PcpuInt    c.Uint32T
	PcpuNmiInt c.Uint32T
	CpusdioInt c.Uint32T
	PcpuInt1   struct {
		Val c.Uint32T
	}
	PcpuNmiInt1 struct {
		Val c.Uint32T
	}
	CpusdioInt1 struct {
		Val c.Uint32T
	}
	Pin [54]struct {
		Val c.Uint32T
	}
	StatusNext  c.Uint32T
	StatusNext1 struct {
		Val c.Uint32T
	}
	FuncInSelCfg [256]struct {
		Val c.Uint32T
	}
	FuncOutSelCfg [54]struct {
		Val c.Uint32T
	}
	ClockGate struct {
		Val c.Uint32T
	}
	Reserved630 c.Uint32T
	Reserved634 c.Uint32T
	Reserved638 c.Uint32T
	Reserved63c c.Uint32T
	Reserved640 c.Uint32T
	Reserved644 c.Uint32T
	Reserved648 c.Uint32T
	Reserved64c c.Uint32T
	Reserved650 c.Uint32T
	Reserved654 c.Uint32T
	Reserved658 c.Uint32T
	Reserved65c c.Uint32T
	Reserved660 c.Uint32T
	Reserved664 c.Uint32T
	Reserved668 c.Uint32T
	Reserved66c c.Uint32T
	Reserved670 c.Uint32T
	Reserved674 c.Uint32T
	Reserved678 c.Uint32T
	Reserved67c c.Uint32T
	Reserved680 c.Uint32T
	Reserved684 c.Uint32T
	Reserved688 c.Uint32T
	Reserved68c c.Uint32T
	Reserved690 c.Uint32T
	Reserved694 c.Uint32T
	Reserved698 c.Uint32T
	Reserved69c c.Uint32T
	Reserved6a0 c.Uint32T
	Reserved6a4 c.Uint32T
	Reserved6a8 c.Uint32T
	Reserved6ac c.Uint32T
	Reserved6b0 c.Uint32T
	Reserved6b4 c.Uint32T
	Reserved6b8 c.Uint32T
	Reserved6bc c.Uint32T
	Reserved6c0 c.Uint32T
	Reserved6c4 c.Uint32T
	Reserved6c8 c.Uint32T
	Reserved6cc c.Uint32T
	Reserved6d0 c.Uint32T
	Reserved6d4 c.Uint32T
	Reserved6d8 c.Uint32T
	Reserved6dc c.Uint32T
	Reserved6e0 c.Uint32T
	Reserved6e4 c.Uint32T
	Reserved6e8 c.Uint32T
	Reserved6ec c.Uint32T
	Reserved6f0 c.Uint32T
	Reserved6f4 c.Uint32T
	Reserved6f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type GpioDevT GpioDevS
type PeriphModuleT c.Int

const (
	PERIPH_LEDC_MODULE           PeriphModuleT = 0
	PERIPH_UART0_MODULE          PeriphModuleT = 1
	PERIPH_UART1_MODULE          PeriphModuleT = 2
	PERIPH_USB_MODULE            PeriphModuleT = 3
	PERIPH_I2C0_MODULE           PeriphModuleT = 4
	PERIPH_I2C1_MODULE           PeriphModuleT = 5
	PERIPH_I2S0_MODULE           PeriphModuleT = 6
	PERIPH_TIMG0_MODULE          PeriphModuleT = 7
	PERIPH_TIMG1_MODULE          PeriphModuleT = 8
	PERIPH_UHCI0_MODULE          PeriphModuleT = 9
	PERIPH_UHCI1_MODULE          PeriphModuleT = 10
	PERIPH_RMT_MODULE            PeriphModuleT = 11
	PERIPH_PCNT_MODULE           PeriphModuleT = 12
	PERIPH_SPI_MODULE            PeriphModuleT = 13
	PERIPH_FSPI_MODULE           PeriphModuleT = 14
	PERIPH_HSPI_MODULE           PeriphModuleT = 15
	PERIPH_SPI2_DMA_MODULE       PeriphModuleT = 16
	PERIPH_SPI3_DMA_MODULE       PeriphModuleT = 17
	PERIPH_TWAI_MODULE           PeriphModuleT = 18
	PERIPH_RNG_MODULE            PeriphModuleT = 19
	PERIPH_WIFI_MODULE           PeriphModuleT = 20
	PERIPH_WIFI_BT_COMMON_MODULE PeriphModuleT = 21
	PERIPH_SYSTIMER_MODULE       PeriphModuleT = 22
	PERIPH_AES_MODULE            PeriphModuleT = 23
	PERIPH_SHA_MODULE            PeriphModuleT = 24
	PERIPH_RSA_MODULE            PeriphModuleT = 25
	PERIPH_CRYPTO_DMA_MODULE     PeriphModuleT = 26
	PERIPH_AES_DMA_MODULE        PeriphModuleT = 27
	PERIPH_SHA_DMA_MODULE        PeriphModuleT = 28
	PERIPH_DEDIC_GPIO_MODULE     PeriphModuleT = 29
	PERIPH_SARADC_MODULE         PeriphModuleT = 30
	PERIPH_TEMPSENSOR_MODULE     PeriphModuleT = 31
	PERIPH_MODULE_MAX            PeriphModuleT = 32
)

// llgo:type C
type XtHalVoidFunc func()

/*
 * This structure is used to represent each MPU entry (both foreground and
 * background). The internal representation of the structure is subject to
 * change, so it should only be accessed by the XTHAL_MPU_ENTRY_... macros
 * below.
 */

type XthalMPUEntry struct {
	As c.Uint32T
	At c.Uint32T
}

/*
 *  Kernel vector mode exception stack frame.
 *
 *  NOTE:  due to the limited range of addi used in the current
 *  kernel exception vector, and the fact that historically
 *  the vector is limited to 12 bytes, the size of this
 *  stack frame is limited to 128 bytes (currently at 64).
 */

type KernelFrame struct {
	Pc   c.Long
	Ps   c.Long
	Areg [4]c.Long
	Sar  c.Long
}

/*
 *  User vector mode exception stack frame:
 *
 *  WARNING:  if you modify this structure, you MUST modify the
 *  computation of the pad size (ALIGNPAD) accordingly.
 */

type UserFrame struct {
	Pc       c.Long
	Ps       c.Long
	Sar      c.Long
	Vpri     c.Long
	A2       c.Long
	A3       c.Long
	A4       c.Long
	A5       c.Long
	Exccause c.Long
	Pad      [3]c.Long
}

/*
-------------------------------------------------------------------------------

	INTERRUPT/EXCEPTION STACK FRAME FOR A THREAD OR NESTED INTERRUPT

	A stack frame of this structure is allocated for any interrupt or exception.
	It goes on the current stack. If the RTOS has a system stack for handling
	interrupts, every thread stack must allow space for just one interrupt stack
	frame, then nested interrupt stack frames go on the system stack.

	The frame includes basic registers (explicit) and "extra" registers introduced
	by user TIE or the use of the MAC16 option in the user's Xtensa config.
	The frame size is minimized by omitting regs not applicable to user's config.

	For Windowed ABI, this stack frame includes the interruptee's base save area,
	another base save area to manage gcc nested functions, and a little temporary
	space to help manage the spilling of the register windows.

-------------------------------------------------------------------------------
*/
type XtExcFrame struct {
	Exit     c.Long
	Pc       c.Long
	Ps       c.Long
	A0       c.Long
	A1       c.Long
	A2       c.Long
	A3       c.Long
	A4       c.Long
	A5       c.Long
	A6       c.Long
	A7       c.Long
	A8       c.Long
	A9       c.Long
	A10      c.Long
	A11      c.Long
	A12      c.Long
	A13      c.Long
	A14      c.Long
	A15      c.Long
	Sar      c.Long
	Exccause c.Long
	Excvaddr c.Long
	Tmp0     c.Long
	Tmp1     c.Long
	Tmp2     c.Long
}

/*
-------------------------------------------------------------------------------

	SOLICITED STACK FRAME FOR A THREAD

	A stack frame of this structure is allocated whenever a thread enters the
	RTOS kernel intentionally (and synchronously) to submit to thread scheduling.
	It goes on the current thread's stack.

	The solicited frame only includes registers that are required to be preserved
	by the callee according to the compiler's ABI conventions, some space to save
	the return address for returning to the caller, and the caller's PS register.

	Note: Although the xtensa ABI considers the threadptr as "global" across
	functions (meanig it is neither caller or callee saved), it is treated as a
	callee-saved register in a solicited stack frame. This omits the need for the
	OS to include extra logic to save "global" registers on each context switch.
	Only the threadptr register is treated as callee-saved, as all other NCP
	(non-coprocessor extra) registers are caller-saved. See "tie.h" for more
	details.

	For Windowed ABI, this stack frame includes the caller's base save area.

	Note on XT_SOL_EXIT field:
	    It is necessary to distinguish a solicited from an interrupt stack frame.
	    This field corresponds to XT_STK_EXIT in the interrupt stack frame and is
	    always at the same offset (0). It can be written with a code (usually 0)
	    to distinguish a solicted frame from an interrupt frame. An RTOS port may
	    opt to ignore this field if it has another way of distinguishing frames.

-------------------------------------------------------------------------------
*/
type XtSolFrame struct {
	Exit      c.Long
	Pc        c.Long
	Ps        c.Long
	Threadptr c.Long
	A0        c.Long
	A1        c.Long
	A2        c.Long
	A3        c.Long
}

// llgo:type C
type TaskFunctionT func(c.Pointer)

/*
 *  Save area for saving entire core state, such as across Power Shut-Off (PSO).
 */

type XtosCoreState struct {
	Signature       c.Long
	RestoreLabel    c.Long
	AftersaveLabel  c.Long
	Areg            [64]c.Long
	CallerRegs      [16]c.Long
	CallerRegsSaved c.Long
	Windowbase      c.Long
	Windowstart     c.Long
	Sar             c.Long
	Epc1            c.Long
	Ps              c.Long
	Excsave1        c.Long
	Depc            c.Long
	Epc             [6]c.Long
	Eps             [6]c.Long
	Excsave         [6]c.Long
	Vecbase         c.Long
	Ccount          c.Long
	Ccompare        [3]c.Long
	Intenable       c.Long
	Interrupt       c.Long
	Icount          c.Long
	Icountlevel     c.Long
	Debugcause      c.Long
	Dbreakc         [2]c.Long
	Dbreaka         [2]c.Long
	Ibreaka         [2]c.Long
	Ibreakenable    c.Long
	Misc            [4]c.Long
	Cpenable        c.Long
	Tlbs            [16]c.Long
	Ncp             [4]c.Char
}

// llgo:type C
type X_xtosHandlerFunc func()
type X_xtosHandler *X_xtosHandlerFunc

// llgo:type C
type XtHandler func(c.Pointer)

// llgo:type C
type XtExcHandler func(*XtExcFrame)

// llgo:type C
type IntrHandlerT func(c.Pointer)

type IntrHandleDataT struct {
	Unused [8]uint8
}
type IntrHandleT *IntrHandleDataT
type EspIntrCpuAffinityT c.Int

const (
	ESP_INTR_CPU_AFFINITY_AUTO EspIntrCpuAffinityT = 0
	ESP_INTR_CPU_AFFINITY_0    EspIntrCpuAffinityT = 1
	ESP_INTR_CPU_AFFINITY_1    EspIntrCpuAffinityT = 2
)

type EspCpuCycleCountT c.Uint32T
type EspCpuIntrTypeT c.Int

const (
	ESP_CPU_INTR_TYPE_LEVEL EspCpuIntrTypeT = 0
	ESP_CPU_INTR_TYPE_EDGE  EspCpuIntrTypeT = 1
	ESP_CPU_INTR_TYPE_NA    EspCpuIntrTypeT = 2
)

/**
 * @brief CPU interrupt descriptor
 *
 * Each particular CPU interrupt has an associated descriptor describing that
 * particular interrupt's characteristics. Call esp_cpu_intr_get_desc() to get
 * the descriptors of a particular interrupt.
 */

type EspCpuIntrDescT struct {
	Priority c.Int
	Type     EspCpuIntrTypeT
	Flags    c.Uint32T
}

// llgo:type C
type EspCpuIntrHandlerT func(c.Pointer)
type EspCpuWatchpointTriggerT c.Int

const (
	ESP_CPU_WATCHPOINT_LOAD   EspCpuWatchpointTriggerT = 0
	ESP_CPU_WATCHPOINT_STORE  EspCpuWatchpointTriggerT = 1
	ESP_CPU_WATCHPOINT_ACCESS EspCpuWatchpointTriggerT = 2
)

type SpinlockT struct {
	Owner c.Uint32T
	Count c.Uint32T
}

type MultiHeapInfo struct {
	Unused [8]uint8
}
type MultiHeapHandleT *MultiHeapInfo

/** @brief Structure to access heap metadata via multi_heap_get_info */

type MultiHeapInfoT struct {
	TotalFreeBytes      c.SizeT
	TotalAllocatedBytes c.SizeT
	LargestFreeBlock    c.SizeT
	MinimumFreeBytes    c.SizeT
	AllocatedBlocks     c.SizeT
	FreeBlocks          c.SizeT
	TotalBlocks         c.SizeT
}

// llgo:type C
type MultiHeapWalkerCbT func(c.Pointer, c.SizeT, c.Int, c.Pointer) bool

// llgo:type C
type EspAllocFailedHookT func(c.SizeT, c.Uint32T, *c.Char)

/**
 * @brief Structure used to store heap related data passed to
 * the walker callback function
 */

type WalkerHeapInfo struct {
	Start c.IntptrT
	End   c.IntptrT
}
type WalkerHeapIntoT WalkerHeapInfo

/**
 * @brief Structure used to store block related data passed to
 * the walker callback function
 */

type WalkerBlockInfo struct {
	Ptr  c.Pointer
	Size c.SizeT
	Used bool
}
type WalkerBlockInfoT WalkerBlockInfo

// llgo:type C
type HeapCapsWalkerCbT func(WalkerHeapIntoT, WalkerBlockInfoT, c.Pointer) bool

type ImaxdivT struct {
	Quot c.IntmaxT
	Rem  c.IntmaxT
}
type SocResetReasonT c.Int

const (
	RESET_REASON_CHIP_POWER_ON   SocResetReasonT = 1
	RESET_REASON_CHIP_BROWN_OUT  SocResetReasonT = 1
	RESET_REASON_CHIP_SUPER_WDT  SocResetReasonT = 1
	RESET_REASON_CORE_SW         SocResetReasonT = 3
	RESET_REASON_CORE_DEEP_SLEEP SocResetReasonT = 5
	RESET_REASON_CORE_MWDT0      SocResetReasonT = 7
	RESET_REASON_CORE_MWDT1      SocResetReasonT = 8
	RESET_REASON_CORE_RTC_WDT    SocResetReasonT = 9
	RESET_REASON_CPU0_MWDT0      SocResetReasonT = 11
	RESET_REASON_CPU0_SW         SocResetReasonT = 12
	RESET_REASON_CPU0_RTC_WDT    SocResetReasonT = 13
	RESET_REASON_SYS_BROWN_OUT   SocResetReasonT = 15
	RESET_REASON_SYS_RTC_WDT     SocResetReasonT = 16
	RESET_REASON_CPU0_MWDT1      SocResetReasonT = 17
	RESET_REASON_SYS_SUPER_WDT   SocResetReasonT = 18
	RESET_REASON_SYS_CLK_GLITCH  SocResetReasonT = 19
	RESET_REASON_CORE_EFUSE_CRC  SocResetReasonT = 20
)

type EspResetReasonT c.Int

const (
	ESP_RST_UNKNOWN    EspResetReasonT = 0
	ESP_RST_POWERON    EspResetReasonT = 1
	ESP_RST_EXT        EspResetReasonT = 2
	ESP_RST_SW         EspResetReasonT = 3
	ESP_RST_PANIC      EspResetReasonT = 4
	ESP_RST_INT_WDT    EspResetReasonT = 5
	ESP_RST_TASK_WDT   EspResetReasonT = 6
	ESP_RST_WDT        EspResetReasonT = 7
	ESP_RST_DEEPSLEEP  EspResetReasonT = 8
	ESP_RST_BROWNOUT   EspResetReasonT = 9
	ESP_RST_SDIO       EspResetReasonT = 10
	ESP_RST_USB        EspResetReasonT = 11
	ESP_RST_JTAG       EspResetReasonT = 12
	ESP_RST_EFUSE      EspResetReasonT = 13
	ESP_RST_PWR_GLITCH EspResetReasonT = 14
	ESP_RST_CPU_LOCKUP EspResetReasonT = 15
)

// llgo:type C
type ShutdownHandlerT func()
type StackTypeT c.Uint8T
type BaseTypeT c.Int
type UBaseTypeT c.Uint
type TickTypeT c.Uint32T
type PortMUXTYPE SpinlockT

/* Used by heap_5.c to define the start address and size of each memory region
 * that together comprise the total FreeRTOS heap space. */

type HeapRegion struct {
	PucStartAddress *c.Uint8T
	XSizeInBytes    c.SizeT
}
type HeapRegionT HeapRegion

/* Used to pass information about the heap out of vPortGetHeapStats(). */

type XHeapStats struct {
	XAvailableHeapSpaceInBytes      c.SizeT
	XSizeOfLargestFreeBlockInBytes  c.SizeT
	XSizeOfSmallestFreeBlockInBytes c.SizeT
	XNumberOfFreeBlocks             c.SizeT
	XMinimumEverFreeBytesRemaining  c.SizeT
	XNumberOfSuccessfulAllocations  c.SizeT
	XNumberOfSuccessfulFrees        c.SizeT
}
type HeapStatsT XHeapStats

type Stat struct {
	Unused [8]uint8
}

type Tms struct {
	Unused [8]uint8
}

type Timeval struct {
	Unused [8]uint8
}

type Timezone struct {
	Unused [8]uint8
}

/*
 * In line with software engineering best practice, FreeRTOS implements a strict
 * data hiding policy, so the real structures used by FreeRTOS to maintain the
 * state of tasks, queues, semaphores, etc. are not accessible to the application
 * code.  However, if the application writer wants to statically allocate such
 * an object then the size of the object needs to be known.  Dummy structures
 * that are guaranteed to have the same size and alignment requirements of the
 * real objects are used for this purpose.  The dummy list and list item
 * structures below are used for inclusion in such a dummy structure.
 */

type XSTATICLISTITEM struct {
	XDummy2  TickTypeT
	PvDummy3 [4]c.Pointer
}
type StaticListItemT XSTATICLISTITEM

/* See the comments above the struct xSTATIC_LIST_ITEM definition. */

type XSTATICMINILISTITEM struct {
	XDummy2  TickTypeT
	PvDummy3 [2]c.Pointer
}
type StaticMiniListItemT XSTATICMINILISTITEM

/* See the comments above the struct xSTATIC_LIST_ITEM definition. */

type XSTATICLIST struct {
	UxDummy2 UBaseTypeT
	PvDummy3 c.Pointer
	XDummy4  StaticMiniListItemT
}
type StaticListT XSTATICLIST

/*
 * In line with software engineering best practice, especially when supplying a
 * library that is likely to change in future versions, FreeRTOS implements a
 * strict data hiding policy.  This means the Task structure used internally by
 * FreeRTOS is not accessible to application code.  However, if the application
 * writer wants to statically allocate the memory required to create a task then
 * the size of the task object needs to be known.  The StaticTask_t structure
 * below is provided for this purpose.  Its sizes and alignment requirements are
 * guaranteed to match those of the genuine structure, no matter which
 * architecture is being used, and no matter how the values in FreeRTOSConfig.h
 * are set.  Its contents are somewhat obfuscated in the hope users will
 * recognise that it would be unwise to make direct use of the structure members.
 */

type XSTATICTCB struct {
	PxDummy1  c.Pointer
	XDummy3   [2]StaticListItemT
	UxDummy5  UBaseTypeT
	PxDummy6  c.Pointer
	UcDummy7  [16]c.Uint8T
	PxDummy8  c.Pointer
	UxDummy12 [2]UBaseTypeT
	PvDummy15 [2]c.Pointer
	XDummy17  X_reent
	UlDummy18 [1]c.Uint32T
	UcDummy19 [1]c.Uint8T
	UxDummy20 c.Uint8T
	UcDummy21 c.Uint8T
}
type StaticTaskT XSTATICTCB

/*
 * In line with software engineering best practice, especially when supplying a
 * library that is likely to change in future versions, FreeRTOS implements a
 * strict data hiding policy.  This means the Queue structure used internally by
 * FreeRTOS is not accessible to application code.  However, if the application
 * writer wants to statically allocate the memory required to create a queue
 * then the size of the queue object needs to be known.  The StaticQueue_t
 * structure below is provided for this purpose.  Its sizes and alignment
 * requirements are guaranteed to match those of the genuine structure, no
 * matter which architecture is being used, and no matter how the values in
 * FreeRTOSConfig.h are set.  Its contents are somewhat obfuscated in the hope
 * users will recognise that it would be unwise to make direct use of the
 * structure members.
 */

type XSTATICQUEUE struct {
	PvDummy1 [3]c.Pointer
	U        struct {
		PvDummy2 c.Pointer
	}
	XDummy3         [2]StaticListT
	UxDummy4        [3]UBaseTypeT
	UcDummy5        [2]c.Uint8T
	UcDummy6        c.Uint8T
	PvDummy7        c.Pointer
	XDummyQueueLock PortMUXTYPE
}
type StaticQueueT XSTATICQUEUE
type StaticSemaphoreT StaticQueueT

/*
 * In line with software engineering best practice, especially when supplying a
 * library that is likely to change in future versions, FreeRTOS implements a
 * strict data hiding policy.  This means the event group structure used
 * internally by FreeRTOS is not accessible to application code.  However, if
 * the application writer wants to statically allocate the memory required to
 * create an event group then the size of the event group object needs to be
 * know.  The StaticEventGroup_t structure below is provided for this purpose.
 * Its sizes and alignment requirements are guaranteed to match those of the
 * genuine structure, no matter which architecture is being used, and no matter
 * how the values in FreeRTOSConfig.h are set.  Its contents are somewhat
 * obfuscated in the hope users will recognise that it would be unwise to make
 * direct use of the structure members.
 */

type XSTATICEVENTGROUP struct {
	XDummy1              TickTypeT
	XDummy2              StaticListT
	UcDummy4             c.Uint8T
	XDummyEventGroupLock PortMUXTYPE
}
type StaticEventGroupT XSTATICEVENTGROUP

/*
 * In line with software engineering best practice, especially when supplying a
 * library that is likely to change in future versions, FreeRTOS implements a
 * strict data hiding policy.  This means the software timer structure used
 * internally by FreeRTOS is not accessible to application code.  However, if
 * the application writer wants to statically allocate the memory required to
 * create a software timer then the size of the queue object needs to be known.
 * The StaticTimer_t structure below is provided for this purpose.  Its sizes
 * and alignment requirements are guaranteed to match those of the genuine
 * structure, no matter which architecture is being used, and no matter how the
 * values in FreeRTOSConfig.h are set.  Its contents are somewhat obfuscated in
 * the hope users will recognise that it would be unwise to make direct use of
 * the structure members.
 */

type XSTATICTIMER struct {
	PvDummy1 c.Pointer
	XDummy2  StaticListItemT
	XDummy3  TickTypeT
	PvDummy5 c.Pointer
	PvDummy6 TaskFunctionT
	UcDummy8 c.Uint8T
}
type StaticTimerT XSTATICTIMER

/*
 * In line with software engineering best practice, especially when supplying a
 * library that is likely to change in future versions, FreeRTOS implements a
 * strict data hiding policy.  This means the stream buffer structure used
 * internally by FreeRTOS is not accessible to application code.  However, if
 * the application writer wants to statically allocate the memory required to
 * create a stream buffer then the size of the stream buffer object needs to be
 * known.  The StaticStreamBuffer_t structure below is provided for this
 * purpose.  Its size and alignment requirements are guaranteed to match those
 * of the genuine structure, no matter which architecture is being used, and
 * no matter how the values in FreeRTOSConfig.h are set.  Its contents are
 * somewhat obfuscated in the hope users will recognise that it would be unwise
 * to make direct use of the structure members.
 */

type XSTATICSTREAMBUFFER struct {
	UxDummy1               [4]c.SizeT
	PvDummy2               [3]c.Pointer
	UcDummy3               c.Uint8T
	XDummyStreamBufferLock PortMUXTYPE
}
type StaticStreamBufferT XSTATICSTREAMBUFFER
type StaticMessageBufferT StaticStreamBufferT

type SpiBusLockT struct {
	Unused [8]uint8
}

type SpiBusLockDevT struct {
	Unused [8]uint8
}
type SpiBusLockHandleT *SpiBusLockT
type SpiBusLockDevHandleT *SpiBusLockDevT

// llgo:type C
type BgCtrlFuncT func(c.Pointer)

// / Lock configuration struct
type SpiBusLockConfigT struct {
	HostId c.Int
	CsNum  c.Int
}

// / Child-lock configuration struct
type SpiBusLockDevConfigT struct {
	Flags c.Uint32T
}
