[
  {
    "mangle": "adc_cali_check_scheme",
    "c++": "adc_cali_check_scheme(adc_cali_scheme_ver_t *)",
    "go": "(*AdcCaliSchemeVerT).AdcCaliCheckScheme"
  },
  {
    "mangle": "adc_cali_create_scheme_line_fitting",
    "c++": "adc_cali_create_scheme_line_fitting(const adc_cali_line_fitting_config_t *, adc_cali_handle_t *)",
    "go": "(*AdcCaliLineFittingConfigT).AdcCaliCreateSchemeLineFitting"
  },
  {
    "mangle": "adc_cali_delete_scheme_line_fitting",
    "c++": "adc_cali_delete_scheme_line_fitting(adc_cali_handle_t)",
    "go": "AdcCaliDeleteSchemeLineFitting"
  },
  {
    "mangle": "adc_cali_raw_to_voltage",
    "c++": "adc_cali_raw_to_voltage(adc_cali_handle_t, int, int *)",
    "go": "AdcCaliRawToVoltage"
  },
  {
    "mangle": "adc_channel_to_io",
    "c++": "adc_channel_to_io(adc_unit_t, adc_channel_t, int *const)",
    "go": "AdcChannelToIo"
  },
  {
    "mangle": "adc_continuous_channel_to_io",
    "c++": "adc_continuous_channel_to_io(adc_unit_t, adc_channel_t, int *const)",
    "go": "AdcContinuousChannelToIo"
  },
  {
    "mangle": "adc_continuous_config",
    "c++": "adc_continuous_config(adc_continuous_handle_t, const adc_continuous_config_t *)",
    "go": "AdcContinuousConfig"
  },
  {
    "mangle": "adc_continuous_deinit",
    "c++": "adc_continuous_deinit(adc_continuous_handle_t)",
    "go": "AdcContinuousDeinit"
  },
  {
    "mangle": "adc_continuous_flush_pool",
    "c++": "adc_continuous_flush_pool(adc_continuous_handle_t)",
    "go": "AdcContinuousFlushPool"
  },
  {
    "mangle": "adc_continuous_iir_filter_disable",
    "c++": "adc_continuous_iir_filter_disable(adc_iir_filter_handle_t)",
    "go": "AdcContinuousIirFilterDisable"
  },
  {
    "mangle": "adc_continuous_iir_filter_enable",
    "c++": "adc_continuous_iir_filter_enable(adc_iir_filter_handle_t)",
    "go": "AdcContinuousIirFilterEnable"
  },
  {
    "mangle": "adc_continuous_io_to_channel",
    "c++": "adc_continuous_io_to_channel(int, adc_unit_t *const, adc_channel_t *const)",
    "go": "AdcContinuousIoToChannel"
  },
  {
    "mangle": "adc_continuous_monitor_disable",
    "c++": "adc_continuous_monitor_disable(adc_monitor_handle_t)",
    "go": "AdcContinuousMonitorDisable"
  },
  {
    "mangle": "adc_continuous_monitor_enable",
    "c++": "adc_continuous_monitor_enable(adc_monitor_handle_t)",
    "go": "AdcContinuousMonitorEnable"
  },
  {
    "mangle": "adc_continuous_monitor_register_event_callbacks",
    "c++": "adc_continuous_monitor_register_event_callbacks(adc_monitor_handle_t, const adc_monitor_evt_cbs_t *, void *)",
    "go": "AdcContinuousMonitorRegisterEventCallbacks"
  },
  {
    "mangle": "adc_continuous_new_handle",
    "c++": "adc_continuous_new_handle(const adc_continuous_handle_cfg_t *, adc_continuous_handle_t *)",
    "go": "(*AdcContinuousHandleCfgT).AdcContinuousNewHandle"
  },
  {
    "mangle": "adc_continuous_read",
    "c++": "adc_continuous_read(adc_continuous_handle_t, uint8_t *, uint32_t, uint32_t *, uint32_t)",
    "go": "AdcContinuousRead"
  },
  {
    "mangle": "adc_continuous_register_event_callbacks",
    "c++": "adc_continuous_register_event_callbacks(adc_continuous_handle_t, const adc_continuous_evt_cbs_t *, void *)",
    "go": "AdcContinuousRegisterEventCallbacks"
  },
  {
    "mangle": "adc_continuous_start",
    "c++": "adc_continuous_start(adc_continuous_handle_t)",
    "go": "AdcContinuousStart"
  },
  {
    "mangle": "adc_continuous_stop",
    "c++": "adc_continuous_stop(adc_continuous_handle_t)",
    "go": "AdcContinuousStop"
  },
  {
    "mangle": "adc_del_continuous_iir_filter",
    "c++": "adc_del_continuous_iir_filter(adc_iir_filter_handle_t)",
    "go": "AdcDelContinuousIirFilter"
  },
  {
    "mangle": "adc_del_continuous_monitor",
    "c++": "adc_del_continuous_monitor(adc_monitor_handle_t)",
    "go": "AdcDelContinuousMonitor"
  },
  {
    "mangle": "adc_dma_deinit",
    "c++": "adc_dma_deinit(adc_dma_t)",
    "go": "AdcDmaDeinit"
  },
  {
    "mangle": "adc_dma_init",
    "c++": "adc_dma_init(adc_dma_t *)",
    "go": "AdcDmaInit"
  },
  {
    "mangle": "adc_dma_intr_event_init",
    "c++": "adc_dma_intr_event_init(adc_continuous_ctx_t *)",
    "go": "AdcDmaIntrEventInit"
  },
  {
    "mangle": "adc_dma_reset",
    "c++": "adc_dma_reset(adc_dma_t)",
    "go": "AdcDmaReset"
  },
  {
    "mangle": "adc_dma_start",
    "c++": "adc_dma_start(adc_dma_t, dma_descriptor_t *)",
    "go": "AdcDmaStart"
  },
  {
    "mangle": "adc_dma_stop",
    "c++": "adc_dma_stop(adc_dma_t)",
    "go": "AdcDmaStop"
  },
  {
    "mangle": "adc_io_to_channel",
    "c++": "adc_io_to_channel(int, adc_unit_t *const, adc_channel_t *const)",
    "go": "AdcIoToChannel"
  },
  {
    "mangle": "adc_new_continuous_iir_filter",
    "c++": "adc_new_continuous_iir_filter(adc_continuous_handle_t, const adc_continuous_iir_filter_config_t *, adc_iir_filter_handle_t *)",
    "go": "AdcNewContinuousIirFilter"
  },
  {
    "mangle": "adc_new_continuous_monitor",
    "c++": "adc_new_continuous_monitor(adc_continuous_handle_t, const adc_monitor_config_t *, adc_monitor_handle_t *)",
    "go": "AdcNewContinuousMonitor"
  },
  {
    "mangle": "adc_oneshot_channel_to_io",
    "c++": "adc_oneshot_channel_to_io(adc_unit_t, adc_channel_t, int *const)",
    "go": "AdcOneshotChannelToIo"
  },
  {
    "mangle": "adc_oneshot_config_channel",
    "c++": "adc_oneshot_config_channel(adc_oneshot_unit_handle_t, adc_channel_t, const adc_oneshot_chan_cfg_t *)",
    "go": "AdcOneshotConfigChannel"
  },
  {
    "mangle": "adc_oneshot_del_unit",
    "c++": "adc_oneshot_del_unit(adc_oneshot_unit_handle_t)",
    "go": "AdcOneshotDelUnit"
  },
  {
    "mangle": "adc_oneshot_get_calibrated_result",
    "c++": "adc_oneshot_get_calibrated_result(adc_oneshot_unit_handle_t, adc_cali_handle_t, adc_channel_t, int *)",
    "go": "AdcOneshotGetCalibratedResult"
  },
  {
    "mangle": "adc_oneshot_io_to_channel",
    "c++": "adc_oneshot_io_to_channel(int, adc_unit_t *const, adc_channel_t *const)",
    "go": "AdcOneshotIoToChannel"
  },
  {
    "mangle": "adc_oneshot_new_unit",
    "c++": "adc_oneshot_new_unit(const adc_oneshot_unit_init_cfg_t *, adc_oneshot_unit_handle_t *)",
    "go": "(*AdcOneshotUnitInitCfgT).AdcOneshotNewUnit"
  },
  {
    "mangle": "adc_oneshot_read",
    "c++": "adc_oneshot_read(adc_oneshot_unit_handle_t, adc_channel_t, int *)",
    "go": "AdcOneshotRead"
  },
  {
    "mangle": "adc_oneshot_read_isr",
    "c++": "adc_oneshot_read_isr(adc_oneshot_unit_handle_t, adc_channel_t, int *)",
    "go": "AdcOneshotReadIsr"
  },
  {
    "mangle": "esp_adc_cal_characterize",
    "c++": "esp_adc_cal_characterize(adc_unit_t, adc_atten_t, adc_bits_width_t, uint32_t, esp_adc_cal_characteristics_t *)",
    "go": "EspAdcCalCharacterize"
  },
  {
    "mangle": "esp_adc_cal_check_efuse",
    "c++": "esp_adc_cal_check_efuse(esp_adc_cal_value_t)",
    "go": "EspAdcCalValueT.EspAdcCalCheckEfuse"
  },
  {
    "mangle": "esp_adc_cal_get_voltage",
    "c++": "esp_adc_cal_get_voltage(adc_channel_t, const esp_adc_cal_characteristics_t *, uint32_t *)",
    "go": "EspAdcCalGetVoltage"
  },
  {
    "mangle": "esp_adc_cal_raw_to_voltage",
    "c++": "esp_adc_cal_raw_to_voltage(uint32_t, const esp_adc_cal_characteristics_t *)",
    "go": "EspAdcCalRawToVoltage"
  }
]