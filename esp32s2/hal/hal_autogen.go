package hal

import (
	"github.com/goplus/lib/c"
	_ "unsafe"
)

const X_NEWLIB_VERSION_H__ = 1
const X_NEWLIB_VERSION = "4.3.0"
const X__NEWLIB__ = 4
const X__NEWLIB_MINOR__ = 3
const X__NEWLIB_PATCHLEVEL__ = 0
const X_DEFAULT_SOURCE = 1
const X_POSIX_SOURCE = 1
const X_ATFILE_SOURCE = 1
const X__ATFILE_VISIBLE = 1
const X__BSD_VISIBLE = 1
const X__GNU_VISIBLE = 0
const X__ISO_C_VISIBLE = 2011
const X__LARGEFILE_VISIBLE = 0
const X__MISC_VISIBLE = 1
const X__POSIX_VISIBLE = 200809
const X__SVID_VISIBLE = 1
const X__XSI_VISIBLE = 0
const X__SSP_FORTIFY_LEVEL = 0
const X_POSIX_THREADS = 1
const X_POSIX_TIMEOUTS = 1
const X_POSIX_TIMERS = 1
const X_UNIX98_THREAD_MUTEX_ATTRIBUTES = 1
const X__have_longlong64 = 1
const X__have_long32 = 1
const X___int8_t_defined = 1
const X___int16_t_defined = 1
const X___int32_t_defined = 1
const X___int64_t_defined = 1
const X___int_least8_t_defined = 1
const X___int_least16_t_defined = 1
const X___int_least32_t_defined = 1
const X___int_least64_t_defined = 1
const X__INT8 = "hh"
const X__INT16 = "h"
const X__INT64 = "ll"
const X__FAST8 = "hh"
const X__FAST16 = "h"
const X__FAST64 = "ll"
const X__LEAST8 = "hh"
const X__LEAST16 = "h"
const X__LEAST64 = "ll"
const X__int8_t_defined = 1
const X__int16_t_defined = 1
const X__int32_t_defined = 1
const X__int64_t_defined = 1
const X__int_least8_t_defined = 1
const X__int_least16_t_defined = 1
const X__int_least32_t_defined = 1
const X__int_least64_t_defined = 1
const X__int_fast8_t_defined = 1
const X__int_fast16_t_defined = 1
const X__int_fast32_t_defined = 1
const X__int_fast64_t_defined = 1
const X__NEWLIB_H__ = 1
const X_ATEXIT_DYNAMIC_ALLOC = 1
const X_FSEEK_OPTIMIZATION = 1
const X_FVWRITE_IN_STREAMIO = 1
const X_HAVE_INITFINI_ARRAY = 1
const X_HAVE_LONG_DOUBLE = 1
const X_ICONV_ENABLED = 1
const X_LDBL_EQ_DBL = 1
const X_MB_LEN_MAX = 1
const X_NANO_MALLOC = 1
const X_REENT_CHECK_VERIFY = 1
const X_RETARGETABLE_LOCKING = 1
const X_UNBUF_STREAM_OPT = 1
const X_WANT_IO_C99_FORMATS = 1
const X_WANT_IO_LONG_LONG = 1
const X_WANT_IO_POS_ARGS = 1
const X_WANT_REENT_BACKWARD_BINARY_COMPAT = 1
const X_WANT_REENT_SMALL = 1
const X_WANT_USE_GDTOA = 1
const X__OBSOLETE_MATH_DEFAULT = 1
const X__BUFSIZ__ = 128
const X__RAND_MAX = 0x7fffffff
const X_NULL = 0
const CONFIG_SOC_ADC_SUPPORTED = 1
const CONFIG_SOC_DAC_SUPPORTED = 1
const CONFIG_SOC_UART_SUPPORTED = 1
const CONFIG_SOC_TWAI_SUPPORTED = 1
const CONFIG_SOC_CP_DMA_SUPPORTED = 1
const CONFIG_SOC_DEDICATED_GPIO_SUPPORTED = 1
const CONFIG_SOC_GPTIMER_SUPPORTED = 1
const CONFIG_SOC_SUPPORTS_SECURE_DL_MODE = 1
const CONFIG_SOC_ULP_FSM_SUPPORTED = 1
const CONFIG_SOC_RISCV_COPROC_SUPPORTED = 1
const CONFIG_SOC_USB_OTG_SUPPORTED = 1
const CONFIG_SOC_PCNT_SUPPORTED = 1
const CONFIG_SOC_PHY_SUPPORTED = 1
const CONFIG_SOC_WIFI_SUPPORTED = 1
const CONFIG_SOC_ULP_SUPPORTED = 1
const CONFIG_SOC_CCOMP_TIMER_SUPPORTED = 1
const CONFIG_SOC_ASYNC_MEMCPY_SUPPORTED = 1
const CONFIG_SOC_EFUSE_KEY_PURPOSE_FIELD = 1
const CONFIG_SOC_EFUSE_SUPPORTED = 1
const CONFIG_SOC_TEMP_SENSOR_SUPPORTED = 1
const CONFIG_SOC_CACHE_SUPPORT_WRAP = 1
const CONFIG_SOC_RTC_FAST_MEM_SUPPORTED = 1
const CONFIG_SOC_RTC_SLOW_MEM_SUPPORTED = 1
const CONFIG_SOC_RTC_MEM_SUPPORTED = 1
const CONFIG_SOC_PSRAM_DMA_CAPABLE = 1
const CONFIG_SOC_XT_WDT_SUPPORTED = 1
const CONFIG_SOC_I2S_SUPPORTED = 1
const CONFIG_SOC_RMT_SUPPORTED = 1
const CONFIG_SOC_SDM_SUPPORTED = 1
const CONFIG_SOC_GPSPI_SUPPORTED = 1
const CONFIG_SOC_LEDC_SUPPORTED = 1
const CONFIG_SOC_I2C_SUPPORTED = 1
const CONFIG_SOC_SYSTIMER_SUPPORTED = 1
const CONFIG_SOC_AES_SUPPORTED = 1
const CONFIG_SOC_MPI_SUPPORTED = 1
const CONFIG_SOC_SHA_SUPPORTED = 1
const CONFIG_SOC_HMAC_SUPPORTED = 1
const CONFIG_SOC_DIG_SIGN_SUPPORTED = 1
const CONFIG_SOC_FLASH_ENC_SUPPORTED = 1
const CONFIG_SOC_SECURE_BOOT_SUPPORTED = 1
const CONFIG_SOC_MEMPROT_SUPPORTED = 1
const CONFIG_SOC_TOUCH_SENSOR_SUPPORTED = 1
const CONFIG_SOC_BOD_SUPPORTED = 1
const CONFIG_SOC_CLK_TREE_SUPPORTED = 1
const CONFIG_SOC_MPU_SUPPORTED = 1
const CONFIG_SOC_WDT_SUPPORTED = 1
const CONFIG_SOC_SPI_FLASH_SUPPORTED = 1
const CONFIG_SOC_RNG_SUPPORTED = 1
const CONFIG_SOC_LIGHT_SLEEP_SUPPORTED = 1
const CONFIG_SOC_DEEP_SLEEP_SUPPORTED = 1
const CONFIG_SOC_LP_PERIPH_SHARE_INTERRUPT = 1
const CONFIG_SOC_PM_SUPPORTED = 1
const CONFIG_SOC_XTAL_SUPPORT_40M = 1
const CONFIG_SOC_ADC_RTC_CTRL_SUPPORTED = 1
const CONFIG_SOC_ADC_DIG_CTRL_SUPPORTED = 1
const CONFIG_SOC_ADC_ARBITER_SUPPORTED = 1
const CONFIG_SOC_ADC_DIG_IIR_FILTER_SUPPORTED = 1
const CONFIG_SOC_ADC_DIG_IIR_FILTER_UNIT_BINDED = 1
const CONFIG_SOC_ADC_MONITOR_SUPPORTED = 1
const CONFIG_SOC_ADC_DMA_SUPPORTED = 1
const CONFIG_SOC_ADC_PERIPH_NUM = 2
const CONFIG_SOC_ADC_MAX_CHANNEL_NUM = 10
const CONFIG_SOC_ADC_ATTEN_NUM = 4
const CONFIG_SOC_ADC_DIGI_CONTROLLER_NUM = 2
const CONFIG_SOC_ADC_PATT_LEN_MAX = 32
const CONFIG_SOC_ADC_DIGI_MIN_BITWIDTH = 12
const CONFIG_SOC_ADC_DIGI_MAX_BITWIDTH = 12
const CONFIG_SOC_ADC_DIGI_IIR_FILTER_NUM = 2
const CONFIG_SOC_ADC_DIGI_RESULT_BYTES = 2
const CONFIG_SOC_ADC_DIGI_DATA_BYTES_PER_CONV = 2
const CONFIG_SOC_ADC_DIGI_MONITOR_NUM = 2
const CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_HIGH = 83333
const CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_LOW = 611
const CONFIG_SOC_ADC_RTC_MIN_BITWIDTH = 13
const CONFIG_SOC_ADC_RTC_MAX_BITWIDTH = 13
const CONFIG_SOC_ADC_CALIBRATION_V1_SUPPORTED = 1
const CONFIG_SOC_ADC_SELF_HW_CALI_SUPPORTED = 1
const CONFIG_SOC_ADC_SHARED_POWER = 1
const CONFIG_SOC_BROWNOUT_RESET_SUPPORTED = 1
const CONFIG_SOC_CACHE_WRITEBACK_SUPPORTED = 1
const CONFIG_SOC_CP_DMA_MAX_BUFFER_SIZE = 4095
const CONFIG_SOC_CPU_CORES_NUM = 1
const CONFIG_SOC_CPU_INTR_NUM = 32
const CONFIG_SOC_CPU_BREAKPOINTS_NUM = 2
const CONFIG_SOC_CPU_WATCHPOINTS_NUM = 2
const CONFIG_SOC_CPU_WATCHPOINT_MAX_REGION_SIZE = 64
const CONFIG_SOC_DAC_CHAN_NUM = 2
const CONFIG_SOC_DAC_RESOLUTION = 8
const CONFIG_SOC_GPIO_PORT = 1
const CONFIG_SOC_GPIO_PIN_COUNT = 47
const CONFIG_SOC_GPIO_SUPPORT_PIN_GLITCH_FILTER = 1
const CONFIG_SOC_GPIO_FILTER_CLK_SUPPORT_APB = 1
const CONFIG_SOC_GPIO_SUPPORT_RTC_INDEPENDENT = 1
const CONFIG_SOC_GPIO_SUPPORT_FORCE_HOLD = 1
const CONFIG_SOC_GPIO_VALID_GPIO_MASK = 0x7FFFFFFFFFFF
const CONFIG_SOC_GPIO_IN_RANGE_MAX = 46
const CONFIG_SOC_GPIO_OUT_RANGE_MAX = 45
const CONFIG_SOC_GPIO_VALID_DIGITAL_IO_PAD_MASK = 0x00007FFFFC000000
const CONFIG_SOC_GPIO_CLOCKOUT_BY_IO_MUX = 1
const CONFIG_SOC_GPIO_CLOCKOUT_CHANNEL_NUM = 3
const CONFIG_SOC_GPIO_SUPPORT_HOLD_IO_IN_DSLP = 1
const CONFIG_SOC_DEDIC_GPIO_OUT_CHANNELS_NUM = 8
const CONFIG_SOC_DEDIC_GPIO_IN_CHANNELS_NUM = 8
const CONFIG_SOC_DEDIC_GPIO_ALLOW_REG_ACCESS = 1
const CONFIG_SOC_DEDIC_GPIO_HAS_INTERRUPT = 1
const CONFIG_SOC_DEDIC_GPIO_OUT_AUTO_ENABLE = 1
const CONFIG_SOC_I2C_NUM = 2
const CONFIG_SOC_HP_I2C_NUM = 2
const CONFIG_SOC_I2C_FIFO_LEN = 32
const CONFIG_SOC_I2C_CMD_REG_NUM = 16
const CONFIG_SOC_I2C_SUPPORT_SLAVE = 1
const CONFIG_SOC_I2C_SLAVE_CAN_GET_STRETCH_CAUSE = 1
const CONFIG_SOC_I2C_SUPPORT_HW_CLR_BUS = 1
const CONFIG_SOC_I2C_SUPPORT_REF_TICK = 1
const CONFIG_SOC_I2C_SUPPORT_APB = 1
const CONFIG_SOC_I2S_NUM = 1
const CONFIG_SOC_I2S_HW_VERSION_1 = 1
const CONFIG_SOC_I2S_SUPPORTS_APLL = 1
const CONFIG_SOC_I2S_SUPPORTS_PLL_F160M = 1
const CONFIG_SOC_I2S_SUPPORTS_DMA_EQUAL = 1
const CONFIG_SOC_I2S_SUPPORTS_LCD_CAMERA = 1
const CONFIG_SOC_I2S_MAX_DATA_WIDTH = 24
const CONFIG_SOC_I2S_APLL_MIN_FREQ = 250000000
const CONFIG_SOC_I2S_APLL_MAX_FREQ = 500000000
const CONFIG_SOC_I2S_APLL_MIN_RATE = 10675
const CONFIG_SOC_I2S_LCD_I80_VARIANT = 1
const CONFIG_SOC_LCD_I80_SUPPORTED = 1
const CONFIG_SOC_LCD_I80_BUSES = 1
const CONFIG_SOC_LCD_I80_BUS_WIDTH = 24
const CONFIG_SOC_LEDC_HAS_TIMER_SPECIFIC_MUX = 1
const CONFIG_SOC_LEDC_SUPPORT_APB_CLOCK = 1
const CONFIG_SOC_LEDC_SUPPORT_REF_TICK = 1
const CONFIG_SOC_LEDC_SUPPORT_XTAL_CLOCK = 1
const CONFIG_SOC_LEDC_TIMER_NUM = 4
const CONFIG_SOC_LEDC_CHANNEL_NUM = 8
const CONFIG_SOC_LEDC_TIMER_BIT_WIDTH = 14
const CONFIG_SOC_LEDC_SUPPORT_FADE_STOP = 1
const CONFIG_SOC_MMU_LINEAR_ADDRESS_REGION_NUM = 5
const CONFIG_SOC_MMU_PERIPH_NUM = 1
const CONFIG_SOC_MPU_MIN_REGION_SIZE = 0x20000000
const CONFIG_SOC_MPU_REGIONS_MAX_NUM = 8
const CONFIG_SOC_PCNT_GROUPS = 1
const CONFIG_SOC_PCNT_UNITS_PER_GROUP = 4
const CONFIG_SOC_PCNT_CHANNELS_PER_UNIT = 2
const CONFIG_SOC_PCNT_THRES_POINT_PER_UNIT = 2
const CONFIG_SOC_RMT_GROUPS = 1
const CONFIG_SOC_RMT_TX_CANDIDATES_PER_GROUP = 4
const CONFIG_SOC_RMT_RX_CANDIDATES_PER_GROUP = 4
const CONFIG_SOC_RMT_CHANNELS_PER_GROUP = 4
const CONFIG_SOC_RMT_MEM_WORDS_PER_CHANNEL = 64
const CONFIG_SOC_RMT_SUPPORT_RX_DEMODULATION = 1
const CONFIG_SOC_RMT_SUPPORT_TX_ASYNC_STOP = 1
const CONFIG_SOC_RMT_SUPPORT_TX_LOOP_COUNT = 1
const CONFIG_SOC_RMT_SUPPORT_TX_SYNCHRO = 1
const CONFIG_SOC_RMT_SUPPORT_TX_CARRIER_DATA_ONLY = 1
const CONFIG_SOC_RMT_SUPPORT_REF_TICK = 1
const CONFIG_SOC_RMT_SUPPORT_APB = 1
const CONFIG_SOC_RMT_CHANNEL_CLK_INDEPENDENT = 1
const CONFIG_SOC_RTCIO_PIN_COUNT = 22
const CONFIG_SOC_RTCIO_INPUT_OUTPUT_SUPPORTED = 1
const CONFIG_SOC_RTCIO_HOLD_SUPPORTED = 1
const CONFIG_SOC_RTCIO_WAKE_SUPPORTED = 1
const CONFIG_SOC_LP_IO_CLOCK_IS_INDEPENDENT = 1
const CONFIG_SOC_SDM_GROUPS = 1
const CONFIG_SOC_SDM_CHANNELS_PER_GROUP = 8
const CONFIG_SOC_SDM_CLK_SUPPORT_APB = 1
const CONFIG_SOC_SPI_HD_BOTH_INOUT_SUPPORTED = 1
const CONFIG_SOC_SPI_PERIPH_NUM = 3
const CONFIG_SOC_SPI_DMA_CHAN_NUM = 3
const CONFIG_SOC_SPI_MAX_CS_NUM = 6
const CONFIG_SOC_SPI_MAXIMUM_BUFFER_SIZE = 72
const CONFIG_SOC_SPI_MAX_PRE_DIVIDER = 8192
const CONFIG_SOC_SPI_SUPPORT_DDRCLK = 1
const CONFIG_SOC_SPI_SLAVE_SUPPORT_SEG_TRANS = 1
const CONFIG_SOC_SPI_SUPPORT_CD_SIG = 1
const CONFIG_SOC_SPI_SUPPORT_CONTINUOUS_TRANS = 1
const CONFIG_SOC_SPI_SUPPORT_CLK_APB = 1
const CONFIG_SOC_SPI_SUPPORT_SLAVE_HD_VER2 = 1
const CONFIG_SOC_SPI_PERIPH_SUPPORT_CONTROL_DUMMY_OUT = 1
const CONFIG_SOC_SPI_SUPPORT_OCT = 1
const CONFIG_SOC_SPI_SCT_SUPPORTED = 1
const CONFIG_SOC_SPI_SCT_REG_NUM = 27
const CONFIG_SOC_SPI_SCT_BUFFER_NUM_MAX = 1
const CONFIG_SOC_SPI_SCT_CONF_BITLEN_MAX = 0x7FFFFD
const CONFIG_SOC_MEMSPI_IS_INDEPENDENT = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED = 1
const CONFIG_SOC_SYSTIMER_COUNTER_NUM = 1
const CONFIG_SOC_SYSTIMER_ALARM_NUM = 3
const CONFIG_SOC_SYSTIMER_BIT_WIDTH_LO = 32
const CONFIG_SOC_SYSTIMER_BIT_WIDTH_HI = 32
const CONFIG_SOC_TIMER_GROUPS = 2
const CONFIG_SOC_TIMER_GROUP_TIMERS_PER_GROUP = 2
const CONFIG_SOC_TIMER_GROUP_COUNTER_BIT_WIDTH = 64
const CONFIG_SOC_TIMER_GROUP_SUPPORT_XTAL = 1
const CONFIG_SOC_TIMER_GROUP_SUPPORT_APB = 1
const CONFIG_SOC_TIMER_GROUP_TOTAL_TIMERS = 4
const CONFIG_SOC_LP_TIMER_BIT_WIDTH_LO = 32
const CONFIG_SOC_LP_TIMER_BIT_WIDTH_HI = 16
const CONFIG_SOC_TOUCH_SENSOR_VERSION = 2
const CONFIG_SOC_TOUCH_SENSOR_NUM = 15
const CONFIG_SOC_TOUCH_SUPPORT_SLEEP_WAKEUP = 1
const CONFIG_SOC_TOUCH_SUPPORT_WATERPROOF = 1
const CONFIG_SOC_TOUCH_SUPPORT_PROX_SENSING = 1
const CONFIG_SOC_TOUCH_PROXIMITY_CHANNEL_NUM = 3
const CONFIG_SOC_TOUCH_SAMPLE_CFG_NUM = 1
const CONFIG_SOC_TWAI_CONTROLLER_NUM = 1
const CONFIG_SOC_TWAI_CLK_SUPPORT_APB = 1
const CONFIG_SOC_TWAI_BRP_MIN = 2
const CONFIG_SOC_TWAI_BRP_MAX = 32768
const CONFIG_SOC_TWAI_SUPPORTS_RX_STATUS = 1
const CONFIG_SOC_UART_NUM = 2
const CONFIG_SOC_UART_HP_NUM = 2
const CONFIG_SOC_UART_SUPPORT_WAKEUP_INT = 1
const CONFIG_SOC_UART_SUPPORT_APB_CLK = 1
const CONFIG_SOC_UART_SUPPORT_REF_TICK = 1
const CONFIG_SOC_UART_FIFO_LEN = 128
const CONFIG_SOC_UART_BITRATE_MAX = 5000000
const CONFIG_SOC_SPIRAM_SUPPORTED = 1
const CONFIG_SOC_SPIRAM_XIP_SUPPORTED = 1
const CONFIG_SOC_USB_OTG_PERIPH_NUM = 1
const CONFIG_SOC_SHA_DMA_MAX_BUFFER_SIZE = 3968
const CONFIG_SOC_SHA_SUPPORT_DMA = 1
const CONFIG_SOC_SHA_SUPPORT_RESUME = 1
const CONFIG_SOC_SHA_CRYPTO_DMA = 1
const CONFIG_SOC_SHA_SUPPORT_SHA1 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA224 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA256 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA384 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512_224 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512_256 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA512_T = 1
const CONFIG_SOC_MPI_MEM_BLOCKS_NUM = 4
const CONFIG_SOC_MPI_OPERATIONS_NUM = 3
const CONFIG_SOC_RSA_MAX_BIT_LEN = 4096
const CONFIG_SOC_AES_SUPPORT_DMA = 1
const CONFIG_SOC_AES_SUPPORT_GCM = 1
const CONFIG_SOC_EFUSE_DIS_DOWNLOAD_ICACHE = 1
const CONFIG_SOC_EFUSE_DIS_DOWNLOAD_DCACHE = 1
const CONFIG_SOC_EFUSE_HARD_DIS_JTAG = 1
const CONFIG_SOC_EFUSE_SOFT_DIS_JTAG = 1
const CONFIG_SOC_EFUSE_DIS_BOOT_REMAP = 1
const CONFIG_SOC_EFUSE_DIS_LEGACY_SPI_BOOT = 1
const CONFIG_SOC_EFUSE_DIS_ICACHE = 1
const CONFIG_SOC_SECURE_BOOT_V2_RSA = 1
const CONFIG_SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 3
const CONFIG_SOC_EFUSE_REVOKE_BOOT_KEY_DIGESTS = 1
const CONFIG_SOC_SUPPORT_SECURE_BOOT_REVOKE_KEY = 1
const CONFIG_SOC_FLASH_ENCRYPTED_XTS_AES_BLOCK_MAX = 64
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES = 1
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES_OPTIONS = 1
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES_128 = 1
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES_256 = 1
const CONFIG_SOC_MEMPROT_CPU_PREFETCH_PAD_SIZE = 16
const CONFIG_SOC_MEMPROT_MEM_ALIGN_SIZE = 4
const CONFIG_SOC_AES_CRYPTO_DMA = 1
const CONFIG_SOC_AES_SUPPORT_AES_128 = 1
const CONFIG_SOC_AES_SUPPORT_AES_192 = 1
const CONFIG_SOC_AES_SUPPORT_AES_256 = 1
const CONFIG_SOC_PHY_DIG_REGS_MEM_SIZE = 21
const CONFIG_SOC_WIFI_LIGHT_SLEEP_CLK_WIDTH = 12
const CONFIG_SOC_SPI_MEM_SUPPORT_AUTO_WAIT_IDLE = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_SW_SUSPEND = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_CONFIG_GPIO_BY_EFUSE = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_WRAP = 1
const CONFIG_SOC_PM_SUPPORT_EXT0_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_EXT1_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_EXT_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_WIFI_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_TOUCH_SENSOR_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_WIFI_PD = 1
const CONFIG_SOC_PM_SUPPORT_RTC_PERIPH_PD = 1
const CONFIG_SOC_PM_SUPPORT_RTC_FAST_MEM_PD = 1
const CONFIG_SOC_PM_SUPPORT_RTC_SLOW_MEM_PD = 1
const CONFIG_SOC_PM_SUPPORT_RC_FAST_PD = 1
const CONFIG_SOC_PM_SUPPORT_VDDSDIO_PD = 1
const CONFIG_SOC_CONFIGURABLE_VDDSDIO_SUPPORTED = 1
const CONFIG_SOC_PM_MODEM_PD_BY_SW = 1
const CONFIG_SOC_CLK_APLL_SUPPORTED = 1
const CONFIG_SOC_CLK_RC_FAST_D256_SUPPORTED = 1
const CONFIG_SOC_RTC_SLOW_CLK_SUPPORT_RC_FAST_D256 = 1
const CONFIG_SOC_CLK_RC_FAST_SUPPORT_CALIBRATION = 1
const CONFIG_SOC_CLK_XTAL32K_SUPPORTED = 1
const CONFIG_SOC_COEX_HW_PTI = 1
const CONFIG_SOC_EXTERNAL_COEX_LEADER_TX_LINE = 1
const CONFIG_SOC_TEMPERATURE_SENSOR_SUPPORT_FAST_RC = 1
const CONFIG_SOC_WIFI_HW_TSF = 1
const CONFIG_SOC_WIFI_FTM_SUPPORT = 1
const CONFIG_SOC_WIFI_WAPI_SUPPORT = 1
const CONFIG_SOC_WIFI_CSI_SUPPORT = 1
const CONFIG_SOC_WIFI_MESH_SUPPORT = 1
const CONFIG_SOC_WIFI_SUPPORT_VARIABLE_BEACON_WINDOW = 1
const CONFIG_SOC_WIFI_NAN_SUPPORT = 1
const CONFIG_SOC_ULP_HAS_ADC = 1
const CONFIG_IDF_CMAKE = 1
const CONFIG_IDF_TOOLCHAIN = "gcc"
const CONFIG_IDF_TOOLCHAIN_GCC = 1
const CONFIG_IDF_TARGET_ARCH_XTENSA = 1
const CONFIG_IDF_TARGET_ARCH = "xtensa"
const CONFIG_IDF_TARGET = "esp32s2"
const CONFIG_IDF_INIT_VERSION = "5.4.2"
const CONFIG_IDF_TARGET_ESP32S2 = 1
const CONFIG_IDF_FIRMWARE_CHIP_ID = 0x0002
const CONFIG_APP_BUILD_TYPE_APP_2NDBOOT = 1
const CONFIG_APP_BUILD_GENERATE_BINARIES = 1
const CONFIG_APP_BUILD_BOOTLOADER = 1
const CONFIG_APP_BUILD_USE_FLASH_SECTIONS = 1
const CONFIG_BOOTLOADER_COMPILE_TIME_DATE = 1
const CONFIG_BOOTLOADER_PROJECT_VER = 1
const CONFIG_BOOTLOADER_OFFSET_IN_FLASH = 0x1000
const CONFIG_BOOTLOADER_COMPILER_OPTIMIZATION_SIZE = 1
const CONFIG_BOOTLOADER_LOG_LEVEL_INFO = 1
const CONFIG_BOOTLOADER_LOG_LEVEL = 3
const CONFIG_BOOTLOADER_LOG_TIMESTAMP_SOURCE_CPU_TICKS = 1
const CONFIG_BOOTLOADER_FLASH_XMC_SUPPORT = 1
const CONFIG_BOOTLOADER_VDDSDIO_BOOST_1_9V = 1
const CONFIG_BOOTLOADER_REGION_PROTECTION_ENABLE = 1
const CONFIG_BOOTLOADER_WDT_ENABLE = 1
const CONFIG_BOOTLOADER_WDT_TIME_MS = 9000
const CONFIG_BOOTLOADER_RESERVE_RTC_SIZE = 0x0
const CONFIG_SECURE_BOOT_V2_RSA_SUPPORTED = 1
const CONFIG_SECURE_BOOT_V2_PREFERRED = 1
const CONFIG_SECURE_ROM_DL_MODE_ENABLED = 1
const CONFIG_APP_COMPILE_TIME_DATE = 1
const CONFIG_APP_RETRIEVE_LEN_ELF_SHA = 9
const CONFIG_ESP_ROM_HAS_CRC_LE = 1
const CONFIG_ESP_ROM_HAS_MZ_CRC32 = 1
const CONFIG_ESP_ROM_HAS_UART_BUF_SWITCH = 1
const CONFIG_ESP_ROM_NEEDS_SWSETUP_WORKAROUND = 1
const CONFIG_ESP_ROM_HAS_REGI2C_BUG = 1
const CONFIG_ESP_ROM_HAS_NEWLIB = 1
const CONFIG_ESP_ROM_HAS_NEWLIB_NANO_FORMAT = 1
const CONFIG_ESP_ROM_HAS_NEWLIB_32BIT_TIME = 1
const CONFIG_ESP_ROM_USB_OTG_NUM = 3
const CONFIG_ESP_ROM_HAS_FLASH_COUNT_PAGES_BUG = 1
const CONFIG_ESP_ROM_HAS_SW_FLOAT = 1
const CONFIG_ESP_ROM_SUPPORT_DEEP_SLEEP_WAKEUP_STUB = 1
const CONFIG_ESP_ROM_HAS_VPRINTF_FUNC = 1
const CONFIG_ESP_ROM_HAS_OUTPUT_TO_CHANNELS_FUNC = 1
const CONFIG_ESP_ROM_HAS_OUTPUT_PUTC_FUNC = 1
const CONFIG_BOOT_ROM_LOG_ALWAYS_ON = 1
const CONFIG_ESPTOOLPY_FLASHMODE_DIO = 1
const CONFIG_ESPTOOLPY_FLASH_SAMPLE_MODE_STR = 1
const CONFIG_ESPTOOLPY_FLASHMODE = "dio"
const CONFIG_ESPTOOLPY_FLASHFREQ_80M = 1
const CONFIG_ESPTOOLPY_FLASHFREQ = "80m"
const CONFIG_ESPTOOLPY_FLASHSIZE_2MB = 1
const CONFIG_ESPTOOLPY_FLASHSIZE = "2MB"
const CONFIG_ESPTOOLPY_BEFORE_RESET = 1
const CONFIG_ESPTOOLPY_BEFORE = "default_reset"
const CONFIG_ESPTOOLPY_AFTER_RESET = 1
const CONFIG_ESPTOOLPY_AFTER = "hard_reset"
const CONFIG_ESPTOOLPY_MONITOR_BAUD = 115200
const CONFIG_PARTITION_TABLE_SINGLE_APP = 1
const CONFIG_PARTITION_TABLE_CUSTOM_FILENAME = "partitions.csv"
const CONFIG_PARTITION_TABLE_FILENAME = "partitions_singleapp.csv"
const CONFIG_PARTITION_TABLE_OFFSET = 0x8000
const CONFIG_PARTITION_TABLE_MD5 = 1
const CONFIG_COMPILER_OPTIMIZATION_DEBUG = 1
const CONFIG_COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE = 1
const CONFIG_COMPILER_ASSERT_NDEBUG_EVALUATE = 1
const CONFIG_COMPILER_FLOAT_LIB_FROM_GCCLIB = 1
const CONFIG_COMPILER_OPTIMIZATION_ASSERTION_LEVEL = 2
const CONFIG_COMPILER_HIDE_PATHS_MACROS = 1
const CONFIG_COMPILER_STACK_CHECK_MODE_NONE = 1
const CONFIG_COMPILER_DISABLE_DEFAULT_ERRORS = 1
const CONFIG_COMPILER_RT_LIB_GCCLIB = 1
const CONFIG_COMPILER_RT_LIB_NAME = "gcc"
const CONFIG_COMPILER_ORPHAN_SECTIONS_WARNING = 1
const CONFIG_APPTRACE_DEST_NONE = 1
const CONFIG_APPTRACE_DEST_UART_NONE = 1
const CONFIG_APPTRACE_UART_TASK_PRIO = 1
const CONFIG_APPTRACE_LOCK_ENABLE = 1
const CONFIG_TWAI_ERRATA_FIX_LISTEN_ONLY_DOM = 1
const CONFIG_ADC_DISABLE_DAC = 1
const CONFIG_EFUSE_MAX_BLK_LEN = 256
const CONFIG_ESP_TLS_USING_MBEDTLS = 1
const CONFIG_ESP_TLS_USE_DS_PERIPHERAL = 1
const CONFIG_ADC_DISABLE_DAC_OUTPUT = 1
const CONFIG_ESP_COEX_ENABLED = 1
const CONFIG_ESP_ERR_TO_NAME_LOOKUP = 1
const CONFIG_GPTIMER_ISR_HANDLER_IN_IRAM = 1
const CONFIG_GPTIMER_OBJ_CACHE_SAFE = 1
const CONFIG_SPI_MASTER_ISR_IN_IRAM = 1
const CONFIG_SPI_SLAVE_ISR_IN_IRAM = 1
const CONFIG_ETH_ENABLED = 1
const CONFIG_ETH_USE_SPI_ETHERNET = 1
const CONFIG_ESP_EVENT_POST_FROM_ISR = 1
const CONFIG_ESP_EVENT_POST_FROM_IRAM_ISR = 1
const CONFIG_ESP_GDBSTUB_ENABLED = 1
const CONFIG_ESP_GDBSTUB_SUPPORT_TASKS = 1
const CONFIG_ESP_GDBSTUB_MAX_TASKS = 32
const CONFIG_ESPHID_TASK_SIZE_BT = 2048
const CONFIG_ESPHID_TASK_SIZE_BLE = 4096
const CONFIG_ESP_HTTP_CLIENT_ENABLE_HTTPS = 1
const CONFIG_ESP_HTTP_CLIENT_EVENT_POST_TIMEOUT = 2000
const CONFIG_HTTPD_MAX_REQ_HDR_LEN = 512
const CONFIG_HTTPD_MAX_URI_LEN = 512
const CONFIG_HTTPD_ERR_RESP_NO_DELAY = 1
const CONFIG_HTTPD_PURGE_BUF_LEN = 32
const CONFIG_HTTPD_SERVER_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP_HTTPS_OTA_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP_HTTPS_SERVER_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP32S2_REV_MIN_0 = 1
const CONFIG_ESP32S2_REV_MIN_FULL = 0
const CONFIG_ESP_REV_MIN_FULL = 0
const CONFIG_ESP32S2_REV_MAX_FULL = 199
const CONFIG_ESP_REV_MAX_FULL = 199
const CONFIG_ESP_EFUSE_BLOCK_REV_MIN_FULL = 0
const CONFIG_ESP_EFUSE_BLOCK_REV_MAX_FULL = 99
const CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_STA = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_AP = 1
const CONFIG_ESP_MAC_UNIVERSAL_MAC_ADDRESSES_TWO = 1
const CONFIG_ESP_MAC_UNIVERSAL_MAC_ADDRESSES = 2
const CONFIG_ESP32S2_UNIVERSAL_MAC_ADDRESSES_TWO = 1
const CONFIG_ESP32S2_UNIVERSAL_MAC_ADDRESSES = 2
const CONFIG_ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND = 1
const CONFIG_ESP_SLEEP_RTC_BUS_ISO_WORKAROUND = 1
const CONFIG_ESP_SLEEP_WAIT_FLASH_READY_EXTRA_DELAY = 0
const CONFIG_ESP_SLEEP_GPIO_ENABLE_INTERNAL_RESISTORS = 1
const CONFIG_RTC_CLK_SRC_INT_RC = 1
const CONFIG_RTC_CLK_CAL_CYCLES = 576
const CONFIG_XTAL_FREQ_40 = 1
const CONFIG_XTAL_FREQ = 40
const CONFIG_ESP_SPI_BUS_LOCK_ISR_FUNCS_IN_IRAM = 1
const CONFIG_ESP_NETIF_IP_LOST_TIMER_INTERVAL = 120
const CONFIG_ESP_NETIF_TCPIP_LWIP = 1
const CONFIG_ESP_NETIF_USES_TCPIP_WITH_BSD_API = 1
const CONFIG_ESP_NETIF_REPORT_DATA_TRAFFIC = 1
const CONFIG_ESP_PHY_ENABLED = 1
const CONFIG_ESP_PHY_CALIBRATION_AND_DATA_STORAGE = 1
const CONFIG_ESP_PHY_MAX_WIFI_TX_POWER = 20
const CONFIG_ESP_PHY_MAX_TX_POWER = 20
const CONFIG_ESP_PHY_RF_CAL_PARTIAL = 1
const CONFIG_ESP_PHY_CALIBRATION_MODE = 0
const CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_160 = 1
const CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ = 160
const CONFIG_ESP32S2_INSTRUCTION_CACHE_8KB = 1
const CONFIG_ESP32S2_INSTRUCTION_CACHE_SIZE = 0x2000
const CONFIG_ESP32S2_INSTRUCTION_CACHE_LINE_32B = 1
const CONFIG_ESP32S2_DATA_CACHE_8KB = 1
const CONFIG_ESP32S2_DATA_CACHE_SIZE = 0x2000
const CONFIG_ESP32S2_DATA_CACHE_LINE_32B = 1
const CONFIG_ESP32S2_TRACEMEM_RESERVE_DRAM = 0x0
const CONFIG_ESP_SYSTEM_PANIC_PRINT_REBOOT = 1
const CONFIG_ESP_SYSTEM_PANIC_REBOOT_DELAY_SECONDS = 0
const CONFIG_ESP_SYSTEM_SINGLE_CORE_MODE = 1
const CONFIG_ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK = 1
const CONFIG_ESP_SYSTEM_ALLOW_RTC_FAST_MEM_AS_HEAP = 1
const CONFIG_ESP_SYSTEM_MEMPROT_FEATURE = 1
const CONFIG_ESP_SYSTEM_MEMPROT_FEATURE_LOCK = 1
const CONFIG_ESP_SYSTEM_EVENT_QUEUE_SIZE = 32
const CONFIG_ESP_SYSTEM_EVENT_TASK_STACK_SIZE = 2304
const CONFIG_ESP_MAIN_TASK_STACK_SIZE = 3584
const CONFIG_ESP_MAIN_TASK_AFFINITY_CPU0 = 1
const CONFIG_ESP_MAIN_TASK_AFFINITY = 0x0
const CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE = 2048
const CONFIG_ESP_CONSOLE_UART_DEFAULT = 1
const CONFIG_ESP_CONSOLE_UART = 1
const CONFIG_ESP_CONSOLE_UART_NUM = 0
const CONFIG_ESP_CONSOLE_ROM_SERIAL_PORT_NUM = 0
const CONFIG_ESP_CONSOLE_UART_BAUDRATE = 115200
const CONFIG_ESP_INT_WDT = 1
const CONFIG_ESP_INT_WDT_TIMEOUT_MS = 300
const CONFIG_ESP_TASK_WDT_EN = 1
const CONFIG_ESP_TASK_WDT_INIT = 1
const CONFIG_ESP_TASK_WDT_TIMEOUT_S = 5
const CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0 = 1
const CONFIG_ESP_DEBUG_OCDAWARE = 1
const CONFIG_ESP_SYSTEM_CHECK_INT_LEVEL_4 = 1
const CONFIG_ESP_BROWNOUT_DET = 1
const CONFIG_ESP_BROWNOUT_DET_LVL_SEL_7 = 1
const CONFIG_ESP_BROWNOUT_DET_LVL = 7
const CONFIG_ESP_SYSTEM_BROWNOUT_INTR = 1
const CONFIG_ESP_IPC_TASK_STACK_SIZE = 1024
const CONFIG_ESP_TIME_FUNCS_USE_RTC_TIMER = 1
const CONFIG_ESP_TIME_FUNCS_USE_ESP_TIMER = 1
const CONFIG_ESP_TIMER_TASK_STACK_SIZE = 3584
const CONFIG_ESP_TIMER_INTERRUPT_LEVEL = 1
const CONFIG_ESP_TIMER_TASK_AFFINITY = 0x0
const CONFIG_ESP_TIMER_TASK_AFFINITY_CPU0 = 1
const CONFIG_ESP_TIMER_ISR_AFFINITY_CPU0 = 1
const CONFIG_ESP_TIMER_IMPL_SYSTIMER = 1
const CONFIG_ESP_WIFI_ENABLED = 1
const CONFIG_ESP_WIFI_STATIC_RX_BUFFER_NUM = 10
const CONFIG_ESP_WIFI_DYNAMIC_RX_BUFFER_NUM = 32
const CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER = 1
const CONFIG_ESP_WIFI_TX_BUFFER_TYPE = 1
const CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER_NUM = 32
const CONFIG_ESP_WIFI_STATIC_RX_MGMT_BUFFER = 1
const CONFIG_ESP_WIFI_DYNAMIC_RX_MGMT_BUF = 0
const CONFIG_ESP_WIFI_RX_MGMT_BUF_NUM_DEF = 5
const CONFIG_ESP_WIFI_AMPDU_TX_ENABLED = 1
const CONFIG_ESP_WIFI_TX_BA_WIN = 6
const CONFIG_ESP_WIFI_AMPDU_RX_ENABLED = 1
const CONFIG_ESP_WIFI_RX_BA_WIN = 6
const CONFIG_ESP_WIFI_NVS_ENABLED = 1
const CONFIG_ESP_WIFI_SOFTAP_BEACON_MAX_LEN = 752
const CONFIG_ESP_WIFI_MGMT_SBUF_NUM = 32
const CONFIG_ESP_WIFI_IRAM_OPT = 1
const CONFIG_ESP_WIFI_RX_IRAM_OPT = 1
const CONFIG_ESP_WIFI_ENABLE_WPA3_SAE = 1
const CONFIG_ESP_WIFI_ENABLE_SAE_PK = 1
const CONFIG_ESP_WIFI_SOFTAP_SAE_SUPPORT = 1
const CONFIG_ESP_WIFI_ENABLE_WPA3_OWE_STA = 1
const CONFIG_ESP_WIFI_SLP_DEFAULT_MIN_ACTIVE_TIME = 50
const CONFIG_ESP_WIFI_SLP_DEFAULT_MAX_ACTIVE_TIME = 10
const CONFIG_ESP_WIFI_SLP_DEFAULT_WAIT_BROADCAST_DATA_TIME = 15
const CONFIG_ESP_WIFI_STA_DISCONNECTED_PM_ENABLE = 1
const CONFIG_ESP_WIFI_GMAC_SUPPORT = 1
const CONFIG_ESP_WIFI_SOFTAP_SUPPORT = 1
const CONFIG_ESP_WIFI_ESPNOW_MAX_ENCRYPT_NUM = 7
const CONFIG_ESP_WIFI_MBEDTLS_CRYPTO = 1
const CONFIG_ESP_WIFI_MBEDTLS_TLS_CLIENT = 1
const CONFIG_ESP_WIFI_ENTERPRISE_SUPPORT = 1
const CONFIG_ESP_COREDUMP_ENABLE_TO_NONE = 1
const CONFIG_FATFS_VOLUME_COUNT = 2
const CONFIG_FATFS_LFN_NONE = 1
const CONFIG_FATFS_SECTOR_4096 = 1
const CONFIG_FATFS_CODEPAGE_437 = 1
const CONFIG_FATFS_CODEPAGE = 437
const CONFIG_FATFS_FS_LOCK = 0
const CONFIG_FATFS_TIMEOUT_MS = 10000
const CONFIG_FATFS_PER_FILE_CACHE = 1
const CONFIG_FATFS_USE_STRFUNC_NONE = 1
const CONFIG_FATFS_VFS_FSTAT_BLKSIZE = 0
const CONFIG_FATFS_LINK_LOCK = 1
const CONFIG_FATFS_DONT_TRUST_FREE_CLUSTER_CNT = 0
const CONFIG_FATFS_DONT_TRUST_LAST_ALLOC = 0
const CONFIG_FREERTOS_UNICORE = 1
const CONFIG_FREERTOS_HZ = 100
const CONFIG_FREERTOS_OPTIMIZED_SCHEDULER = 1
const CONFIG_FREERTOS_CHECK_STACKOVERFLOW_CANARY = 1
const CONFIG_FREERTOS_THREAD_LOCAL_STORAGE_POINTERS = 1
const CONFIG_FREERTOS_IDLE_TASK_STACKSIZE = 1536
const CONFIG_FREERTOS_MAX_TASK_NAME_LEN = 16
const CONFIG_FREERTOS_USE_TIMERS = 1
const CONFIG_FREERTOS_TIMER_SERVICE_TASK_NAME = "Tmr Svc"
const CONFIG_FREERTOS_TIMER_TASK_NO_AFFINITY = 1
const CONFIG_FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY = 0x7FFFFFFF
const CONFIG_FREERTOS_TIMER_TASK_PRIORITY = 1
const CONFIG_FREERTOS_TIMER_TASK_STACK_DEPTH = 2048
const CONFIG_FREERTOS_TIMER_QUEUE_LENGTH = 10
const CONFIG_FREERTOS_QUEUE_REGISTRY_SIZE = 0
const CONFIG_FREERTOS_TASK_NOTIFICATION_ARRAY_ENTRIES = 1
const CONFIG_FREERTOS_TASK_FUNCTION_WRAPPER = 1
const CONFIG_FREERTOS_TLSP_DELETION_CALLBACKS = 1
const CONFIG_FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER = 1
const CONFIG_FREERTOS_ISR_STACKSIZE = 1536
const CONFIG_FREERTOS_INTERRUPT_BACKTRACE = 1
const CONFIG_FREERTOS_TICK_SUPPORT_CORETIMER = 1
const CONFIG_FREERTOS_CORETIMER_0 = 1
const CONFIG_FREERTOS_SYSTICK_USES_CCOUNT = 1
const CONFIG_FREERTOS_PORT = 1
const CONFIG_FREERTOS_NO_AFFINITY = 0x7FFFFFFF
const CONFIG_FREERTOS_SUPPORT_STATIC_ALLOCATION = 1
const CONFIG_FREERTOS_DEBUG_OCDAWARE = 1
const CONFIG_FREERTOS_ENABLE_TASK_SNAPSHOT = 1
const CONFIG_FREERTOS_PLACE_SNAPSHOT_FUNS_INTO_FLASH = 1
const CONFIG_FREERTOS_NUMBER_OF_CORES = 1
const CONFIG_HAL_ASSERTION_EQUALS_SYSTEM = 1
const CONFIG_HAL_DEFAULT_ASSERTION_LEVEL = 2
const CONFIG_HAL_SPI_MASTER_FUNC_IN_IRAM = 1
const CONFIG_HAL_SPI_SLAVE_FUNC_IN_IRAM = 1
const CONFIG_HEAP_POISONING_DISABLED = 1
const CONFIG_HEAP_TRACING_OFF = 1
const CONFIG_LOG_DEFAULT_LEVEL_INFO = 1
const CONFIG_LOG_DEFAULT_LEVEL = 3
const CONFIG_LOG_MAXIMUM_EQUALS_DEFAULT = 1
const CONFIG_LOG_MAXIMUM_LEVEL = 3
const CONFIG_LOG_DYNAMIC_LEVEL_CONTROL = 1
const CONFIG_LOG_TAG_LEVEL_IMPL_CACHE_AND_LINKED_LIST = 1
const CONFIG_LOG_TAG_LEVEL_CACHE_BINARY_MIN_HEAP = 1
const CONFIG_LOG_TAG_LEVEL_IMPL_CACHE_SIZE = 31
const CONFIG_LOG_TIMESTAMP_SOURCE_RTOS = 1
const CONFIG_LWIP_ENABLE = 1
const CONFIG_LWIP_LOCAL_HOSTNAME = "espressif"
const CONFIG_LWIP_TCPIP_TASK_PRIO = 18
const CONFIG_LWIP_DNS_SUPPORT_MDNS_QUERIES = 1
const CONFIG_LWIP_TIMERS_ONDEMAND = 1
const CONFIG_LWIP_ND6 = 1
const CONFIG_LWIP_MAX_SOCKETS = 10
const CONFIG_LWIP_SO_REUSE = 1
const CONFIG_LWIP_SO_REUSE_RXTOALL = 1
const CONFIG_LWIP_IP_DEFAULT_TTL = 64
const CONFIG_LWIP_IP4_FRAG = 1
const CONFIG_LWIP_IP6_FRAG = 1
const CONFIG_LWIP_IP_REASS_MAX_PBUFS = 10
const CONFIG_LWIP_ESP_GRATUITOUS_ARP = 1
const CONFIG_LWIP_GARP_TMR_INTERVAL = 60
const CONFIG_LWIP_ESP_MLDV6_REPORT = 1
const CONFIG_LWIP_MLDV6_TMR_INTERVAL = 40
const CONFIG_LWIP_TCPIP_RECVMBOX_SIZE = 32
const CONFIG_LWIP_DHCP_DOES_ARP_CHECK = 1
const CONFIG_LWIP_DHCP_DISABLE_VENDOR_CLASS_ID = 1
const CONFIG_LWIP_DHCP_OPTIONS_LEN = 68
const CONFIG_LWIP_NUM_NETIF_CLIENT_DATA = 0
const CONFIG_LWIP_DHCP_COARSE_TIMER_SECS = 1
const CONFIG_LWIP_DHCPS = 1
const CONFIG_LWIP_DHCPS_LEASE_UNIT = 60
const CONFIG_LWIP_DHCPS_MAX_STATION_NUM = 8
const CONFIG_LWIP_DHCPS_STATIC_ENTRIES = 1
const CONFIG_LWIP_DHCPS_ADD_DNS = 1
const CONFIG_LWIP_IPV4 = 1
const CONFIG_LWIP_IPV6 = 1
const CONFIG_LWIP_IPV6_NUM_ADDRESSES = 3
const CONFIG_LWIP_NETIF_LOOPBACK = 1
const CONFIG_LWIP_LOOPBACK_MAX_PBUFS = 8
const CONFIG_LWIP_MAX_ACTIVE_TCP = 16
const CONFIG_LWIP_MAX_LISTENING_TCP = 16
const CONFIG_LWIP_TCP_HIGH_SPEED_RETRANSMISSION = 1
const CONFIG_LWIP_TCP_MAXRTX = 12
const CONFIG_LWIP_TCP_SYNMAXRTX = 12
const CONFIG_LWIP_TCP_MSS = 1440
const CONFIG_LWIP_TCP_TMR_INTERVAL = 250
const CONFIG_LWIP_TCP_MSL = 60000
const CONFIG_LWIP_TCP_FIN_WAIT_TIMEOUT = 20000
const CONFIG_LWIP_TCP_SND_BUF_DEFAULT = 5760
const CONFIG_LWIP_TCP_WND_DEFAULT = 5760
const CONFIG_LWIP_TCP_RECVMBOX_SIZE = 6
const CONFIG_LWIP_TCP_ACCEPTMBOX_SIZE = 6
const CONFIG_LWIP_TCP_QUEUE_OOSEQ = 1
const CONFIG_LWIP_TCP_OOSEQ_TIMEOUT = 6
const CONFIG_LWIP_TCP_OOSEQ_MAX_PBUFS = 4
const CONFIG_LWIP_TCP_OVERSIZE_MSS = 1
const CONFIG_LWIP_TCP_RTO_TIME = 1500
const CONFIG_LWIP_MAX_UDP_PCBS = 16
const CONFIG_LWIP_UDP_RECVMBOX_SIZE = 6
const CONFIG_LWIP_CHECKSUM_CHECK_ICMP = 1
const CONFIG_LWIP_TCPIP_TASK_STACK_SIZE = 3072
const CONFIG_LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY = 1
const CONFIG_LWIP_TCPIP_TASK_AFFINITY = 0x7FFFFFFF
const CONFIG_LWIP_IPV6_MEMP_NUM_ND6_QUEUE = 3
const CONFIG_LWIP_IPV6_ND6_NUM_NEIGHBORS = 5
const CONFIG_LWIP_IPV6_ND6_NUM_PREFIXES = 5
const CONFIG_LWIP_IPV6_ND6_NUM_ROUTERS = 3
const CONFIG_LWIP_IPV6_ND6_NUM_DESTINATIONS = 10
const CONFIG_LWIP_ICMP = 1
const CONFIG_LWIP_MAX_RAW_PCBS = 16
const CONFIG_LWIP_SNTP_MAX_SERVERS = 1
const CONFIG_LWIP_SNTP_UPDATE_DELAY = 3600000
const CONFIG_LWIP_SNTP_STARTUP_DELAY = 1
const CONFIG_LWIP_SNTP_MAXIMUM_STARTUP_DELAY = 5000
const CONFIG_LWIP_DNS_MAX_HOST_IP = 1
const CONFIG_LWIP_DNS_MAX_SERVERS = 3
const CONFIG_LWIP_BRIDGEIF_MAX_PORTS = 7
const CONFIG_LWIP_ESP_LWIP_ASSERT = 1
const CONFIG_LWIP_HOOK_TCP_ISN_DEFAULT = 1
const CONFIG_LWIP_HOOK_IP6_ROUTE_NONE = 1
const CONFIG_LWIP_HOOK_ND6_GET_GW_NONE = 1
const CONFIG_LWIP_HOOK_IP6_SELECT_SRC_ADDR_NONE = 1
const CONFIG_LWIP_HOOK_NETCONN_EXT_RESOLVE_NONE = 1
const CONFIG_LWIP_HOOK_DNS_EXT_RESOLVE_NONE = 1
const CONFIG_LWIP_HOOK_IP6_INPUT_DEFAULT = 1
const CONFIG_MBEDTLS_INTERNAL_MEM_ALLOC = 1
const CONFIG_MBEDTLS_ASYMMETRIC_CONTENT_LEN = 1
const CONFIG_MBEDTLS_SSL_IN_CONTENT_LEN = 16384
const CONFIG_MBEDTLS_SSL_OUT_CONTENT_LEN = 4096
const CONFIG_MBEDTLS_SSL_KEEP_PEER_CERTIFICATE = 1
const CONFIG_MBEDTLS_PKCS7_C = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS = 200
const CONFIG_MBEDTLS_CMAC_C = 1
const CONFIG_MBEDTLS_HARDWARE_AES = 1
const CONFIG_MBEDTLS_AES_USE_INTERRUPT = 1
const CONFIG_MBEDTLS_AES_INTERRUPT_LEVEL = 0
const CONFIG_MBEDTLS_HARDWARE_GCM = 1
const CONFIG_MBEDTLS_GCM_SUPPORT_NON_AES_CIPHER = 1
const CONFIG_MBEDTLS_HARDWARE_MPI = 1
const CONFIG_MBEDTLS_MPI_USE_INTERRUPT = 1
const CONFIG_MBEDTLS_MPI_INTERRUPT_LEVEL = 0
const CONFIG_MBEDTLS_HARDWARE_SHA = 1
const CONFIG_MBEDTLS_ROM_MD5 = 1
const CONFIG_MBEDTLS_HAVE_TIME = 1
const CONFIG_MBEDTLS_ECDSA_DETERMINISTIC = 1
const CONFIG_MBEDTLS_SHA1_C = 1
const CONFIG_MBEDTLS_SHA512_C = 1
const CONFIG_MBEDTLS_TLS_SERVER_AND_CLIENT = 1
const CONFIG_MBEDTLS_TLS_SERVER = 1
const CONFIG_MBEDTLS_TLS_CLIENT = 1
const CONFIG_MBEDTLS_TLS_ENABLED = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_RSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_RSA = 1
const CONFIG_MBEDTLS_SSL_RENEGOTIATION = 1
const CONFIG_MBEDTLS_SSL_PROTO_TLS1_2 = 1
const CONFIG_MBEDTLS_SSL_ALPN = 1
const CONFIG_MBEDTLS_CLIENT_SSL_SESSION_TICKETS = 1
const CONFIG_MBEDTLS_SERVER_SSL_SESSION_TICKETS = 1
const CONFIG_MBEDTLS_AES_C = 1
const CONFIG_MBEDTLS_CCM_C = 1
const CONFIG_MBEDTLS_GCM_C = 1
const CONFIG_MBEDTLS_PEM_PARSE_C = 1
const CONFIG_MBEDTLS_PEM_WRITE_C = 1
const CONFIG_MBEDTLS_X509_CRL_PARSE_C = 1
const CONFIG_MBEDTLS_X509_CSR_PARSE_C = 1
const CONFIG_MBEDTLS_ECP_C = 1
const CONFIG_MBEDTLS_PK_PARSE_EC_EXTENDED = 1
const CONFIG_MBEDTLS_PK_PARSE_EC_COMPRESSED = 1
const CONFIG_MBEDTLS_ECDH_C = 1
const CONFIG_MBEDTLS_ECDSA_C = 1
const CONFIG_MBEDTLS_ECP_DP_SECP192R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP224R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP256R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP384R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP521R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP192K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP224K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP256K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP256R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP384R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP512R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_CURVE25519_ENABLED = 1
const CONFIG_MBEDTLS_ECP_NIST_OPTIM = 1
const CONFIG_MBEDTLS_ERROR_STRINGS = 1
const CONFIG_MBEDTLS_FS_IO = 1
const CONFIG_MQTT_PROTOCOL_311 = 1
const CONFIG_MQTT_TRANSPORT_SSL = 1
const CONFIG_MQTT_TRANSPORT_WEBSOCKET = 1
const CONFIG_MQTT_TRANSPORT_WEBSOCKET_SECURE = 1
const CONFIG_NEWLIB_STDOUT_LINE_ENDING_CRLF = 1
const CONFIG_NEWLIB_STDIN_LINE_ENDING_CR = 1
const CONFIG_NEWLIB_TIME_SYSCALL_USE_RTC_HRT = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_0 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_1 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_2 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_PATCH_VERSION = 1
const CONFIG_PTHREAD_TASK_PRIO_DEFAULT = 5
const CONFIG_PTHREAD_TASK_STACK_SIZE_DEFAULT = 3072
const CONFIG_PTHREAD_STACK_MIN = 768
const CONFIG_PTHREAD_TASK_NAME_DEFAULT = "pthread"
const CONFIG_MMU_PAGE_SIZE_64KB = 1
const CONFIG_MMU_PAGE_MODE = "64KB"
const CONFIG_MMU_PAGE_SIZE = 0x10000
const CONFIG_SPI_FLASH_BROWNOUT_RESET_XMC = 1
const CONFIG_SPI_FLASH_BROWNOUT_RESET = 1
const CONFIG_SPI_FLASH_SUSPEND_TSUS_VAL_US = 50
const CONFIG_SPI_FLASH_ROM_DRIVER_PATCH = 1
const CONFIG_SPI_FLASH_DANGEROUS_WRITE_ABORTS = 1
const CONFIG_SPI_FLASH_YIELD_DURING_ERASE = 1
const CONFIG_SPI_FLASH_ERASE_YIELD_DURATION_MS = 20
const CONFIG_SPI_FLASH_ERASE_YIELD_TICKS = 1
const CONFIG_SPI_FLASH_WRITE_CHUNK_SIZE = 8192
const CONFIG_SPI_FLASH_VENDOR_XMC_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_GD_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_ISSI_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_MXIC_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_WINBOND_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_BOYA_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_TH_SUPPORTED = 1
const CONFIG_SPI_FLASH_SUPPORT_ISSI_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_MXIC_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_GD_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_WINBOND_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_BOYA_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_TH_CHIP = 1
const CONFIG_SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE = 1
const CONFIG_SPIFFS_MAX_PARTITIONS = 3
const CONFIG_SPIFFS_CACHE = 1
const CONFIG_SPIFFS_CACHE_WR = 1
const CONFIG_SPIFFS_PAGE_CHECK = 1
const CONFIG_SPIFFS_GC_MAX_RUNS = 10
const CONFIG_SPIFFS_PAGE_SIZE = 256
const CONFIG_SPIFFS_OBJ_NAME_LEN = 32
const CONFIG_SPIFFS_USE_MAGIC = 1
const CONFIG_SPIFFS_USE_MAGIC_LENGTH = 1
const CONFIG_SPIFFS_META_LENGTH = 4
const CONFIG_SPIFFS_USE_MTIME = 1
const CONFIG_WS_TRANSPORT = 1
const CONFIG_WS_BUFFER_SIZE = 1024
const CONFIG_UNITY_ENABLE_FLOAT = 1
const CONFIG_UNITY_ENABLE_DOUBLE = 1
const CONFIG_UNITY_ENABLE_IDF_TEST_RUNNER = 1
const CONFIG_USB_HOST_CONTROL_TRANSFER_MAX_SIZE = 256
const CONFIG_USB_HOST_HW_BUFFER_BIAS_BALANCED = 1
const CONFIG_USB_HOST_DEBOUNCE_DELAY_MS = 250
const CONFIG_USB_HOST_RESET_HOLD_MS = 30
const CONFIG_USB_HOST_RESET_RECOVERY_MS = 30
const CONFIG_USB_HOST_SET_ADDR_RECOVERY_MS = 10
const CONFIG_USB_OTG_SUPPORTED = 1
const CONFIG_VFS_SUPPORT_IO = 1
const CONFIG_VFS_SUPPORT_DIR = 1
const CONFIG_VFS_SUPPORT_SELECT = 1
const CONFIG_VFS_SUPPRESS_SELECT_DEBUG_OUTPUT = 1
const CONFIG_VFS_SUPPORT_TERMIOS = 1
const CONFIG_VFS_MAX_COUNT = 8
const CONFIG_VFS_SEMIHOSTFS_MAX_MOUNT_POINTS = 1
const CONFIG_VFS_INITIALIZE_DEV_NULL = 1
const CONFIG_WL_SECTOR_SIZE_4096 = 1
const CONFIG_WL_SECTOR_SIZE = 4096
const CONFIG_WIFI_PROV_SCAN_MAX_ENTRIES = 16
const CONFIG_WIFI_PROV_AUTOSTOP_TIMEOUT = 30
const CONFIG_WIFI_PROV_STA_ALL_CHANNEL_SCAN = 1
const X_ATEXIT_SIZE = 32
const X_REENT_EMERGENCY_SIZE = 25
const X_REENT_ASCTIME_SIZE = 26
const X_REENT_SIGNAL_SIZE = 24
const X__GNUCLIKE_ASM = 3
const X__GNUCLIKE___TYPEOF = 1
const X__GNUCLIKE___SECTION = 1
const X__GNUCLIKE_CTOR_SECTION_HANDLING = 1
const X__GNUCLIKE_BUILTIN_CONSTANT_P = 1
const X__GNUCLIKE_BUILTIN_VARARGS = 1
const X__GNUCLIKE_BUILTIN_STDARG = 1
const X__GNUCLIKE_BUILTIN_VAALIST = 1
const X__GNUC_VA_LIST_COMPATIBILITY = 1
const X__GNUCLIKE_BUILTIN_NEXT_ARG = 1
const X__GNUCLIKE_BUILTIN_MEMCPY = 1
const X__CC_SUPPORTS_INLINE = 1
const X__CC_SUPPORTS___INLINE = 1
const X__CC_SUPPORTS___INLINE__ = 1
const X__CC_SUPPORTS___FUNC__ = 1
const X__CC_SUPPORTS_WARNING = 1
const X__CC_SUPPORTS_VARADIC_XXX = 1
const X__CC_SUPPORTS_DYNAMIC_ARRAY_INIT = 1
const EXIT_FAILURE = 1
const EXIT_SUCCESS = 0
const SOC_ADC_SUPPORTED = 1
const SOC_DAC_SUPPORTED = 1
const SOC_UART_SUPPORTED = 1
const SOC_TWAI_SUPPORTED = 1
const SOC_CP_DMA_SUPPORTED = 1
const SOC_DEDICATED_GPIO_SUPPORTED = 1
const SOC_GPTIMER_SUPPORTED = 1
const SOC_SUPPORTS_SECURE_DL_MODE = 1
const SOC_ULP_FSM_SUPPORTED = 1
const SOC_RISCV_COPROC_SUPPORTED = 1
const SOC_USB_OTG_SUPPORTED = 1
const SOC_PCNT_SUPPORTED = 1
const SOC_PHY_SUPPORTED = 1
const SOC_WIFI_SUPPORTED = 1
const SOC_ULP_SUPPORTED = 1
const SOC_CCOMP_TIMER_SUPPORTED = 1
const SOC_ASYNC_MEMCPY_SUPPORTED = 1
const SOC_EFUSE_KEY_PURPOSE_FIELD = 1
const SOC_EFUSE_SUPPORTED = 1
const SOC_TEMP_SENSOR_SUPPORTED = 1
const SOC_CACHE_SUPPORT_WRAP = 1
const SOC_RTC_FAST_MEM_SUPPORTED = 1
const SOC_RTC_SLOW_MEM_SUPPORTED = 1
const SOC_RTC_MEM_SUPPORTED = 1
const SOC_PSRAM_DMA_CAPABLE = 1
const SOC_XT_WDT_SUPPORTED = 1
const SOC_I2S_SUPPORTED = 1
const SOC_RMT_SUPPORTED = 1
const SOC_SDM_SUPPORTED = 1
const SOC_GPSPI_SUPPORTED = 1
const SOC_LEDC_SUPPORTED = 1
const SOC_I2C_SUPPORTED = 1
const SOC_SYSTIMER_SUPPORTED = 1
const SOC_SUPPORT_COEXISTENCE = 0
const SOC_AES_SUPPORTED = 1
const SOC_MPI_SUPPORTED = 1
const SOC_SHA_SUPPORTED = 1
const SOC_HMAC_SUPPORTED = 1
const SOC_DIG_SIGN_SUPPORTED = 1
const SOC_FLASH_ENC_SUPPORTED = 1
const SOC_SECURE_BOOT_SUPPORTED = 1
const SOC_MEMPROT_SUPPORTED = 1
const SOC_TOUCH_SENSOR_SUPPORTED = 1
const SOC_BOD_SUPPORTED = 1
const SOC_CLK_TREE_SUPPORTED = 1
const SOC_MPU_SUPPORTED = 1
const SOC_WDT_SUPPORTED = 1
const SOC_SPI_FLASH_SUPPORTED = 1
const SOC_RNG_SUPPORTED = 1
const SOC_LIGHT_SLEEP_SUPPORTED = 1
const SOC_DEEP_SLEEP_SUPPORTED = 1
const SOC_LP_PERIPH_SHARE_INTERRUPT = 1
const SOC_PM_SUPPORTED = 1
const SOC_XTAL_SUPPORT_40M = 1
const SOC_ADC_RTC_CTRL_SUPPORTED = 1
const SOC_ADC_DIG_CTRL_SUPPORTED = 1
const SOC_ADC_ARBITER_SUPPORTED = 1
const SOC_ADC_DIG_IIR_FILTER_SUPPORTED = 1
const SOC_ADC_DIG_IIR_FILTER_UNIT_BINDED = 1
const SOC_ADC_MONITOR_SUPPORTED = 1
const SOC_ADC_DMA_SUPPORTED = 1
const SOC_ADC_SAMPLE_FREQ_THRES_HIGH = 83333
const SOC_ADC_SAMPLE_FREQ_THRES_LOW = 611
const SOC_ADC_SHARED_POWER = 1
const SOC_BROWNOUT_RESET_SUPPORTED = 1
const SOC_CACHE_WRITEBACK_SUPPORTED = 1
const SOC_CPU_INTR_NUM = 32
const SOC_CPU_BREAKPOINTS_NUM = 2
const SOC_CPU_WATCHPOINTS_NUM = 2
const SOC_CPU_WATCHPOINT_MAX_REGION_SIZE = 64
const SOC_DAC_CHAN_NUM = 2
const SOC_DAC_RESOLUTION = 8
const SOC_GPIO_PIN_COUNT = 47
const SOC_GPIO_SUPPORT_PIN_GLITCH_FILTER = 1
const SOC_GPIO_FILTER_CLK_SUPPORT_APB = 1
const SOC_GPIO_IN_RANGE_MAX = 46
const SOC_GPIO_OUT_RANGE_MAX = 45
const SOC_MMU_LINEAR_ADDRESS_REGION_NUM = 5
const SOC_MPU_CONFIGURABLE_REGIONS_SUPPORTED = 0
const SOC_MPU_REGIONS_MAX_NUM = 8
const SOC_MPU_REGION_RO_SUPPORTED = 0
const SOC_MPU_REGION_WO_SUPPORTED = 0
const SOC_RMT_TX_CANDIDATES_PER_GROUP = 4
const SOC_RMT_RX_CANDIDATES_PER_GROUP = 4
const SOC_RMT_CHANNELS_PER_GROUP = 4
const SOC_RMT_MEM_WORDS_PER_CHANNEL = 64
const SOC_RMT_SUPPORT_RX_DEMODULATION = 1
const SOC_RMT_SUPPORT_TX_ASYNC_STOP = 1
const SOC_RMT_SUPPORT_TX_LOOP_COUNT = 1
const SOC_RMT_SUPPORT_TX_SYNCHRO = 1
const SOC_RMT_SUPPORT_TX_CARRIER_DATA_ONLY = 1
const SOC_RMT_SUPPORT_REF_TICK = 1
const SOC_RMT_SUPPORT_APB = 1
const SOC_RMT_CHANNEL_CLK_INDEPENDENT = 1
const SOC_RTCIO_PIN_COUNT = 22
const SOC_RTCIO_INPUT_OUTPUT_SUPPORTED = 1
const SOC_RTCIO_HOLD_SUPPORTED = 1
const SOC_RTCIO_WAKE_SUPPORTED = 1
const SOC_LP_IO_CLOCK_IS_INDEPENDENT = 1
const SOC_SDM_CHANNELS_PER_GROUP = 8
const SOC_SDM_CLK_SUPPORT_APB = 1
const SOC_SPI_HD_BOTH_INOUT_SUPPORTED = 1
const SOC_SPI_PERIPH_NUM = 3
const SOC_SPI_DMA_CHAN_NUM = 3
const SOC_SPI_MAX_CS_NUM = 6
const SOC_SPI_MAXIMUM_BUFFER_SIZE = 72
const SOC_SPI_MAX_PRE_DIVIDER = 8192
const SOC_SPI_SUPPORT_DDRCLK = 1
const SOC_SPI_SLAVE_SUPPORT_SEG_TRANS = 1
const SOC_SPI_SUPPORT_CD_SIG = 1
const SOC_SPI_SUPPORT_CONTINUOUS_TRANS = 1
const SOC_SPI_SUPPORT_CLK_APB = 1
const SOC_SPI_SUPPORT_SLAVE_HD_VER2 = 1
const SOC_SPI_PERIPH_SUPPORT_CONTROL_DUMMY_OUT = 1
const SOC_SPI_SUPPORT_OCT = 1
const SOC_SPI_SCT_SUPPORTED = 1
const SOC_SPI_SCT_REG_NUM = 27
const SOC_SPI_SCT_CONF_BITLEN_MAX = 0x7FFFFD
const SOC_MEMSPI_IS_INDEPENDENT = 1
const SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED = 1
const SOC_SYSTIMER_COUNTER_NUM = 1
const SOC_SYSTIMER_ALARM_NUM = 3
const SOC_SYSTIMER_BIT_WIDTH_LO = 32
const SOC_SYSTIMER_BIT_WIDTH_HI = 32
const SOC_LP_TIMER_BIT_WIDTH_LO = 32
const SOC_LP_TIMER_BIT_WIDTH_HI = 16
const SOC_TWAI_CLK_SUPPORT_APB = 1
const SOC_TWAI_BRP_MIN = 2
const SOC_TWAI_BRP_MAX = 32768
const SOC_TWAI_SUPPORTS_RX_STATUS = 1
const SOC_SPIRAM_SUPPORTED = 1
const SOC_SPIRAM_XIP_SUPPORTED = 1
const SOC_EFUSE_DIS_DOWNLOAD_ICACHE = 1
const SOC_EFUSE_DIS_DOWNLOAD_DCACHE = 1
const SOC_EFUSE_HARD_DIS_JTAG = 1
const SOC_EFUSE_SOFT_DIS_JTAG = 1
const SOC_EFUSE_DIS_BOOT_REMAP = 1
const SOC_EFUSE_DIS_LEGACY_SPI_BOOT = 1
const SOC_EFUSE_DIS_ICACHE = 1
const SOC_SECURE_BOOT_V2_RSA = 1
const SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 3
const SOC_EFUSE_REVOKE_BOOT_KEY_DIGESTS = 1
const SOC_SUPPORT_SECURE_BOOT_REVOKE_KEY = 1
const SOC_FLASH_ENCRYPTION_XTS_AES = 1
const SOC_FLASH_ENCRYPTION_XTS_AES_OPTIONS = 1
const SOC_FLASH_ENCRYPTION_XTS_AES_128 = 1
const SOC_FLASH_ENCRYPTION_XTS_AES_256 = 1
const SOC_MEMPROT_CPU_PREFETCH_PAD_SIZE = 16
const SOC_MEMPROT_MEM_ALIGN_SIZE = 4
const X__bool_true_false_are_defined = 1
const True = 1
const False = 0
const BIT31 = 0x80000000
const BIT30 = 0x40000000
const BIT29 = 0x20000000
const BIT28 = 0x10000000
const BIT27 = 0x08000000
const BIT26 = 0x04000000
const BIT25 = 0x02000000
const BIT24 = 0x01000000
const BIT23 = 0x00800000
const BIT22 = 0x00400000
const BIT21 = 0x00200000
const BIT20 = 0x00100000
const BIT19 = 0x00080000
const BIT18 = 0x00040000
const BIT17 = 0x00020000
const BIT16 = 0x00010000
const BIT15 = 0x00008000
const BIT14 = 0x00004000
const BIT13 = 0x00002000
const BIT12 = 0x00001000
const BIT11 = 0x00000800
const BIT10 = 0x00000400
const BIT9 = 0x00000200
const BIT8 = 0x00000100
const BIT7 = 0x00000080
const BIT6 = 0x00000040
const BIT5 = 0x00000020
const BIT4 = 0x00000010
const BIT3 = 0x00000008
const BIT2 = 0x00000004
const BIT1 = 0x00000002
const BIT0 = 0x00000001
const ARG_MAX = 65536
const CHILD_MAX = 40
const LINK_MAX = 32767
const MAX_CANON = 255
const MAX_INPUT = 255
const NAME_MAX = 255
const NGROUPS_MAX = 16
const OPEN_MAX = 64
const PATH_MAX = 1024
const PIPE_BUF = 512
const IOV_MAX = 1024
const BC_BASE_MAX = 99
const BC_DIM_MAX = 2048
const BC_SCALE_MAX = 99
const BC_STRING_MAX = 1000
const COLL_WEIGHTS_MAX = 0
const EXPR_NEST_MAX = 32
const LINE_MAX = 2048
const RE_DUP_MAX = 255
const X_LITTLE_ENDIAN = 1234
const X_BIG_ENDIAN = 4321
const X_PDP_ENDIAN = 3412
const X_QUAD_HIGHWORD = 1
const X_QUAD_LOWWORD = 0
const NBBY = 8
const SOC_CLK_RC_FAST_FREQ_APPROX = 8500000
const SOC_CLK_RC_SLOW_FREQ_APPROX = 90000
const SOC_CLK_XTAL32K_FREQ_APPROX = 32768
const X__SLBF = 0x0001
const X__SNBF = 0x0002
const X__SRD = 0x0004
const X__SWR = 0x0008
const X__SRW = 0x0010
const X__SEOF = 0x0020
const X__SERR = 0x0040
const X__SMBF = 0x0080
const X__SAPP = 0x0100
const X__SSTR = 0x0200
const X__SOPT = 0x0400
const X__SNPT = 0x0800
const X__SOFF = 0x1000
const X__SORD = 0x2000
const X__SL64 = 0x8000
const X__SNLK = 0x0001
const X__SWID = 0x2000
const X_IOFBF = 0
const X_IOLBF = 1
const X_IONBF = 2
const FOPEN_MAX = 20
const FILENAME_MAX = 1024
const P_tmpdir = "/tmp"
const SEEK_SET = 0
const SEEK_CUR = 1
const SEEK_END = 2
const TMP_MAX = 26
const L_ctermid = 16
const ESP_OK = 0
const ESP_ERR_NO_MEM = 0x101
const ESP_ERR_INVALID_ARG = 0x102
const ESP_ERR_INVALID_STATE = 0x103
const ESP_ERR_INVALID_SIZE = 0x104
const ESP_ERR_NOT_FOUND = 0x105
const ESP_ERR_NOT_SUPPORTED = 0x106
const ESP_ERR_TIMEOUT = 0x107
const ESP_ERR_INVALID_RESPONSE = 0x108
const ESP_ERR_INVALID_CRC = 0x109
const ESP_ERR_INVALID_VERSION = 0x10A
const ESP_ERR_INVALID_MAC = 0x10B
const ESP_ERR_NOT_FINISHED = 0x10C
const ESP_ERR_NOT_ALLOWED = 0x10D
const ESP_ERR_WIFI_BASE = 0x3000
const ESP_ERR_MESH_BASE = 0x4000
const ESP_ERR_FLASH_BASE = 0x6000
const ESP_ERR_HW_CRYPTO_BASE = 0xc000
const ESP_ERR_MEMPROT_BASE = 0xd000
const OTG_MODE = 0
const OTG_ARCHITECTURE = 2
const OTG_SINGLE_POINT = 1
const OTG_ENABLE_LPM = 0
const OTG_EN_DED_TX_FIFO = 1
const OTG_EN_DESC_DMA = 1
const OTG_MULTI_PROC_INTRPT = 0
const OTG_HSPHY_INTERFACE = 0
const OTG_FSPHY_INTERFACE = 1
const OTG_ENABLE_IC_USB = 0
const OTG_I2C_INTERFACE = 0
const OTG_ADP_SUPPORT = 0
const OTG_BC_SUPPORT = 0
const OTG_NUM_EPS = 6
const OTG_NUM_IN_EPS = 5
const OTG_NUM_CRL_EPS = 0
const OTG_NUM_HOST_CHAN = 8
const OTG_EN_PERIO_HOST = 1
const OTG_DFIFO_DEPTH = 256
const OTG_DFIFO_DYNAMIC = 1
const OTG_RX_DFIFO_DEPTH = 256
const OTG_TX_HNPERIO_DFIFO_DEPTH = 256
const OTG_TX_NPERIO_DFIFO_DEPTH = 256
const OTG_TX_HPERIO_DFIFO_DEPTH = 256
const OTG_NPERIO_TX_QUEUE_DEPTH = 4
const OTG_PERIO_TX_QUEUE_DEPTH = 8
const OTG_TRANS_COUNT_WIDTH = 16
const OTG_PACKET_COUNT_WIDTH = 7
const OTG_RM_OPT_FEATURES = 1
const OTG_EN_PWROPT = 1
const OTG_SYNC_RESET_TYPE = 0
const OTG_EN_IDDIG_FILTER = 1
const OTG_EN_VBUSVALID_FILTER = 1
const OTG_EN_A_VALID_FILTER = 1
const OTG_EN_B_VALID_FILTER = 1
const OTG_EN_SESSIONEND_FILTER = 1
const OTG_EXCP_CNTL_XFER_FLOW = 1
const OTG_PWR_CLAMP = 0
const OTG_PWR_SWITCH_POLARITY = 0
const OTG_EP_DIR_1 = 0
const OTG_EP_DIR_2 = 0
const OTG_EP_DIR_3 = 0
const OTG_EP_DIR_4 = 0
const OTG_EP_DIR_5 = 0
const OTG_EP_DIR_6 = 0
const OTG_TX_DINEP_DFIFO_DEPTH_1 = 256
const OTG_TX_DINEP_DFIFO_DEPTH_2 = 256
const OTG_TX_DINEP_DFIFO_DEPTH_3 = 256
const OTG_TX_DINEP_DFIFO_DEPTH_4 = 256
const U2UB_EN = 0
const ANA_CONFIG_REG = 0x6000E044
const ANA_CONFIG2_REG = 0x6000E048
const REGI2C_ANA_CALI_PD_WORKAROUND = 1
const REGI2C_ANA_CALI_BYTE_NUM = 8
const DR_REG_SYSTEM_BASE = 0x3f4c0000
const DR_REG_SENSITIVE_BASE = 0x3f4c1000
const DR_REG_INTERRUPT_BASE = 0x3f4c2000
const DR_REG_DMA_COPY_BASE = 0x3f4c3000
const DR_REG_EXTMEM_BASE = 0x61800000
const DR_REG_MMU_TABLE = 0x61801000
const DR_REG_ITAG_TABLE = 0x61802000
const DR_REG_DTAG_TABLE = 0x61803000
const DR_REG_AES_BASE = 0x6003a000
const DR_REG_SHA_BASE = 0x6003b000
const DR_REG_RSA_BASE = 0x6003c000
const DR_REG_HMAC_BASE = 0x6003e000
const DR_REG_DIGITAL_SIGNATURE_BASE = 0x6003d000
const DR_REG_CRYPTO_DMA_BASE = 0x6003f000
const DR_REG_ASSIST_DEBUG_BASE = 0x3f4ce000
const DR_REG_DEDICATED_GPIO_BASE = 0x3f4cf000
const DR_REG_INTRUSION_BASE = 0x3f4d0000
const DR_REG_UART_BASE = 0x3f400000
const DR_REG_SPI1_BASE = 0x3f402000
const DR_REG_SPI0_BASE = 0x3f403000
const DR_REG_GPIO_BASE = 0x3f404000
const DR_REG_GPIO_SD_BASE = 0x3f404f00
const DR_REG_FE2_BASE = 0x3f405000
const DR_REG_FE_BASE = 0x3f406000
const DR_REG_FRC_TIMER_BASE = 0x3f407000
const DR_REG_RTCCNTL_BASE = 0x3f408000
const DR_REG_RTCIO_BASE = 0x3f408400
const DR_REG_SENS_BASE = 0x3f408800
const DR_REG_RTC_I2C_BASE = 0x3f408C00
const DR_REG_IO_MUX_BASE = 0x3f409000
const DR_REG_HINF_BASE = 0x3f40B000
const DR_REG_I2S_BASE = 0x3f40F000
const DR_REG_UART1_BASE = 0x3f410000
const DR_REG_I2C_EXT_BASE = 0x3f413000
const DR_REG_UHCI0_BASE = 0x3f414000
const DR_REG_SLCHOST_BASE = 0x3f415000
const DR_REG_RMT_BASE = 0x3f416000
const DR_REG_PCNT_BASE = 0x3f417000
const DR_REG_SLC_BASE = 0x3f418000
const DR_REG_LEDC_BASE = 0x3f419000
const DR_REG_CP_BASE = 0x3f4c3000
const DR_REG_EFUSE_BASE = 0x3f41A000
const DR_REG_NRX_BASE = 0x3f41CC00
const DR_REG_BB_BASE = 0x3f41D000
const DR_REG_TIMERGROUP0_BASE = 0x3f41F000
const DR_REG_TIMERGROUP1_BASE = 0x3f420000
const DR_REG_RTC_SLOWMEM_BASE = 0x3f421000
const DR_REG_SYSTIMER_BASE = 0x3f423000
const DR_REG_SPI2_BASE = 0x3f424000
const DR_REG_SPI3_BASE = 0x3f425000
const DR_REG_SYSCON_BASE = 0x3f426000
const DR_REG_APB_CTRL_BASE = 0x3f426000
const DR_REG_I2C1_EXT_BASE = 0x3f427000
const DR_REG_USB_WRAP_BASE = 0x3f439000
const DR_REG_APB_SARADC_BASE = 0x3f440000
const DR_REG_USB_BASE = 0x60080000
const SPI_CLK_DIV = 4
const TICKS_PER_US_ROM = 40
const SOC_DROM_LOW = 0x3F000000
const SOC_DROM_HIGH = 0x3FF80000
const SOC_IROM_LOW = 0x40080000
const SOC_IROM_HIGH = 0x40800000
const SOC_IROM_MASK_LOW = 0x40000000
const SOC_IROM_MASK_HIGH = 0x40020000
const SOC_IRAM_LOW = 0x40020000
const SOC_IRAM_HIGH = 0x40070000
const SOC_DRAM_LOW = 0x3FFB0000
const SOC_DRAM_HIGH = 0x40000000
const SOC_RTC_IRAM_LOW = 0x40070000
const SOC_RTC_IRAM_HIGH = 0x40072000
const SOC_RTC_DRAM_LOW = 0x3ff9e000
const SOC_RTC_DRAM_HIGH = 0x3ffa0000
const SOC_RTC_DATA_LOW = 0x50000000
const SOC_RTC_DATA_HIGH = 0x50002000
const SOC_EXTRAM_DATA_LOW = 0x3F500000
const SOC_EXTRAM_DATA_HIGH = 0x3FF80000
const SOC_DIRAM_IRAM_LOW = 0x40020000
const SOC_DIRAM_IRAM_HIGH = 0x40070000
const SOC_DIRAM_DRAM_LOW = 0x3FFB0000
const SOC_DIRAM_DRAM_HIGH = 0x40000000
const SOC_DMA_LOW = 0x3FFB0000
const SOC_DMA_HIGH = 0x40000000
const SOC_DMA_EXT_LOW = 0x3F500000
const SOC_DMA_EXT_HIGH = 0x3FF80000
const SOC_BYTE_ACCESSIBLE_LOW = 0x3FF9E000
const SOC_BYTE_ACCESSIBLE_HIGH = 0x40000000
const SOC_MEM_INTERNAL_LOW = 0x3FF9E000
const SOC_MEM_INTERNAL_HIGH = 0x40072000
const SOC_ROM_STACK_START = 0x3fffe70c
const ETS_WMAC_INUM = 0
const ETS_WBB_INUM = 4
const ETS_T1_WDT_INUM = 24
const ETS_MEMACCESS_ERR_INUM = 25
const ETS_SLC_INUM = 1
const ETS_UART0_INUM = 5
const ETS_UART1_INUM = 5
const ETS_SPI2_INUM = 1
const ETS_FRC_TIMER2_INUM = 10
const ETS_GPIO_INUM = 4
const ETS_INVALID_INUM = 6
const MACSTR = "%02x:%02x:%02x:%02x:%02x:%02x"
const LOG_ANSI_COLOR_BLACK = "30"
const LOG_ANSI_COLOR_RED = "31"
const LOG_ANSI_COLOR_GREEN = "32"
const LOG_ANSI_COLOR_YELLOW = "33"
const LOG_ANSI_COLOR_BLUE = "34"
const LOG_ANSI_COLOR_MAGENTA = "35"
const LOG_ANSI_COLOR_CYAN = "36"
const LOG_ANSI_COLOR_WHITE = "37"
const LOG_ANSI_COLOR_DEFAULT = "39"
const LOG_ANSI_COLOR_BG_BLACK = "40"
const LOG_ANSI_COLOR_BG_RED = "41"
const LOG_ANSI_COLOR_BG_GREEN = "42"
const LOG_ANSI_COLOR_BG_YELLOW = "43"
const LOG_ANSI_COLOR_BG_BLUE = "44"
const LOG_ANSI_COLOR_BG_MAGENTA = "45"
const LOG_ANSI_COLOR_BG_CYAN = "46"
const LOG_ANSI_COLOR_BG_WHITE = "47"
const LOG_ANSI_COLOR_BG_DEFAULT = "49"
const LOG_ANSI_COLOR_STYLE_RESET = "0"
const LOG_ANSI_COLOR_STYLE_BOLD = "1"
const LOG_ANSI_COLOR_STYLE_ITALIC = "3"
const LOG_ANSI_COLOR_STYLE_UNDERLINE = "4"
const LOG_RESET_COLOR = ""
const LOG_COLOR_E = ""
const LOG_COLOR_W = ""
const LOG_COLOR_I = ""
const LOG_COLOR_D = ""
const LOG_COLOR_V = ""
const RTC_CNTL_SW_SYS_RST_V = 0x1
const RTC_CNTL_SW_SYS_RST_S = 31
const RTC_CNTL_DG_WRAP_FORCE_NORST_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_NORST_S = 30
const RTC_CNTL_DG_WRAP_FORCE_RST_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_RST_S = 29
const RTC_CNTL_ANALOG_FORCE_NOISO_V = 0x1
const RTC_CNTL_ANALOG_FORCE_NOISO_S = 28
const RTC_CNTL_PLL_FORCE_NOISO_V = 0x1
const RTC_CNTL_PLL_FORCE_NOISO_S = 27
const RTC_CNTL_XTL_FORCE_NOISO_V = 0x1
const RTC_CNTL_XTL_FORCE_NOISO_S = 26
const RTC_CNTL_ANALOG_FORCE_ISO_V = 0x1
const RTC_CNTL_ANALOG_FORCE_ISO_S = 25
const RTC_CNTL_PLL_FORCE_ISO_V = 0x1
const RTC_CNTL_PLL_FORCE_ISO_S = 24
const RTC_CNTL_XTL_FORCE_ISO_V = 0x1
const RTC_CNTL_XTL_FORCE_ISO_S = 23
const RTC_CNTL_XTL_EN_WAIT = 0x0000000F
const RTC_CNTL_XTL_EN_WAIT_V = 0xF
const RTC_CNTL_XTL_EN_WAIT_S = 14
const RTC_CNTL_XTL_FORCE_PU_V = 0x1
const RTC_CNTL_XTL_FORCE_PU_S = 13
const RTC_CNTL_XTL_FORCE_PD_V = 0x1
const RTC_CNTL_XTL_FORCE_PD_S = 12
const RTC_CNTL_BBPLL_FORCE_PU_V = 0x1
const RTC_CNTL_BBPLL_FORCE_PU_S = 11
const RTC_CNTL_BBPLL_FORCE_PD_V = 0x1
const RTC_CNTL_BBPLL_FORCE_PD_S = 10
const RTC_CNTL_BBPLL_I2C_FORCE_PU_V = 0x1
const RTC_CNTL_BBPLL_I2C_FORCE_PU_S = 9
const RTC_CNTL_BBPLL_I2C_FORCE_PD_V = 0x1
const RTC_CNTL_BBPLL_I2C_FORCE_PD_S = 8
const RTC_CNTL_BB_I2C_FORCE_PU_V = 0x1
const RTC_CNTL_BB_I2C_FORCE_PU_S = 7
const RTC_CNTL_BB_I2C_FORCE_PD_V = 0x1
const RTC_CNTL_BB_I2C_FORCE_PD_S = 6
const RTC_CNTL_SW_PROCPU_RST_V = 0x1
const RTC_CNTL_SW_PROCPU_RST_S = 5
const RTC_CNTL_SW_APPCPU_RST_V = 0x1
const RTC_CNTL_SW_APPCPU_RST_S = 4
const RTC_CNTL_SW_STALL_PROCPU_C0 = 0x00000003
const RTC_CNTL_SW_STALL_PROCPU_C0_V = 0x3
const RTC_CNTL_SW_STALL_PROCPU_C0_S = 2
const RTC_CNTL_SW_STALL_APPCPU_C0 = 0x00000003
const RTC_CNTL_SW_STALL_APPCPU_C0_V = 0x3
const RTC_CNTL_SW_STALL_APPCPU_C0_S = 0
const RTC_CNTL_SLP_VAL_LO = 0xFFFFFFFF
const RTC_CNTL_SLP_VAL_LO_V = 0xFFFFFFFF
const RTC_CNTL_SLP_VAL_LO_S = 0
const RTC_CNTL_MAIN_TIMER_ALARM_EN_V = 0x1
const RTC_CNTL_MAIN_TIMER_ALARM_EN_S = 16
const RTC_CNTL_SLP_VAL_HI = 0x0000FFFF
const RTC_CNTL_SLP_VAL_HI_V = 0xFFFF
const RTC_CNTL_SLP_VAL_HI_S = 0
const RTC_CNTL_TIME_UPDATE_V = 0x1
const RTC_CNTL_TIME_UPDATE_S = 31
const RTC_CNTL_TIMER_SYS_RST_V = 0x1
const RTC_CNTL_TIMER_SYS_RST_S = 29
const RTC_CNTL_TIMER_XTL_OFF_V = 0x1
const RTC_CNTL_TIMER_XTL_OFF_S = 28
const RTC_CNTL_TIMER_SYS_STALL_V = 0x1
const RTC_CNTL_TIMER_SYS_STALL_S = 27
const RTC_CNTL_TIMER_VALUE0_LOW = 0xFFFFFFFF
const RTC_CNTL_TIMER_VALUE0_LOW_V = 0xFFFFFFFF
const RTC_CNTL_TIMER_VALUE0_LOW_S = 0
const RTC_CNTL_TIMER_VALUE0_HIGH = 0x0000FFFF
const RTC_CNTL_TIMER_VALUE0_HIGH_V = 0xFFFF
const RTC_CNTL_TIMER_VALUE0_HIGH_S = 0
const RTC_CNTL_SLEEP_EN_V = 0x1
const RTC_CNTL_SLEEP_EN_S = 31
const RTC_CNTL_SLP_REJECT_V = 0x1
const RTC_CNTL_SLP_REJECT_S = 30
const RTC_CNTL_SLP_WAKEUP_V = 0x1
const RTC_CNTL_SLP_WAKEUP_S = 29
const RTC_CNTL_SDIO_ACTIVE_IND_V = 0x1
const RTC_CNTL_SDIO_ACTIVE_IND_S = 28
const RTC_CNTL_APB2RTC_BRIDGE_SEL_V = 0x1
const RTC_CNTL_APB2RTC_BRIDGE_SEL_S = 22
const RTC_CNTL_SLP_REJECT_CAUSE_CLR_V = 0x1
const RTC_CNTL_SLP_REJECT_CAUSE_CLR_S = 1
const RTC_CNTL_SW_CPU_INT_V = 0x1
const RTC_CNTL_SW_CPU_INT_S = 0
const RTC_CNTL_PLL_BUF_WAIT = 0x000000FF
const RTC_CNTL_PLL_BUF_WAIT_V = 0xFF
const RTC_CNTL_PLL_BUF_WAIT_S = 24
const RTC_CNTL_XTL_BUF_WAIT = 0x000003FF
const RTC_CNTL_XTL_BUF_WAIT_V = 0x3FF
const RTC_CNTL_XTL_BUF_WAIT_S = 14
const RTC_CNTL_CK8M_WAIT = 0x000000FF
const RTC_CNTL_CK8M_WAIT_V = 0xFF
const RTC_CNTL_CK8M_WAIT_S = 6
const RTC_CNTL_CPU_STALL_WAIT = 0x0000001F
const RTC_CNTL_CPU_STALL_WAIT_V = 0x1F
const RTC_CNTL_CPU_STALL_WAIT_S = 1
const RTC_CNTL_CPU_STALL_EN_V = 0x1
const RTC_CNTL_CPU_STALL_EN_S = 0
const RTC_CNTL_MIN_TIME_CK8M_OFF = 0x000000FF
const RTC_CNTL_MIN_TIME_CK8M_OFF_V = 0xFF
const RTC_CNTL_MIN_TIME_CK8M_OFF_S = 24
const RTC_CNTL_ULPCP_TOUCH_START_WAIT = 0x000001FF
const RTC_CNTL_ULPCP_TOUCH_START_WAIT_V = 0x1FF
const RTC_CNTL_ULPCP_TOUCH_START_WAIT_S = 15
const RTC_CNTL_ROM_RAM_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_ROM_RAM_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_ROM_RAM_POWERUP_TIMER_S = 25
const RTC_CNTL_ROM_RAM_WAIT_TIMER = 0x000001FF
const RTC_CNTL_ROM_RAM_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_ROM_RAM_WAIT_TIMER_S = 16
const RTC_CNTL_WIFI_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_WIFI_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_WIFI_POWERUP_TIMER_S = 9
const RTC_CNTL_WIFI_WAIT_TIMER = 0x000001FF
const RTC_CNTL_WIFI_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_WIFI_WAIT_TIMER_S = 0
const RTC_CNTL_DG_WRAP_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_DG_WRAP_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_DG_WRAP_POWERUP_TIMER_S = 25
const RTC_CNTL_DG_WRAP_WAIT_TIMER = 0x000001FF
const RTC_CNTL_DG_WRAP_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_DG_WRAP_WAIT_TIMER_S = 16
const RTC_CNTL_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_POWERUP_TIMER_S = 9
const RTC_CNTL_WAIT_TIMER = 0x000001FF
const RTC_CNTL_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_WAIT_TIMER_S = 0
const RTC_CNTL_RTCMEM_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_RTCMEM_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_RTCMEM_POWERUP_TIMER_S = 25
const RTC_CNTL_RTCMEM_WAIT_TIMER = 0x000001FF
const RTC_CNTL_RTCMEM_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_RTCMEM_WAIT_TIMER_S = 16
const RTC_CNTL_MIN_SLP_VAL = 0x000000FF
const RTC_CNTL_MIN_SLP_VAL_V = 0xFF
const RTC_CNTL_MIN_SLP_VAL_S = 8
const RTC_CNTL_DG_DCDC_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_DG_DCDC_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_DG_DCDC_POWERUP_TIMER_S = 25
const RTC_CNTL_DG_DCDC_WAIT_TIMER = 0x000001FF
const RTC_CNTL_DG_DCDC_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_DG_DCDC_WAIT_TIMER_S = 16
const RTC_CNTL_PLL_I2C_PU_V = 0x1
const RTC_CNTL_PLL_I2C_PU_S = 31
const RTC_CNTL_CKGEN_I2C_PU_V = 0x1
const RTC_CNTL_CKGEN_I2C_PU_S = 30
const RTC_CNTL_RFRX_PBUS_PU_V = 0x1
const RTC_CNTL_RFRX_PBUS_PU_S = 28
const RTC_CNTL_TXRF_I2C_PU_V = 0x1
const RTC_CNTL_TXRF_I2C_PU_S = 27
const RTC_CNTL_PVTMON_PU_V = 0x1
const RTC_CNTL_PVTMON_PU_S = 26
const RTC_CNTL_BBPLL_CAL_SLP_START_V = 0x1
const RTC_CNTL_BBPLL_CAL_SLP_START_S = 25
const RTC_CNTL_PLLA_FORCE_PU_V = 0x1
const RTC_CNTL_PLLA_FORCE_PU_S = 24
const RTC_CNTL_PLLA_FORCE_PD_V = 0x1
const RTC_CNTL_PLLA_FORCE_PD_S = 23
const RTC_CNTL_SAR_I2C_FORCE_PU_V = 0x1
const RTC_CNTL_SAR_I2C_FORCE_PU_S = 22
const RTC_CNTL_SAR_I2C_FORCE_PD_V = 0x1
const RTC_CNTL_SAR_I2C_FORCE_PD_S = 21
const RTC_CNTL_GLITCH_RST_EN_V = 0x1
const RTC_CNTL_GLITCH_RST_EN_S = 20
const RTC_CNTL_I2C_RESET_POR_FORCE_PU_V = 0x1
const RTC_CNTL_I2C_RESET_POR_FORCE_PU_S = 19
const RTC_CNTL_I2C_RESET_POR_FORCE_PD_V = 0x1
const RTC_CNTL_I2C_RESET_POR_FORCE_PD_S = 18
const RTC_CNTL_PROCPU_STAT_VECTOR_SEL_V = 0x1
const RTC_CNTL_PROCPU_STAT_VECTOR_SEL_S = 13
const RTC_CNTL_APPCPU_STAT_VECTOR_SEL_V = 0x1
const RTC_CNTL_APPCPU_STAT_VECTOR_SEL_S = 12
const RTC_CNTL_RESET_CAUSE_APPCPU = 0x0000003F
const RTC_CNTL_RESET_CAUSE_APPCPU_V = 0x3F
const RTC_CNTL_RESET_CAUSE_APPCPU_S = 6
const RTC_CNTL_RESET_CAUSE_PROCPU = 0x0000003F
const RTC_CNTL_RESET_CAUSE_PROCPU_V = 0x3F
const RTC_CNTL_RESET_CAUSE_PROCPU_S = 0
const RTC_CNTL_WAKEUP_ENA = 0x0001FFFF
const RTC_CNTL_WAKEUP_ENA_V = 0x1FFFF
const RTC_CNTL_WAKEUP_ENA_S = 15
const RTC_CNTL_GLITCH_DET_INT_ENA_V = 0x1
const RTC_CNTL_GLITCH_DET_INT_ENA_S = 19
const RTC_CNTL_TOUCH_TIMEOUT_INT_ENA_V = 0x1
const RTC_CNTL_TOUCH_TIMEOUT_INT_ENA_S = 18
const RTC_CNTL_COCPU_TRAP_INT_ENA_V = 0x1
const RTC_CNTL_COCPU_TRAP_INT_ENA_S = 17
const RTC_CNTL_XTAL32K_DEAD_INT_ENA_V = 0x1
const RTC_CNTL_XTAL32K_DEAD_INT_ENA_S = 16
const RTC_CNTL_SWD_INT_ENA_V = 0x1
const RTC_CNTL_SWD_INT_ENA_S = 15
const RTC_CNTL_SARADC2_INT_ENA_V = 0x1
const RTC_CNTL_SARADC2_INT_ENA_S = 14
const RTC_CNTL_COCPU_INT_ENA_V = 0x1
const RTC_CNTL_COCPU_INT_ENA_S = 13
const RTC_CNTL_TSENS_INT_ENA_V = 0x1
const RTC_CNTL_TSENS_INT_ENA_S = 12
const RTC_CNTL_SARADC1_INT_ENA_V = 0x1
const RTC_CNTL_SARADC1_INT_ENA_S = 11
const RTC_CNTL_MAIN_TIMER_INT_ENA_V = 0x1
const RTC_CNTL_MAIN_TIMER_INT_ENA_S = 10
const RTC_CNTL_BROWN_OUT_INT_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT_INT_ENA_S = 9
const RTC_CNTL_TOUCH_INACTIVE_INT_ENA_V = 0x1
const RTC_CNTL_TOUCH_INACTIVE_INT_ENA_S = 8
const RTC_CNTL_TOUCH_ACTIVE_INT_ENA_V = 0x1
const RTC_CNTL_TOUCH_ACTIVE_INT_ENA_S = 7
const RTC_CNTL_TOUCH_DONE_INT_ENA_V = 0x1
const RTC_CNTL_TOUCH_DONE_INT_ENA_S = 6
const RTC_CNTL_ULP_CP_INT_ENA_V = 0x1
const RTC_CNTL_ULP_CP_INT_ENA_S = 5
const RTC_CNTL_TOUCH_SCAN_DONE_INT_ENA_V = 0x1
const RTC_CNTL_TOUCH_SCAN_DONE_INT_ENA_S = 4
const RTC_CNTL_WDT_INT_ENA_V = 0x1
const RTC_CNTL_WDT_INT_ENA_S = 3
const RTC_CNTL_SDIO_IDLE_INT_ENA_V = 0x1
const RTC_CNTL_SDIO_IDLE_INT_ENA_S = 2
const RTC_CNTL_SLP_REJECT_INT_ENA_V = 0x1
const RTC_CNTL_SLP_REJECT_INT_ENA_S = 1
const RTC_CNTL_SLP_WAKEUP_INT_ENA_V = 0x1
const RTC_CNTL_SLP_WAKEUP_INT_ENA_S = 0
const RTC_CNTL_GLITCH_DET_INT_RAW_V = 0x1
const RTC_CNTL_GLITCH_DET_INT_RAW_S = 19
const RTC_CNTL_TOUCH_TIMEOUT_INT_RAW_V = 0x1
const RTC_CNTL_TOUCH_TIMEOUT_INT_RAW_S = 18
const RTC_CNTL_COCPU_TRAP_INT_RAW_V = 0x1
const RTC_CNTL_COCPU_TRAP_INT_RAW_S = 17
const RTC_CNTL_XTAL32K_DEAD_INT_RAW_V = 0x1
const RTC_CNTL_XTAL32K_DEAD_INT_RAW_S = 16
const RTC_CNTL_SWD_INT_RAW_V = 0x1
const RTC_CNTL_SWD_INT_RAW_S = 15
const RTC_CNTL_SARADC2_INT_RAW_V = 0x1
const RTC_CNTL_SARADC2_INT_RAW_S = 14
const RTC_CNTL_COCPU_INT_RAW_V = 0x1
const RTC_CNTL_COCPU_INT_RAW_S = 13
const RTC_CNTL_TSENS_INT_RAW_V = 0x1
const RTC_CNTL_TSENS_INT_RAW_S = 12
const RTC_CNTL_SARADC1_INT_RAW_V = 0x1
const RTC_CNTL_SARADC1_INT_RAW_S = 11
const RTC_CNTL_MAIN_TIMER_INT_RAW_V = 0x1
const RTC_CNTL_MAIN_TIMER_INT_RAW_S = 10
const RTC_CNTL_BROWN_OUT_INT_RAW_V = 0x1
const RTC_CNTL_BROWN_OUT_INT_RAW_S = 9
const RTC_CNTL_TOUCH_INACTIVE_INT_RAW_V = 0x1
const RTC_CNTL_TOUCH_INACTIVE_INT_RAW_S = 8
const RTC_CNTL_TOUCH_ACTIVE_INT_RAW_V = 0x1
const RTC_CNTL_TOUCH_ACTIVE_INT_RAW_S = 7
const RTC_CNTL_TOUCH_DONE_INT_RAW_V = 0x1
const RTC_CNTL_TOUCH_DONE_INT_RAW_S = 6
const RTC_CNTL_ULP_CP_INT_RAW_V = 0x1
const RTC_CNTL_ULP_CP_INT_RAW_S = 5
const RTC_CNTL_TOUCH_SCAN_DONE_INT_RAW_V = 0x1
const RTC_CNTL_TOUCH_SCAN_DONE_INT_RAW_S = 4
const RTC_CNTL_WDT_INT_RAW_V = 0x1
const RTC_CNTL_WDT_INT_RAW_S = 3
const RTC_CNTL_SDIO_IDLE_INT_RAW_V = 0x1
const RTC_CNTL_SDIO_IDLE_INT_RAW_S = 2
const RTC_CNTL_SLP_REJECT_INT_RAW_V = 0x1
const RTC_CNTL_SLP_REJECT_INT_RAW_S = 1
const RTC_CNTL_SLP_WAKEUP_INT_RAW_V = 0x1
const RTC_CNTL_SLP_WAKEUP_INT_RAW_S = 0
const RTC_CNTL_GLITCH_DET_INT_ST_V = 0x1
const RTC_CNTL_GLITCH_DET_INT_ST_S = 19
const RTC_CNTL_TOUCH_TIMEOUT_INT_ST_V = 0x1
const RTC_CNTL_TOUCH_TIMEOUT_INT_ST_S = 18
const RTC_CNTL_COCPU_TRAP_INT_ST_V = 0x1
const RTC_CNTL_COCPU_TRAP_INT_ST_S = 17
const RTC_CNTL_XTAL32K_DEAD_INT_ST_V = 0x1
const RTC_CNTL_XTAL32K_DEAD_INT_ST_S = 16
const RTC_CNTL_SWD_INT_ST_V = 0x1
const RTC_CNTL_SWD_INT_ST_S = 15
const RTC_CNTL_SARADC2_INT_ST_V = 0x1
const RTC_CNTL_SARADC2_INT_ST_S = 14
const RTC_CNTL_COCPU_INT_ST_V = 0x1
const RTC_CNTL_COCPU_INT_ST_S = 13
const RTC_CNTL_TSENS_INT_ST_V = 0x1
const RTC_CNTL_TSENS_INT_ST_S = 12
const RTC_CNTL_SARADC1_INT_ST_V = 0x1
const RTC_CNTL_SARADC1_INT_ST_S = 11
const RTC_CNTL_MAIN_TIMER_INT_ST_V = 0x1
const RTC_CNTL_MAIN_TIMER_INT_ST_S = 10
const RTC_CNTL_BROWN_OUT_INT_ST_V = 0x1
const RTC_CNTL_BROWN_OUT_INT_ST_S = 9
const RTC_CNTL_TOUCH_INACTIVE_INT_ST_V = 0x1
const RTC_CNTL_TOUCH_INACTIVE_INT_ST_S = 8
const RTC_CNTL_TOUCH_ACTIVE_INT_ST_V = 0x1
const RTC_CNTL_TOUCH_ACTIVE_INT_ST_S = 7
const RTC_CNTL_TOUCH_DONE_INT_ST_V = 0x1
const RTC_CNTL_TOUCH_DONE_INT_ST_S = 6
const RTC_CNTL_ULP_CP_INT_ST_V = 0x1
const RTC_CNTL_ULP_CP_INT_ST_S = 5
const RTC_CNTL_TOUCH_SCAN_DONE_INT_ST_V = 0x1
const RTC_CNTL_TOUCH_SCAN_DONE_INT_ST_S = 4
const RTC_CNTL_WDT_INT_ST_V = 0x1
const RTC_CNTL_WDT_INT_ST_S = 3
const RTC_CNTL_SDIO_IDLE_INT_ST_V = 0x1
const RTC_CNTL_SDIO_IDLE_INT_ST_S = 2
const RTC_CNTL_SLP_REJECT_INT_ST_V = 0x1
const RTC_CNTL_SLP_REJECT_INT_ST_S = 1
const RTC_CNTL_SLP_WAKEUP_INT_ST_V = 0x1
const RTC_CNTL_SLP_WAKEUP_INT_ST_S = 0
const RTC_CNTL_GLITCH_DET_INT_CLR_V = 0x1
const RTC_CNTL_GLITCH_DET_INT_CLR_S = 19
const RTC_CNTL_TOUCH_TIMEOUT_INT_CLR_V = 0x1
const RTC_CNTL_TOUCH_TIMEOUT_INT_CLR_S = 18
const RTC_CNTL_COCPU_TRAP_INT_CLR_V = 0x1
const RTC_CNTL_COCPU_TRAP_INT_CLR_S = 17
const RTC_CNTL_XTAL32K_DEAD_INT_CLR_V = 0x1
const RTC_CNTL_XTAL32K_DEAD_INT_CLR_S = 16
const RTC_CNTL_SWD_INT_CLR_V = 0x1
const RTC_CNTL_SWD_INT_CLR_S = 15
const RTC_CNTL_SARADC2_INT_CLR_V = 0x1
const RTC_CNTL_SARADC2_INT_CLR_S = 14
const RTC_CNTL_COCPU_INT_CLR_V = 0x1
const RTC_CNTL_COCPU_INT_CLR_S = 13
const RTC_CNTL_TSENS_INT_CLR_V = 0x1
const RTC_CNTL_TSENS_INT_CLR_S = 12
const RTC_CNTL_SARADC1_INT_CLR_V = 0x1
const RTC_CNTL_SARADC1_INT_CLR_S = 11
const RTC_CNTL_MAIN_TIMER_INT_CLR_V = 0x1
const RTC_CNTL_MAIN_TIMER_INT_CLR_S = 10
const RTC_CNTL_BROWN_OUT_INT_CLR_V = 0x1
const RTC_CNTL_BROWN_OUT_INT_CLR_S = 9
const RTC_CNTL_TOUCH_INACTIVE_INT_CLR_V = 0x1
const RTC_CNTL_TOUCH_INACTIVE_INT_CLR_S = 8
const RTC_CNTL_TOUCH_ACTIVE_INT_CLR_V = 0x1
const RTC_CNTL_TOUCH_ACTIVE_INT_CLR_S = 7
const RTC_CNTL_TOUCH_DONE_INT_CLR_V = 0x1
const RTC_CNTL_TOUCH_DONE_INT_CLR_S = 6
const RTC_CNTL_ULP_CP_INT_CLR_V = 0x1
const RTC_CNTL_ULP_CP_INT_CLR_S = 5
const RTC_CNTL_TOUCH_SCAN_DONE_INT_CLR_V = 0x1
const RTC_CNTL_TOUCH_SCAN_DONE_INT_CLR_S = 4
const RTC_CNTL_WDT_INT_CLR_V = 0x1
const RTC_CNTL_WDT_INT_CLR_S = 3
const RTC_CNTL_SDIO_IDLE_INT_CLR_V = 0x1
const RTC_CNTL_SDIO_IDLE_INT_CLR_S = 2
const RTC_CNTL_SLP_REJECT_INT_CLR_V = 0x1
const RTC_CNTL_SLP_REJECT_INT_CLR_S = 1
const RTC_CNTL_SLP_WAKEUP_INT_CLR_V = 0x1
const RTC_CNTL_SLP_WAKEUP_INT_CLR_S = 0
const RTC_CNTL_SCRATCH0 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH0_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH0_S = 0
const RTC_CNTL_SCRATCH1 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH1_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH1_S = 0
const RTC_CNTL_SCRATCH2 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH2_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH2_S = 0
const RTC_CNTL_SCRATCH3 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH3_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH3_S = 0
const RTC_CNTL_XTL_EXT_CTR_EN_V = 0x1
const RTC_CNTL_XTL_EXT_CTR_EN_S = 31
const RTC_CNTL_XTL_EXT_CTR_LV_V = 0x1
const RTC_CNTL_XTL_EXT_CTR_LV_S = 30
const RTC_CNTL_XTAL32K_GPIO_SEL_V = 0x1
const RTC_CNTL_XTAL32K_GPIO_SEL_S = 23
const RTC_CNTL_WDT_STATE = 0x00000007
const RTC_CNTL_WDT_STATE_V = 0x7
const RTC_CNTL_WDT_STATE_S = 20
const RTC_CNTL_DAC_XTAL_32K = 0x00000007
const RTC_CNTL_DAC_XTAL_32K_V = 0x7
const RTC_CNTL_DAC_XTAL_32K_S = 17
const RTC_CNTL_XPD_XTAL_32K_V = 0x1
const RTC_CNTL_XPD_XTAL_32K_S = 16
const RTC_CNTL_DRES_XTAL_32K = 0x00000007
const RTC_CNTL_DRES_XTAL_32K_V = 0x7
const RTC_CNTL_DRES_XTAL_32K_S = 13
const RTC_CNTL_DGM_XTAL_32K = 0x00000007
const RTC_CNTL_DGM_XTAL_32K_V = 0x7
const RTC_CNTL_DGM_XTAL_32K_S = 10
const RTC_CNTL_DBUF_XTAL_32K_V = 0x1
const RTC_CNTL_DBUF_XTAL_32K_S = 9
const RTC_CNTL_ENCKINIT_XTAL_32K_V = 0x1
const RTC_CNTL_ENCKINIT_XTAL_32K_S = 8
const RTC_CNTL_XTAL32K_XPD_FORCE_V = 0x1
const RTC_CNTL_XTAL32K_XPD_FORCE_S = 7
const RTC_CNTL_XTAL32K_AUTO_RETURN_V = 0x1
const RTC_CNTL_XTAL32K_AUTO_RETURN_S = 6
const RTC_CNTL_XTAL32K_AUTO_RESTART_V = 0x1
const RTC_CNTL_XTAL32K_AUTO_RESTART_S = 5
const RTC_CNTL_XTAL32K_AUTO_BACKUP_V = 0x1
const RTC_CNTL_XTAL32K_AUTO_BACKUP_S = 4
const RTC_CNTL_XTAL32K_EXT_CLK_FO_V = 0x1
const RTC_CNTL_XTAL32K_EXT_CLK_FO_S = 3
const RTC_CNTL_XTAL32K_WDT_RESET_V = 0x1
const RTC_CNTL_XTAL32K_WDT_RESET_S = 2
const RTC_CNTL_XTAL32K_WDT_CLK_FO_V = 0x1
const RTC_CNTL_XTAL32K_WDT_CLK_FO_S = 1
const RTC_CNTL_XTAL32K_WDT_EN_V = 0x1
const RTC_CNTL_XTAL32K_WDT_EN_S = 0
const RTC_CNTL_EXT_WAKEUP1_LV_V = 0x1
const RTC_CNTL_EXT_WAKEUP1_LV_S = 31
const RTC_CNTL_EXT_WAKEUP0_LV_V = 0x1
const RTC_CNTL_EXT_WAKEUP0_LV_S = 30
const RTC_CNTL_GPIO_WAKEUP_FILTER_V = 0x1
const RTC_CNTL_GPIO_WAKEUP_FILTER_S = 29
const RTC_CNTL_DEEP_SLP_REJECT_EN_V = 0x1
const RTC_CNTL_DEEP_SLP_REJECT_EN_S = 31
const RTC_CNTL_LIGHT_SLP_REJECT_EN_V = 0x1
const RTC_CNTL_LIGHT_SLP_REJECT_EN_S = 30
const RTC_CNTL_SLEEP_REJECT_ENA = 0x0001FFFF
const RTC_CNTL_SLEEP_REJECT_ENA_V = 0x1FFFF
const RTC_CNTL_SLEEP_REJECT_ENA_S = 13
const RTC_CNTL_CPUPERIOD_SEL = 0x00000003
const RTC_CNTL_CPUPERIOD_SEL_V = 0x3
const RTC_CNTL_CPUPERIOD_SEL_S = 30
const RTC_CNTL_CPUSEL_CONF_V = 0x1
const RTC_CNTL_CPUSEL_CONF_S = 29
const RTC_CNTL_SDIO_ACT_DNUM = 0x000003FF
const RTC_CNTL_SDIO_ACT_DNUM_V = 0x3FF
const RTC_CNTL_SDIO_ACT_DNUM_S = 22
const RTC_CNTL_ANA_CLK_RTC_SEL = 0x00000003
const RTC_CNTL_ANA_CLK_RTC_SEL_V = 0x3
const RTC_CNTL_ANA_CLK_RTC_SEL_S = 30
const RTC_CNTL_FAST_CLK_RTC_SEL_V = 0x1
const RTC_CNTL_FAST_CLK_RTC_SEL_S = 29
const RTC_CNTL_CK8M_FORCE_PU_V = 0x1
const RTC_CNTL_CK8M_FORCE_PU_S = 26
const RTC_CNTL_CK8M_FORCE_PD_V = 0x1
const RTC_CNTL_CK8M_FORCE_PD_S = 25
const RTC_CNTL_CK8M_DFREQ = 0x000000FF
const RTC_CNTL_CK8M_DFREQ_V = 0xFF
const RTC_CNTL_CK8M_DFREQ_S = 17
const RTC_CNTL_CK8M_DFREQ_DEFAULT = 172
const RTC_CNTL_CK8M_FORCE_NOGATING_V = 0x1
const RTC_CNTL_CK8M_FORCE_NOGATING_S = 16
const RTC_CNTL_XTAL_FORCE_NOGATING_V = 0x1
const RTC_CNTL_XTAL_FORCE_NOGATING_S = 15
const RTC_CNTL_CK8M_DIV_SEL = 0x00000007
const RTC_CNTL_CK8M_DIV_SEL_V = 0x7
const RTC_CNTL_CK8M_DIV_SEL_S = 12
const RTC_CNTL_DIG_CLK8M_EN_V = 0x1
const RTC_CNTL_DIG_CLK8M_EN_S = 10
const RTC_CNTL_DIG_CLK8M_D256_EN_V = 0x1
const RTC_CNTL_DIG_CLK8M_D256_EN_S = 9
const RTC_CNTL_DIG_XTAL32K_EN_V = 0x1
const RTC_CNTL_DIG_XTAL32K_EN_S = 8
const RTC_CNTL_ENB_CK8M_DIV_V = 0x1
const RTC_CNTL_ENB_CK8M_DIV_S = 7
const RTC_CNTL_ENB_CK8M_V = 0x1
const RTC_CNTL_ENB_CK8M_S = 6
const RTC_CNTL_CK8M_DIV = 0x00000003
const RTC_CNTL_CK8M_DIV_V = 0x3
const RTC_CNTL_CK8M_DIV_S = 4
const RTC_CNTL_CK8M_DIV_SEL_VLD_V = 0x1
const RTC_CNTL_CK8M_DIV_SEL_VLD_S = 3
const RTC_CNTL_SLOW_CLK_NEXT_EDGE_V = 0x1
const RTC_CNTL_SLOW_CLK_NEXT_EDGE_S = 31
const RTC_CNTL_ANA_CLK_DIV = 0x000000FF
const RTC_CNTL_ANA_CLK_DIV_V = 0xFF
const RTC_CNTL_ANA_CLK_DIV_S = 23
const RTC_CNTL_ANA_CLK_DIV_VLD_V = 0x1
const RTC_CNTL_ANA_CLK_DIV_VLD_S = 22
const RTC_CNTL_XPD_SDIO_REG_V = 0x1
const RTC_CNTL_XPD_SDIO_REG_S = 31
const RTC_CNTL_DREFH_SDIO = 0x00000003
const RTC_CNTL_DREFH_SDIO_V = 0x3
const RTC_CNTL_DREFH_SDIO_S = 29
const RTC_CNTL_DREFM_SDIO = 0x00000003
const RTC_CNTL_DREFM_SDIO_V = 0x3
const RTC_CNTL_DREFM_SDIO_S = 27
const RTC_CNTL_DREFL_SDIO = 0x00000003
const RTC_CNTL_DREFL_SDIO_V = 0x3
const RTC_CNTL_DREFL_SDIO_S = 25
const RTC_CNTL_REG1P8_READY_V = 0x1
const RTC_CNTL_REG1P8_READY_S = 24
const RTC_CNTL_SDIO_TIEH_V = 0x1
const RTC_CNTL_SDIO_TIEH_S = 23
const RTC_CNTL_SDIO_FORCE_V = 0x1
const RTC_CNTL_SDIO_FORCE_S = 22
const RTC_CNTL_SDIO_PD_EN_V = 0x1
const RTC_CNTL_SDIO_PD_EN_S = 21
const RTC_CNTL_SDIO_ENCURLIM_V = 0x1
const RTC_CNTL_SDIO_ENCURLIM_S = 20
const RTC_CNTL_SDIO_MODECURLIM_V = 0x1
const RTC_CNTL_SDIO_MODECURLIM_S = 19
const RTC_CNTL_SDIO_DCURLIM = 0x00000007
const RTC_CNTL_SDIO_DCURLIM_V = 0x7
const RTC_CNTL_SDIO_DCURLIM_S = 16
const RTC_CNTL_SDIO_EN_INITI_V = 0x1
const RTC_CNTL_SDIO_EN_INITI_S = 15
const RTC_CNTL_SDIO_INITI = 0x00000003
const RTC_CNTL_SDIO_INITI_V = 0x3
const RTC_CNTL_SDIO_INITI_S = 13
const RTC_CNTL_SDIO_DCAP = 0x00000003
const RTC_CNTL_SDIO_DCAP_V = 0x3
const RTC_CNTL_SDIO_DCAP_S = 11
const RTC_CNTL_SDIO_DTHDRV = 0x00000003
const RTC_CNTL_SDIO_DTHDRV_V = 0x3
const RTC_CNTL_SDIO_DTHDRV_S = 9
const RTC_CNTL_SDIO_TIMER_TARGET = 0x000000FF
const RTC_CNTL_SDIO_TIMER_TARGET_V = 0xFF
const RTC_CNTL_SDIO_TIMER_TARGET_S = 0
const RTC_CNTL_RST_BIAS_I2C_V = 0x1
const RTC_CNTL_RST_BIAS_I2C_S = 31
const RTC_CNTL_DEC_HEARTBEAT_WIDTH_V = 0x1
const RTC_CNTL_DEC_HEARTBEAT_WIDTH_S = 30
const RTC_CNTL_INC_HEARTBEAT_PERIOD_V = 0x1
const RTC_CNTL_INC_HEARTBEAT_PERIOD_S = 29
const RTC_CNTL_DEC_HEARTBEAT_PERIOD_V = 0x1
const RTC_CNTL_DEC_HEARTBEAT_PERIOD_S = 28
const RTC_CNTL_INC_HEARTBEAT_REFRESH_V = 0x1
const RTC_CNTL_INC_HEARTBEAT_REFRESH_S = 27
const RTC_CNTL_ENB_SCK_XTAL_V = 0x1
const RTC_CNTL_ENB_SCK_XTAL_S = 26
const RTC_CNTL_DBG_ATTEN_MONITOR = 0x0000000F
const RTC_CNTL_DBG_ATTEN_MONITOR_V = 0xF
const RTC_CNTL_DBG_ATTEN_MONITOR_S = 22
const RTC_CNTL_DBG_ATTEN_DEEP_SLP = 0x0000000F
const RTC_CNTL_DBG_ATTEN_DEEP_SLP_V = 0xF
const RTC_CNTL_DBG_ATTEN_DEEP_SLP_S = 18
const RTC_CNTL_BIAS_SLEEP_MONITOR_V = 0x1
const RTC_CNTL_BIAS_SLEEP_MONITOR_S = 17
const RTC_CNTL_BIAS_SLEEP_DEEP_SLP_V = 0x1
const RTC_CNTL_BIAS_SLEEP_DEEP_SLP_S = 16
const RTC_CNTL_PD_CUR_MONITOR_V = 0x1
const RTC_CNTL_PD_CUR_MONITOR_S = 15
const RTC_CNTL_PD_CUR_DEEP_SLP_V = 0x1
const RTC_CNTL_PD_CUR_DEEP_SLP_S = 14
const RTC_CNTL_BIAS_BUF_MONITOR_V = 0x1
const RTC_CNTL_BIAS_BUF_MONITOR_S = 13
const RTC_CNTL_BIAS_BUF_DEEP_SLP_V = 0x1
const RTC_CNTL_BIAS_BUF_DEEP_SLP_S = 12
const RTC_CNTL_BIAS_BUF_WAKE_V = 0x1
const RTC_CNTL_BIAS_BUF_WAKE_S = 11
const RTC_CNTL_BIAS_BUF_IDLE_V = 0x1
const RTC_CNTL_BIAS_BUF_IDLE_S = 10
const RTC_CNTL_REGULATOR_FORCE_PU_V = 0x1
const RTC_CNTL_REGULATOR_FORCE_PU_S = 31
const RTC_CNTL_REGULATOR_FORCE_PD_V = 0x1
const RTC_CNTL_REGULATOR_FORCE_PD_S = 30
const RTC_CNTL_DBOOST_FORCE_PU_V = 0x1
const RTC_CNTL_DBOOST_FORCE_PU_S = 29
const RTC_CNTL_DBOOST_FORCE_PD_V = 0x1
const RTC_CNTL_DBOOST_FORCE_PD_S = 28
const RTC_CNTL_DBIAS_WAK = 0x00000007
const RTC_CNTL_DBIAS_WAK_V = 0x7
const RTC_CNTL_DBIAS_WAK_S = 25
const RTC_CNTL_DIG_DBIAS_0V85 = 0
const RTC_CNTL_DIG_DBIAS_0V90 = 1
const RTC_CNTL_DIG_DBIAS_0V95 = 2
const RTC_CNTL_DIG_DBIAS_1V00 = 3
const RTC_CNTL_DIG_DBIAS_1V05 = 4
const RTC_CNTL_DIG_DBIAS_1V10 = 5
const RTC_CNTL_DIG_DBIAS_1V15 = 6
const RTC_CNTL_DIG_DBIAS_1V20 = 7
const RTC_CNTL_DBIAS_SLP = 0x00000007
const RTC_CNTL_DBIAS_SLP_V = 0x7
const RTC_CNTL_DBIAS_SLP_S = 22
const RTC_CNTL_SCK_DCAP = 0x000000FF
const RTC_CNTL_SCK_DCAP_V = 0xFF
const RTC_CNTL_SCK_DCAP_S = 14
const RTC_CNTL_DIG_DBIAS_WAK = 0x00000007
const RTC_CNTL_DIG_DBIAS_WAK_V = 0x7
const RTC_CNTL_DIG_DBIAS_WAK_S = 11
const RTC_CNTL_DIG_DBIAS_SLP = 0x00000007
const RTC_CNTL_DIG_DBIAS_SLP_V = 0x7
const RTC_CNTL_DIG_DBIAS_SLP_S = 8
const RTC_CNTL_PAD_FORCE_HOLD_V = 0x1
const RTC_CNTL_PAD_FORCE_HOLD_S = 21
const RTC_CNTL_PD_EN_V = 0x1
const RTC_CNTL_PD_EN_S = 20
const RTC_CNTL_FORCE_PU_V = 0x1
const RTC_CNTL_FORCE_PU_S = 19
const RTC_CNTL_FORCE_PD_V = 0x1
const RTC_CNTL_FORCE_PD_S = 18
const RTC_CNTL_SLOWMEM_PD_EN_V = 0x1
const RTC_CNTL_SLOWMEM_PD_EN_S = 17
const RTC_CNTL_SLOWMEM_FORCE_PU_V = 0x1
const RTC_CNTL_SLOWMEM_FORCE_PU_S = 16
const RTC_CNTL_SLOWMEM_FORCE_PD_V = 0x1
const RTC_CNTL_SLOWMEM_FORCE_PD_S = 15
const RTC_CNTL_FASTMEM_PD_EN_V = 0x1
const RTC_CNTL_FASTMEM_PD_EN_S = 14
const RTC_CNTL_FASTMEM_FORCE_PU_V = 0x1
const RTC_CNTL_FASTMEM_FORCE_PU_S = 13
const RTC_CNTL_FASTMEM_FORCE_PD_V = 0x1
const RTC_CNTL_FASTMEM_FORCE_PD_S = 12
const RTC_CNTL_SLOWMEM_FORCE_LPU_V = 0x1
const RTC_CNTL_SLOWMEM_FORCE_LPU_S = 11
const RTC_CNTL_SLOWMEM_FORCE_LPD_V = 0x1
const RTC_CNTL_SLOWMEM_FORCE_LPD_S = 10
const RTC_CNTL_SLOWMEM_FOLW_CPU_V = 0x1
const RTC_CNTL_SLOWMEM_FOLW_CPU_S = 9
const RTC_CNTL_FASTMEM_FORCE_LPU_V = 0x1
const RTC_CNTL_FASTMEM_FORCE_LPU_S = 8
const RTC_CNTL_FASTMEM_FORCE_LPD_V = 0x1
const RTC_CNTL_FASTMEM_FORCE_LPD_S = 7
const RTC_CNTL_FASTMEM_FOLW_CPU_V = 0x1
const RTC_CNTL_FASTMEM_FOLW_CPU_S = 6
const RTC_CNTL_FORCE_NOISO_V = 0x1
const RTC_CNTL_FORCE_NOISO_S = 5
const RTC_CNTL_FORCE_ISO_V = 0x1
const RTC_CNTL_FORCE_ISO_S = 4
const RTC_CNTL_SLOWMEM_FORCE_ISO_V = 0x1
const RTC_CNTL_SLOWMEM_FORCE_ISO_S = 3
const RTC_CNTL_SLOWMEM_FORCE_NOISO_V = 0x1
const RTC_CNTL_SLOWMEM_FORCE_NOISO_S = 2
const RTC_CNTL_FASTMEM_FORCE_ISO_V = 0x1
const RTC_CNTL_FASTMEM_FORCE_ISO_S = 1
const RTC_CNTL_FASTMEM_FORCE_NOISO_V = 0x1
const RTC_CNTL_FASTMEM_FORCE_NOISO_S = 0
const RTC_CNTL_DG_WRAP_PD_EN_V = 0x1
const RTC_CNTL_DG_WRAP_PD_EN_S = 31
const RTC_CNTL_WIFI_PD_EN_V = 0x1
const RTC_CNTL_WIFI_PD_EN_S = 30
const RTC_CNTL_INTER_RAM4_PD_EN_V = 0x1
const RTC_CNTL_INTER_RAM4_PD_EN_S = 29
const RTC_CNTL_INTER_RAM3_PD_EN_V = 0x1
const RTC_CNTL_INTER_RAM3_PD_EN_S = 28
const RTC_CNTL_INTER_RAM2_PD_EN_V = 0x1
const RTC_CNTL_INTER_RAM2_PD_EN_S = 27
const RTC_CNTL_INTER_RAM1_PD_EN_V = 0x1
const RTC_CNTL_INTER_RAM1_PD_EN_S = 26
const RTC_CNTL_INTER_RAM0_PD_EN_V = 0x1
const RTC_CNTL_INTER_RAM0_PD_EN_S = 25
const RTC_CNTL_ROM0_PD_EN_V = 0x1
const RTC_CNTL_ROM0_PD_EN_S = 24
const RTC_CNTL_DG_DCDC_PD_EN_V = 0x1
const RTC_CNTL_DG_DCDC_PD_EN_S = 23
const RTC_CNTL_DG_DCDC_FORCE_PU_V = 0x1
const RTC_CNTL_DG_DCDC_FORCE_PU_S = 22
const RTC_CNTL_DG_DCDC_FORCE_PD_V = 0x1
const RTC_CNTL_DG_DCDC_FORCE_PD_S = 21
const RTC_CNTL_DG_WRAP_FORCE_PU_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_PU_S = 20
const RTC_CNTL_DG_WRAP_FORCE_PD_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_PD_S = 19
const RTC_CNTL_WIFI_FORCE_PU_V = 0x1
const RTC_CNTL_WIFI_FORCE_PU_S = 18
const RTC_CNTL_WIFI_FORCE_PD_V = 0x1
const RTC_CNTL_WIFI_FORCE_PD_S = 17
const RTC_CNTL_INTER_RAM4_FORCE_PU_V = 0x1
const RTC_CNTL_INTER_RAM4_FORCE_PU_S = 16
const RTC_CNTL_INTER_RAM4_FORCE_PD_V = 0x1
const RTC_CNTL_INTER_RAM4_FORCE_PD_S = 15
const RTC_CNTL_INTER_RAM3_FORCE_PU_V = 0x1
const RTC_CNTL_INTER_RAM3_FORCE_PU_S = 14
const RTC_CNTL_INTER_RAM3_FORCE_PD_V = 0x1
const RTC_CNTL_INTER_RAM3_FORCE_PD_S = 13
const RTC_CNTL_INTER_RAM2_FORCE_PU_V = 0x1
const RTC_CNTL_INTER_RAM2_FORCE_PU_S = 12
const RTC_CNTL_INTER_RAM2_FORCE_PD_V = 0x1
const RTC_CNTL_INTER_RAM2_FORCE_PD_S = 11
const RTC_CNTL_INTER_RAM1_FORCE_PU_V = 0x1
const RTC_CNTL_INTER_RAM1_FORCE_PU_S = 10
const RTC_CNTL_INTER_RAM1_FORCE_PD_V = 0x1
const RTC_CNTL_INTER_RAM1_FORCE_PD_S = 9
const RTC_CNTL_INTER_RAM0_FORCE_PU_V = 0x1
const RTC_CNTL_INTER_RAM0_FORCE_PU_S = 8
const RTC_CNTL_INTER_RAM0_FORCE_PD_V = 0x1
const RTC_CNTL_INTER_RAM0_FORCE_PD_S = 7
const RTC_CNTL_ROM0_FORCE_PU_V = 0x1
const RTC_CNTL_ROM0_FORCE_PU_S = 6
const RTC_CNTL_ROM0_FORCE_PD_V = 0x1
const RTC_CNTL_ROM0_FORCE_PD_S = 5
const RTC_CNTL_LSLP_MEM_FORCE_PU_V = 0x1
const RTC_CNTL_LSLP_MEM_FORCE_PU_S = 4
const RTC_CNTL_LSLP_MEM_FORCE_PD_V = 0x1
const RTC_CNTL_LSLP_MEM_FORCE_PD_S = 3
const RTC_CNTL_DG_WRAP_FORCE_NOISO_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_NOISO_S = 31
const RTC_CNTL_DG_WRAP_FORCE_ISO_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_ISO_S = 30
const RTC_CNTL_WIFI_FORCE_NOISO_V = 0x1
const RTC_CNTL_WIFI_FORCE_NOISO_S = 29
const RTC_CNTL_WIFI_FORCE_ISO_V = 0x1
const RTC_CNTL_WIFI_FORCE_ISO_S = 28
const RTC_CNTL_INTER_RAM4_FORCE_NOISO_V = 0x1
const RTC_CNTL_INTER_RAM4_FORCE_NOISO_S = 27
const RTC_CNTL_INTER_RAM4_FORCE_ISO_V = 0x1
const RTC_CNTL_INTER_RAM4_FORCE_ISO_S = 26
const RTC_CNTL_INTER_RAM3_FORCE_NOISO_V = 0x1
const RTC_CNTL_INTER_RAM3_FORCE_NOISO_S = 25
const RTC_CNTL_INTER_RAM3_FORCE_ISO_V = 0x1
const RTC_CNTL_INTER_RAM3_FORCE_ISO_S = 24
const RTC_CNTL_INTER_RAM2_FORCE_NOISO_V = 0x1
const RTC_CNTL_INTER_RAM2_FORCE_NOISO_S = 23
const RTC_CNTL_INTER_RAM2_FORCE_ISO_V = 0x1
const RTC_CNTL_INTER_RAM2_FORCE_ISO_S = 22
const RTC_CNTL_INTER_RAM1_FORCE_NOISO_V = 0x1
const RTC_CNTL_INTER_RAM1_FORCE_NOISO_S = 21
const RTC_CNTL_INTER_RAM1_FORCE_ISO_V = 0x1
const RTC_CNTL_INTER_RAM1_FORCE_ISO_S = 20
const RTC_CNTL_INTER_RAM0_FORCE_NOISO_V = 0x1
const RTC_CNTL_INTER_RAM0_FORCE_NOISO_S = 19
const RTC_CNTL_INTER_RAM0_FORCE_ISO_V = 0x1
const RTC_CNTL_INTER_RAM0_FORCE_ISO_S = 18
const RTC_CNTL_ROM0_FORCE_NOISO_V = 0x1
const RTC_CNTL_ROM0_FORCE_NOISO_S = 17
const RTC_CNTL_ROM0_FORCE_ISO_V = 0x1
const RTC_CNTL_ROM0_FORCE_ISO_S = 16
const RTC_CNTL_DG_PAD_FORCE_HOLD_V = 0x1
const RTC_CNTL_DG_PAD_FORCE_HOLD_S = 15
const RTC_CNTL_DG_PAD_FORCE_UNHOLD_V = 0x1
const RTC_CNTL_DG_PAD_FORCE_UNHOLD_S = 14
const RTC_CNTL_DG_PAD_FORCE_ISO_V = 0x1
const RTC_CNTL_DG_PAD_FORCE_ISO_S = 13
const RTC_CNTL_DG_PAD_FORCE_NOISO_V = 0x1
const RTC_CNTL_DG_PAD_FORCE_NOISO_S = 12
const RTC_CNTL_DG_PAD_AUTOHOLD_EN_V = 0x1
const RTC_CNTL_DG_PAD_AUTOHOLD_EN_S = 11
const RTC_CNTL_CLR_DG_PAD_AUTOHOLD_V = 0x1
const RTC_CNTL_CLR_DG_PAD_AUTOHOLD_S = 10
const RTC_CNTL_DG_PAD_AUTOHOLD_V = 0x1
const RTC_CNTL_DG_PAD_AUTOHOLD_S = 9
const RTC_CNTL_DIG_ISO_FORCE_ON_V = 0x1
const RTC_CNTL_DIG_ISO_FORCE_ON_S = 8
const RTC_CNTL_DIG_ISO_FORCE_OFF_V = 0x1
const RTC_CNTL_DIG_ISO_FORCE_OFF_S = 7
const RTC_CNTL_WDT_EN_V = 0x1
const RTC_CNTL_WDT_EN_S = 31
const RTC_CNTL_WDT_STG0 = 0x00000007
const RTC_CNTL_WDT_STG0_V = 0x7
const RTC_CNTL_WDT_STG0_S = 28
const RTC_CNTL_WDT_STG1 = 0x00000007
const RTC_CNTL_WDT_STG1_V = 0x7
const RTC_CNTL_WDT_STG1_S = 25
const RTC_CNTL_WDT_STG2 = 0x00000007
const RTC_CNTL_WDT_STG2_V = 0x7
const RTC_CNTL_WDT_STG2_S = 22
const RTC_CNTL_WDT_STG3 = 0x00000007
const RTC_CNTL_WDT_STG3_V = 0x7
const RTC_CNTL_WDT_STG3_S = 19
const RTC_WDT_STG_SEL_OFF = 0
const RTC_WDT_STG_SEL_INT = 1
const RTC_WDT_STG_SEL_RESET_CPU = 2
const RTC_WDT_STG_SEL_RESET_SYSTEM = 3
const RTC_WDT_STG_SEL_RESET_RTC = 4
const RTC_CNTL_WDT_CPU_RESET_LENGTH = 0x00000007
const RTC_CNTL_WDT_CPU_RESET_LENGTH_V = 0x7
const RTC_CNTL_WDT_CPU_RESET_LENGTH_S = 16
const RTC_CNTL_WDT_SYS_RESET_LENGTH = 0x00000007
const RTC_CNTL_WDT_SYS_RESET_LENGTH_V = 0x7
const RTC_CNTL_WDT_SYS_RESET_LENGTH_S = 13
const RTC_CNTL_WDT_FLASHBOOT_MOD_EN_V = 0x1
const RTC_CNTL_WDT_FLASHBOOT_MOD_EN_S = 12
const RTC_CNTL_WDT_PROCPU_RESET_EN_V = 0x1
const RTC_CNTL_WDT_PROCPU_RESET_EN_S = 11
const RTC_CNTL_WDT_APPCPU_RESET_EN_V = 0x1
const RTC_CNTL_WDT_APPCPU_RESET_EN_S = 10
const RTC_CNTL_WDT_PAUSE_IN_SLP_V = 0x1
const RTC_CNTL_WDT_PAUSE_IN_SLP_S = 9
const RTC_CNTL_WDT_CHIP_RESET_EN_V = 0x1
const RTC_CNTL_WDT_CHIP_RESET_EN_S = 8
const RTC_CNTL_WDT_CHIP_RESET_WIDTH = 0x000000FF
const RTC_CNTL_WDT_CHIP_RESET_WIDTH_V = 0xFF
const RTC_CNTL_WDT_CHIP_RESET_WIDTH_S = 0
const RTC_CNTL_WDT_STG0_HOLD = 0xFFFFFFFF
const RTC_CNTL_WDT_STG0_HOLD_V = 0xFFFFFFFF
const RTC_CNTL_WDT_STG0_HOLD_S = 0
const RTC_CNTL_WDT_STG1_HOLD = 0xFFFFFFFF
const RTC_CNTL_WDT_STG1_HOLD_V = 0xFFFFFFFF
const RTC_CNTL_WDT_STG1_HOLD_S = 0
const RTC_CNTL_WDT_STG2_HOLD = 0xFFFFFFFF
const RTC_CNTL_WDT_STG2_HOLD_V = 0xFFFFFFFF
const RTC_CNTL_WDT_STG2_HOLD_S = 0
const RTC_CNTL_WDT_STG3_HOLD = 0xFFFFFFFF
const RTC_CNTL_WDT_STG3_HOLD_V = 0xFFFFFFFF
const RTC_CNTL_WDT_STG3_HOLD_S = 0
const RTC_CNTL_WDT_FEED_V = 0x1
const RTC_CNTL_WDT_FEED_S = 31
const RTC_CNTL_WDT_WKEY = 0xFFFFFFFF
const RTC_CNTL_WDT_WKEY_V = 0xFFFFFFFF
const RTC_CNTL_WDT_WKEY_S = 0
const RTC_CNTL_SWD_AUTO_FEED_EN_V = 0x1
const RTC_CNTL_SWD_AUTO_FEED_EN_S = 31
const RTC_CNTL_SWD_DISABLE_V = 0x1
const RTC_CNTL_SWD_DISABLE_S = 30
const RTC_CNTL_SWD_FEED_V = 0x1
const RTC_CNTL_SWD_FEED_S = 29
const RTC_CNTL_SWD_RST_FLAG_CLR_V = 0x1
const RTC_CNTL_SWD_RST_FLAG_CLR_S = 28
const RTC_CNTL_SWD_SIGNAL_WIDTH = 0x000003FF
const RTC_CNTL_SWD_SIGNAL_WIDTH_V = 0x3FF
const RTC_CNTL_SWD_SIGNAL_WIDTH_S = 18
const RTC_CNTL_SWD_FEED_INT_V = 0x1
const RTC_CNTL_SWD_FEED_INT_S = 1
const RTC_CNTL_SWD_RESET_FLAG_V = 0x1
const RTC_CNTL_SWD_RESET_FLAG_S = 0
const RTC_CNTL_SWD_WKEY = 0xFFFFFFFF
const RTC_CNTL_SWD_WKEY_V = 0xFFFFFFFF
const RTC_CNTL_SWD_WKEY_S = 0
const RTC_CNTL_SW_STALL_PROCPU_C1 = 0x0000003F
const RTC_CNTL_SW_STALL_PROCPU_C1_V = 0x3F
const RTC_CNTL_SW_STALL_PROCPU_C1_S = 26
const RTC_CNTL_SW_STALL_APPCPU_C1 = 0x0000003F
const RTC_CNTL_SW_STALL_APPCPU_C1_V = 0x3F
const RTC_CNTL_SW_STALL_APPCPU_C1_S = 20
const RTC_CNTL_SCRATCH4 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH4_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH4_S = 0
const RTC_CNTL_SCRATCH5 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH5_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH5_S = 0
const RTC_CNTL_SCRATCH6 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH6_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH6_S = 0
const RTC_CNTL_SCRATCH7 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH7_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH7_S = 0
const RTC_CNTL_MAIN_STATE = 0x0000000F
const RTC_CNTL_MAIN_STATE_V = 0xF
const RTC_CNTL_MAIN_STATE_S = 28
const RTC_CNTL_MAIN_STATE_IN_IDLE_V = 0x1
const RTC_CNTL_MAIN_STATE_IN_IDLE_S = 27
const RTC_CNTL_MAIN_STATE_IN_SLP_V = 0x1
const RTC_CNTL_MAIN_STATE_IN_SLP_S = 26
const RTC_CNTL_MAIN_STATE_IN_WAIT_XTL_V = 0x1
const RTC_CNTL_MAIN_STATE_IN_WAIT_XTL_S = 25
const RTC_CNTL_MAIN_STATE_IN_WAIT_PLL_V = 0x1
const RTC_CNTL_MAIN_STATE_IN_WAIT_PLL_S = 24
const RTC_CNTL_MAIN_STATE_IN_WAIT_8M_V = 0x1
const RTC_CNTL_MAIN_STATE_IN_WAIT_8M_S = 23
const RTC_CNTL_IN_LOW_POWER_STATE_V = 0x1
const RTC_CNTL_IN_LOW_POWER_STATE_S = 22
const RTC_CNTL_IN_WAKEUP_STATE_V = 0x1
const RTC_CNTL_IN_WAKEUP_STATE_S = 21
const RTC_CNTL_MAIN_STATE_WAIT_END_V = 0x1
const RTC_CNTL_MAIN_STATE_WAIT_END_S = 20
const RTC_CNTL_RDY_FOR_WAKEUP_V = 0x1
const RTC_CNTL_RDY_FOR_WAKEUP_S = 19
const RTC_CNTL_MAIN_STATE_PLL_ON_V = 0x1
const RTC_CNTL_MAIN_STATE_PLL_ON_S = 18
const RTC_CNTL_MAIN_STATE_XTAL_ISO_V = 0x1
const RTC_CNTL_MAIN_STATE_XTAL_ISO_S = 17
const RTC_CNTL_COCPU_STATE_DONE_V = 0x1
const RTC_CNTL_COCPU_STATE_DONE_S = 16
const RTC_CNTL_COCPU_STATE_SLP_V = 0x1
const RTC_CNTL_COCPU_STATE_SLP_S = 15
const RTC_CNTL_COCPU_STATE_SWITCH_V = 0x1
const RTC_CNTL_COCPU_STATE_SWITCH_S = 14
const RTC_CNTL_COCPU_STATE_START_V = 0x1
const RTC_CNTL_COCPU_STATE_START_S = 13
const RTC_CNTL_TOUCH_STATE_DONE_V = 0x1
const RTC_CNTL_TOUCH_STATE_DONE_S = 12
const RTC_CNTL_TOUCH_STATE_SLP_V = 0x1
const RTC_CNTL_TOUCH_STATE_SLP_S = 11
const RTC_CNTL_TOUCH_STATE_SWITCH_V = 0x1
const RTC_CNTL_TOUCH_STATE_SWITCH_S = 10
const RTC_CNTL_TOUCH_STATE_START_V = 0x1
const RTC_CNTL_TOUCH_STATE_START_S = 9
const RTC_CNTL_XPD_DIG_V = 0x1
const RTC_CNTL_XPD_DIG_S = 8
const RTC_CNTL_DIG_ISO_V = 0x1
const RTC_CNTL_DIG_ISO_S = 7
const RTC_CNTL_XPD_WIFI_V = 0x1
const RTC_CNTL_XPD_WIFI_S = 6
const RTC_CNTL_WIFI_ISO_V = 0x1
const RTC_CNTL_WIFI_ISO_S = 5
const RTC_CNTL_XPD_RTC_PERI_V = 0x1
const RTC_CNTL_XPD_RTC_PERI_S = 4
const RTC_CNTL_PERI_ISO_V = 0x1
const RTC_CNTL_PERI_ISO_S = 3
const RTC_CNTL_XPD_DIG_DCDC_V = 0x1
const RTC_CNTL_XPD_DIG_DCDC_S = 2
const RTC_CNTL_XPD_ROM0_V = 0x1
const RTC_CNTL_XPD_ROM0_S = 0
const RTC_CNTL_LOW_POWER_DIAG1 = 0xFFFFFFFF
const RTC_CNTL_LOW_POWER_DIAG1_V = 0xFFFFFFFF
const RTC_CNTL_LOW_POWER_DIAG1_S = 0
const RTC_CNTL_PAD21_HOLD_V = 0x1
const RTC_CNTL_PAD21_HOLD_S = 21
const RTC_CNTL_PAD20_HOLD_V = 0x1
const RTC_CNTL_PAD20_HOLD_S = 20
const RTC_CNTL_PAD19_HOLD_V = 0x1
const RTC_CNTL_PAD19_HOLD_S = 19
const RTC_CNTL_PDAC2_HOLD_V = 0x1
const RTC_CNTL_PDAC2_HOLD_S = 18
const RTC_CNTL_PDAC1_HOLD_V = 0x1
const RTC_CNTL_PDAC1_HOLD_S = 17
const RTC_CNTL_X32N_HOLD_V = 0x1
const RTC_CNTL_X32N_HOLD_S = 16
const RTC_CNTL_X32P_HOLD_V = 0x1
const RTC_CNTL_X32P_HOLD_S = 15
const RTC_CNTL_TOUCH_PAD14_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD14_HOLD_S = 14
const RTC_CNTL_TOUCH_PAD13_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD13_HOLD_S = 13
const RTC_CNTL_TOUCH_PAD12_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD12_HOLD_S = 12
const RTC_CNTL_TOUCH_PAD11_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD11_HOLD_S = 11
const RTC_CNTL_TOUCH_PAD10_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD10_HOLD_S = 10
const RTC_CNTL_TOUCH_PAD9_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD9_HOLD_S = 9
const RTC_CNTL_TOUCH_PAD8_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD8_HOLD_S = 8
const RTC_CNTL_TOUCH_PAD7_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD7_HOLD_S = 7
const RTC_CNTL_TOUCH_PAD6_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD6_HOLD_S = 6
const RTC_CNTL_TOUCH_PAD5_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD5_HOLD_S = 5
const RTC_CNTL_TOUCH_PAD4_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD4_HOLD_S = 4
const RTC_CNTL_TOUCH_PAD3_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD3_HOLD_S = 3
const RTC_CNTL_TOUCH_PAD2_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD2_HOLD_S = 2
const RTC_CNTL_TOUCH_PAD1_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD1_HOLD_S = 1
const RTC_CNTL_TOUCH_PAD0_HOLD_V = 0x1
const RTC_CNTL_TOUCH_PAD0_HOLD_S = 0
const RTC_CNTL_DIG_PAD_HOLD = 0xFFFFFFFF
const RTC_CNTL_DIG_PAD_HOLD_V = 0xFFFFFFFF
const RTC_CNTL_DIG_PAD_HOLD_S = 0
const RTC_CNTL_EXT_WAKEUP1_STATUS_CLR_V = 0x1
const RTC_CNTL_EXT_WAKEUP1_STATUS_CLR_S = 22
const RTC_CNTL_EXT_WAKEUP1_SEL = 0x003FFFFF
const RTC_CNTL_EXT_WAKEUP1_SEL_V = 0x3FFFFF
const RTC_CNTL_EXT_WAKEUP1_SEL_S = 0
const RTC_CNTL_EXT_WAKEUP1_STATUS = 0x003FFFFF
const RTC_CNTL_EXT_WAKEUP1_STATUS_V = 0x3FFFFF
const RTC_CNTL_EXT_WAKEUP1_STATUS_S = 0
const RTC_CNTL_BROWN_OUT_DET_V = 0x1
const RTC_CNTL_BROWN_OUT_DET_S = 31
const RTC_CNTL_BROWN_OUT_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT_ENA_S = 30
const RTC_CNTL_BROWN_OUT_CNT_CLR_V = 0x1
const RTC_CNTL_BROWN_OUT_CNT_CLR_S = 29
const RTC_CNTL_BROWN_OUT_RST_SEL_V = 0x1
const RTC_CNTL_BROWN_OUT_RST_SEL_S = 27
const RTC_CNTL_BROWN_OUT_RST_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT_RST_ENA_S = 26
const RTC_CNTL_BROWN_OUT_RST_WAIT = 0x000003FF
const RTC_CNTL_BROWN_OUT_RST_WAIT_V = 0x3FF
const RTC_CNTL_BROWN_OUT_RST_WAIT_S = 16
const RTC_CNTL_BROWN_OUT_PD_RF_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT_PD_RF_ENA_S = 15
const RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA_S = 14
const RTC_CNTL_BROWN_OUT_INT_WAIT = 0x000003FF
const RTC_CNTL_BROWN_OUT_INT_WAIT_V = 0x3FF
const RTC_CNTL_BROWN_OUT_INT_WAIT_S = 4
const RTC_CNTL_BROWN_OUT2_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT2_ENA_S = 0
const RTC_CNTL_TIMER_VALUE1_LOW = 0xFFFFFFFF
const RTC_CNTL_TIMER_VALUE1_LOW_V = 0xFFFFFFFF
const RTC_CNTL_TIMER_VALUE1_LOW_S = 0
const RTC_CNTL_TIMER_VALUE1_HIGH = 0x0000FFFF
const RTC_CNTL_TIMER_VALUE1_HIGH_V = 0xFFFF
const RTC_CNTL_TIMER_VALUE1_HIGH_S = 0
const RTC_CNTL_XTAL32K_CLK_FACTOR = 0xFFFFFFFF
const RTC_CNTL_XTAL32K_CLK_FACTOR_V = 0xFFFFFFFF
const RTC_CNTL_XTAL32K_CLK_FACTOR_S = 0
const RTC_CNTL_XTAL32K_STABLE_THRES = 0x0000000F
const RTC_CNTL_XTAL32K_STABLE_THRES_V = 0xF
const RTC_CNTL_XTAL32K_STABLE_THRES_S = 28
const RTC_CNTL_XTAL32K_WDT_TIMEOUT = 0x000000FF
const RTC_CNTL_XTAL32K_WDT_TIMEOUT_V = 0xFF
const RTC_CNTL_XTAL32K_WDT_TIMEOUT_S = 20
const RTC_CNTL_XTAL32K_RESTART_WAIT = 0x0000FFFF
const RTC_CNTL_XTAL32K_RESTART_WAIT_V = 0xFFFF
const RTC_CNTL_XTAL32K_RESTART_WAIT_S = 4
const RTC_CNTL_XTAL32K_RETURN_WAIT = 0x0000000F
const RTC_CNTL_XTAL32K_RETURN_WAIT_V = 0xF
const RTC_CNTL_XTAL32K_RETURN_WAIT_S = 0
const RTC_CNTL_ULP_CP_SLP_TIMER_EN_V = 0x1
const RTC_CNTL_ULP_CP_SLP_TIMER_EN_S = 31
const RTC_CNTL_ULP_CP_GPIO_WAKEUP_CLR_V = 0x1
const RTC_CNTL_ULP_CP_GPIO_WAKEUP_CLR_S = 30
const RTC_CNTL_ULP_CP_GPIO_WAKEUP_ENA_V = 0x1
const RTC_CNTL_ULP_CP_GPIO_WAKEUP_ENA_S = 29
const RTC_CNTL_ULP_CP_PC_INIT = 0x000007FF
const RTC_CNTL_ULP_CP_PC_INIT_V = 0x7FF
const RTC_CNTL_ULP_CP_PC_INIT_S = 0
const RTC_CNTL_ULP_CP_START_TOP_V = 0x1
const RTC_CNTL_ULP_CP_START_TOP_S = 31
const RTC_CNTL_ULP_CP_FORCE_START_TOP_V = 0x1
const RTC_CNTL_ULP_CP_FORCE_START_TOP_S = 30
const RTC_CNTL_ULP_CP_RESET_V = 0x1
const RTC_CNTL_ULP_CP_RESET_S = 29
const RTC_CNTL_ULP_CP_CLK_FO_V = 0x1
const RTC_CNTL_ULP_CP_CLK_FO_S = 28
const RTC_CNTL_ULP_CP_MEM_OFFST_CLR_V = 0x1
const RTC_CNTL_ULP_CP_MEM_OFFST_CLR_S = 22
const RTC_CNTL_ULP_CP_MEM_ADDR_SIZE = 0x000007FF
const RTC_CNTL_ULP_CP_MEM_ADDR_SIZE_V = 0x7FF
const RTC_CNTL_ULP_CP_MEM_ADDR_SIZE_S = 11
const RTC_CNTL_ULP_CP_MEM_ADDR_INIT = 0x000007FF
const RTC_CNTL_ULP_CP_MEM_ADDR_INIT_V = 0x7FF
const RTC_CNTL_ULP_CP_MEM_ADDR_INIT_S = 0
const RTC_CNTL_COCPU_SW_INT_TRIGGER_V = 0x1
const RTC_CNTL_COCPU_SW_INT_TRIGGER_S = 26
const RTC_CNTL_COCPU_DONE_V = 0x1
const RTC_CNTL_COCPU_DONE_S = 25
const RTC_CNTL_COCPU_DONE_FORCE_V = 0x1
const RTC_CNTL_COCPU_DONE_FORCE_S = 24
const RTC_CNTL_COCPU_SEL_V = 0x1
const RTC_CNTL_COCPU_SEL_S = 23
const RTC_CNTL_COCPU_SHUT_RESET_EN_V = 0x1
const RTC_CNTL_COCPU_SHUT_RESET_EN_S = 22
const RTC_CNTL_COCPU_SHUT_2_CLK_DIS = 0x000000FF
const RTC_CNTL_COCPU_SHUT_2_CLK_DIS_V = 0xFF
const RTC_CNTL_COCPU_SHUT_2_CLK_DIS_S = 14
const RTC_CNTL_COCPU_SHUT_V = 0x1
const RTC_CNTL_COCPU_SHUT_S = 13
const RTC_CNTL_COCPU_START_2_INTR_EN = 0x0000003F
const RTC_CNTL_COCPU_START_2_INTR_EN_V = 0x3F
const RTC_CNTL_COCPU_START_2_INTR_EN_S = 7
const RTC_CNTL_COCPU_START_2_RESET_DIS = 0x0000003F
const RTC_CNTL_COCPU_START_2_RESET_DIS_V = 0x3F
const RTC_CNTL_COCPU_START_2_RESET_DIS_S = 1
const RTC_CNTL_COCPU_CLK_FO_V = 0x1
const RTC_CNTL_COCPU_CLK_FO_S = 0
const RTC_CNTL_TOUCH_MEAS_NUM = 0x0000FFFF
const RTC_CNTL_TOUCH_MEAS_NUM_V = 0xFFFF
const RTC_CNTL_TOUCH_MEAS_NUM_S = 16
const RTC_CNTL_TOUCH_SLEEP_CYCLES = 0x0000FFFF
const RTC_CNTL_TOUCH_SLEEP_CYCLES_V = 0xFFFF
const RTC_CNTL_TOUCH_SLEEP_CYCLES_S = 0
const RTC_CNTL_TOUCH_CLKGATE_EN_V = 0x1
const RTC_CNTL_TOUCH_CLKGATE_EN_S = 31
const RTC_CNTL_TOUCH_CLK_FO_V = 0x1
const RTC_CNTL_TOUCH_CLK_FO_S = 30
const RTC_CNTL_TOUCH_RESET_V = 0x1
const RTC_CNTL_TOUCH_RESET_S = 29
const RTC_CNTL_TOUCH_TIMER_FORCE_DONE = 0x00000003
const RTC_CNTL_TOUCH_TIMER_FORCE_DONE_V = 0x3
const RTC_CNTL_TOUCH_TIMER_FORCE_DONE_S = 27
const RTC_CNTL_TOUCH_SLP_CYC_DIV = 0x00000003
const RTC_CNTL_TOUCH_SLP_CYC_DIV_V = 0x3
const RTC_CNTL_TOUCH_SLP_CYC_DIV_S = 25
const RTC_CNTL_TOUCH_XPD_WAIT = 0x000000FF
const RTC_CNTL_TOUCH_XPD_WAIT_V = 0xFF
const RTC_CNTL_TOUCH_XPD_WAIT_S = 17
const RTC_CNTL_TOUCH_START_FORCE_V = 0x1
const RTC_CNTL_TOUCH_START_FORCE_S = 16
const RTC_CNTL_TOUCH_START_EN_V = 0x1
const RTC_CNTL_TOUCH_START_EN_S = 15
const RTC_CNTL_TOUCH_START_FSM_EN_V = 0x1
const RTC_CNTL_TOUCH_START_FSM_EN_S = 14
const RTC_CNTL_TOUCH_SLP_TIMER_EN_V = 0x1
const RTC_CNTL_TOUCH_SLP_TIMER_EN_S = 13
const RTC_CNTL_TOUCH_DBIAS_V = 0x1
const RTC_CNTL_TOUCH_DBIAS_S = 12
const RTC_CNTL_TOUCH_REFC = 0x00000007
const RTC_CNTL_TOUCH_REFC_V = 0x7
const RTC_CNTL_TOUCH_REFC_S = 9
const RTC_CNTL_TOUCH_XPD_BIAS_V = 0x1
const RTC_CNTL_TOUCH_XPD_BIAS_S = 8
const RTC_CNTL_TOUCH_DREFH = 0x00000003
const RTC_CNTL_TOUCH_DREFH_V = 0x3
const RTC_CNTL_TOUCH_DREFH_S = 6
const RTC_CNTL_TOUCH_DREFL = 0x00000003
const RTC_CNTL_TOUCH_DREFL_V = 0x3
const RTC_CNTL_TOUCH_DREFL_S = 4
const RTC_CNTL_TOUCH_DRANGE = 0x00000003
const RTC_CNTL_TOUCH_DRANGE_V = 0x3
const RTC_CNTL_TOUCH_DRANGE_S = 2
const RTC_CNTL_TOUCH_OUT_RING = 0x0000000F
const RTC_CNTL_TOUCH_OUT_RING_V = 0xF
const RTC_CNTL_TOUCH_OUT_RING_S = 28
const RTC_CNTL_TOUCH_BUFDRV = 0x00000007
const RTC_CNTL_TOUCH_BUFDRV_V = 0x7
const RTC_CNTL_TOUCH_BUFDRV_S = 25
const RTC_CNTL_TOUCH_SCAN_PAD_MAP = 0x00007FFF
const RTC_CNTL_TOUCH_SCAN_PAD_MAP_V = 0x7FFF
const RTC_CNTL_TOUCH_SCAN_PAD_MAP_S = 10
const RTC_CNTL_TOUCH_SHIELD_PAD_EN_V = 0x1
const RTC_CNTL_TOUCH_SHIELD_PAD_EN_S = 9
const RTC_CNTL_TOUCH_INACTIVE_CONNECTION_V = 0x1
const RTC_CNTL_TOUCH_INACTIVE_CONNECTION_S = 8
const RTC_CNTL_TOUCH_DENOISE_EN_V = 0x1
const RTC_CNTL_TOUCH_DENOISE_EN_S = 2
const RTC_CNTL_TOUCH_DENOISE_RES = 0x00000003
const RTC_CNTL_TOUCH_DENOISE_RES_V = 0x3
const RTC_CNTL_TOUCH_DENOISE_RES_S = 0
const RTC_CNTL_TOUCH_SLP_PAD = 0x0000001F
const RTC_CNTL_TOUCH_SLP_PAD_V = 0x1F
const RTC_CNTL_TOUCH_SLP_PAD_S = 27
const RTC_CNTL_TOUCH_SLP_APPROACH_EN_V = 0x1
const RTC_CNTL_TOUCH_SLP_APPROACH_EN_S = 26
const RTC_CNTL_TOUCH_SLP_TH = 0x003FFFFF
const RTC_CNTL_TOUCH_SLP_TH_V = 0x3FFFFF
const RTC_CNTL_TOUCH_SLP_TH_S = 0
const RTC_CNTL_TOUCH_APPROACH_MEAS_TIME = 0x000000FF
const RTC_CNTL_TOUCH_APPROACH_MEAS_TIME_V = 0xFF
const RTC_CNTL_TOUCH_APPROACH_MEAS_TIME_S = 24
const RTC_CNTL_TOUCH_SLP_CHANNEL_CLR_V = 0x1
const RTC_CNTL_TOUCH_SLP_CHANNEL_CLR_S = 23
const RTC_CNTL_TOUCH_FILTER_EN_V = 0x1
const RTC_CNTL_TOUCH_FILTER_EN_S = 31
const RTC_CNTL_TOUCH_FILTER_MODE = 0x00000007
const RTC_CNTL_TOUCH_FILTER_MODE_V = 0x7
const RTC_CNTL_TOUCH_FILTER_MODE_S = 28
const RTC_CNTL_TOUCH_DEBOUNCE = 0x00000007
const RTC_CNTL_TOUCH_DEBOUNCE_V = 0x7
const RTC_CNTL_TOUCH_DEBOUNCE_S = 25
const RTC_CNTL_TOUCH_CONFIG3 = 0x00000003
const RTC_CNTL_TOUCH_CONFIG3_V = 0x3
const RTC_CNTL_TOUCH_CONFIG3_S = 23
const RTC_CNTL_TOUCH_NOISE_THRES = 0x00000003
const RTC_CNTL_TOUCH_NOISE_THRES_V = 0x3
const RTC_CNTL_TOUCH_NOISE_THRES_S = 21
const RTC_CNTL_TOUCH_CONFIG2 = 0x00000003
const RTC_CNTL_TOUCH_CONFIG2_V = 0x3
const RTC_CNTL_TOUCH_CONFIG2_S = 19
const RTC_CNTL_TOUCH_CONFIG1 = 0x0000000F
const RTC_CNTL_TOUCH_CONFIG1_V = 0xF
const RTC_CNTL_TOUCH_CONFIG1_S = 15
const RTC_CNTL_TOUCH_JITTER_STEP = 0x0000000F
const RTC_CNTL_TOUCH_JITTER_STEP_V = 0xF
const RTC_CNTL_TOUCH_JITTER_STEP_S = 11
const RTC_CNTL_TOUCH_SMOOTH_LVL = 0x00000003
const RTC_CNTL_TOUCH_SMOOTH_LVL_V = 0x3
const RTC_CNTL_TOUCH_SMOOTH_LVL_S = 9
const RTC_CNTL_IO_MUX_RESET_DISABLE_V = 0x1
const RTC_CNTL_IO_MUX_RESET_DISABLE_S = 18
const RTC_CNTL_USB_RESET_DISABLE_V = 0x1
const RTC_CNTL_USB_RESET_DISABLE_S = 17
const RTC_CNTL_USB_TX_EN_OVERRIDE_V = 0x1
const RTC_CNTL_USB_TX_EN_OVERRIDE_S = 16
const RTC_CNTL_USB_TX_EN_V = 0x1
const RTC_CNTL_USB_TX_EN_S = 15
const RTC_CNTL_USB_TXP_V = 0x1
const RTC_CNTL_USB_TXP_S = 14
const RTC_CNTL_USB_TXM_V = 0x1
const RTC_CNTL_USB_TXM_S = 13
const RTC_CNTL_USB_PAD_ENABLE_V = 0x1
const RTC_CNTL_USB_PAD_ENABLE_S = 12
const RTC_CNTL_USB_PAD_ENABLE_OVERRIDE_V = 0x1
const RTC_CNTL_USB_PAD_ENABLE_OVERRIDE_S = 11
const RTC_CNTL_USB_PULLUP_VALUE_V = 0x1
const RTC_CNTL_USB_PULLUP_VALUE_S = 10
const RTC_CNTL_USB_DM_PULLDOWN_V = 0x1
const RTC_CNTL_USB_DM_PULLDOWN_S = 9
const RTC_CNTL_USB_DM_PULLUP_V = 0x1
const RTC_CNTL_USB_DM_PULLUP_S = 8
const RTC_CNTL_USB_DP_PULLDOWN_V = 0x1
const RTC_CNTL_USB_DP_PULLDOWN_S = 7
const RTC_CNTL_USB_DP_PULLUP_V = 0x1
const RTC_CNTL_USB_DP_PULLUP_S = 6
const RTC_CNTL_USB_PAD_PULL_OVERRIDE_V = 0x1
const RTC_CNTL_USB_PAD_PULL_OVERRIDE_S = 5
const RTC_CNTL_USB_VREF_OVERRIDE_V = 0x1
const RTC_CNTL_USB_VREF_OVERRIDE_S = 4
const RTC_CNTL_USB_VREFL = 0x00000003
const RTC_CNTL_USB_VREFL_V = 0x3
const RTC_CNTL_USB_VREFL_S = 2
const RTC_CNTL_USB_VREFH = 0x00000003
const RTC_CNTL_USB_VREFH_V = 0x3
const RTC_CNTL_USB_VREFH_S = 0
const RTC_CNTL_TOUCH_TIMEOUT_EN_V = 0x1
const RTC_CNTL_TOUCH_TIMEOUT_EN_S = 22
const RTC_CNTL_TOUCH_TIMEOUT_NUM = 0x003FFFFF
const RTC_CNTL_TOUCH_TIMEOUT_NUM_V = 0x3FFFFF
const RTC_CNTL_TOUCH_TIMEOUT_NUM_S = 0
const RTC_CNTL_REJECT_CAUSE = 0x0001FFFF
const RTC_CNTL_REJECT_CAUSE_V = 0x1FFFF
const RTC_CNTL_REJECT_CAUSE_S = 0
const RTC_CNTL_FORCE_DOWNLOAD_BOOT_V = 0x1
const RTC_CNTL_FORCE_DOWNLOAD_BOOT_S = 0
const RTC_CNTL_WAKEUP_CAUSE = 0x0001FFFF
const RTC_CNTL_WAKEUP_CAUSE_V = 0x1FFFF
const RTC_CNTL_WAKEUP_CAUSE_S = 0
const RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE = 0x00FFFFFF
const RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_V = 0xFFFFFF
const RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_S = 8
const RTC_CNTL_CNTL_DATE = 0x0FFFFFFF
const RTC_CNTL_CNTL_DATE_V = 0xFFFFFFF
const RTC_CNTL_CNTL_DATE_S = 0
const DPORT_ROM_FO = 0x00000003
const DPORT_ROM_FO_V = 0x3
const DPORT_ROM_FO_S = 0
const DPORT_ROM_FORCE_PU = 0x00000003
const DPORT_ROM_FORCE_PU_V = 0x3
const DPORT_ROM_FORCE_PU_S = 2
const DPORT_ROM_FORCE_PD = 0x00000003
const DPORT_ROM_FORCE_PD_V = 0x3
const DPORT_ROM_FORCE_PD_S = 0
const DPORT_SRAM_FO = 0x003FFFFF
const DPORT_SRAM_FO_V = 0x3FFFFF
const DPORT_SRAM_FO_S = 0
const DPORT_SRAM_FORCE_PD = 0x003FFFFF
const DPORT_SRAM_FORCE_PD_V = 0x3FFFFF
const DPORT_SRAM_FORCE_PD_S = 0
const DPORT_CLK_EN_DEDICATED_GPIO_V = 0x1
const DPORT_CLK_EN_DEDICATED_GPIO_S = 7
const DPORT_CLK_EN_ASSIST_DEBUG_V = 0x1
const DPORT_CLK_EN_ASSIST_DEBUG_S = 6
const DPORT_RST_EN_DEDICATED_GPIO_V = 0x1
const DPORT_RST_EN_DEDICATED_GPIO_S = 7
const DPORT_RST_EN_ASSIST_DEBUG_V = 0x1
const DPORT_RST_EN_ASSIST_DEBUG_S = 6
const DPORT_CPU_WAITI_DELAY_NUM = 0x0000000F
const DPORT_CPU_WAITI_DELAY_NUM_V = 0xF
const DPORT_CPU_WAITI_DELAY_NUM_S = 4
const DPORT_CPU_WAIT_MODE_FORCE_ON_V = 0x1
const DPORT_CPU_WAIT_MODE_FORCE_ON_S = 3
const DPORT_PLL_FREQ_SEL_V = 0x1
const DPORT_PLL_FREQ_SEL_S = 2
const DPORT_CPUPERIOD_SEL = 0x00000003
const DPORT_CPUPERIOD_SEL_V = 0x3
const DPORT_CPUPERIOD_SEL_S = 0
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_0 = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_0_V = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_0_S = 0
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_1 = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_1_V = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_1_S = 0
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_2 = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_2_V = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_2_S = 0
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_3 = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_3_V = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_3_S = 0
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_4 = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_4_V = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_4_S = 0
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_5 = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_5_V = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_5_S = 0
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_6 = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_6_V = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_6_S = 0
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_7 = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_7_V = 0xFFFFFFFF
const DPORT_CANCEL_EFUSE_DISABLE_JTAG_TEMPORARY_7_S = 0
const DPORT_LSLP_MEM_PD_MASK_V = 0x1
const DPORT_LSLP_MEM_PD_MASK_S = 0
const DPORT_ADC2_ARB_CLK_EN_V = 0x1
const DPORT_ADC2_ARB_CLK_EN_S = 30
const DPORT_SYSTIMER_CLK_EN_V = 0x1
const DPORT_SYSTIMER_CLK_EN_S = 29
const DPORT_APB_SARADC_CLK_EN_V = 0x1
const DPORT_APB_SARADC_CLK_EN_S = 28
const DPORT_SPI3_DMA_CLK_EN_V = 0x1
const DPORT_SPI3_DMA_CLK_EN_S = 27
const DPORT_PWM3_CLK_EN_V = 0x1
const DPORT_PWM3_CLK_EN_S = 26
const DPORT_PWM2_CLK_EN_V = 0x1
const DPORT_PWM2_CLK_EN_S = 25
const DPORT_UART_MEM_CLK_EN_V = 0x1
const DPORT_UART_MEM_CLK_EN_S = 24
const DPORT_USB_CLK_EN_V = 0x1
const DPORT_USB_CLK_EN_S = 23
const DPORT_SPI2_DMA_CLK_EN_V = 0x1
const DPORT_SPI2_DMA_CLK_EN_S = 22
const DPORT_PWM1_CLK_EN_V = 0x1
const DPORT_PWM1_CLK_EN_S = 20
const DPORT_TWAI_CLK_EN_V = 0x1
const DPORT_TWAI_CLK_EN_S = 19
const DPORT_I2C_EXT1_CLK_EN_V = 0x1
const DPORT_I2C_EXT1_CLK_EN_S = 18
const DPORT_PWM0_CLK_EN_V = 0x1
const DPORT_PWM0_CLK_EN_S = 17
const DPORT_SPI3_CLK_EN_V = 0x1
const DPORT_SPI3_CLK_EN_S = 16
const DPORT_TIMERGROUP1_CLK_EN_V = 0x1
const DPORT_TIMERGROUP1_CLK_EN_S = 15
const DPORT_EFUSE_CLK_EN_V = 0x1
const DPORT_EFUSE_CLK_EN_S = 14
const DPORT_TIMERGROUP_CLK_EN_V = 0x1
const DPORT_TIMERGROUP_CLK_EN_S = 13
const DPORT_UHCI1_CLK_EN_V = 0x1
const DPORT_UHCI1_CLK_EN_S = 12
const DPORT_LEDC_CLK_EN_V = 0x1
const DPORT_LEDC_CLK_EN_S = 11
const DPORT_PCNT_CLK_EN_V = 0x1
const DPORT_PCNT_CLK_EN_S = 10
const DPORT_RMT_CLK_EN_V = 0x1
const DPORT_RMT_CLK_EN_S = 9
const DPORT_UHCI0_CLK_EN_V = 0x1
const DPORT_UHCI0_CLK_EN_S = 8
const DPORT_I2C_EXT0_CLK_EN_V = 0x1
const DPORT_I2C_EXT0_CLK_EN_S = 7
const DPORT_SPI2_CLK_EN_V = 0x1
const DPORT_SPI2_CLK_EN_S = 6
const DPORT_UART1_CLK_EN_V = 0x1
const DPORT_UART1_CLK_EN_S = 5
const DPORT_I2S0_CLK_EN_V = 0x1
const DPORT_I2S0_CLK_EN_S = 4
const DPORT_WDG_CLK_EN_V = 0x1
const DPORT_WDG_CLK_EN_S = 3
const DPORT_UART_CLK_EN_V = 0x1
const DPORT_UART_CLK_EN_S = 2
const DPORT_SPI01_CLK_EN_V = 0x1
const DPORT_SPI01_CLK_EN_S = 1
const DPORT_TIMERS_CLK_EN_V = 0x1
const DPORT_TIMERS_CLK_EN_S = 0
const DPORT_CRYPTO_DMA_CLK_EN_V = 0x1
const DPORT_CRYPTO_DMA_CLK_EN_S = 6
const DPORT_CRYPTO_HMAC_CLK_EN_V = 0x1
const DPORT_CRYPTO_HMAC_CLK_EN_S = 5
const DPORT_CRYPTO_DS_CLK_EN_V = 0x1
const DPORT_CRYPTO_DS_CLK_EN_S = 4
const DPORT_CRYPTO_RSA_CLK_EN_V = 0x1
const DPORT_CRYPTO_RSA_CLK_EN_S = 3
const DPORT_CRYPTO_SHA_CLK_EN_V = 0x1
const DPORT_CRYPTO_SHA_CLK_EN_S = 2
const DPORT_CRYPTO_AES_CLK_EN_V = 0x1
const DPORT_CRYPTO_AES_CLK_EN_S = 1
const DPORT_ADC2_ARB_RST_V = 0x1
const DPORT_ADC2_ARB_RST_S = 30
const DPORT_SYSTIMER_RST_V = 0x1
const DPORT_SYSTIMER_RST_S = 29
const DPORT_APB_SARADC_RST_V = 0x1
const DPORT_APB_SARADC_RST_S = 28
const DPORT_SPI3_DMA_RST_V = 0x1
const DPORT_SPI3_DMA_RST_S = 27
const DPORT_PWM3_RST_V = 0x1
const DPORT_PWM3_RST_S = 26
const DPORT_PWM2_RST_V = 0x1
const DPORT_PWM2_RST_S = 25
const DPORT_UART_MEM_RST_V = 0x1
const DPORT_UART_MEM_RST_S = 24
const DPORT_USB_RST_V = 0x1
const DPORT_USB_RST_S = 23
const DPORT_SPI2_DMA_RST_V = 0x1
const DPORT_SPI2_DMA_RST_S = 22
const DPORT_PWM1_RST_V = 0x1
const DPORT_PWM1_RST_S = 20
const DPORT_TWAI_RST_V = 0x1
const DPORT_TWAI_RST_S = 19
const DPORT_I2C_EXT1_RST_V = 0x1
const DPORT_I2C_EXT1_RST_S = 18
const DPORT_PWM0_RST_V = 0x1
const DPORT_PWM0_RST_S = 17
const DPORT_SPI3_RST_V = 0x1
const DPORT_SPI3_RST_S = 16
const DPORT_TIMERGROUP1_RST_V = 0x1
const DPORT_TIMERGROUP1_RST_S = 15
const DPORT_EFUSE_RST_V = 0x1
const DPORT_EFUSE_RST_S = 14
const DPORT_TIMERGROUP_RST_V = 0x1
const DPORT_TIMERGROUP_RST_S = 13
const DPORT_UHCI1_RST_V = 0x1
const DPORT_UHCI1_RST_S = 12
const DPORT_LEDC_RST_V = 0x1
const DPORT_LEDC_RST_S = 11
const DPORT_PCNT_RST_V = 0x1
const DPORT_PCNT_RST_S = 10
const DPORT_RMT_RST_V = 0x1
const DPORT_RMT_RST_S = 9
const DPORT_UHCI0_RST_V = 0x1
const DPORT_UHCI0_RST_S = 8
const DPORT_I2C_EXT0_RST_V = 0x1
const DPORT_I2C_EXT0_RST_S = 7
const DPORT_SPI2_RST_V = 0x1
const DPORT_SPI2_RST_S = 6
const DPORT_UART1_RST_V = 0x1
const DPORT_UART1_RST_S = 5
const DPORT_I2S0_RST_V = 0x1
const DPORT_I2S0_RST_S = 4
const DPORT_WDG_RST_V = 0x1
const DPORT_WDG_RST_S = 3
const DPORT_UART_RST_V = 0x1
const DPORT_UART_RST_S = 2
const DPORT_SPI01_RST_V = 0x1
const DPORT_SPI01_RST_S = 1
const DPORT_TIMERS_RST_V = 0x1
const DPORT_TIMERS_RST_S = 0
const DPORT_CRYPTO_DMA_RST_V = 0x1
const DPORT_CRYPTO_DMA_RST_S = 6
const DPORT_CRYPTO_HMAC_RST_V = 0x1
const DPORT_CRYPTO_HMAC_RST_S = 5
const DPORT_CRYPTO_DS_RST_V = 0x1
const DPORT_CRYPTO_DS_RST_S = 4
const DPORT_CRYPTO_RSA_RST_V = 0x1
const DPORT_CRYPTO_RSA_RST_S = 3
const DPORT_CRYPTO_SHA_RST_V = 0x1
const DPORT_CRYPTO_SHA_RST_S = 2
const DPORT_CRYPTO_AES_RST_V = 0x1
const DPORT_CRYPTO_AES_RST_S = 1
const DPORT_BT_LPCK_DIV_NUM = 0x00000FFF
const DPORT_BT_LPCK_DIV_NUM_V = 0xFFF
const DPORT_BT_LPCK_DIV_NUM_S = 0
const DPORT_LPCLK_RTC_EN_V = 0x1
const DPORT_LPCLK_RTC_EN_S = 28
const DPORT_LPCLK_SEL_XTAL32K_V = 0x1
const DPORT_LPCLK_SEL_XTAL32K_S = 27
const DPORT_LPCLK_SEL_XTAL_V = 0x1
const DPORT_LPCLK_SEL_XTAL_S = 26
const DPORT_LPCLK_SEL_8M_V = 0x1
const DPORT_LPCLK_SEL_8M_S = 25
const DPORT_LPCLK_SEL_RTC_SLOW_V = 0x1
const DPORT_LPCLK_SEL_RTC_SLOW_S = 24
const DPORT_BT_LPCK_DIV_A = 0x00000FFF
const DPORT_BT_LPCK_DIV_A_V = 0xFFF
const DPORT_BT_LPCK_DIV_A_S = 12
const DPORT_BT_LPCK_DIV_B = 0x00000FFF
const DPORT_BT_LPCK_DIV_B_V = 0xFFF
const DPORT_BT_LPCK_DIV_B_S = 0
const DPORT_CPU_INTR_FROM_CPU_0_V = 0x1
const DPORT_CPU_INTR_FROM_CPU_0_S = 0
const DPORT_CPU_INTR_FROM_CPU_1_V = 0x1
const DPORT_CPU_INTR_FROM_CPU_1_S = 0
const DPORT_CPU_INTR_FROM_CPU_2_V = 0x1
const DPORT_CPU_INTR_FROM_CPU_2_S = 0
const DPORT_CPU_INTR_FROM_CPU_3_V = 0x1
const DPORT_CPU_INTR_FROM_CPU_3_S = 0
const DPORT_RSA_MEM_FORCE_PD_V = 0x1
const DPORT_RSA_MEM_FORCE_PD_S = 2
const DPORT_RSA_MEM_FORCE_PU_V = 0x1
const DPORT_RSA_MEM_FORCE_PU_S = 1
const DPORT_RSA_MEM_PD_V = 0x1
const DPORT_RSA_MEM_PD_S = 0
const DPORT_BUSTOEXTMEM_ENA_V = 0x1
const DPORT_BUSTOEXTMEM_ENA_S = 0
const DPORT_PRO_CACHE_RESET_V = 0x1
const DPORT_PRO_CACHE_RESET_S = 2
const DPORT_PRO_DCACHE_CLK_ON_V = 0x1
const DPORT_PRO_DCACHE_CLK_ON_S = 1
const DPORT_PRO_ICACHE_CLK_ON_V = 0x1
const DPORT_PRO_ICACHE_CLK_ON_S = 0
const DPORT_ENABLE_DOWNLOAD_MANUAL_ENCRYPT_V = 0x1
const DPORT_ENABLE_DOWNLOAD_MANUAL_ENCRYPT_S = 3
const DPORT_ENABLE_DOWNLOAD_G0CB_DECRYPT_V = 0x1
const DPORT_ENABLE_DOWNLOAD_G0CB_DECRYPT_S = 2
const DPORT_ENABLE_DOWNLOAD_DB_ENCRYPT_V = 0x1
const DPORT_ENABLE_DOWNLOAD_DB_ENCRYPT_S = 1
const DPORT_ENABLE_SPI_MANUAL_ENCRYPT_V = 0x1
const DPORT_ENABLE_SPI_MANUAL_ENCRYPT_S = 0
const DPORT_RTC_MEM_CRC_FINISH_V = 0x1
const DPORT_RTC_MEM_CRC_FINISH_S = 31
const DPORT_RTC_MEM_CRC_LEN = 0x000007FF
const DPORT_RTC_MEM_CRC_LEN_V = 0x7FF
const DPORT_RTC_MEM_CRC_LEN_S = 20
const DPORT_RTC_MEM_CRC_ADDR = 0x000007FF
const DPORT_RTC_MEM_CRC_ADDR_V = 0x7FF
const DPORT_RTC_MEM_CRC_ADDR_S = 9
const DPORT_RTC_MEM_CRC_START_V = 0x1
const DPORT_RTC_MEM_CRC_START_S = 8
const DPORT_RTC_MEM_CRC_RES = 0xFFFFFFFF
const DPORT_RTC_MEM_CRC_RES_V = 0xFFFFFFFF
const DPORT_RTC_MEM_CRC_RES_S = 0
const DPORT_REDUNDANT_ECO_RESULT_V = 0x1
const DPORT_REDUNDANT_ECO_RESULT_S = 1
const DPORT_REDUNDANT_ECO_DRIVE_V = 0x1
const DPORT_REDUNDANT_ECO_DRIVE_S = 0
const SYSTEM_CLK_EN_V = 0x1
const SYSTEM_CLK_EN_S = 0
const DPORT_SRAM_FORCE_PU = 0x003FFFFF
const DPORT_SRAM_FORCE_PU_V = 0x3FFFFF
const DPORT_SRAM_FORCE_PU_S = 0
const DPORT_CLK_DIV_EN_V = 0x1
const DPORT_CLK_DIV_EN_S = 19
const DPORT_CLK_XTAL_FREQ = 0x0000007F
const DPORT_CLK_XTAL_FREQ_V = 0x7F
const DPORT_CLK_XTAL_FREQ_S = 12
const DPORT_SOC_CLK_SEL = 0x00000003
const DPORT_SOC_CLK_SEL_V = 0x3
const DPORT_SOC_CLK_SEL_S = 10
const DPORT_PRE_DIV_CNT = 0x000003FF
const DPORT_PRE_DIV_CNT_V = 0x3FF
const DPORT_PRE_DIV_CNT_S = 0
const SYSTEM_DATE = 0x0FFFFFFF
const SYSTEM_DATE_V = 0xFFFFFFF
const SYSTEM_DATE_S = 0
const DPORT_PMS_SDIO_LOCK_V = 0x1
const DPORT_PMS_SDIO_LOCK_S = 0
const DPORT_PMS_SDIO_DISABLE_V = 0x1
const DPORT_PMS_SDIO_DISABLE_S = 0
const DPORT_PMS_MAC_DUMP_LOCK_V = 0x1
const DPORT_PMS_MAC_DUMP_LOCK_S = 0
const DPORT_PMS_MAC_DUMP_CONNECT = 0x00000FFF
const DPORT_PMS_MAC_DUMP_CONNECT_V = 0xFFF
const DPORT_PMS_MAC_DUMP_CONNECT_S = 0
const DPORT_PMS_PRO_IRAM0_LOCK_V = 0x1
const DPORT_PMS_PRO_IRAM0_LOCK_S = 0
const DPORT_PMS_PRO_IRAM0_SRAM_3_W_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_3_W_S = 11
const DPORT_PMS_PRO_IRAM0_SRAM_3_R_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_3_R_S = 10
const DPORT_PMS_PRO_IRAM0_SRAM_3_F_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_3_F_S = 9
const DPORT_PMS_PRO_IRAM0_SRAM_2_W_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_2_W_S = 8
const DPORT_PMS_PRO_IRAM0_SRAM_2_R_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_2_R_S = 7
const DPORT_PMS_PRO_IRAM0_SRAM_2_F_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_2_F_S = 6
const DPORT_PMS_PRO_IRAM0_SRAM_1_W_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_1_W_S = 5
const DPORT_PMS_PRO_IRAM0_SRAM_1_R_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_1_R_S = 4
const DPORT_PMS_PRO_IRAM0_SRAM_1_F_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_1_F_S = 3
const DPORT_PMS_PRO_IRAM0_SRAM_0_W_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_0_W_S = 2
const DPORT_PMS_PRO_IRAM0_SRAM_0_R_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_0_R_S = 1
const DPORT_PMS_PRO_IRAM0_SRAM_0_F_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_0_F_S = 0
const DPORT_PMS_PRO_IRAM0_SRAM_4_H_W_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_4_H_W_S = 22
const DPORT_PMS_PRO_IRAM0_SRAM_4_H_R_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_4_H_R_S = 21
const DPORT_PMS_PRO_IRAM0_SRAM_4_H_F_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_4_H_F_S = 20
const DPORT_PMS_PRO_IRAM0_SRAM_4_L_W_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_4_L_W_S = 19
const DPORT_PMS_PRO_IRAM0_SRAM_4_L_R_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_4_L_R_S = 18
const DPORT_PMS_PRO_IRAM0_SRAM_4_L_F_V = 0x1
const DPORT_PMS_PRO_IRAM0_SRAM_4_L_F_S = 17
const DPORT_PMS_PRO_IRAM0_SRAM_4_SPLTADDR = 0x0001FFFF
const DPORT_PMS_PRO_IRAM0_SRAM_4_SPLTADDR_V = 0x1FFFF
const DPORT_PMS_PRO_IRAM0_SRAM_4_SPLTADDR_S = 0
const DPORT_PMS_PRO_IRAM0_RTCFAST_H_W_V = 0x1
const DPORT_PMS_PRO_IRAM0_RTCFAST_H_W_S = 16
const DPORT_PMS_PRO_IRAM0_RTCFAST_H_R_V = 0x1
const DPORT_PMS_PRO_IRAM0_RTCFAST_H_R_S = 15
const DPORT_PMS_PRO_IRAM0_RTCFAST_H_F_V = 0x1
const DPORT_PMS_PRO_IRAM0_RTCFAST_H_F_S = 14
const DPORT_PMS_PRO_IRAM0_RTCFAST_L_W_V = 0x1
const DPORT_PMS_PRO_IRAM0_RTCFAST_L_W_S = 13
const DPORT_PMS_PRO_IRAM0_RTCFAST_L_R_V = 0x1
const DPORT_PMS_PRO_IRAM0_RTCFAST_L_R_S = 12
const DPORT_PMS_PRO_IRAM0_RTCFAST_L_F_V = 0x1
const DPORT_PMS_PRO_IRAM0_RTCFAST_L_F_S = 11
const DPORT_PMS_PRO_IRAM0_RTCFAST_SPLTADDR = 0x000007FF
const DPORT_PMS_PRO_IRAM0_RTCFAST_SPLTADDR_V = 0x7FF
const DPORT_PMS_PRO_IRAM0_RTCFAST_SPLTADDR_S = 0
const DPORT_PMS_PRO_IRAM0_ILG_INTR_V = 0x1
const DPORT_PMS_PRO_IRAM0_ILG_INTR_S = 2
const DPORT_PMS_PRO_IRAM0_ILG_EN_V = 0x1
const DPORT_PMS_PRO_IRAM0_ILG_EN_S = 1
const DPORT_PMS_PRO_IRAM0_ILG_CLR_V = 0x1
const DPORT_PMS_PRO_IRAM0_ILG_CLR_S = 0
const DPORT_PMS_PRO_IRAM0_ILG_ST = 0x003FFFFF
const DPORT_PMS_PRO_IRAM0_ILG_ST_V = 0x3FFFFF
const DPORT_PMS_PRO_IRAM0_ILG_ST_S = 0
const DPORT_PMS_PRO_DRAM0_LOCK_V = 0x1
const DPORT_PMS_PRO_DRAM0_LOCK_S = 0
const DPORT_PMS_PRO_DRAM0_SRAM_4_H_W_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_4_H_W_S = 28
const DPORT_PMS_PRO_DRAM0_SRAM_4_H_R_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_4_H_R_S = 27
const DPORT_PMS_PRO_DRAM0_SRAM_4_L_W_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_4_L_W_S = 26
const DPORT_PMS_PRO_DRAM0_SRAM_4_L_R_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_4_L_R_S = 25
const DPORT_PMS_PRO_DRAM0_SRAM_4_SPLTADDR = 0x0001FFFF
const DPORT_PMS_PRO_DRAM0_SRAM_4_SPLTADDR_V = 0x1FFFF
const DPORT_PMS_PRO_DRAM0_SRAM_4_SPLTADDR_S = 8
const DPORT_PMS_PRO_DRAM0_SRAM_3_W_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_3_W_S = 7
const DPORT_PMS_PRO_DRAM0_SRAM_3_R_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_3_R_S = 6
const DPORT_PMS_PRO_DRAM0_SRAM_2_W_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_2_W_S = 5
const DPORT_PMS_PRO_DRAM0_SRAM_2_R_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_2_R_S = 4
const DPORT_PMS_PRO_DRAM0_SRAM_1_W_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_1_W_S = 3
const DPORT_PMS_PRO_DRAM0_SRAM_1_R_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_1_R_S = 2
const DPORT_PMS_PRO_DRAM0_SRAM_0_W_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_0_W_S = 1
const DPORT_PMS_PRO_DRAM0_SRAM_0_R_V = 0x1
const DPORT_PMS_PRO_DRAM0_SRAM_0_R_S = 0
const DPORT_PMS_PRO_DRAM0_RTCFAST_H_W_V = 0x1
const DPORT_PMS_PRO_DRAM0_RTCFAST_H_W_S = 14
const DPORT_PMS_PRO_DRAM0_RTCFAST_H_R_V = 0x1
const DPORT_PMS_PRO_DRAM0_RTCFAST_H_R_S = 13
const DPORT_PMS_PRO_DRAM0_RTCFAST_L_W_V = 0x1
const DPORT_PMS_PRO_DRAM0_RTCFAST_L_W_S = 12
const DPORT_PMS_PRO_DRAM0_RTCFAST_L_R_V = 0x1
const DPORT_PMS_PRO_DRAM0_RTCFAST_L_R_S = 11
const DPORT_PMS_PRO_DRAM0_RTCFAST_SPLTADDR = 0x000007FF
const DPORT_PMS_PRO_DRAM0_RTCFAST_SPLTADDR_V = 0x7FF
const DPORT_PMS_PRO_DRAM0_RTCFAST_SPLTADDR_S = 0
const DPORT_PMS_PRO_DRAM0_ILG_INTR_V = 0x1
const DPORT_PMS_PRO_DRAM0_ILG_INTR_S = 2
const DPORT_PMS_PRO_DRAM0_ILG_EN_V = 0x1
const DPORT_PMS_PRO_DRAM0_ILG_EN_S = 1
const DPORT_PMS_PRO_DRAM0_ILG_CLR_V = 0x1
const DPORT_PMS_PRO_DRAM0_ILG_CLR_S = 0
const DPORT_PMS_PRO_DRAM0_ILG_ST = 0x03FFFFFF
const DPORT_PMS_PRO_DRAM0_ILG_ST_V = 0x3FFFFFF
const DPORT_PMS_PRO_DRAM0_ILG_ST_S = 0
const DPORT_PMS_PRO_DPORT_LOCK_V = 0x1
const DPORT_PMS_PRO_DPORT_LOCK_S = 0
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_VALID = 0x0000000F
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_VALID_V = 0xF
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_VALID_S = 16
const DPORT_PMS_PRO_DPORT_RTCSLOW_H_W_V = 0x1
const DPORT_PMS_PRO_DPORT_RTCSLOW_H_W_S = 15
const DPORT_PMS_PRO_DPORT_RTCSLOW_H_R_V = 0x1
const DPORT_PMS_PRO_DPORT_RTCSLOW_H_R_S = 14
const DPORT_PMS_PRO_DPORT_RTCSLOW_L_W_V = 0x1
const DPORT_PMS_PRO_DPORT_RTCSLOW_L_W_S = 13
const DPORT_PMS_PRO_DPORT_RTCSLOW_L_R_V = 0x1
const DPORT_PMS_PRO_DPORT_RTCSLOW_L_R_S = 12
const DPORT_PMS_PRO_DPORT_RTCSLOW_SPLTADDR = 0x000007FF
const DPORT_PMS_PRO_DPORT_RTCSLOW_SPLTADDR_V = 0x7FF
const DPORT_PMS_PRO_DPORT_RTCSLOW_SPLTADDR_S = 1
const DPORT_PMS_PRO_DPORT_APB_PERIPHERAL_FORBID_V = 0x1
const DPORT_PMS_PRO_DPORT_APB_PERIPHERAL_FORBID_S = 0
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_0 = 0x0003FFFF
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_0_V = 0x3FFFF
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_0_S = 0
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_1 = 0x0003FFFF
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_1_V = 0x3FFFF
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_1_S = 0
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_2 = 0x0003FFFF
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_2_V = 0x3FFFF
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_2_S = 0
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_3 = 0x0003FFFF
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_3_V = 0x3FFFF
const DPORT_PMS_PRO_DPORT_RESERVE_FIFO_3_S = 0
const DPORT_PMS_PRO_DPORT_ILG_INTR_V = 0x1
const DPORT_PMS_PRO_DPORT_ILG_INTR_S = 2
const DPORT_PMS_PRO_DPORT_ILG_EN_V = 0x1
const DPORT_PMS_PRO_DPORT_ILG_EN_S = 1
const DPORT_PMS_PRO_DPORT_ILG_CLR_V = 0x1
const DPORT_PMS_PRO_DPORT_ILG_CLR_S = 0
const DPORT_PMS_PRO_DPORT_ILG_ST = 0x03FFFFFF
const DPORT_PMS_PRO_DPORT_ILG_ST_V = 0x3FFFFFF
const DPORT_PMS_PRO_DPORT_ILG_ST_S = 0
const DPORT_PMS_PRO_AHB_LOCK_V = 0x1
const DPORT_PMS_PRO_AHB_LOCK_S = 0
const DPORT_PMS_PRO_AHB_RTCSLOW_0_H_W_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_0_H_W_S = 16
const DPORT_PMS_PRO_AHB_RTCSLOW_0_H_R_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_0_H_R_S = 15
const DPORT_PMS_PRO_AHB_RTCSLOW_0_H_F_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_0_H_F_S = 14
const DPORT_PMS_PRO_AHB_RTCSLOW_0_L_W_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_0_L_W_S = 13
const DPORT_PMS_PRO_AHB_RTCSLOW_0_L_R_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_0_L_R_S = 12
const DPORT_PMS_PRO_AHB_RTCSLOW_0_L_F_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_0_L_F_S = 11
const DPORT_PMS_PRO_AHB_RTCSLOW_0_SPLTADDR = 0x000007FF
const DPORT_PMS_PRO_AHB_RTCSLOW_0_SPLTADDR_V = 0x7FF
const DPORT_PMS_PRO_AHB_RTCSLOW_0_SPLTADDR_S = 0
const DPORT_PMS_PRO_AHB_RTCSLOW_1_H_W_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_1_H_W_S = 16
const DPORT_PMS_PRO_AHB_RTCSLOW_1_H_R_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_1_H_R_S = 15
const DPORT_PMS_PRO_AHB_RTCSLOW_1_H_F_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_1_H_F_S = 14
const DPORT_PMS_PRO_AHB_RTCSLOW_1_L_W_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_1_L_W_S = 13
const DPORT_PMS_PRO_AHB_RTCSLOW_1_L_R_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_1_L_R_S = 12
const DPORT_PMS_PRO_AHB_RTCSLOW_1_L_F_V = 0x1
const DPORT_PMS_PRO_AHB_RTCSLOW_1_L_F_S = 11
const DPORT_PMS_PRO_AHB_RTCSLOW_1_SPLTADDR = 0x000007FF
const DPORT_PMS_PRO_AHB_RTCSLOW_1_SPLTADDR_V = 0x7FF
const DPORT_PMS_PRO_AHB_RTCSLOW_1_SPLTADDR_S = 0
const DPORT_PMS_PRO_AHB_ILG_INTR_V = 0x1
const DPORT_PMS_PRO_AHB_ILG_INTR_S = 2
const DPORT_PMS_PRO_AHB_ILG_EN_V = 0x1
const DPORT_PMS_PRO_AHB_ILG_EN_S = 1
const DPORT_PMS_PRO_AHB_ILG_CLR_V = 0x1
const DPORT_PMS_PRO_AHB_ILG_CLR_S = 0
const DPORT_PMS_PRO_AHB_ILG_ST = 0xFFFFFFFF
const DPORT_PMS_PRO_AHB_ILG_ST_V = 0xFFFFFFFF
const DPORT_PMS_PRO_AHB_ILG_ST_S = 0
const DPORT_PMS_PRO_TRACE_LOCK_V = 0x1
const DPORT_PMS_PRO_TRACE_LOCK_S = 0
const DPORT_PMS_PRO_TRACE_DISABLE_V = 0x1
const DPORT_PMS_PRO_TRACE_DISABLE_S = 0
const DPORT_PMS_PRO_CACHE_LOCK_V = 0x1
const DPORT_PMS_PRO_CACHE_LOCK_S = 0
const DPORT_PMS_PRO_CACHE_CONNECT = 0x0000FFFF
const DPORT_PMS_PRO_CACHE_CONNECT_V = 0xFFFF
const DPORT_PMS_PRO_CACHE_CONNECT_S = 0
const DPORT_PMS_PRO_CACHE_ILG_INTR_V = 0x1
const DPORT_PMS_PRO_CACHE_ILG_INTR_S = 2
const DPORT_PMS_PRO_CACHE_ILG_EN_V = 0x1
const DPORT_PMS_PRO_CACHE_ILG_EN_S = 1
const DPORT_PMS_PRO_CACHE_ILG_CLR_V = 0x1
const DPORT_PMS_PRO_CACHE_ILG_CLR_S = 0
const DPORT_PMS_PRO_CACHE_ILG_ST_I = 0x0001FFFF
const DPORT_PMS_PRO_CACHE_ILG_ST_I_V = 0x1FFFF
const DPORT_PMS_PRO_CACHE_ILG_ST_I_S = 0
const DPORT_PMS_PRO_CACHE_ILG_ST_D = 0x0001FFFF
const DPORT_PMS_PRO_CACHE_ILG_ST_D_V = 0x1FFFF
const DPORT_PMS_PRO_CACHE_ILG_ST_D_S = 0
const DPORT_PMS_DMA_APB_I_LOCK_V = 0x1
const DPORT_PMS_DMA_APB_I_LOCK_S = 0
const DPORT_PMS_DMA_APB_I_SRAM_4_H_W_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_4_H_W_S = 28
const DPORT_PMS_DMA_APB_I_SRAM_4_H_R_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_4_H_R_S = 27
const DPORT_PMS_DMA_APB_I_SRAM_4_L_W_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_4_L_W_S = 26
const DPORT_PMS_DMA_APB_I_SRAM_4_L_R_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_4_L_R_S = 25
const DPORT_PMS_DMA_APB_I_SRAM_4_SPLTADDR = 0x0001FFFF
const DPORT_PMS_DMA_APB_I_SRAM_4_SPLTADDR_V = 0x1FFFF
const DPORT_PMS_DMA_APB_I_SRAM_4_SPLTADDR_S = 8
const DPORT_PMS_DMA_APB_I_SRAM_3_W_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_3_W_S = 7
const DPORT_PMS_DMA_APB_I_SRAM_3_R_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_3_R_S = 6
const DPORT_PMS_DMA_APB_I_SRAM_2_W_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_2_W_S = 5
const DPORT_PMS_DMA_APB_I_SRAM_2_R_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_2_R_S = 4
const DPORT_PMS_DMA_APB_I_SRAM_1_W_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_1_W_S = 3
const DPORT_PMS_DMA_APB_I_SRAM_1_R_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_1_R_S = 2
const DPORT_PMS_DMA_APB_I_SRAM_0_W_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_0_W_S = 1
const DPORT_PMS_DMA_APB_I_SRAM_0_R_V = 0x1
const DPORT_PMS_DMA_APB_I_SRAM_0_R_S = 0
const DPORT_PMS_DMA_APB_I_ILG_INTR_V = 0x1
const DPORT_PMS_DMA_APB_I_ILG_INTR_S = 2
const DPORT_PMS_DMA_APB_I_ILG_EN_V = 0x1
const DPORT_PMS_DMA_APB_I_ILG_EN_S = 1
const DPORT_PMS_DMA_APB_I_ILG_CLR_V = 0x1
const DPORT_PMS_DMA_APB_I_ILG_CLR_S = 0
const DPORT_PMS_DMA_APB_I_ILG_ST = 0x007FFFFF
const DPORT_PMS_DMA_APB_I_ILG_ST_V = 0x7FFFFF
const DPORT_PMS_DMA_APB_I_ILG_ST_S = 0
const DPORT_PMS_DMA_RX_I_LOCK_V = 0x1
const DPORT_PMS_DMA_RX_I_LOCK_S = 0
const DPORT_PMS_DMA_RX_I_SRAM_4_H_W_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_4_H_W_S = 28
const DPORT_PMS_DMA_RX_I_SRAM_4_H_R_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_4_H_R_S = 27
const DPORT_PMS_DMA_RX_I_SRAM_4_L_W_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_4_L_W_S = 26
const DPORT_PMS_DMA_RX_I_SRAM_4_L_R_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_4_L_R_S = 25
const DPORT_PMS_DMA_RX_I_SRAM_4_SPLTADDR = 0x0001FFFF
const DPORT_PMS_DMA_RX_I_SRAM_4_SPLTADDR_V = 0x1FFFF
const DPORT_PMS_DMA_RX_I_SRAM_4_SPLTADDR_S = 8
const DPORT_PMS_DMA_RX_I_SRAM_3_W_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_3_W_S = 7
const DPORT_PMS_DMA_RX_I_SRAM_3_R_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_3_R_S = 6
const DPORT_PMS_DMA_RX_I_SRAM_2_W_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_2_W_S = 5
const DPORT_PMS_DMA_RX_I_SRAM_2_R_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_2_R_S = 4
const DPORT_PMS_DMA_RX_I_SRAM_1_W_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_1_W_S = 3
const DPORT_PMS_DMA_RX_I_SRAM_1_R_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_1_R_S = 2
const DPORT_PMS_DMA_RX_I_SRAM_0_W_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_0_W_S = 1
const DPORT_PMS_DMA_RX_I_SRAM_0_R_V = 0x1
const DPORT_PMS_DMA_RX_I_SRAM_0_R_S = 0
const DPORT_PMS_DMA_RX_I_ILG_INTR_V = 0x1
const DPORT_PMS_DMA_RX_I_ILG_INTR_S = 2
const DPORT_PMS_DMA_RX_I_ILG_EN_V = 0x1
const DPORT_PMS_DMA_RX_I_ILG_EN_S = 1
const DPORT_PMS_DMA_RX_I_ILG_CLR_V = 0x1
const DPORT_PMS_DMA_RX_I_ILG_CLR_S = 0
const DPORT_PMS_DMA_RX_I_ILG_ST = 0x007FFFFF
const DPORT_PMS_DMA_RX_I_ILG_ST_V = 0x7FFFFF
const DPORT_PMS_DMA_RX_I_ILG_ST_S = 0
const DPORT_PMS_DMA_TX_I_LOCK_V = 0x1
const DPORT_PMS_DMA_TX_I_LOCK_S = 0
const DPORT_PMS_DMA_TX_I_SRAM_4_H_W_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_4_H_W_S = 28
const DPORT_PMS_DMA_TX_I_SRAM_4_H_R_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_4_H_R_S = 27
const DPORT_PMS_DMA_TX_I_SRAM_4_L_W_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_4_L_W_S = 26
const DPORT_PMS_DMA_TX_I_SRAM_4_L_R_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_4_L_R_S = 25
const DPORT_PMS_DMA_TX_I_SRAM_4_SPLTADDR = 0x0001FFFF
const DPORT_PMS_DMA_TX_I_SRAM_4_SPLTADDR_V = 0x1FFFF
const DPORT_PMS_DMA_TX_I_SRAM_4_SPLTADDR_S = 8
const DPORT_PMS_DMA_TX_I_SRAM_3_W_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_3_W_S = 7
const DPORT_PMS_DMA_TX_I_SRAM_3_R_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_3_R_S = 6
const DPORT_PMS_DMA_TX_I_SRAM_2_W_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_2_W_S = 5
const DPORT_PMS_DMA_TX_I_SRAM_2_R_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_2_R_S = 4
const DPORT_PMS_DMA_TX_I_SRAM_1_W_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_1_W_S = 3
const DPORT_PMS_DMA_TX_I_SRAM_1_R_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_1_R_S = 2
const DPORT_PMS_DMA_TX_I_SRAM_0_W_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_0_W_S = 1
const DPORT_PMS_DMA_TX_I_SRAM_0_R_V = 0x1
const DPORT_PMS_DMA_TX_I_SRAM_0_R_S = 0
const DPORT_PMS_DMA_TX_I_ILG_INTR_V = 0x1
const DPORT_PMS_DMA_TX_I_ILG_INTR_S = 2
const DPORT_PMS_DMA_TX_I_ILG_EN_V = 0x1
const DPORT_PMS_DMA_TX_I_ILG_EN_S = 1
const DPORT_PMS_DMA_TX_I_ILG_CLR_V = 0x1
const DPORT_PMS_DMA_TX_I_ILG_CLR_S = 0
const DPORT_PMS_DMA_TX_I_ILG_ST = 0x007FFFFF
const DPORT_PMS_DMA_TX_I_ILG_ST_V = 0x7FFFFF
const DPORT_PMS_DMA_TX_I_ILG_ST_S = 0
const DPORT_PRO_BOOT_LOCATION_LOCK_V = 0x1
const DPORT_PRO_BOOT_LOCATION_LOCK_S = 0
const DPORT_PRO_BOOT_REMAP_V = 0x1
const DPORT_PRO_BOOT_REMAP_S = 0
const DPORT_CACHE_SOURCE_LOCK_V = 0x1
const DPORT_CACHE_SOURCE_LOCK_S = 0
const DPORT_PRO_CACHE_D_SOURCE_PRO_DROM0_V = 0x1
const DPORT_PRO_CACHE_D_SOURCE_PRO_DROM0_S = 5
const DPORT_PRO_CACHE_D_SOURCE_PRO_DPORT_V = 0x1
const DPORT_PRO_CACHE_D_SOURCE_PRO_DPORT_S = 4
const DPORT_PRO_CACHE_D_SOURCE_PRO_DRAM0_V = 0x1
const DPORT_PRO_CACHE_D_SOURCE_PRO_DRAM0_S = 3
const DPORT_PRO_CACHE_I_SOURCE_PRO_DROM0_V = 0x1
const DPORT_PRO_CACHE_I_SOURCE_PRO_DROM0_S = 2
const DPORT_PRO_CACHE_I_SOURCE_PRO_IROM0_V = 0x1
const DPORT_PRO_CACHE_I_SOURCE_PRO_IROM0_S = 1
const DPORT_PRO_CACHE_I_SOURCE_PRO_IRAM1_V = 0x1
const DPORT_PRO_CACHE_I_SOURCE_PRO_IRAM1_S = 0
const DPORT_APB_PERIPHERAL_LOCK_V = 0x1
const DPORT_APB_PERIPHERAL_LOCK_S = 0
const DPORT_APB_PERIPHERAL_SPLIT_BURST_V = 0x1
const DPORT_APB_PERIPHERAL_SPLIT_BURST_S = 0
const DPORT_PMS_OCCUPY_LOCK_V = 0x1
const DPORT_PMS_OCCUPY_LOCK_S = 0
const DPORT_PMS_OCCUPY_CACHE = 0x0000000F
const DPORT_PMS_OCCUPY_CACHE_V = 0xF
const DPORT_PMS_OCCUPY_CACHE_S = 0
const DPORT_PMS_OCCUPY_MAC_DUMP = 0x0000000F
const DPORT_PMS_OCCUPY_MAC_DUMP_V = 0xF
const DPORT_PMS_OCCUPY_MAC_DUMP_S = 0
const DPORT_PMS_OCCUPY_PRO_TRACE = 0x0003FFFF
const DPORT_PMS_OCCUPY_PRO_TRACE_V = 0x3FFFF
const DPORT_PMS_OCCUPY_PRO_TRACE_S = 0
const DPORT_CACHE_TAG_ACCESS_LOCK_V = 0x1
const DPORT_CACHE_TAG_ACCESS_LOCK_S = 0
const DPORT_PRO_D_TAG_WR_ACS_V = 0x1
const DPORT_PRO_D_TAG_WR_ACS_S = 3
const DPORT_PRO_D_TAG_RD_ACS_V = 0x1
const DPORT_PRO_D_TAG_RD_ACS_S = 2
const DPORT_PRO_I_TAG_WR_ACS_V = 0x1
const DPORT_PRO_I_TAG_WR_ACS_S = 1
const DPORT_PRO_I_TAG_RD_ACS_V = 0x1
const DPORT_PRO_I_TAG_RD_ACS_S = 0
const DPORT_CACHE_MMU_ACCESS_LOCK_V = 0x1
const DPORT_CACHE_MMU_ACCESS_LOCK_S = 0
const DPORT_PRO_MMU_WR_ACS_V = 0x1
const DPORT_PRO_MMU_WR_ACS_S = 1
const DPORT_PRO_MMU_RD_ACS_V = 0x1
const DPORT_PRO_MMU_RD_ACS_S = 0
const DPORT_APB_PERI_BYTE_ERROR_INTR_V = 0x1
const DPORT_APB_PERI_BYTE_ERROR_INTR_S = 2
const DPORT_APB_PERI_BYTE_ERROR_EN_V = 0x1
const DPORT_APB_PERI_BYTE_ERROR_EN_S = 1
const DPORT_APB_PERI_BYTE_ERROR_CLR_V = 0x1
const DPORT_APB_PERI_BYTE_ERROR_CLR_S = 0
const DPORT_APB_PERI_BYTE_ERROR_ADDR = 0xFFFFFFFF
const DPORT_APB_PERI_BYTE_ERROR_ADDR_V = 0xFFFFFFFF
const DPORT_APB_PERI_BYTE_ERROR_ADDR_S = 0
const DPORT_CPU_PERI_BYTE_ERROR_INTR_V = 0x1
const DPORT_CPU_PERI_BYTE_ERROR_INTR_S = 2
const DPORT_CPU_PERI_BYTE_ERROR_EN_V = 0x1
const DPORT_CPU_PERI_BYTE_ERROR_EN_S = 1
const DPORT_CPU_PERI_BYTE_ERROR_CLR_V = 0x1
const DPORT_CPU_PERI_BYTE_ERROR_CLR_S = 0
const DPORT_CPU_PERI_BYTE_ERROR_ADDR = 0xFFFFFFFF
const DPORT_CPU_PERI_BYTE_ERROR_ADDR_V = 0xFFFFFFFF
const DPORT_CPU_PERI_BYTE_ERROR_ADDR_S = 0
const SENSITIVE_CLK_EN_V = 0x1
const SENSITIVE_CLK_EN_S = 0
const SENSITIVE_DATE = 0x0FFFFFFF
const SENSITIVE_DATE_V = 0xFFFFFFF
const SENSITIVE_DATE_S = 0
const CONF_REG_ADDRESS_SHIFT = 2
const IRAM0_SRAM_BASE_ADDRESS = 0x40000000
const IRAM0_SRAM_ADDRESS_LOW = 0x40020000
const IRAM0_SRAM_ADDRESS_HIGH = 0x4006FFFF
const IRAM0_SRAM_TOTAL_UNI_BLOCKS = 4
const IRAM0_SRAM_UNI_BLOCK_0 = 0
const IRAM0_SRAM_UNI_BLOCK_1 = 1
const IRAM0_SRAM_UNI_BLOCK_2 = 2
const IRAM0_SRAM_UNI_BLOCK_3 = 3
const IRAM0_SRAM_UNI_BLOCK_0_LOW = 0x40020000
const IRAM0_SRAM_UNI_BLOCK_1_LOW = 0x40022000
const IRAM0_SRAM_UNI_BLOCK_2_LOW = 0x40024000
const IRAM0_SRAM_UNI_BLOCK_3_LOW = 0x40026000
const IRAM0_SRAM_SPL_BLOCK_LOW = 0x40028000
const IRAM0_SRAM_SPL_BLOCK_HIGH = 0x4006FFFF
const IRAM0_INTR_ST_FAULTADDR_M = 0x003FFFFC
const IRAM0_SRAM_INTR_ST_FAULTADDR_HI = 0x40000000
const IRAM0_RTCFAST_ADDRESS_LOW = 0x40070000
const IRAM0_RTCFAST_ADDRESS_HIGH = 0x40071FFF
const IRAM0_RTCFAST_INTR_ST_FAULTADDR_HI = 0x40070000
const DRAM0_INTR_ST_FAULTADDR_M = 0x03FFFFC0
const DRAM0_INTR_ST_FAULTADDR_S = 0x4
const DRAM0_SRAM_ADDRESS_LOW = 0x3FFB0000
const DRAM0_SRAM_ADDRESS_HIGH = 0x3FFFFFFF
const DRAM0_SRAM_TOTAL_UNI_BLOCKS = 4
const DRAM0_SRAM_UNI_BLOCK_0 = 0
const DRAM0_SRAM_UNI_BLOCK_1 = 1
const DRAM0_SRAM_UNI_BLOCK_2 = 2
const DRAM0_SRAM_UNI_BLOCK_3 = 3
const DRAM0_SRAM_UNI_BLOCK_0_LOW = 0x3FFB0000
const DRAM0_SRAM_UNI_BLOCK_1_LOW = 0x3FFB2000
const DRAM0_SRAM_UNI_BLOCK_2_LOW = 0x3FFB4000
const DRAM0_SRAM_UNI_BLOCK_3_LOW = 0x3FFB6000
const DRAM0_SRAM_SPL_BLOCK_HIGH = 0x3FFFFFFF
const DRAM0_SRAM_INTR_ST_FAULTADDR_HI = 0x3FF00000
const DRAM0_RTCFAST_ADDRESS_LOW = 0x3FF9E000
const DRAM0_RTCFAST_ADDRESS_HIGH = 0x3FF9FFFF
const DRAM0_RTCFAST_INTR_ST_FAULTADDR_HI = 0x3FF00000
const RTCSLOW_MEMORY_SIZE = 0x00002000
const PERI1_INTR_ST_FAULTADDR_M = 0x03FFFFC0
const PERI1_INTR_ST_FAULTADDR_S = 0x4
const PERI1_RTCSLOW_ADDRESS_BASE = 0x3F421000
const PERI1_RTCSLOW_INTR_ST_FAULTADDR_HI_0 = 0x3F400000
const PERI2_INTR_ST_FAULTADDR_M = 0xFFFFFFFC
const PERI2_RTCSLOW_0_ADDRESS_BASE = 0x50000000
const PERI2_RTCSLOW_1_ADDRESS_BASE = 0x60021000
const I2C_BOD = 0x61
const I2C_BOD_HOSTID = 1
const I2C_BOD_THRESHOLD = 0x5
const I2C_BOD_THRESHOLD_MSB = 2
const I2C_BOD_THRESHOLD_LSB = 0
const EXTMEM_PRO_DCACHE_LOCK_DONE_V = 0x1
const EXTMEM_PRO_DCACHE_LOCK_DONE_S = 25
const EXTMEM_PRO_DCACHE_LOCK_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_LOCK_ENA_S = 24
const EXTMEM_PRO_DCACHE_UNLOCK_DONE_V = 0x1
const EXTMEM_PRO_DCACHE_UNLOCK_DONE_S = 23
const EXTMEM_PRO_DCACHE_UNLOCK_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_UNLOCK_ENA_S = 22
const EXTMEM_PRO_DCACHE_PRELOAD_DONE_V = 0x1
const EXTMEM_PRO_DCACHE_PRELOAD_DONE_S = 21
const EXTMEM_PRO_DCACHE_PRELOAD_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_PRELOAD_ENA_S = 20
const EXTMEM_PRO_DCACHE_AUTOLOAD_DONE_V = 0x1
const EXTMEM_PRO_DCACHE_AUTOLOAD_DONE_S = 19
const EXTMEM_PRO_DCACHE_AUTOLOAD_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_AUTOLOAD_ENA_S = 18
const EXTMEM_PRO_DCACHE_LOCK1_EN_V = 0x1
const EXTMEM_PRO_DCACHE_LOCK1_EN_S = 15
const EXTMEM_PRO_DCACHE_LOCK0_EN_V = 0x1
const EXTMEM_PRO_DCACHE_LOCK0_EN_S = 14
const EXTMEM_PRO_DCACHE_CLEAN_DONE_V = 0x1
const EXTMEM_PRO_DCACHE_CLEAN_DONE_S = 13
const EXTMEM_PRO_DCACHE_CLEAN_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_CLEAN_ENA_S = 12
const EXTMEM_PRO_DCACHE_FLUSH_DONE_V = 0x1
const EXTMEM_PRO_DCACHE_FLUSH_DONE_S = 11
const EXTMEM_PRO_DCACHE_FLUSH_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_FLUSH_ENA_S = 10
const EXTMEM_PRO_DCACHE_INVALIDATE_DONE_V = 0x1
const EXTMEM_PRO_DCACHE_INVALIDATE_DONE_S = 9
const EXTMEM_PRO_DCACHE_INVALIDATE_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_INVALIDATE_ENA_S = 8
const EXTMEM_PRO_DCACHE_BLOCKSIZE_MODE_V = 0x1
const EXTMEM_PRO_DCACHE_BLOCKSIZE_MODE_S = 3
const EXTMEM_PRO_DCACHE_SETSIZE_MODE_V = 0x1
const EXTMEM_PRO_DCACHE_SETSIZE_MODE_S = 2
const EXTMEM_PRO_DCACHE_ENABLE_V = 0x1
const EXTMEM_PRO_DCACHE_ENABLE_S = 0
const EXTMEM_PRO_DCACHE_MASK_BUS2_V = 0x1
const EXTMEM_PRO_DCACHE_MASK_BUS2_S = 2
const EXTMEM_PRO_DCACHE_MASK_BUS1_V = 0x1
const EXTMEM_PRO_DCACHE_MASK_BUS1_S = 1
const EXTMEM_PRO_DCACHE_MASK_BUS0_V = 0x1
const EXTMEM_PRO_DCACHE_MASK_BUS0_S = 0
const EXTMEM_PRO_DCACHE_TAG_MEM_FORCE_PU_V = 0x1
const EXTMEM_PRO_DCACHE_TAG_MEM_FORCE_PU_S = 2
const EXTMEM_PRO_DCACHE_TAG_MEM_FORCE_PD_V = 0x1
const EXTMEM_PRO_DCACHE_TAG_MEM_FORCE_PD_S = 1
const EXTMEM_PRO_DCACHE_TAG_MEM_FORCE_ON_V = 0x1
const EXTMEM_PRO_DCACHE_TAG_MEM_FORCE_ON_S = 0
const EXTMEM_PRO_DCACHE_LOCK0_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_LOCK0_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_LOCK0_ADDR_S = 0
const EXTMEM_PRO_DCACHE_LOCK0_SIZE = 0x0000FFFF
const EXTMEM_PRO_DCACHE_LOCK0_SIZE_V = 0xFFFF
const EXTMEM_PRO_DCACHE_LOCK0_SIZE_S = 0
const EXTMEM_PRO_DCACHE_LOCK1_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_LOCK1_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_LOCK1_ADDR_S = 0
const EXTMEM_PRO_DCACHE_LOCK1_SIZE = 0x0000FFFF
const EXTMEM_PRO_DCACHE_LOCK1_SIZE_V = 0xFFFF
const EXTMEM_PRO_DCACHE_LOCK1_SIZE_S = 0
const EXTMEM_PRO_DCACHE_MEMSYNC_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_MEMSYNC_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_MEMSYNC_ADDR_S = 0
const EXTMEM_PRO_DCACHE_MEMSYNC_SIZE = 0x0007FFFF
const EXTMEM_PRO_DCACHE_MEMSYNC_SIZE_V = 0x7FFFF
const EXTMEM_PRO_DCACHE_MEMSYNC_SIZE_S = 0
const EXTMEM_PRO_DCACHE_PRELOAD_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_PRELOAD_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_PRELOAD_ADDR_S = 0
const EXTMEM_PRO_DCACHE_PRELOAD_ORDER_V = 0x1
const EXTMEM_PRO_DCACHE_PRELOAD_ORDER_S = 10
const EXTMEM_PRO_DCACHE_PRELOAD_SIZE = 0x000003FF
const EXTMEM_PRO_DCACHE_PRELOAD_SIZE_V = 0x3FF
const EXTMEM_PRO_DCACHE_PRELOAD_SIZE_S = 0
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT1_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT1_ENA_S = 9
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT0_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT0_ENA_S = 8
const EXTMEM_PRO_DCACHE_AUTOLOAD_SIZE = 0x00000003
const EXTMEM_PRO_DCACHE_AUTOLOAD_SIZE_V = 0x3
const EXTMEM_PRO_DCACHE_AUTOLOAD_SIZE_S = 6
const EXTMEM_PRO_DCACHE_AUTOLOAD_RQST = 0x00000003
const EXTMEM_PRO_DCACHE_AUTOLOAD_RQST_V = 0x3
const EXTMEM_PRO_DCACHE_AUTOLOAD_RQST_S = 4
const EXTMEM_PRO_DCACHE_AUTOLOAD_ORDER_V = 0x1
const EXTMEM_PRO_DCACHE_AUTOLOAD_ORDER_S = 3
const EXTMEM_PRO_DCACHE_AUTOLOAD_STEP = 0x00000003
const EXTMEM_PRO_DCACHE_AUTOLOAD_STEP_V = 0x3
const EXTMEM_PRO_DCACHE_AUTOLOAD_STEP_S = 1
const EXTMEM_PRO_DCACHE_AUTOLOAD_MODE_V = 0x1
const EXTMEM_PRO_DCACHE_AUTOLOAD_MODE_S = 0
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT0_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT0_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT0_ADDR_S = 0
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT0_SIZE = 0x00FFFFFF
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT0_SIZE_V = 0xFFFFFF
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT0_SIZE_S = 0
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT1_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT1_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT1_ADDR_S = 0
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT1_SIZE = 0x00FFFFFF
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT1_SIZE_V = 0xFFFFFF
const EXTMEM_PRO_DCACHE_AUTOLOAD_SCT1_SIZE_S = 0
const EXTMEM_PRO_ICACHE_LOCK_DONE_V = 0x1
const EXTMEM_PRO_ICACHE_LOCK_DONE_S = 25
const EXTMEM_PRO_ICACHE_LOCK_ENA_V = 0x1
const EXTMEM_PRO_ICACHE_LOCK_ENA_S = 24
const EXTMEM_PRO_ICACHE_UNLOCK_DONE_V = 0x1
const EXTMEM_PRO_ICACHE_UNLOCK_DONE_S = 23
const EXTMEM_PRO_ICACHE_UNLOCK_ENA_V = 0x1
const EXTMEM_PRO_ICACHE_UNLOCK_ENA_S = 22
const EXTMEM_PRO_ICACHE_PRELOAD_DONE_V = 0x1
const EXTMEM_PRO_ICACHE_PRELOAD_DONE_S = 21
const EXTMEM_PRO_ICACHE_PRELOAD_ENA_V = 0x1
const EXTMEM_PRO_ICACHE_PRELOAD_ENA_S = 20
const EXTMEM_PRO_ICACHE_AUTOLOAD_DONE_V = 0x1
const EXTMEM_PRO_ICACHE_AUTOLOAD_DONE_S = 19
const EXTMEM_PRO_ICACHE_AUTOLOAD_ENA_V = 0x1
const EXTMEM_PRO_ICACHE_AUTOLOAD_ENA_S = 18
const EXTMEM_PRO_ICACHE_LOCK1_EN_V = 0x1
const EXTMEM_PRO_ICACHE_LOCK1_EN_S = 15
const EXTMEM_PRO_ICACHE_LOCK0_EN_V = 0x1
const EXTMEM_PRO_ICACHE_LOCK0_EN_S = 14
const EXTMEM_PRO_ICACHE_INVALIDATE_DONE_V = 0x1
const EXTMEM_PRO_ICACHE_INVALIDATE_DONE_S = 9
const EXTMEM_PRO_ICACHE_INVALIDATE_ENA_V = 0x1
const EXTMEM_PRO_ICACHE_INVALIDATE_ENA_S = 8
const EXTMEM_PRO_ICACHE_BLOCKSIZE_MODE_V = 0x1
const EXTMEM_PRO_ICACHE_BLOCKSIZE_MODE_S = 3
const EXTMEM_PRO_ICACHE_SETSIZE_MODE_V = 0x1
const EXTMEM_PRO_ICACHE_SETSIZE_MODE_S = 2
const EXTMEM_PRO_ICACHE_ENABLE_V = 0x1
const EXTMEM_PRO_ICACHE_ENABLE_S = 0
const EXTMEM_PRO_ICACHE_MASK_BUS2_V = 0x1
const EXTMEM_PRO_ICACHE_MASK_BUS2_S = 2
const EXTMEM_PRO_ICACHE_MASK_BUS1_V = 0x1
const EXTMEM_PRO_ICACHE_MASK_BUS1_S = 1
const EXTMEM_PRO_ICACHE_MASK_BUS0_V = 0x1
const EXTMEM_PRO_ICACHE_MASK_BUS0_S = 0
const EXTMEM_PRO_ICACHE_TAG_MEM_FORCE_PU_V = 0x1
const EXTMEM_PRO_ICACHE_TAG_MEM_FORCE_PU_S = 2
const EXTMEM_PRO_ICACHE_TAG_MEM_FORCE_PD_V = 0x1
const EXTMEM_PRO_ICACHE_TAG_MEM_FORCE_PD_S = 1
const EXTMEM_PRO_ICACHE_TAG_MEM_FORCE_ON_V = 0x1
const EXTMEM_PRO_ICACHE_TAG_MEM_FORCE_ON_S = 0
const EXTMEM_PRO_ICACHE_LOCK0_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_LOCK0_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_LOCK0_ADDR_S = 0
const EXTMEM_PRO_ICACHE_LOCK0_SIZE = 0x0000FFFF
const EXTMEM_PRO_ICACHE_LOCK0_SIZE_V = 0xFFFF
const EXTMEM_PRO_ICACHE_LOCK0_SIZE_S = 0
const EXTMEM_PRO_ICACHE_LOCK1_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_LOCK1_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_LOCK1_ADDR_S = 0
const EXTMEM_PRO_ICACHE_LOCK1_SIZE = 0x0000FFFF
const EXTMEM_PRO_ICACHE_LOCK1_SIZE_V = 0xFFFF
const EXTMEM_PRO_ICACHE_LOCK1_SIZE_S = 0
const EXTMEM_PRO_ICACHE_MEMSYNC_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_MEMSYNC_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_MEMSYNC_ADDR_S = 0
const EXTMEM_PRO_ICACHE_MEMSYNC_SIZE = 0x0007FFFF
const EXTMEM_PRO_ICACHE_MEMSYNC_SIZE_V = 0x7FFFF
const EXTMEM_PRO_ICACHE_MEMSYNC_SIZE_S = 0
const EXTMEM_PRO_ICACHE_PRELOAD_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_PRELOAD_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_PRELOAD_ADDR_S = 0
const EXTMEM_PRO_ICACHE_PRELOAD_ORDER_V = 0x1
const EXTMEM_PRO_ICACHE_PRELOAD_ORDER_S = 10
const EXTMEM_PRO_ICACHE_PRELOAD_SIZE = 0x000003FF
const EXTMEM_PRO_ICACHE_PRELOAD_SIZE_V = 0x3FF
const EXTMEM_PRO_ICACHE_PRELOAD_SIZE_S = 0
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT1_ENA_V = 0x1
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT1_ENA_S = 9
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT0_ENA_V = 0x1
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT0_ENA_S = 8
const EXTMEM_PRO_ICACHE_AUTOLOAD_SIZE = 0x00000003
const EXTMEM_PRO_ICACHE_AUTOLOAD_SIZE_V = 0x3
const EXTMEM_PRO_ICACHE_AUTOLOAD_SIZE_S = 6
const EXTMEM_PRO_ICACHE_AUTOLOAD_RQST = 0x00000003
const EXTMEM_PRO_ICACHE_AUTOLOAD_RQST_V = 0x3
const EXTMEM_PRO_ICACHE_AUTOLOAD_RQST_S = 4
const EXTMEM_PRO_ICACHE_AUTOLOAD_ORDER_V = 0x1
const EXTMEM_PRO_ICACHE_AUTOLOAD_ORDER_S = 3
const EXTMEM_PRO_ICACHE_AUTOLOAD_STEP = 0x00000003
const EXTMEM_PRO_ICACHE_AUTOLOAD_STEP_V = 0x3
const EXTMEM_PRO_ICACHE_AUTOLOAD_STEP_S = 1
const EXTMEM_PRO_ICACHE_AUTOLOAD_MODE_V = 0x1
const EXTMEM_PRO_ICACHE_AUTOLOAD_MODE_S = 0
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT0_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT0_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT0_ADDR_S = 0
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT0_SIZE = 0x00FFFFFF
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT0_SIZE_V = 0xFFFFFF
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT0_SIZE_S = 0
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT1_ADDR = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT1_ADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT1_ADDR_S = 0
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT1_SIZE = 0x00FFFFFF
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT1_SIZE_V = 0xFFFFFF
const EXTMEM_PRO_ICACHE_AUTOLOAD_SCT1_SIZE_S = 0
const EXTMEM_IC_PRELOAD_CNT = 0x0000FFFF
const EXTMEM_IC_PRELOAD_CNT_V = 0xFFFF
const EXTMEM_IC_PRELOAD_CNT_S = 0
const EXTMEM_IC_PRELOAD_MISS_CNT = 0x0000FFFF
const EXTMEM_IC_PRELOAD_MISS_CNT_V = 0xFFFF
const EXTMEM_IC_PRELOAD_MISS_CNT_S = 0
const EXTMEM_IBUS2_ABANDON_CNT = 0x0000FFFF
const EXTMEM_IBUS2_ABANDON_CNT_V = 0xFFFF
const EXTMEM_IBUS2_ABANDON_CNT_S = 0
const EXTMEM_IBUS1_ABANDON_CNT = 0x0000FFFF
const EXTMEM_IBUS1_ABANDON_CNT_V = 0xFFFF
const EXTMEM_IBUS1_ABANDON_CNT_S = 0
const EXTMEM_IBUS0_ABANDON_CNT = 0x0000FFFF
const EXTMEM_IBUS0_ABANDON_CNT_V = 0xFFFF
const EXTMEM_IBUS0_ABANDON_CNT_S = 0
const EXTMEM_IBUS2_ACS_MISS_CNT = 0xFFFFFFFF
const EXTMEM_IBUS2_ACS_MISS_CNT_V = 0xFFFFFFFF
const EXTMEM_IBUS2_ACS_MISS_CNT_S = 0
const EXTMEM_IBUS1_ACS_MISS_CNT = 0xFFFFFFFF
const EXTMEM_IBUS1_ACS_MISS_CNT_V = 0xFFFFFFFF
const EXTMEM_IBUS1_ACS_MISS_CNT_S = 0
const EXTMEM_IBUS0_ACS_MISS_CNT = 0xFFFFFFFF
const EXTMEM_IBUS0_ACS_MISS_CNT_V = 0xFFFFFFFF
const EXTMEM_IBUS0_ACS_MISS_CNT_S = 0
const EXTMEM_IBUS2_ACS_CNT = 0xFFFFFFFF
const EXTMEM_IBUS2_ACS_CNT_V = 0xFFFFFFFF
const EXTMEM_IBUS2_ACS_CNT_S = 0
const EXTMEM_IBUS1_ACS_CNT = 0xFFFFFFFF
const EXTMEM_IBUS1_ACS_CNT_V = 0xFFFFFFFF
const EXTMEM_IBUS1_ACS_CNT_S = 0
const EXTMEM_IBUS0_ACS_CNT = 0xFFFFFFFF
const EXTMEM_IBUS0_ACS_CNT_V = 0xFFFFFFFF
const EXTMEM_IBUS0_ACS_CNT_S = 0
const EXTMEM_DC_PRELOAD_CNT = 0x0000FFFF
const EXTMEM_DC_PRELOAD_CNT_V = 0xFFFF
const EXTMEM_DC_PRELOAD_CNT_S = 0
const EXTMEM_DC_PRELOAD_EVICT_CNT = 0x0000FFFF
const EXTMEM_DC_PRELOAD_EVICT_CNT_V = 0xFFFF
const EXTMEM_DC_PRELOAD_EVICT_CNT_S = 0
const EXTMEM_DC_PRELOAD_MISS_CNT = 0x0000FFFF
const EXTMEM_DC_PRELOAD_MISS_CNT_V = 0xFFFF
const EXTMEM_DC_PRELOAD_MISS_CNT_S = 0
const EXTMEM_DBUS2_ABANDON_CNT = 0x0000FFFF
const EXTMEM_DBUS2_ABANDON_CNT_V = 0xFFFF
const EXTMEM_DBUS2_ABANDON_CNT_S = 0
const EXTMEM_DBUS1_ABANDON_CNT = 0x0000FFFF
const EXTMEM_DBUS1_ABANDON_CNT_V = 0xFFFF
const EXTMEM_DBUS1_ABANDON_CNT_S = 0
const EXTMEM_DBUS0_ABANDON_CNT = 0x0000FFFF
const EXTMEM_DBUS0_ABANDON_CNT_V = 0xFFFF
const EXTMEM_DBUS0_ABANDON_CNT_S = 0
const EXTMEM_DBUS2_ACS_WB_CNT = 0x000FFFFF
const EXTMEM_DBUS2_ACS_WB_CNT_V = 0xFFFFF
const EXTMEM_DBUS2_ACS_WB_CNT_S = 0
const EXTMEM_DBUS1_ACS_WB_CNT = 0x000FFFFF
const EXTMEM_DBUS1_ACS_WB_CNT_V = 0xFFFFF
const EXTMEM_DBUS1_ACS_WB_CNT_S = 0
const EXTMEM_DBUS0_ACS_WB_CNT = 0x000FFFFF
const EXTMEM_DBUS0_ACS_WB_CNT_V = 0xFFFFF
const EXTMEM_DBUS0_ACS_WB_CNT_S = 0
const EXTMEM_DBUS2_ACS_MISS_CNT = 0xFFFFFFFF
const EXTMEM_DBUS2_ACS_MISS_CNT_V = 0xFFFFFFFF
const EXTMEM_DBUS2_ACS_MISS_CNT_S = 0
const EXTMEM_DBUS1_ACS_MISS_CNT = 0xFFFFFFFF
const EXTMEM_DBUS1_ACS_MISS_CNT_V = 0xFFFFFFFF
const EXTMEM_DBUS1_ACS_MISS_CNT_S = 0
const EXTMEM_DBUS0_ACS_MISS_CNT = 0xFFFFFFFF
const EXTMEM_DBUS0_ACS_MISS_CNT_V = 0xFFFFFFFF
const EXTMEM_DBUS0_ACS_MISS_CNT_S = 0
const EXTMEM_DBUS2_ACS_CNT = 0xFFFFFFFF
const EXTMEM_DBUS2_ACS_CNT_V = 0xFFFFFFFF
const EXTMEM_DBUS2_ACS_CNT_S = 0
const EXTMEM_DBUS1_ACS_CNT = 0xFFFFFFFF
const EXTMEM_DBUS1_ACS_CNT_V = 0xFFFFFFFF
const EXTMEM_DBUS1_ACS_CNT_S = 0
const EXTMEM_DBUS0_ACS_CNT = 0xFFFFFFFF
const EXTMEM_DBUS0_ACS_CNT_V = 0xFFFFFFFF
const EXTMEM_DBUS0_ACS_CNT_S = 0
const EXTMEM_MMU_ENTRY_FAULT_INT_ENA_V = 0x1
const EXTMEM_MMU_ENTRY_FAULT_INT_ENA_S = 19
const EXTMEM_DCACHE_SET_LOCK_ILG_INT_ENA_V = 0x1
const EXTMEM_DCACHE_SET_LOCK_ILG_INT_ENA_S = 18
const EXTMEM_DCACHE_SET_SYNC_ILG_INT_ENA_V = 0x1
const EXTMEM_DCACHE_SET_SYNC_ILG_INT_ENA_S = 17
const EXTMEM_DCACHE_SET_PRELOAD_ILG_INT_ENA_V = 0x1
const EXTMEM_DCACHE_SET_PRELOAD_ILG_INT_ENA_S = 16
const EXTMEM_DCACHE_REJECT_INT_ENA_V = 0x1
const EXTMEM_DCACHE_REJECT_INT_ENA_S = 15
const EXTMEM_DCACHE_WRITE_FLASH_INT_ENA_V = 0x1
const EXTMEM_DCACHE_WRITE_FLASH_INT_ENA_S = 14
const EXTMEM_DC_PRELOAD_SIZE_FAULT_INT_ENA_V = 0x1
const EXTMEM_DC_PRELOAD_SIZE_FAULT_INT_ENA_S = 13
const EXTMEM_DC_SYNC_SIZE_FAULT_INT_ENA_V = 0x1
const EXTMEM_DC_SYNC_SIZE_FAULT_INT_ENA_S = 12
const EXTMEM_DBUS_CNT_OVF_INT_ENA_V = 0x1
const EXTMEM_DBUS_CNT_OVF_INT_ENA_S = 11
const EXTMEM_DBUS_ACS_MSK_DC_INT_ENA_V = 0x1
const EXTMEM_DBUS_ACS_MSK_DC_INT_ENA_S = 10
const EXTMEM_ICACHE_SET_LOCK_ILG_INT_ENA_V = 0x1
const EXTMEM_ICACHE_SET_LOCK_ILG_INT_ENA_S = 9
const EXTMEM_ICACHE_SET_SYNC_ILG_INT_ENA_V = 0x1
const EXTMEM_ICACHE_SET_SYNC_ILG_INT_ENA_S = 8
const EXTMEM_ICACHE_SET_PRELOAD_ILG_INT_ENA_V = 0x1
const EXTMEM_ICACHE_SET_PRELOAD_ILG_INT_ENA_S = 7
const EXTMEM_ICACHE_REJECT_INT_ENA_V = 0x1
const EXTMEM_ICACHE_REJECT_INT_ENA_S = 6
const EXTMEM_IC_PRELOAD_SIZE_FAULT_INT_ENA_V = 0x1
const EXTMEM_IC_PRELOAD_SIZE_FAULT_INT_ENA_S = 5
const EXTMEM_IC_SYNC_SIZE_FAULT_INT_ENA_V = 0x1
const EXTMEM_IC_SYNC_SIZE_FAULT_INT_ENA_S = 4
const EXTMEM_IBUS_CNT_OVF_INT_ENA_V = 0x1
const EXTMEM_IBUS_CNT_OVF_INT_ENA_S = 3
const EXTMEM_IBUS_ACS_MSK_IC_INT_ENA_V = 0x1
const EXTMEM_IBUS_ACS_MSK_IC_INT_ENA_S = 2
const EXTMEM_CACHE_DBG_EN_V = 0x1
const EXTMEM_CACHE_DBG_EN_S = 0
const EXTMEM_MMU_ENTRY_FAULT_INT_CLR_V = 0x1
const EXTMEM_MMU_ENTRY_FAULT_INT_CLR_S = 13
const EXTMEM_DCACHE_SET_ILG_INT_CLR_V = 0x1
const EXTMEM_DCACHE_SET_ILG_INT_CLR_S = 12
const EXTMEM_DCACHE_REJECT_INT_CLR_V = 0x1
const EXTMEM_DCACHE_REJECT_INT_CLR_S = 11
const EXTMEM_DCACHE_WRITE_FLASH_INT_CLR_V = 0x1
const EXTMEM_DCACHE_WRITE_FLASH_INT_CLR_S = 10
const EXTMEM_DC_PRELOAD_SIZE_FAULT_INT_CLR_V = 0x1
const EXTMEM_DC_PRELOAD_SIZE_FAULT_INT_CLR_S = 9
const EXTMEM_DC_SYNC_SIZE_FAULT_INT_CLR_V = 0x1
const EXTMEM_DC_SYNC_SIZE_FAULT_INT_CLR_S = 8
const EXTMEM_DBUS_CNT_OVF_INT_CLR_V = 0x1
const EXTMEM_DBUS_CNT_OVF_INT_CLR_S = 7
const EXTMEM_DBUS_ACS_MSK_DC_INT_CLR_V = 0x1
const EXTMEM_DBUS_ACS_MSK_DC_INT_CLR_S = 6
const EXTMEM_ICACHE_SET_ILG_INT_CLR_V = 0x1
const EXTMEM_ICACHE_SET_ILG_INT_CLR_S = 5
const EXTMEM_ICACHE_REJECT_INT_CLR_V = 0x1
const EXTMEM_ICACHE_REJECT_INT_CLR_S = 4
const EXTMEM_IC_PRELOAD_SIZE_FAULT_INT_CLR_V = 0x1
const EXTMEM_IC_PRELOAD_SIZE_FAULT_INT_CLR_S = 3
const EXTMEM_IC_SYNC_SIZE_FAULT_INT_CLR_V = 0x1
const EXTMEM_IC_SYNC_SIZE_FAULT_INT_CLR_S = 2
const EXTMEM_IBUS_CNT_OVF_INT_CLR_V = 0x1
const EXTMEM_IBUS_CNT_OVF_INT_CLR_S = 1
const EXTMEM_IBUS_ACS_MSK_IC_INT_CLR_V = 0x1
const EXTMEM_IBUS_ACS_MSK_IC_INT_CLR_S = 0
const EXTMEM_ICACHE_SET_LOCK_ILG_ST_V = 0x1
const EXTMEM_ICACHE_SET_LOCK_ILG_ST_S = 24
const EXTMEM_ICACHE_SET_SYNC_ILG_ST_V = 0x1
const EXTMEM_ICACHE_SET_SYNC_ILG_ST_S = 23
const EXTMEM_ICACHE_SET_PRELOAD_ILG_ST_V = 0x1
const EXTMEM_ICACHE_SET_PRELOAD_ILG_ST_S = 22
const EXTMEM_ICACHE_REJECT_ST_V = 0x1
const EXTMEM_ICACHE_REJECT_ST_S = 21
const EXTMEM_IC_PRELOAD_SIZE_FAULT_ST_V = 0x1
const EXTMEM_IC_PRELOAD_SIZE_FAULT_ST_S = 20
const EXTMEM_IC_SYNC_SIZE_FAULT_ST_V = 0x1
const EXTMEM_IC_SYNC_SIZE_FAULT_ST_S = 19
const EXTMEM_IC_PRELOAD_CNT_OVF_ST_V = 0x1
const EXTMEM_IC_PRELOAD_CNT_OVF_ST_S = 18
const EXTMEM_IC_PRELOAD_MISS_CNT_OVF_ST_V = 0x1
const EXTMEM_IC_PRELOAD_MISS_CNT_OVF_ST_S = 16
const EXTMEM_IBUS2_ABANDON_CNT_OVF_ST_V = 0x1
const EXTMEM_IBUS2_ABANDON_CNT_OVF_ST_S = 14
const EXTMEM_IBUS1_ABANDON_CNT_OVF_ST_V = 0x1
const EXTMEM_IBUS1_ABANDON_CNT_OVF_ST_S = 13
const EXTMEM_IBUS0_ABANDON_CNT_OVF_ST_V = 0x1
const EXTMEM_IBUS0_ABANDON_CNT_OVF_ST_S = 12
const EXTMEM_IBUS2_ACS_MISS_CNT_OVF_ST_V = 0x1
const EXTMEM_IBUS2_ACS_MISS_CNT_OVF_ST_S = 10
const EXTMEM_IBUS1_ACS_MISS_CNT_OVF_ST_V = 0x1
const EXTMEM_IBUS1_ACS_MISS_CNT_OVF_ST_S = 9
const EXTMEM_IBUS0_ACS_MISS_CNT_OVF_ST_V = 0x1
const EXTMEM_IBUS0_ACS_MISS_CNT_OVF_ST_S = 8
const EXTMEM_IBUS2_ACS_CNT_OVF_ST_V = 0x1
const EXTMEM_IBUS2_ACS_CNT_OVF_ST_S = 6
const EXTMEM_IBUS1_ACS_CNT_OVF_ST_V = 0x1
const EXTMEM_IBUS1_ACS_CNT_OVF_ST_S = 5
const EXTMEM_IBUS0_ACS_CNT_OVF_ST_V = 0x1
const EXTMEM_IBUS0_ACS_CNT_OVF_ST_S = 4
const EXTMEM_IBUS2_ACS_MSK_ICACHE_ST_V = 0x1
const EXTMEM_IBUS2_ACS_MSK_ICACHE_ST_S = 2
const EXTMEM_IBUS1_ACS_MSK_ICACHE_ST_V = 0x1
const EXTMEM_IBUS1_ACS_MSK_ICACHE_ST_S = 1
const EXTMEM_IBUS0_ACS_MSK_ICACHE_ST_V = 0x1
const EXTMEM_IBUS0_ACS_MSK_ICACHE_ST_S = 0
const EXTMEM_MMU_ENTRY_FAULT_ST_V = 0x1
const EXTMEM_MMU_ENTRY_FAULT_ST_S = 30
const EXTMEM_DCACHE_SET_LOCK_ILG_ST_V = 0x1
const EXTMEM_DCACHE_SET_LOCK_ILG_ST_S = 29
const EXTMEM_DCACHE_SET_SYNC_ILG_ST_V = 0x1
const EXTMEM_DCACHE_SET_SYNC_ILG_ST_S = 28
const EXTMEM_DCACHE_SET_PRELOAD_ILG_ST_V = 0x1
const EXTMEM_DCACHE_SET_PRELOAD_ILG_ST_S = 27
const EXTMEM_DCACHE_REJECT_ST_V = 0x1
const EXTMEM_DCACHE_REJECT_ST_S = 26
const EXTMEM_DCACHE_WRITE_FLASH_ST_V = 0x1
const EXTMEM_DCACHE_WRITE_FLASH_ST_S = 25
const EXTMEM_DC_PRELOAD_SIZE_FAULT_ST_V = 0x1
const EXTMEM_DC_PRELOAD_SIZE_FAULT_ST_S = 24
const EXTMEM_DC_SYNC_SIZE_FAULT_ST_V = 0x1
const EXTMEM_DC_SYNC_SIZE_FAULT_ST_S = 23
const EXTMEM_DC_PRELOAD_CNT_OVF_ST_V = 0x1
const EXTMEM_DC_PRELOAD_CNT_OVF_ST_S = 22
const EXTMEM_DC_PRELOAD_EVICT_CNT_OVF_ST_V = 0x1
const EXTMEM_DC_PRELOAD_EVICT_CNT_OVF_ST_S = 21
const EXTMEM_DC_PRELOAD_MISS_CNT_OVF_ST_V = 0x1
const EXTMEM_DC_PRELOAD_MISS_CNT_OVF_ST_S = 20
const EXTMEM_DBUS2_ABANDON_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS2_ABANDON_CNT_OVF_ST_S = 18
const EXTMEM_DBUS1_ABANDON_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS1_ABANDON_CNT_OVF_ST_S = 17
const EXTMEM_DBUS0_ABANDON_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS0_ABANDON_CNT_OVF_ST_S = 16
const EXTMEM_DBUS2_ACS_WB_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS2_ACS_WB_CNT_OVF_ST_S = 14
const EXTMEM_DBUS1_ACS_WB_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS1_ACS_WB_CNT_OVF_ST_S = 13
const EXTMEM_DBUS0_ACS_WB_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS0_ACS_WB_CNT_OVF_ST_S = 12
const EXTMEM_DBUS2_ACS_MISS_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS2_ACS_MISS_CNT_OVF_ST_S = 10
const EXTMEM_DBUS1_ACS_MISS_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS1_ACS_MISS_CNT_OVF_ST_S = 9
const EXTMEM_DBUS0_ACS_MISS_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS0_ACS_MISS_CNT_OVF_ST_S = 8
const EXTMEM_DBUS2_ACS_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS2_ACS_CNT_OVF_ST_S = 6
const EXTMEM_DBUS1_ACS_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS1_ACS_CNT_OVF_ST_S = 5
const EXTMEM_DBUS0_ACS_CNT_OVF_ST_V = 0x1
const EXTMEM_DBUS0_ACS_CNT_OVF_ST_S = 4
const EXTMEM_DBUS2_ACS_MSK_DCACHE_ST_V = 0x1
const EXTMEM_DBUS2_ACS_MSK_DCACHE_ST_S = 2
const EXTMEM_DBUS1_ACS_MSK_DCACHE_ST_V = 0x1
const EXTMEM_DBUS1_ACS_MSK_DCACHE_ST_S = 1
const EXTMEM_DBUS0_ACS_MSK_DCACHE_ST_V = 0x1
const EXTMEM_DBUS0_ACS_MSK_DCACHE_ST_S = 0
const EXTMEM_PRO_ICACHE_ACS_CNT_CLR_V = 0x1
const EXTMEM_PRO_ICACHE_ACS_CNT_CLR_S = 1
const EXTMEM_PRO_DCACHE_ACS_CNT_CLR_V = 0x1
const EXTMEM_PRO_DCACHE_ACS_CNT_CLR_S = 0
const EXTMEM_PRO_DCACHE_CPU_ATTR = 0x00000007
const EXTMEM_PRO_DCACHE_CPU_ATTR_V = 0x7
const EXTMEM_PRO_DCACHE_CPU_ATTR_S = 3
const EXTMEM_PRO_DCACHE_TAG_ATTR = 0x00000007
const EXTMEM_PRO_DCACHE_TAG_ATTR_V = 0x7
const EXTMEM_PRO_DCACHE_TAG_ATTR_S = 0
const EXTMEM_PRO_DCACHE_CPU_VADDR = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_CPU_VADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_DCACHE_CPU_VADDR_S = 0
const EXTMEM_PRO_ICACHE_CPU_ATTR = 0x00000007
const EXTMEM_PRO_ICACHE_CPU_ATTR_V = 0x7
const EXTMEM_PRO_ICACHE_CPU_ATTR_S = 3
const EXTMEM_PRO_ICACHE_TAG_ATTR = 0x00000007
const EXTMEM_PRO_ICACHE_TAG_ATTR_V = 0x7
const EXTMEM_PRO_ICACHE_TAG_ATTR_S = 0
const EXTMEM_PRO_ICACHE_CPU_VADDR = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_CPU_VADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_ICACHE_CPU_VADDR_S = 0
const EXTMEM_PRO_CACHE_MMU_FAULT_CODE = 0x00000007
const EXTMEM_PRO_CACHE_MMU_FAULT_CODE_V = 0x7
const EXTMEM_PRO_CACHE_MMU_FAULT_CODE_S = 17
const EXTMEM_PRO_CACHE_MMU_FAULT_CONTENT = 0x0001FFFF
const EXTMEM_PRO_CACHE_MMU_FAULT_CONTENT_V = 0x1FFFF
const EXTMEM_PRO_CACHE_MMU_FAULT_CONTENT_S = 0
const EXTMEM_PRO_CACHE_MMU_FAULT_VADDR = 0xFFFFFFFF
const EXTMEM_PRO_CACHE_MMU_FAULT_VADDR_V = 0xFFFFFFFF
const EXTMEM_PRO_CACHE_MMU_FAULT_VADDR_S = 0
const EXTMEM_PRO_CACHE_SRAM_RD_WRAP_AROUND_V = 0x1
const EXTMEM_PRO_CACHE_SRAM_RD_WRAP_AROUND_S = 1
const EXTMEM_PRO_CACHE_FLASH_WRAP_AROUND_V = 0x1
const EXTMEM_PRO_CACHE_FLASH_WRAP_AROUND_S = 0
const EXTMEM_PRO_CACHE_MMU_MEM_FORCE_PU_V = 0x1
const EXTMEM_PRO_CACHE_MMU_MEM_FORCE_PU_S = 2
const EXTMEM_PRO_CACHE_MMU_MEM_FORCE_PD_V = 0x1
const EXTMEM_PRO_CACHE_MMU_MEM_FORCE_PD_S = 1
const EXTMEM_PRO_CACHE_MMU_MEM_FORCE_ON_V = 0x1
const EXTMEM_PRO_CACHE_MMU_MEM_FORCE_ON_S = 0
const EXTMEM_PRO_DCACHE_STATE = 0x00000FFF
const EXTMEM_PRO_DCACHE_STATE_V = 0xFFF
const EXTMEM_PRO_DCACHE_STATE_S = 12
const EXTMEM_PRO_ICACHE_STATE = 0x00000FFF
const EXTMEM_PRO_ICACHE_STATE_V = 0xFFF
const EXTMEM_PRO_ICACHE_STATE_S = 0
const EXTMEM_RECORD_DISABLE_G0CB_DECRYPT_V = 0x1
const EXTMEM_RECORD_DISABLE_G0CB_DECRYPT_S = 1
const EXTMEM_RECORD_DISABLE_DB_ENCRYPT_V = 0x1
const EXTMEM_RECORD_DISABLE_DB_ENCRYPT_S = 0
const EXTMEM_CLK_FORCE_ON_AUTOMATIC_ENCRYPT_DECRYPT_V = 0x1
const EXTMEM_CLK_FORCE_ON_AUTOMATIC_ENCRYPT_DECRYPT_S = 2
const EXTMEM_CLK_FORCE_ON_G0CB_DECRYPT_V = 0x1
const EXTMEM_CLK_FORCE_ON_G0CB_DECRYPT_S = 1
const EXTMEM_CLK_FORCE_ON_DB_ENCRYPT_V = 0x1
const EXTMEM_CLK_FORCE_ON_DB_ENCRYPT_S = 0
const EXTMEM_ALLOC_WB_HOLD_ARBITER_V = 0x1
const EXTMEM_ALLOC_WB_HOLD_ARBITER_S = 0
const EXTMEM_PRO_DCACHE_PRELOAD_INT_CLR_V = 0x1
const EXTMEM_PRO_DCACHE_PRELOAD_INT_CLR_S = 5
const EXTMEM_PRO_DCACHE_PRELOAD_INT_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_PRELOAD_INT_ENA_S = 4
const EXTMEM_PRO_DCACHE_PRELOAD_INT_ST_V = 0x1
const EXTMEM_PRO_DCACHE_PRELOAD_INT_ST_S = 3
const EXTMEM_PRO_ICACHE_PRELOAD_INT_CLR_V = 0x1
const EXTMEM_PRO_ICACHE_PRELOAD_INT_CLR_S = 2
const EXTMEM_PRO_ICACHE_PRELOAD_INT_ENA_V = 0x1
const EXTMEM_PRO_ICACHE_PRELOAD_INT_ENA_S = 1
const EXTMEM_PRO_ICACHE_PRELOAD_INT_ST_V = 0x1
const EXTMEM_PRO_ICACHE_PRELOAD_INT_ST_S = 0
const EXTMEM_PRO_DCACHE_SYNC_INT_CLR_V = 0x1
const EXTMEM_PRO_DCACHE_SYNC_INT_CLR_S = 5
const EXTMEM_PRO_DCACHE_SYNC_INT_ENA_V = 0x1
const EXTMEM_PRO_DCACHE_SYNC_INT_ENA_S = 4
const EXTMEM_PRO_DCACHE_SYNC_INT_ST_V = 0x1
const EXTMEM_PRO_DCACHE_SYNC_INT_ST_S = 3
const EXTMEM_PRO_ICACHE_SYNC_INT_CLR_V = 0x1
const EXTMEM_PRO_ICACHE_SYNC_INT_CLR_S = 2
const EXTMEM_PRO_ICACHE_SYNC_INT_ENA_V = 0x1
const EXTMEM_PRO_ICACHE_SYNC_INT_ENA_S = 1
const EXTMEM_PRO_ICACHE_SYNC_INT_ST_V = 0x1
const EXTMEM_PRO_ICACHE_SYNC_INT_ST_S = 0
const EXTMEM_PRO_CACHE_IGNORE_SYNC_MMU_ENTRY_FAULT_V = 0x1
const EXTMEM_PRO_CACHE_IGNORE_SYNC_MMU_ENTRY_FAULT_S = 1
const EXTMEM_PRO_CACHE_IGNORE_PRELOAD_MMU_ENTRY_FAULT_V = 0x1
const EXTMEM_PRO_CACHE_IGNORE_PRELOAD_MMU_ENTRY_FAULT_S = 0
const EXTMEM_CLK_EN_V = 0x1
const EXTMEM_CLK_EN_S = 0
const EXTMEM_DATE = 0x0FFFFFFF
const EXTMEM_DATE_V = 0xFFFFFFF
const EXTMEM_DATE_S = 0
const SOC_IRAM0_ADDRESS_LOW = 0x40000000
const SOC_IRAM0_ADDRESS_HIGH = 0x40400000
const SOC_IRAM0_CACHE_ADDRESS_LOW = 0x40080000
const SOC_IRAM0_CACHE_ADDRESS_HIGH = 0x40400000
const SOC_IRAM1_ADDRESS_LOW = 0x40400000
const SOC_IRAM1_ADDRESS_HIGH = 0x40800000
const SOC_DROM0_ADDRESS_LOW = 0x3f000000
const SOC_DROM0_ADDRESS_HIGH = 0x3f400000
const SOC_DRAM0_ADDRESS_LOW = 0x3fc00000
const SOC_DRAM0_ADDRESS_HIGH = 0x40000000
const SOC_DRAM0_CACHE_ADDRESS_LOW = 0x3fc00000
const SOC_DRAM0_CACHE_ADDRESS_HIGH = 0x3ff80000
const SOC_DRAM1_ADDRESS_LOW = 0x3f800000
const SOC_DRAM1_ADDRESS_HIGH = 0x3fc00000
const SOC_DPORT_ADDRESS_LOW = 0x3f400000
const SOC_DPORT_ADDRESS_HIGH = 0x3f800000
const SOC_DPORT_CACHE_ADDRESS_LOW = 0x3f500000
const SOC_DPORT_CACHE_ADDRESS_HIGH = 0x3f800000
const PRO_CACHE_IBUS0 = 0
const PRO_CACHE_IBUS0_MMU_START = 0
const PRO_CACHE_IBUS0_MMU_END = 0x100
const PRO_CACHE_IBUS1 = 1
const PRO_CACHE_IBUS1_MMU_START = 0x100
const PRO_CACHE_IBUS1_MMU_END = 0x200
const PRO_CACHE_IBUS2 = 2
const PRO_CACHE_IBUS2_MMU_START = 0x200
const PRO_CACHE_IBUS2_MMU_END = 0x300
const PRO_CACHE_DBUS0 = 3
const PRO_CACHE_DBUS0_MMU_START = 0x300
const PRO_CACHE_DBUS0_MMU_END = 0x400
const PRO_CACHE_DBUS1 = 4
const PRO_CACHE_DBUS1_MMU_START = 0x400
const PRO_CACHE_DBUS1_MMU_END = 0x500
const PRO_CACHE_DBUS2 = 5
const PRO_CACHE_DBUS2_MMU_START = 0x500
const PRO_CACHE_DBUS2_MMU_END = 0x600
const ICACHE_MMU_SIZE = 0x300
const DCACHE_MMU_SIZE = 0x300
const MMU_BUS_SIZE = 0x100
const SOC_MMU_VALID = 0
const SOC_MMU_VALID_VAL_MASK = 0x3fff
const SOC_MMU_MAX_PADDR_PAGE_NUM = 16384
const SOC_MMU_VADDR_MASK = 0x3FFFFF
const SOC_MMU_ENTRY_NUM = 384
const BUS_NUM_MASK = 0x3
const CACHE_MEMORY_BANK_SIZE = 8192
const CACHE_MEMORY_BANK_NUM = 4
const CACHE_MEMORY_BANK_NUM_MASK = 0x3
const CACHE_MEMORY_LAYOUT_SHIFT = 4
const CACHE_MEMORY_LAYOUT_SHIFT0 = 0
const CACHE_MEMORY_LAYOUT_SHIFT1 = 4
const CACHE_MEMORY_LAYOUT_SHIFT2 = 8
const CACHE_MEMORY_LAYOUT_SHIFT3 = 12
const CACHE_MEMORY_LAYOUT_MASK = 0xf
const CACHE_MEMORY_BANK0_ADDR = 0x3FFB0000
const CACHE_MEMORY_BANK1_ADDR = 0x3FFB2000
const CACHE_MEMORY_BANK2_ADDR = 0x3FFB4000
const CACHE_MEMORY_BANK3_ADDR = 0x3FFB6000
const SOC_MMU_DBUS_VADDR_BASE = 0x3E000000
const SOC_MMU_IBUS_VADDR_BASE = 0x40000000
const SOC_MMU_LINEAR_ADDR_MASK = 0x1FFFFFF
const SHA_MODE_SHA1 = 0
const SHA_MODE_SHA224 = 1
const SHA_MODE_SHA256 = 2
const SHA_MODE_SHA384 = 3
const SHA_MODE_SHA512 = 4
const SHA_MODE_SHA512_224 = 5
const SHA_MODE_SHA512_256 = 6
const SHA_MODE_SHA512_T = 7
const AES_STATE_IDLE = 0
const AES_STATE_BUSY = 1
const AES_STATE_DONE = 2
const GPIO_SD0_PRESCALE = 0x000000FF
const GPIO_SD0_PRESCALE_V = 0xFF
const GPIO_SD0_PRESCALE_S = 8
const GPIO_SD0_IN = 0x000000FF
const GPIO_SD0_IN_V = 0xFF
const GPIO_SD0_IN_S = 0
const GPIO_SD1_PRESCALE = 0x000000FF
const GPIO_SD1_PRESCALE_V = 0xFF
const GPIO_SD1_PRESCALE_S = 8
const GPIO_SD1_IN = 0x000000FF
const GPIO_SD1_IN_V = 0xFF
const GPIO_SD1_IN_S = 0
const GPIO_SD2_PRESCALE = 0x000000FF
const GPIO_SD2_PRESCALE_V = 0xFF
const GPIO_SD2_PRESCALE_S = 8
const GPIO_SD2_IN = 0x000000FF
const GPIO_SD2_IN_V = 0xFF
const GPIO_SD2_IN_S = 0
const GPIO_SD3_PRESCALE = 0x000000FF
const GPIO_SD3_PRESCALE_V = 0xFF
const GPIO_SD3_PRESCALE_S = 8
const GPIO_SD3_IN = 0x000000FF
const GPIO_SD3_IN_V = 0xFF
const GPIO_SD3_IN_S = 0
const GPIO_SD4_PRESCALE = 0x000000FF
const GPIO_SD4_PRESCALE_V = 0xFF
const GPIO_SD4_PRESCALE_S = 8
const GPIO_SD4_IN = 0x000000FF
const GPIO_SD4_IN_V = 0xFF
const GPIO_SD4_IN_S = 0
const GPIO_SD5_PRESCALE = 0x000000FF
const GPIO_SD5_PRESCALE_V = 0xFF
const GPIO_SD5_PRESCALE_S = 8
const GPIO_SD5_IN = 0x000000FF
const GPIO_SD5_IN_V = 0xFF
const GPIO_SD5_IN_S = 0
const GPIO_SD6_PRESCALE = 0x000000FF
const GPIO_SD6_PRESCALE_V = 0xFF
const GPIO_SD6_PRESCALE_S = 8
const GPIO_SD6_IN = 0x000000FF
const GPIO_SD6_IN_V = 0xFF
const GPIO_SD6_IN_S = 0
const GPIO_SD7_PRESCALE = 0x000000FF
const GPIO_SD7_PRESCALE_V = 0xFF
const GPIO_SD7_PRESCALE_S = 8
const GPIO_SD7_IN = 0x000000FF
const GPIO_SD7_IN_V = 0xFF
const GPIO_SD7_IN_S = 0
const GPIO_SD_CLK_EN_V = 0x1
const GPIO_SD_CLK_EN_S = 31
const GPIO_SPI_SWAP_V = 0x1
const GPIO_SPI_SWAP_S = 31
const GPIO_FUNCTION_CLK_EN_V = 0x1
const GPIO_FUNCTION_CLK_EN_S = 30
const GPIO_SD_DATE = 0x0FFFFFFF
const GPIO_SD_DATE_V = 0xFFFFFFF
const GPIO_SD_DATE_S = 0
const SLP_OE_V = 1
const SLP_OE_S = 0
const SLP_SEL_V = 1
const SLP_SEL_S = 1
const SLP_PD_V = 1
const SLP_PD_S = 2
const SLP_PU_V = 1
const SLP_PU_S = 3
const SLP_IE_V = 1
const SLP_IE_S = 4
const SLP_DRV = 0x3
const SLP_DRV_V = 0x3
const SLP_DRV_S = 5
const FUN_PD_V = 1
const FUN_PD_S = 7
const FUN_PU_V = 1
const FUN_PU_S = 8
const FUN_IE_V = 1
const FUN_IE_S = 9
const FUN_DRV = 0x3
const FUN_DRV_V = 0x3
const FUN_DRV_S = 10
const MCU_SEL = 0x7
const MCU_SEL_V = 0x7
const MCU_SEL_S = 12
const FILTER_EN_V = 1
const FILTER_EN_S = 15
const PIN_FUNC_GPIO = 1
const SPI_CS1_GPIO_NUM = 26
const SPI_HD_GPIO_NUM = 27
const SPI_WP_GPIO_NUM = 28
const SPI_CS0_GPIO_NUM = 29
const SPI_CLK_GPIO_NUM = 30
const SPI_Q_GPIO_NUM = 31
const SPI_D_GPIO_NUM = 32
const SPI_D4_GPIO_NUM = 33
const SPI_D5_GPIO_NUM = 34
const SPI_D6_GPIO_NUM = 35
const SPI_D7_GPIO_NUM = 36
const SPI_DQS_GPIO_NUM = 37
const MAX_RTC_GPIO_NUM = 21
const MAX_PAD_GPIO_NUM = 46
const MAX_GPIO_NUM = 53
const PAD_POWER_SEL_V = 0x1
const PAD_POWER_SEL_S = 15
const PAD_POWER_SWITCH_DELAY = 0x7
const PAD_POWER_SWITCH_DELAY_V = 0x7
const PAD_POWER_SWITCH_DELAY_S = 12
const CLK_OUT3 = 0xf
const CLK_OUT3_S = 8
const CLK_OUT2 = 0xf
const CLK_OUT2_S = 4
const CLK_OUT1 = 0xf
const CLK_OUT1_S = 0
const FUNC_GPIO0_GPIO0 = 1
const FUNC_GPIO0_GPIO0_0 = 0
const FUNC_GPIO1_GPIO1 = 1
const FUNC_GPIO1_GPIO1_0 = 0
const FUNC_GPIO2_GPIO2 = 1
const FUNC_GPIO2_GPIO2_0 = 0
const FUNC_GPIO3_GPIO3 = 1
const FUNC_GPIO3_GPIO3_0 = 0
const FUNC_GPIO4_GPIO4 = 1
const FUNC_GPIO4_GPIO4_0 = 0
const FUNC_GPIO5_GPIO5 = 1
const FUNC_GPIO5_GPIO5_0 = 0
const FUNC_GPIO6_GPIO6 = 1
const FUNC_GPIO6_GPIO6_0 = 0
const FUNC_GPIO7_GPIO7 = 1
const FUNC_GPIO7_GPIO7_0 = 0
const FUNC_GPIO8_SUBSPICS1 = 3
const FUNC_GPIO8_GPIO8 = 1
const FUNC_GPIO8_GPIO8_0 = 0
const FUNC_GPIO9_FSPIHD = 4
const FUNC_GPIO9_SUBSPIHD = 3
const FUNC_GPIO9_GPIO9 = 1
const FUNC_GPIO9_GPIO9_0 = 0
const FUNC_GPIO10_FSPICS0 = 4
const FUNC_GPIO10_SUBSPICS0 = 3
const FUNC_GPIO10_FSPIIO4 = 2
const FUNC_GPIO10_GPIO10 = 1
const FUNC_GPIO10_GPIO10_0 = 0
const FUNC_GPIO11_FSPID = 4
const FUNC_GPIO11_SUBSPID = 3
const FUNC_GPIO11_FSPIIO5 = 2
const FUNC_GPIO11_GPIO11 = 1
const FUNC_GPIO11_GPIO11_0 = 0
const FUNC_GPIO12_FSPICLK = 4
const FUNC_GPIO12_SUBSPICLK = 3
const FUNC_GPIO12_FSPIIO6 = 2
const FUNC_GPIO12_GPIO12 = 1
const FUNC_GPIO12_GPIO12_0 = 0
const FUNC_GPIO13_FSPIQ = 4
const FUNC_GPIO13_SUBSPIQ = 3
const FUNC_GPIO13_FSPIIO7 = 2
const FUNC_GPIO13_GPIO13 = 1
const FUNC_GPIO13_GPIO13_0 = 0
const FUNC_GPIO14_FSPIWP = 4
const FUNC_GPIO14_SUBSPIWP = 3
const FUNC_GPIO14_FSPIDQS = 2
const FUNC_GPIO14_GPIO14 = 1
const FUNC_GPIO14_GPIO14_0 = 0
const FUNC_XTAL_32K_P_U0RTS = 2
const FUNC_XTAL_32K_P_GPIO15 = 1
const FUNC_XTAL_32K_P_GPIO15_0 = 0
const FUNC_XTAL_32K_N_U0CTS = 2
const FUNC_XTAL_32K_N_GPIO16 = 1
const FUNC_XTAL_32K_N_GPIO16_0 = 0
const FUNC_DAC_1_U1TXD = 2
const FUNC_DAC_1_GPIO17 = 1
const FUNC_DAC_1_GPIO17_0 = 0
const FUNC_DAC_2_CLK_OUT3 = 3
const FUNC_DAC_2_U1RXD = 2
const FUNC_DAC_2_GPIO18 = 1
const FUNC_DAC_2_GPIO18_0 = 0
const FUNC_GPIO19_CLK_OUT2 = 3
const FUNC_GPIO19_U1RTS = 2
const FUNC_GPIO19_GPIO19 = 1
const FUNC_GPIO19_GPIO19_0 = 0
const FUNC_GPIO20_CLK_OUT1 = 3
const FUNC_GPIO20_U1CTS = 2
const FUNC_GPIO20_GPIO20 = 1
const FUNC_GPIO20_GPIO20_0 = 0
const FUNC_GPIO21_GPIO21 = 1
const FUNC_GPIO21_GPIO21_0 = 0
const FUNC_SPICS1_GPIO26 = 1
const FUNC_SPICS1_SPICS1 = 0
const FUNC_SPIHD_GPIO27 = 1
const FUNC_SPIHD_SPIHD = 0
const FUNC_SPIWP_GPIO28 = 1
const FUNC_SPIWP_SPIWP = 0
const FUNC_SPICS0_GPIO29 = 1
const FUNC_SPICS0_SPICS0 = 0
const FUNC_SPICLK_GPIO30 = 1
const FUNC_SPICLK_SPICLK = 0
const FUNC_SPIQ_GPIO31 = 1
const FUNC_SPIQ_SPIQ = 0
const FUNC_SPID_GPIO32 = 1
const FUNC_SPID_SPID = 0
const FUNC_GPIO33_SPIIO4 = 4
const FUNC_GPIO33_SUBSPIHD = 3
const FUNC_GPIO33_FSPIHD = 2
const FUNC_GPIO33_GPIO33 = 1
const FUNC_GPIO33_GPIO33_0 = 0
const FUNC_GPIO34_SPIIO5 = 4
const FUNC_GPIO34_SUBSPICS0 = 3
const FUNC_GPIO34_FSPICS0 = 2
const FUNC_GPIO34_GPIO34 = 1
const FUNC_GPIO34_GPIO34_0 = 0
const FUNC_GPIO35_SPIIO6 = 4
const FUNC_GPIO35_SUBSPID = 3
const FUNC_GPIO35_FSPID = 2
const FUNC_GPIO35_GPIO35 = 1
const FUNC_GPIO35_GPIO35_0 = 0
const FUNC_GPIO36_SPIIO7 = 4
const FUNC_GPIO36_SUBSPICLK = 3
const FUNC_GPIO36_FSPICLK = 2
const FUNC_GPIO36_GPIO36 = 1
const FUNC_GPIO36_GPIO36_0 = 0
const FUNC_GPIO37_SPIDQS = 4
const FUNC_GPIO37_SUBSPIQ = 3
const FUNC_GPIO37_FSPIQ = 2
const FUNC_GPIO37_GPIO37 = 1
const FUNC_GPIO37_GPIO37_0 = 0
const FUNC_GPIO38_SUBSPIWP = 3
const FUNC_GPIO38_FSPIWP = 2
const FUNC_GPIO38_GPIO38 = 1
const FUNC_GPIO38_GPIO38_0 = 0
const FUNC_MTCK_SUBSPICS1 = 3
const FUNC_MTCK_CLK_OUT3 = 2
const FUNC_MTCK_GPIO39 = 1
const FUNC_MTCK_MTCK = 0
const FUNC_MTDO_CLK_OUT2 = 2
const FUNC_MTDO_GPIO40 = 1
const FUNC_MTDO_MTDO = 0
const FUNC_MTDI_CLK_OUT1 = 2
const FUNC_MTDI_GPIO41 = 1
const FUNC_MTDI_MTDI = 0
const FUNC_MTMS_GPIO42 = 1
const FUNC_MTMS_MTMS = 0
const FUNC_U0TXD_CLK_OUT1 = 2
const FUNC_U0TXD_GPIO43 = 1
const FUNC_U0TXD_U0TXD = 0
const FUNC_U0RXD_CLK_OUT2 = 2
const FUNC_U0RXD_GPIO44 = 1
const FUNC_U0RXD_U0RXD = 0
const FUNC_GPIO45_GPIO45 = 1
const FUNC_GPIO45_GPIO45_0 = 0
const FUNC_GPIO46_GPIO46 = 1
const FUNC_GPIO46_GPIO46_0 = 0
const IO_MUX_DATE = 0xFFFFFFFF
const IO_MUX_DATE_S = 0
const IO_MUX_DATE_VERSION = 0x1907160
const SPIQ_IN_IDX = 0
const SPIQ_OUT_IDX = 0
const SPID_IN_IDX = 1
const SPID_OUT_IDX = 1
const SPIHD_IN_IDX = 2
const SPIHD_OUT_IDX = 2
const SPIWP_IN_IDX = 3
const SPIWP_OUT_IDX = 3
const SPICLK_OUT_MUX_IDX = 4
const SPICS0_OUT_IDX = 5
const SPICS1_OUT_IDX = 6
const SPID4_IN_IDX = 7
const SPID4_OUT_IDX = 7
const SPID5_IN_IDX = 8
const SPID5_OUT_IDX = 8
const SPID6_IN_IDX = 9
const SPID6_OUT_IDX = 9
const SPID7_IN_IDX = 10
const SPID7_OUT_IDX = 10
const SPIDQS_IN_IDX = 11
const SPIDQS_OUT_IDX = 11
const U0RXD_IN_IDX = 14
const U0TXD_OUT_IDX = 14
const U0CTS_IN_IDX = 15
const U0RTS_OUT_IDX = 15
const U0DSR_IN_IDX = 16
const U0DTR_OUT_IDX = 16
const U1RXD_IN_IDX = 17
const U1TXD_OUT_IDX = 17
const U1CTS_IN_IDX = 18
const U1RTS_OUT_IDX = 18
const U1DSR_IN_IDX = 21
const U1DTR_OUT_IDX = 21
const I2S0O_BCK_IN_IDX = 23
const I2S0O_BCK_OUT_IDX = 23
const I2S0O_WS_IN_IDX = 25
const I2S0O_WS_OUT_IDX = 25
const I2S0I_BCK_IN_IDX = 27
const I2S0I_BCK_OUT_IDX = 27
const I2S0I_WS_IN_IDX = 28
const I2S0I_WS_OUT_IDX = 28
const I2CEXT0_SCL_IN_IDX = 29
const I2CEXT0_SCL_OUT_IDX = 29
const I2CEXT0_SDA_IN_IDX = 30
const I2CEXT0_SDA_OUT_IDX = 30
const SDIO_TOHOST_INT_OUT_IDX = 31
const GPIO_BT_ACTIVE_IDX = 37
const GPIO_BT_PRIORITY_IDX = 38
const PCNT_SIG_CH0_IN0_IDX = 39
const GPIO_WLAN_PRIO_IDX = 39
const PCNT_SIG_CH1_IN0_IDX = 40
const GPIO_WLAN_ACTIVE_IDX = 40
const PCNT_CTRL_CH0_IN0_IDX = 41
const BB_DIAG0_IDX = 41
const PCNT_CTRL_CH1_IN0_IDX = 42
const BB_DIAG1_IDX = 42
const PCNT_SIG_CH0_IN1_IDX = 43
const BB_DIAG2_IDX = 43
const PCNT_SIG_CH1_IN1_IDX = 44
const BB_DIAG3_IDX = 44
const PCNT_CTRL_CH0_IN1_IDX = 45
const BB_DIAG4_IDX = 45
const PCNT_CTRL_CH1_IN1_IDX = 46
const BB_DIAG5_IDX = 46
const PCNT_SIG_CH0_IN2_IDX = 47
const BB_DIAG6_IDX = 47
const PCNT_SIG_CH1_IN2_IDX = 48
const BB_DIAG7_IDX = 48
const PCNT_CTRL_CH0_IN2_IDX = 49
const BB_DIAG8_IDX = 49
const PCNT_CTRL_CH1_IN2_IDX = 50
const BB_DIAG9_IDX = 50
const PCNT_SIG_CH0_IN3_IDX = 51
const BB_DIAG10_IDX = 51
const PCNT_SIG_CH1_IN3_IDX = 52
const BB_DIAG11_IDX = 52
const PCNT_CTRL_CH0_IN3_IDX = 53
const BB_DIAG12_IDX = 53
const PCNT_CTRL_CH1_IN3_IDX = 54
const BB_DIAG13_IDX = 54
const BB_DIAG14_IDX = 55
const BB_DIAG15_IDX = 56
const BB_DIAG16_IDX = 57
const BB_DIAG17_IDX = 58
const BB_DIAG18_IDX = 59
const BB_DIAG19_IDX = 60
const USB_EXTPHY_VP_IDX = 61
const USB_EXTPHY_OEN_IDX = 61
const USB_EXTPHY_VM_IDX = 62
const USB_EXTPHY_SPEED_IDX = 62
const USB_EXTPHY_RCV_IDX = 63
const USB_EXTPHY_VPO_IDX = 63
const USB_OTG_IDDIG_IN_IDX = 64
const USB_EXTPHY_VMO_IDX = 64
const USB_OTG_AVALID_IN_IDX = 65
const USB_EXTPHY_SUSPND_IDX = 65
const USB_SRP_BVALID_IN_IDX = 66
const USB_OTG_IDPULLUP_IDX = 66
const USB_OTG_VBUSVALID_IN_IDX = 67
const USB_OTG_DPPULLDOWN_IDX = 67
const USB_SRP_SESSEND_IN_IDX = 68
const USB_OTG_DMPULLDOWN_IDX = 68
const USB_OTG_DRVVBUS_IDX = 69
const USB_SRP_CHRGVBUS_IDX = 70
const USB_SRP_DISCHRGVBUS_IDX = 71
const SPI3_CLK_IN_IDX = 72
const SPI3_CLK_OUT_MUX_IDX = 72
const SPI3_Q_IN_IDX = 73
const SPI3_Q_OUT_IDX = 73
const SPI3_D_IN_IDX = 74
const SPI3_D_OUT_IDX = 74
const SPI3_HD_IN_IDX = 75
const SPI3_HD_OUT_IDX = 75
const SPI3_CS0_IN_IDX = 76
const SPI3_CS0_OUT_IDX = 76
const SPI3_CS1_OUT_IDX = 77
const SPI3_CS2_OUT_IDX = 78
const LEDC_LS_SIG_OUT0_IDX = 79
const LEDC_LS_SIG_OUT1_IDX = 80
const LEDC_LS_SIG_OUT2_IDX = 81
const LEDC_LS_SIG_OUT3_IDX = 82
const RMT_SIG_IN0_IDX = 83
const LEDC_LS_SIG_OUT4_IDX = 83
const RMT_SIG_IN1_IDX = 84
const LEDC_LS_SIG_OUT5_IDX = 84
const RMT_SIG_IN2_IDX = 85
const LEDC_LS_SIG_OUT6_IDX = 85
const RMT_SIG_IN3_IDX = 86
const LEDC_LS_SIG_OUT7_IDX = 86
const RMT_SIG_OUT0_IDX = 87
const RMT_SIG_OUT1_IDX = 88
const RMT_SIG_OUT2_IDX = 89
const RMT_SIG_OUT3_IDX = 90
const EXT_ADC_START_IDX = 93
const I2CEXT1_SCL_IN_IDX = 95
const I2CEXT1_SCL_OUT_IDX = 95
const I2CEXT1_SDA_IN_IDX = 96
const I2CEXT1_SDA_OUT_IDX = 96
const GPIO_SD0_OUT_IDX = 100
const GPIO_SD1_OUT_IDX = 101
const GPIO_SD2_OUT_IDX = 102
const GPIO_SD3_OUT_IDX = 103
const GPIO_SD4_OUT_IDX = 104
const GPIO_SD5_OUT_IDX = 105
const GPIO_SD6_OUT_IDX = 106
const GPIO_SD7_OUT_IDX = 107
const FSPICLK_IN_IDX = 108
const FSPICLK_OUT_MUX_IDX = 108
const FSPIQ_IN_IDX = 109
const FSPIQ_OUT_IDX = 109
const FSPID_IN_IDX = 110
const FSPID_OUT_IDX = 110
const FSPIHD_IN_IDX = 111
const FSPIHD_OUT_IDX = 111
const FSPIWP_IN_IDX = 112
const FSPIWP_OUT_IDX = 112
const FSPIIO4_IN_IDX = 113
const FSPIIO4_OUT_IDX = 113
const FSPIIO5_IN_IDX = 114
const FSPIIO5_OUT_IDX = 114
const FSPIIO6_IN_IDX = 115
const FSPIIO6_OUT_IDX = 115
const FSPIIO7_IN_IDX = 116
const FSPIIO7_OUT_IDX = 116
const FSPICS0_IN_IDX = 117
const FSPICS0_OUT_IDX = 117
const FSPICS1_OUT_IDX = 118
const FSPICS2_OUT_IDX = 119
const FSPICS3_OUT_IDX = 120
const FSPICS4_OUT_IDX = 121
const FSPICS5_OUT_IDX = 122
const TWAI_RX_IDX = 123
const TWAI_TX_IDX = 123
const TWAI_BUS_OFF_ON_IDX = 124
const TWAI_CLKOUT_IDX = 125
const SUBSPICLK_OUT_MUX_IDX = 126
const SUBSPIQ_IN_IDX = 127
const SUBSPIQ_OUT_IDX = 127
const SUBSPID_IN_IDX = 128
const SUBSPID_OUT_IDX = 128
const SUBSPIHD_IN_IDX = 129
const SUBSPIHD_OUT_IDX = 129
const SUBSPIWP_IN_IDX = 130
const SUBSPIWP_OUT_IDX = 130
const SUBSPICS0_OUT_IDX = 131
const SUBSPICS1_OUT_IDX = 132
const FSPIDQS_OUT_IDX = 133
const FSPI_HSYNC_OUT_IDX = 134
const FSPI_VSYNC_OUT_IDX = 135
const FSPI_DE_OUT_IDX = 136
const FSPICD_OUT_IDX = 137
const SPI3_CD_OUT_IDX = 139
const SPI3_DQS_OUT_IDX = 140
const I2S0I_DATA_IN0_IDX = 143
const I2S0O_DATA_OUT0_IDX = 143
const I2S0I_DATA_IN1_IDX = 144
const I2S0O_DATA_OUT1_IDX = 144
const I2S0I_DATA_IN2_IDX = 145
const I2S0O_DATA_OUT2_IDX = 145
const I2S0I_DATA_IN3_IDX = 146
const I2S0O_DATA_OUT3_IDX = 146
const I2S0I_DATA_IN4_IDX = 147
const I2S0O_DATA_OUT4_IDX = 147
const I2S0I_DATA_IN5_IDX = 148
const I2S0O_DATA_OUT5_IDX = 148
const I2S0I_DATA_IN6_IDX = 149
const I2S0O_DATA_OUT6_IDX = 149
const I2S0I_DATA_IN7_IDX = 150
const I2S0O_DATA_OUT7_IDX = 150
const I2S0I_DATA_IN8_IDX = 151
const I2S0O_DATA_OUT8_IDX = 151
const I2S0I_DATA_IN9_IDX = 152
const I2S0O_DATA_OUT9_IDX = 152
const I2S0I_DATA_IN10_IDX = 153
const I2S0O_DATA_OUT10_IDX = 153
const I2S0I_DATA_IN11_IDX = 154
const I2S0O_DATA_OUT11_IDX = 154
const I2S0I_DATA_IN12_IDX = 155
const I2S0O_DATA_OUT12_IDX = 155
const I2S0I_DATA_IN13_IDX = 156
const I2S0O_DATA_OUT13_IDX = 156
const I2S0I_DATA_IN14_IDX = 157
const I2S0O_DATA_OUT14_IDX = 157
const I2S0I_DATA_IN15_IDX = 158
const I2S0O_DATA_OUT15_IDX = 158
const I2S0O_DATA_OUT16_IDX = 159
const I2S0O_DATA_OUT17_IDX = 160
const I2S0O_DATA_OUT18_IDX = 161
const I2S0O_DATA_OUT19_IDX = 162
const I2S0O_DATA_OUT20_IDX = 163
const I2S0O_DATA_OUT21_IDX = 164
const I2S0O_DATA_OUT22_IDX = 165
const I2S0O_DATA_OUT23_IDX = 166
const SUBSPID4_IN_IDX = 167
const SUBSPID4_OUT_IDX = 167
const SUBSPID5_IN_IDX = 168
const SUBSPID5_OUT_IDX = 168
const SUBSPID6_IN_IDX = 169
const SUBSPID6_OUT_IDX = 169
const SUBSPID7_IN_IDX = 170
const SUBSPID7_OUT_IDX = 170
const SUBSPIDQS_IN_IDX = 171
const SUBSPIDQS_OUT_IDX = 171
const I2S0I_H_SYNC_IDX = 193
const I2S0I_V_SYNC_IDX = 194
const I2S0I_H_ENABLE_IDX = 195
const PCMFSYNC_IN_IDX = 203
const BT_AUDIO0_IRQ_IDX = 203
const PCMCLK_IN_IDX = 204
const BT_AUDIO1_IRQ_IDX = 204
const PCMDIN_IDX = 205
const BT_AUDIO2_IRQ_IDX = 205
const RW_WAKEUP_REQ_IDX = 206
const BLE_AUDIO0_IRQ_IDX = 206
const BLE_AUDIO1_IRQ_IDX = 207
const BLE_AUDIO2_IRQ_IDX = 208
const PCMFSYNC_OUT_IDX = 209
const PCMCLK_OUT_IDX = 210
const PCMDOUT_IDX = 211
const BLE_AUDIO_SYNC0_P_IDX = 212
const BLE_AUDIO_SYNC1_P_IDX = 213
const BLE_AUDIO_SYNC2_P_IDX = 214
const ANT_SEL0_IDX = 215
const ANT_SEL1_IDX = 216
const ANT_SEL2_IDX = 217
const ANT_SEL3_IDX = 218
const ANT_SEL4_IDX = 219
const ANT_SEL5_IDX = 220
const ANT_SEL6_IDX = 221
const ANT_SEL7_IDX = 222
const SIG_IN_FUNC_223_IDX = 223
const SIG_IN_FUNC223_IDX = 223
const SIG_IN_FUNC_224_IDX = 224
const SIG_IN_FUNC224_IDX = 224
const SIG_IN_FUNC_225_IDX = 225
const SIG_IN_FUNC225_IDX = 225
const SIG_IN_FUNC_226_IDX = 226
const SIG_IN_FUNC226_IDX = 226
const SIG_IN_FUNC_227_IDX = 227
const SIG_IN_FUNC227_IDX = 227
const PRO_ALONEGPIO_IN0_IDX = 235
const PRO_ALONEGPIO_OUT0_IDX = 235
const PRO_ALONEGPIO_IN1_IDX = 236
const PRO_ALONEGPIO_OUT1_IDX = 236
const PRO_ALONEGPIO_IN2_IDX = 237
const PRO_ALONEGPIO_OUT2_IDX = 237
const PRO_ALONEGPIO_IN3_IDX = 238
const PRO_ALONEGPIO_OUT3_IDX = 238
const PRO_ALONEGPIO_IN4_IDX = 239
const PRO_ALONEGPIO_OUT4_IDX = 239
const PRO_ALONEGPIO_IN5_IDX = 240
const PRO_ALONEGPIO_OUT5_IDX = 240
const PRO_ALONEGPIO_IN6_IDX = 241
const PRO_ALONEGPIO_OUT6_IDX = 241
const PRO_ALONEGPIO_IN7_IDX = 242
const PRO_ALONEGPIO_OUT7_IDX = 242
const CLK_I2S_MUX_IDX = 251
const SIG_GPIO_OUT_IDX = 256
const GPIO_MAP_DATE_IDX = 0x1904100
const MIN_CACHE_SIZE = 8192
const MAX_CACHE_SIZE = 16384
const MIN_CACHE_WAYS = 4
const MAX_CACHE_WAYS = 4
const MIN_CACHE_LINE_SIZE = 16
const TAG_SIZE = 4
const ESP_ROM_ERR_INVALID_ARG = 1
const MMU_SET_ADDR_ALIGNED_ERROR = 2
const MMU_SET_PASE_SIZE_ERROR = 3
const MMU_SET_VADDR_OUT_RANGE = 4
const DPORT_PRO_MAC_INTR_MAP = 0x0000001F
const DPORT_PRO_MAC_INTR_MAP_V = 0x1F
const DPORT_PRO_MAC_INTR_MAP_S = 0
const DPORT_PRO_MAC_NMI_MAP = 0x0000001F
const DPORT_PRO_MAC_NMI_MAP_V = 0x1F
const DPORT_PRO_MAC_NMI_MAP_S = 0
const DPORT_PRO_PWR_INTR_MAP = 0x0000001F
const DPORT_PRO_PWR_INTR_MAP_V = 0x1F
const DPORT_PRO_PWR_INTR_MAP_S = 0
const DPORT_PRO_BB_INT_MAP = 0x0000001F
const DPORT_PRO_BB_INT_MAP_V = 0x1F
const DPORT_PRO_BB_INT_MAP_S = 0
const DPORT_PRO_BT_MAC_INT_MAP = 0x0000001F
const DPORT_PRO_BT_MAC_INT_MAP_V = 0x1F
const DPORT_PRO_BT_MAC_INT_MAP_S = 0
const DPORT_PRO_BT_BB_INT_MAP = 0x0000001F
const DPORT_PRO_BT_BB_INT_MAP_V = 0x1F
const DPORT_PRO_BT_BB_INT_MAP_S = 0
const DPORT_PRO_BT_BB_NMI_MAP = 0x0000001F
const DPORT_PRO_BT_BB_NMI_MAP_V = 0x1F
const DPORT_PRO_BT_BB_NMI_MAP_S = 0
const DPORT_PRO_RWBT_IRQ_MAP = 0x0000001F
const DPORT_PRO_RWBT_IRQ_MAP_V = 0x1F
const DPORT_PRO_RWBT_IRQ_MAP_S = 0
const DPORT_PRO_RWBLE_IRQ_MAP = 0x0000001F
const DPORT_PRO_RWBLE_IRQ_MAP_V = 0x1F
const DPORT_PRO_RWBLE_IRQ_MAP_S = 0
const DPORT_PRO_RWBT_NMI_MAP = 0x0000001F
const DPORT_PRO_RWBT_NMI_MAP_V = 0x1F
const DPORT_PRO_RWBT_NMI_MAP_S = 0
const DPORT_PRO_RWBLE_NMI_MAP = 0x0000001F
const DPORT_PRO_RWBLE_NMI_MAP_V = 0x1F
const DPORT_PRO_RWBLE_NMI_MAP_S = 0
const DPORT_PRO_SLC0_INTR_MAP = 0x0000001F
const DPORT_PRO_SLC0_INTR_MAP_V = 0x1F
const DPORT_PRO_SLC0_INTR_MAP_S = 0
const DPORT_PRO_SLC1_INTR_MAP = 0x0000001F
const DPORT_PRO_SLC1_INTR_MAP_V = 0x1F
const DPORT_PRO_SLC1_INTR_MAP_S = 0
const DPORT_PRO_UHCI0_INTR_MAP = 0x0000001F
const DPORT_PRO_UHCI0_INTR_MAP_V = 0x1F
const DPORT_PRO_UHCI0_INTR_MAP_S = 0
const DPORT_PRO_UHCI1_INTR_MAP = 0x0000001F
const DPORT_PRO_UHCI1_INTR_MAP_V = 0x1F
const DPORT_PRO_UHCI1_INTR_MAP_S = 0
const DPORT_PRO_TG_T0_LEVEL_INT_MAP = 0x0000001F
const DPORT_PRO_TG_T0_LEVEL_INT_MAP_V = 0x1F
const DPORT_PRO_TG_T0_LEVEL_INT_MAP_S = 0
const DPORT_PRO_TG_T1_LEVEL_INT_MAP = 0x0000001F
const DPORT_PRO_TG_T1_LEVEL_INT_MAP_V = 0x1F
const DPORT_PRO_TG_T1_LEVEL_INT_MAP_S = 0
const DPORT_PRO_TG_WDT_LEVEL_INT_MAP = 0x0000001F
const DPORT_PRO_TG_WDT_LEVEL_INT_MAP_V = 0x1F
const DPORT_PRO_TG_WDT_LEVEL_INT_MAP_S = 0
const DPORT_PRO_TG_LACT_LEVEL_INT_MAP = 0x0000001F
const DPORT_PRO_TG_LACT_LEVEL_INT_MAP_V = 0x1F
const DPORT_PRO_TG_LACT_LEVEL_INT_MAP_S = 0
const DPORT_PRO_TG1_T0_LEVEL_INT_MAP = 0x0000001F
const DPORT_PRO_TG1_T0_LEVEL_INT_MAP_V = 0x1F
const DPORT_PRO_TG1_T0_LEVEL_INT_MAP_S = 0
const DPORT_PRO_TG1_T1_LEVEL_INT_MAP = 0x0000001F
const DPORT_PRO_TG1_T1_LEVEL_INT_MAP_V = 0x1F
const DPORT_PRO_TG1_T1_LEVEL_INT_MAP_S = 0
const DPORT_PRO_TG1_WDT_LEVEL_INT_MAP = 0x0000001F
const DPORT_PRO_TG1_WDT_LEVEL_INT_MAP_V = 0x1F
const DPORT_PRO_TG1_WDT_LEVEL_INT_MAP_S = 0
const DPORT_PRO_TG1_LACT_LEVEL_INT_MAP = 0x0000001F
const DPORT_PRO_TG1_LACT_LEVEL_INT_MAP_V = 0x1F
const DPORT_PRO_TG1_LACT_LEVEL_INT_MAP_S = 0
const DPORT_PRO_GPIO_DPORT_PRO_MAP = 0x0000001F
const DPORT_PRO_GPIO_DPORT_PRO_MAP_V = 0x1F
const DPORT_PRO_GPIO_DPORT_PRO_MAP_S = 0
const DPORT_PRO_GPIO_DPORT_PRO_NMI_MAP = 0x0000001F
const DPORT_PRO_GPIO_DPORT_PRO_NMI_MAP_V = 0x1F
const DPORT_PRO_GPIO_DPORT_PRO_NMI_MAP_S = 0
const DPORT_PRO_GPIO_DPORT_APP_MAP = 0x0000001F
const DPORT_PRO_GPIO_DPORT_APP_MAP_V = 0x1F
const DPORT_PRO_GPIO_DPORT_APP_MAP_S = 0
const DPORT_PRO_GPIO_DPORT_APP_NMI_MAP = 0x0000001F
const DPORT_PRO_GPIO_DPORT_APP_NMI_MAP_V = 0x1F
const DPORT_PRO_GPIO_DPORT_APP_NMI_MAP_S = 0
const DPORT_PRO_DEDICATED_GPIO_IN_INTR_MAP = 0x0000001F
const DPORT_PRO_DEDICATED_GPIO_IN_INTR_MAP_V = 0x1F
const DPORT_PRO_DEDICATED_GPIO_IN_INTR_MAP_S = 0
const DPORT_PRO_CPU_INTR_FROM_CPU_0_MAP = 0x0000001F
const DPORT_PRO_CPU_INTR_FROM_CPU_0_MAP_V = 0x1F
const DPORT_PRO_CPU_INTR_FROM_CPU_0_MAP_S = 0
const DPORT_PRO_CPU_INTR_FROM_CPU_1_MAP = 0x0000001F
const DPORT_PRO_CPU_INTR_FROM_CPU_1_MAP_V = 0x1F
const DPORT_PRO_CPU_INTR_FROM_CPU_1_MAP_S = 0
const DPORT_PRO_CPU_INTR_FROM_CPU_2_MAP = 0x0000001F
const DPORT_PRO_CPU_INTR_FROM_CPU_2_MAP_V = 0x1F
const DPORT_PRO_CPU_INTR_FROM_CPU_2_MAP_S = 0
const DPORT_PRO_CPU_INTR_FROM_CPU_3_MAP = 0x0000001F
const DPORT_PRO_CPU_INTR_FROM_CPU_3_MAP_V = 0x1F
const DPORT_PRO_CPU_INTR_FROM_CPU_3_MAP_S = 0
const DPORT_PRO_SPI_INTR_1_MAP = 0x0000001F
const DPORT_PRO_SPI_INTR_1_MAP_V = 0x1F
const DPORT_PRO_SPI_INTR_1_MAP_S = 0
const DPORT_PRO_SPI_INTR_2_MAP = 0x0000001F
const DPORT_PRO_SPI_INTR_2_MAP_V = 0x1F
const DPORT_PRO_SPI_INTR_2_MAP_S = 0
const DPORT_PRO_SPI_INTR_3_MAP = 0x0000001F
const DPORT_PRO_SPI_INTR_3_MAP_V = 0x1F
const DPORT_PRO_SPI_INTR_3_MAP_S = 0
const DPORT_PRO_I2S0_INT_MAP = 0x0000001F
const DPORT_PRO_I2S0_INT_MAP_V = 0x1F
const DPORT_PRO_I2S0_INT_MAP_S = 0
const DPORT_PRO_UART_INTR_MAP = 0x0000001F
const DPORT_PRO_UART_INTR_MAP_V = 0x1F
const DPORT_PRO_UART_INTR_MAP_S = 0
const DPORT_PRO_UART1_INTR_MAP = 0x0000001F
const DPORT_PRO_UART1_INTR_MAP_V = 0x1F
const DPORT_PRO_UART1_INTR_MAP_S = 0
const DPORT_PRO_UART2_INTR_MAP = 0x0000001F
const DPORT_PRO_UART2_INTR_MAP_V = 0x1F
const DPORT_PRO_UART2_INTR_MAP_S = 0
const DPORT_PRO_SDIO_HOST_DPORT_MAP = 0x0000001F
const DPORT_PRO_SDIO_HOST_DPORT_MAP_V = 0x1F
const DPORT_PRO_SDIO_HOST_DPORT_MAP_S = 0
const DPORT_PRO_PWM0_INTR_MAP = 0x0000001F
const DPORT_PRO_PWM0_INTR_MAP_V = 0x1F
const DPORT_PRO_PWM0_INTR_MAP_S = 0
const DPORT_PRO_PWM1_INTR_MAP = 0x0000001F
const DPORT_PRO_PWM1_INTR_MAP_V = 0x1F
const DPORT_PRO_PWM1_INTR_MAP_S = 0
const DPORT_PRO_PWM2_INTR_MAP = 0x0000001F
const DPORT_PRO_PWM2_INTR_MAP_V = 0x1F
const DPORT_PRO_PWM2_INTR_MAP_S = 0
const DPORT_PRO_PWM3_INTR_MAP = 0x0000001F
const DPORT_PRO_PWM3_INTR_MAP_V = 0x1F
const DPORT_PRO_PWM3_INTR_MAP_S = 0
const DPORT_PRO_LEDC_INT_MAP = 0x0000001F
const DPORT_PRO_LEDC_INT_MAP_V = 0x1F
const DPORT_PRO_LEDC_INT_MAP_S = 0
const DPORT_PRO_EFUSE_INT_MAP = 0x0000001F
const DPORT_PRO_EFUSE_INT_MAP_V = 0x1F
const DPORT_PRO_EFUSE_INT_MAP_S = 0
const DPORT_PRO_CAN_INT_MAP = 0x0000001F
const DPORT_PRO_CAN_INT_MAP_V = 0x1F
const DPORT_PRO_CAN_INT_MAP_S = 0
const DPORT_PRO_USB_INTR_MAP = 0x0000001F
const DPORT_PRO_USB_INTR_MAP_V = 0x1F
const DPORT_PRO_USB_INTR_MAP_S = 0
const DPORT_PRO_RTC_CORE_INTR_MAP = 0x0000001F
const DPORT_PRO_RTC_CORE_INTR_MAP_V = 0x1F
const DPORT_PRO_RTC_CORE_INTR_MAP_S = 0
const DPORT_PRO_RMT_INTR_MAP = 0x0000001F
const DPORT_PRO_RMT_INTR_MAP_V = 0x1F
const DPORT_PRO_RMT_INTR_MAP_S = 0
const DPORT_PRO_PCNT_INTR_MAP = 0x0000001F
const DPORT_PRO_PCNT_INTR_MAP_V = 0x1F
const DPORT_PRO_PCNT_INTR_MAP_S = 0
const DPORT_PRO_I2C_EXT0_INTR_MAP = 0x0000001F
const DPORT_PRO_I2C_EXT0_INTR_MAP_V = 0x1F
const DPORT_PRO_I2C_EXT0_INTR_MAP_S = 0
const DPORT_PRO_I2C_EXT1_INTR_MAP = 0x0000001F
const DPORT_PRO_I2C_EXT1_INTR_MAP_V = 0x1F
const DPORT_PRO_I2C_EXT1_INTR_MAP_S = 0
const DPORT_PRO_RSA_INTR_MAP = 0x0000001F
const DPORT_PRO_RSA_INTR_MAP_V = 0x1F
const DPORT_PRO_RSA_INTR_MAP_S = 0
const DPORT_PRO_SHA_INTR_MAP = 0x0000001F
const DPORT_PRO_SHA_INTR_MAP_V = 0x1F
const DPORT_PRO_SHA_INTR_MAP_S = 0
const DPORT_PRO_AES_INTR_MAP = 0x0000001F
const DPORT_PRO_AES_INTR_MAP_V = 0x1F
const DPORT_PRO_AES_INTR_MAP_S = 0
const DPORT_PRO_SPI2_DMA_INT_MAP = 0x0000001F
const DPORT_PRO_SPI2_DMA_INT_MAP_V = 0x1F
const DPORT_PRO_SPI2_DMA_INT_MAP_S = 0
const DPORT_PRO_SPI3_DMA_INT_MAP = 0x0000001F
const DPORT_PRO_SPI3_DMA_INT_MAP_V = 0x1F
const DPORT_PRO_SPI3_DMA_INT_MAP_S = 0
const DPORT_PRO_WDG_INT_MAP = 0x0000001F
const DPORT_PRO_WDG_INT_MAP_V = 0x1F
const DPORT_PRO_WDG_INT_MAP_S = 0
const DPORT_PRO_TIMER_INT1_MAP = 0x0000001F
const DPORT_PRO_TIMER_INT1_MAP_V = 0x1F
const DPORT_PRO_TIMER_INT1_MAP_S = 0
const DPORT_PRO_TIMER_INT2_MAP = 0x0000001F
const DPORT_PRO_TIMER_INT2_MAP_V = 0x1F
const DPORT_PRO_TIMER_INT2_MAP_S = 0
const DPORT_PRO_TG_T0_EDGE_INT_MAP = 0x0000001F
const DPORT_PRO_TG_T0_EDGE_INT_MAP_V = 0x1F
const DPORT_PRO_TG_T0_EDGE_INT_MAP_S = 0
const DPORT_PRO_TG_T1_EDGE_INT_MAP = 0x0000001F
const DPORT_PRO_TG_T1_EDGE_INT_MAP_V = 0x1F
const DPORT_PRO_TG_T1_EDGE_INT_MAP_S = 0
const DPORT_PRO_TG_WDT_EDGE_INT_MAP = 0x0000001F
const DPORT_PRO_TG_WDT_EDGE_INT_MAP_V = 0x1F
const DPORT_PRO_TG_WDT_EDGE_INT_MAP_S = 0
const DPORT_PRO_TG_LACT_EDGE_INT_MAP = 0x0000001F
const DPORT_PRO_TG_LACT_EDGE_INT_MAP_V = 0x1F
const DPORT_PRO_TG_LACT_EDGE_INT_MAP_S = 0
const DPORT_PRO_TG1_T0_EDGE_INT_MAP = 0x0000001F
const DPORT_PRO_TG1_T0_EDGE_INT_MAP_V = 0x1F
const DPORT_PRO_TG1_T0_EDGE_INT_MAP_S = 0
const DPORT_PRO_TG1_T1_EDGE_INT_MAP = 0x0000001F
const DPORT_PRO_TG1_T1_EDGE_INT_MAP_V = 0x1F
const DPORT_PRO_TG1_T1_EDGE_INT_MAP_S = 0
const DPORT_PRO_TG1_WDT_EDGE_INT_MAP = 0x0000001F
const DPORT_PRO_TG1_WDT_EDGE_INT_MAP_V = 0x1F
const DPORT_PRO_TG1_WDT_EDGE_INT_MAP_S = 0
const DPORT_PRO_TG1_LACT_EDGE_INT_MAP = 0x0000001F
const DPORT_PRO_TG1_LACT_EDGE_INT_MAP_V = 0x1F
const DPORT_PRO_TG1_LACT_EDGE_INT_MAP_S = 0
const DPORT_PRO_CACHE_IA_INT_MAP = 0x0000001F
const DPORT_PRO_CACHE_IA_INT_MAP_V = 0x1F
const DPORT_PRO_CACHE_IA_INT_MAP_S = 0
const DPORT_PRO_SYSTIMER_TARGET0_INT_MAP = 0x0000001F
const DPORT_PRO_SYSTIMER_TARGET0_INT_MAP_V = 0x1F
const DPORT_PRO_SYSTIMER_TARGET0_INT_MAP_S = 0
const DPORT_PRO_SYSTIMER_TARGET1_INT_MAP = 0x0000001F
const DPORT_PRO_SYSTIMER_TARGET1_INT_MAP_V = 0x1F
const DPORT_PRO_SYSTIMER_TARGET1_INT_MAP_S = 0
const DPORT_PRO_SYSTIMER_TARGET2_INT_MAP = 0x0000001F
const DPORT_PRO_SYSTIMER_TARGET2_INT_MAP_V = 0x1F
const DPORT_PRO_SYSTIMER_TARGET2_INT_MAP_S = 0
const DPORT_PRO_ASSIST_DEBUG_INTR_MAP = 0x0000001F
const DPORT_PRO_ASSIST_DEBUG_INTR_MAP_V = 0x1F
const DPORT_PRO_ASSIST_DEBUG_INTR_MAP_S = 0
const DPORT_PRO_PMS_PRO_IRAM0_ILG_INTR_MAP = 0x0000001F
const DPORT_PRO_PMS_PRO_IRAM0_ILG_INTR_MAP_V = 0x1F
const DPORT_PRO_PMS_PRO_IRAM0_ILG_INTR_MAP_S = 0
const DPORT_PRO_PMS_PRO_DRAM0_ILG_INTR_MAP = 0x0000001F
const DPORT_PRO_PMS_PRO_DRAM0_ILG_INTR_MAP_V = 0x1F
const DPORT_PRO_PMS_PRO_DRAM0_ILG_INTR_MAP_S = 0
const DPORT_PRO_PMS_PRO_DPORT_ILG_INTR_MAP = 0x0000001F
const DPORT_PRO_PMS_PRO_DPORT_ILG_INTR_MAP_V = 0x1F
const DPORT_PRO_PMS_PRO_DPORT_ILG_INTR_MAP_S = 0
const DPORT_PRO_PMS_PRO_AHB_ILG_INTR_MAP = 0x0000001F
const DPORT_PRO_PMS_PRO_AHB_ILG_INTR_MAP_V = 0x1F
const DPORT_PRO_PMS_PRO_AHB_ILG_INTR_MAP_S = 0
const DPORT_PRO_PMS_PRO_CACHE_ILG_INTR_MAP = 0x0000001F
const DPORT_PRO_PMS_PRO_CACHE_ILG_INTR_MAP_V = 0x1F
const DPORT_PRO_PMS_PRO_CACHE_ILG_INTR_MAP_S = 0
const DPORT_PRO_PMS_DMA_APB_I_ILG_INTR_MAP = 0x0000001F
const DPORT_PRO_PMS_DMA_APB_I_ILG_INTR_MAP_V = 0x1F
const DPORT_PRO_PMS_DMA_APB_I_ILG_INTR_MAP_S = 0
const DPORT_PRO_PMS_DMA_RX_I_ILG_INTR_MAP = 0x0000001F
const DPORT_PRO_PMS_DMA_RX_I_ILG_INTR_MAP_V = 0x1F
const DPORT_PRO_PMS_DMA_RX_I_ILG_INTR_MAP_S = 0
const DPORT_PRO_PMS_DMA_TX_I_ILG_INTR_MAP = 0x0000001F
const DPORT_PRO_PMS_DMA_TX_I_ILG_INTR_MAP_V = 0x1F
const DPORT_PRO_PMS_DMA_TX_I_ILG_INTR_MAP_S = 0
const DPORT_PRO_SPI_MEM_REJECT_INTR_MAP = 0x0000001F
const DPORT_PRO_SPI_MEM_REJECT_INTR_MAP_V = 0x1F
const DPORT_PRO_SPI_MEM_REJECT_INTR_MAP_S = 0
const DPORT_PRO_DMA_COPY_INTR_MAP = 0x0000001F
const DPORT_PRO_DMA_COPY_INTR_MAP_V = 0x1F
const DPORT_PRO_DMA_COPY_INTR_MAP_S = 0
const DPORT_PRO_SPI4_DMA_INT_MAP = 0x0000001F
const DPORT_PRO_SPI4_DMA_INT_MAP_V = 0x1F
const DPORT_PRO_SPI4_DMA_INT_MAP_S = 0
const DPORT_PRO_SPI_INTR_4_MAP = 0x0000001F
const DPORT_PRO_SPI_INTR_4_MAP_V = 0x1F
const DPORT_PRO_SPI_INTR_4_MAP_S = 0
const DPORT_PRO_DCACHE_PRELOAD_INT_MAP = 0x0000001F
const DPORT_PRO_DCACHE_PRELOAD_INT_MAP_V = 0x1F
const DPORT_PRO_DCACHE_PRELOAD_INT_MAP_S = 0
const DPORT_PRO_ICACHE_PRELOAD_INT_MAP = 0x0000001F
const DPORT_PRO_ICACHE_PRELOAD_INT_MAP_V = 0x1F
const DPORT_PRO_ICACHE_PRELOAD_INT_MAP_S = 0
const DPORT_PRO_APB_ADC_INT_MAP = 0x0000001F
const DPORT_PRO_APB_ADC_INT_MAP_V = 0x1F
const DPORT_PRO_APB_ADC_INT_MAP_S = 0
const DPORT_PRO_CRYPTO_DMA_INT_MAP = 0x0000001F
const DPORT_PRO_CRYPTO_DMA_INT_MAP_V = 0x1F
const DPORT_PRO_CRYPTO_DMA_INT_MAP_S = 0
const DPORT_PRO_CPU_PERI_ERROR_INT_MAP = 0x0000001F
const DPORT_PRO_CPU_PERI_ERROR_INT_MAP_V = 0x1F
const DPORT_PRO_CPU_PERI_ERROR_INT_MAP_S = 0
const DPORT_PRO_APB_PERI_ERROR_INT_MAP = 0x0000001F
const DPORT_PRO_APB_PERI_ERROR_INT_MAP_V = 0x1F
const DPORT_PRO_APB_PERI_ERROR_INT_MAP_S = 0
const DPORT_PRO_DCACHE_SYNC_INT_MAP = 0x0000001F
const DPORT_PRO_DCACHE_SYNC_INT_MAP_V = 0x1F
const DPORT_PRO_DCACHE_SYNC_INT_MAP_S = 0
const DPORT_PRO_ICACHE_SYNC_INT_MAP = 0x0000001F
const DPORT_PRO_ICACHE_SYNC_INT_MAP_V = 0x1F
const DPORT_PRO_ICACHE_SYNC_INT_MAP_S = 0
const DPORT_PRO_INTR_STATUS_0 = 0xFFFFFFFF
const DPORT_PRO_INTR_STATUS_0_V = 0xFFFFFFFF
const DPORT_PRO_INTR_STATUS_0_S = 0
const DPORT_PRO_INTR_STATUS_1 = 0xFFFFFFFF
const DPORT_PRO_INTR_STATUS_1_V = 0xFFFFFFFF
const DPORT_PRO_INTR_STATUS_1_S = 0
const DPORT_PRO_INTR_STATUS_2 = 0xFFFFFFFF
const DPORT_PRO_INTR_STATUS_2_V = 0xFFFFFFFF
const DPORT_PRO_INTR_STATUS_2_S = 0
const DPORT_PRO_NMI_MASK_HW_V = 0x1
const DPORT_PRO_NMI_MASK_HW_S = 1
const INTERRUPT_CLK_EN_V = 0x1
const INTERRUPT_CLK_EN_S = 0
const INTERRUPT_DATE = 0x0FFFFFFF
const INTERRUPT_DATE_V = 0xFFFFFFF
const INTERRUPT_DATE_S = 0
const X_LIBC_LIMITS_H_ = 1
const NL_ARGMAX = 32
const X_POSIX2_RE_DUP_MAX = 255
const CHAR_MIN = 0
const APB_SARADC_WAIT_ARB_CYCLE = 0x00000003
const APB_SARADC_WAIT_ARB_CYCLE_V = 0x3
const APB_SARADC_WAIT_ARB_CYCLE_S = 30
const APB_SARADC_XPD_SAR_FORCE = 0x00000003
const APB_SARADC_XPD_SAR_FORCE_V = 0x3
const APB_SARADC_XPD_SAR_FORCE_S = 27
const APB_SARADC_DATA_TO_I2S_V = 0x1
const APB_SARADC_DATA_TO_I2S_S = 26
const APB_SARADC_DATA_SAR_SEL_V = 0x1
const APB_SARADC_DATA_SAR_SEL_S = 25
const APB_SARADC_SAR2_PATT_P_CLEAR_V = 0x1
const APB_SARADC_SAR2_PATT_P_CLEAR_S = 24
const APB_SARADC_SAR1_PATT_P_CLEAR_V = 0x1
const APB_SARADC_SAR1_PATT_P_CLEAR_S = 23
const APB_SARADC_SAR2_PATT_LEN = 0x0000000F
const APB_SARADC_SAR2_PATT_LEN_V = 0xF
const APB_SARADC_SAR2_PATT_LEN_S = 19
const APB_SARADC_SAR1_PATT_LEN = 0x0000000F
const APB_SARADC_SAR1_PATT_LEN_V = 0xF
const APB_SARADC_SAR1_PATT_LEN_S = 15
const APB_SARADC_SAR_CLK_DIV = 0x000000FF
const APB_SARADC_SAR_CLK_DIV_V = 0xFF
const APB_SARADC_SAR_CLK_DIV_S = 7
const APB_SARADC_SAR_CLK_GATED_V = 0x1
const APB_SARADC_SAR_CLK_GATED_S = 6
const APB_SARADC_SAR_SEL_V = 0x1
const APB_SARADC_SAR_SEL_S = 5
const APB_SARADC_WORK_MODE = 0x00000003
const APB_SARADC_WORK_MODE_V = 0x3
const APB_SARADC_WORK_MODE_S = 3
const APB_SARADC_START_V = 0x1
const APB_SARADC_START_S = 1
const APB_SARADC_START_FORCE_V = 0x1
const APB_SARADC_START_FORCE_S = 0
const APB_SARADC_TIMER_EN_V = 0x1
const APB_SARADC_TIMER_EN_S = 24
const APB_SARADC_TIMER_TARGET = 0x00000FFF
const APB_SARADC_TIMER_TARGET_V = 0xFFF
const APB_SARADC_TIMER_TARGET_S = 12
const APB_SARADC_TIMER_SEL_V = 0x1
const APB_SARADC_TIMER_SEL_S = 11
const APB_SARADC_SAR2_INV_V = 0x1
const APB_SARADC_SAR2_INV_S = 10
const APB_SARADC_SAR1_INV_V = 0x1
const APB_SARADC_SAR1_INV_S = 9
const APB_SARADC_MAX_MEAS_NUM = 0x000000FF
const APB_SARADC_MAX_MEAS_NUM_V = 0xFF
const APB_SARADC_MAX_MEAS_NUM_S = 1
const APB_SARADC_MEAS_NUM_LIMIT_V = 0x1
const APB_SARADC_MEAS_NUM_LIMIT_S = 0
const APB_SARADC_SAMPLE_CYCLE = 0x000000FF
const APB_SARADC_SAMPLE_CYCLE_V = 0xFF
const APB_SARADC_SAMPLE_CYCLE_S = 24
const APB_SARADC_SAMPLE_NUM = 0x000000FF
const APB_SARADC_SAMPLE_NUM_V = 0xFF
const APB_SARADC_SAMPLE_NUM_S = 16
const APB_SARADC_STANDBY_WAIT = 0x000000FF
const APB_SARADC_STANDBY_WAIT_V = 0xFF
const APB_SARADC_STANDBY_WAIT_S = 16
const APB_SARADC_RSTB_WAIT = 0x000000FF
const APB_SARADC_RSTB_WAIT_V = 0xFF
const APB_SARADC_RSTB_WAIT_S = 8
const APB_SARADC_XPD_WAIT = 0x000000FF
const APB_SARADC_XPD_WAIT_V = 0xFF
const APB_SARADC_XPD_WAIT_S = 0
const APB_SARADC_SAR1_STATUS = 0xFFFFFFFF
const APB_SARADC_SAR1_STATUS_V = 0xFFFFFFFF
const APB_SARADC_SAR1_STATUS_S = 0
const APB_SARADC_SAR2_STATUS = 0xFFFFFFFF
const APB_SARADC_SAR2_STATUS_V = 0xFFFFFFFF
const APB_SARADC_SAR2_STATUS_S = 0
const APB_SARADC_SAR1_PATT_TAB1 = 0xFFFFFFFF
const APB_SARADC_SAR1_PATT_TAB1_V = 0xFFFFFFFF
const APB_SARADC_SAR1_PATT_TAB1_S = 0
const APB_SARADC_SAR1_PATT_TAB2 = 0xFFFFFFFF
const APB_SARADC_SAR1_PATT_TAB2_V = 0xFFFFFFFF
const APB_SARADC_SAR1_PATT_TAB2_S = 0
const APB_SARADC_SAR1_PATT_TAB3 = 0xFFFFFFFF
const APB_SARADC_SAR1_PATT_TAB3_V = 0xFFFFFFFF
const APB_SARADC_SAR1_PATT_TAB3_S = 0
const APB_SARADC_SAR1_PATT_TAB4 = 0xFFFFFFFF
const APB_SARADC_SAR1_PATT_TAB4_V = 0xFFFFFFFF
const APB_SARADC_SAR1_PATT_TAB4_S = 0
const APB_SARADC_SAR2_PATT_TAB1 = 0xFFFFFFFF
const APB_SARADC_SAR2_PATT_TAB1_V = 0xFFFFFFFF
const APB_SARADC_SAR2_PATT_TAB1_S = 0
const APB_SARADC_SAR2_PATT_TAB2 = 0xFFFFFFFF
const APB_SARADC_SAR2_PATT_TAB2_V = 0xFFFFFFFF
const APB_SARADC_SAR2_PATT_TAB2_S = 0
const APB_SARADC_SAR2_PATT_TAB3 = 0xFFFFFFFF
const APB_SARADC_SAR2_PATT_TAB3_V = 0xFFFFFFFF
const APB_SARADC_SAR2_PATT_TAB3_S = 0
const APB_SARADC_SAR2_PATT_TAB4 = 0xFFFFFFFF
const APB_SARADC_SAR2_PATT_TAB4_V = 0xFFFFFFFF
const APB_SARADC_SAR2_PATT_TAB4_S = 0
const APB_SARADC_ADC_ARB_FIX_PRIORITY_V = 0x1
const APB_SARADC_ADC_ARB_FIX_PRIORITY_S = 12
const APB_SARADC_ADC_ARB_WIFI_PRIORITY = 0x00000003
const APB_SARADC_ADC_ARB_WIFI_PRIORITY_V = 0x3
const APB_SARADC_ADC_ARB_WIFI_PRIORITY_S = 10
const APB_SARADC_ADC_ARB_RTC_PRIORITY = 0x00000003
const APB_SARADC_ADC_ARB_RTC_PRIORITY_V = 0x3
const APB_SARADC_ADC_ARB_RTC_PRIORITY_S = 8
const APB_SARADC_ADC_ARB_APB_PRIORITY = 0x00000003
const APB_SARADC_ADC_ARB_APB_PRIORITY_V = 0x3
const APB_SARADC_ADC_ARB_APB_PRIORITY_S = 6
const APB_SARADC_ADC_ARB_GRANT_FORCE_V = 0x1
const APB_SARADC_ADC_ARB_GRANT_FORCE_S = 5
const APB_SARADC_ADC_ARB_WIFI_FORCE_V = 0x1
const APB_SARADC_ADC_ARB_WIFI_FORCE_S = 4
const APB_SARADC_ADC_ARB_RTC_FORCE_V = 0x1
const APB_SARADC_ADC_ARB_RTC_FORCE_S = 3
const APB_SARADC_ADC_ARB_APB_FORCE_V = 0x1
const APB_SARADC_ADC_ARB_APB_FORCE_S = 2
const APB_SARADC_ADC1_FILTER_EN_V = 0x1
const APB_SARADC_ADC1_FILTER_EN_S = 31
const APB_SARADC_ADC2_FILTER_EN_V = 0x1
const APB_SARADC_ADC2_FILTER_EN_S = 30
const APB_SARADC_ADC1_FILTER_FACTOR = 0x0000007F
const APB_SARADC_ADC1_FILTER_FACTOR_V = 0x7F
const APB_SARADC_ADC1_FILTER_FACTOR_S = 23
const APB_SARADC_ADC2_FILTER_FACTOR = 0x0000007F
const APB_SARADC_ADC2_FILTER_FACTOR_V = 0x7F
const APB_SARADC_ADC2_FILTER_FACTOR_S = 16
const APB_SARADC_ADC1_FILTER_RESET_V = 0x1
const APB_SARADC_ADC1_FILTER_RESET_S = 1
const APB_SARADC_ADC2_FILTER_RESET_V = 0x1
const APB_SARADC_ADC2_FILTER_RESET_S = 0
const APB_SARADC_ADC1_FILTER_DATA = 0x0000FFFF
const APB_SARADC_ADC1_FILTER_DATA_V = 0xFFFF
const APB_SARADC_ADC1_FILTER_DATA_S = 16
const APB_SARADC_ADC2_FILTER_DATA = 0x0000FFFF
const APB_SARADC_ADC2_FILTER_DATA_V = 0xFFFF
const APB_SARADC_ADC2_FILTER_DATA_S = 0
const APB_SARADC_ADC1_THRES_EN_V = 0x1
const APB_SARADC_ADC1_THRES_EN_S = 31
const APB_SARADC_ADC2_THRES_EN_V = 0x1
const APB_SARADC_ADC2_THRES_EN_S = 30
const APB_SARADC_ADC1_THRES = 0x00001FFF
const APB_SARADC_ADC1_THRES_V = 0x1FFF
const APB_SARADC_ADC1_THRES_S = 17
const APB_SARADC_ADC2_THRES = 0x00001FFF
const APB_SARADC_ADC2_THRES_V = 0x1FFF
const APB_SARADC_ADC2_THRES_S = 4
const APB_SARADC_ADC1_THRES_MODE_V = 0x1
const APB_SARADC_ADC1_THRES_MODE_S = 3
const APB_SARADC_ADC2_THRES_MODE_V = 0x1
const APB_SARADC_ADC2_THRES_MODE_S = 2
const APB_SARADC_CLK_EN_V = 0x1
const APB_SARADC_CLK_EN_S = 0
const APB_SARADC_ADC1_DONE_INT_ENA_V = 0x1
const APB_SARADC_ADC1_DONE_INT_ENA_S = 31
const APB_SARADC_ADC2_DONE_INT_ENA_V = 0x1
const APB_SARADC_ADC2_DONE_INT_ENA_S = 30
const APB_SARADC_ADC1_THRES_INT_ENA_V = 0x1
const APB_SARADC_ADC1_THRES_INT_ENA_S = 29
const APB_SARADC_ADC2_THRES_INT_ENA_V = 0x1
const APB_SARADC_ADC2_THRES_INT_ENA_S = 28
const APB_SARADC_ADC1_DONE_INT_RAW_V = 0x1
const APB_SARADC_ADC1_DONE_INT_RAW_S = 31
const APB_SARADC_ADC2_DONE_INT_RAW_V = 0x1
const APB_SARADC_ADC2_DONE_INT_RAW_S = 30
const APB_SARADC_ADC1_THRES_INT_RAW_V = 0x1
const APB_SARADC_ADC1_THRES_INT_RAW_S = 29
const APB_SARADC_ADC2_THRES_INT_RAW_V = 0x1
const APB_SARADC_ADC2_THRES_INT_RAW_S = 28
const APB_SARADC_ADC1_DONE_INT_ST_V = 0x1
const APB_SARADC_ADC1_DONE_INT_ST_S = 31
const APB_SARADC_ADC2_DONE_INT_ST_V = 0x1
const APB_SARADC_ADC2_DONE_INT_ST_S = 30
const APB_SARADC_ADC1_THRES_INT_ST_V = 0x1
const APB_SARADC_ADC1_THRES_INT_ST_S = 29
const APB_SARADC_ADC2_THRES_INT_ST_V = 0x1
const APB_SARADC_ADC2_THRES_INT_ST_S = 28
const APB_SARADC_ADC1_DONE_INT_CLR_V = 0x1
const APB_SARADC_ADC1_DONE_INT_CLR_S = 31
const APB_SARADC_ADC2_DONE_INT_CLR_V = 0x1
const APB_SARADC_ADC2_DONE_INT_CLR_S = 30
const APB_SARADC_ADC1_THRES_INT_CLR_V = 0x1
const APB_SARADC_ADC1_THRES_INT_CLR_S = 29
const APB_SARADC_ADC2_THRES_INT_CLR_V = 0x1
const APB_SARADC_ADC2_THRES_INT_CLR_S = 28
const APB_SARADC_APB_ADC_TRANS_V = 0x1
const APB_SARADC_APB_ADC_TRANS_S = 31
const APB_SARADC_APB_ADC_RESET_FSM_V = 0x1
const APB_SARADC_APB_ADC_RESET_FSM_S = 30
const APB_SARADC_APB_ADC_EOF_NUM = 0x0000FFFF
const APB_SARADC_APB_ADC_EOF_NUM_V = 0xFFFF
const APB_SARADC_APB_ADC_EOF_NUM_S = 0
const APB_SARADC_CLK_SEL = 0x00000003
const APB_SARADC_CLK_SEL_V = 0x3
const APB_SARADC_CLK_SEL_S = 21
const APB_SARADC_CLKM_DIV_A = 0x0000003F
const APB_SARADC_CLKM_DIV_A_V = 0x3F
const APB_SARADC_CLKM_DIV_A_S = 14
const APB_SARADC_CLKM_DIV_B = 0x0000003F
const APB_SARADC_CLKM_DIV_B_V = 0x3F
const APB_SARADC_CLKM_DIV_B_S = 8
const APB_SARADC_CLKM_DIV_NUM = 0x000000FF
const APB_SARADC_CLKM_DIV_NUM_V = 0xFF
const APB_SARADC_CLKM_DIV_NUM_S = 0
const APB_SARADC_APB_DAC_RST_V = 0x1
const APB_SARADC_APB_DAC_RST_S = 16
const APB_SARADC_DAC_RESET_FIFO_V = 0x1
const APB_SARADC_DAC_RESET_FIFO_S = 15
const APB_SARADC_APB_DAC_TRANS_V = 0x1
const APB_SARADC_APB_DAC_TRANS_S = 14
const APB_SARADC_APB_DAC_ALTER_MODE_V = 0x1
const APB_SARADC_APB_DAC_ALTER_MODE_S = 13
const APB_SARADC_DAC_TIMER_EN_V = 0x1
const APB_SARADC_DAC_TIMER_EN_S = 12
const APB_SARADC_DAC_TIMER_TARGET = 0x00000FFF
const APB_SARADC_DAC_TIMER_TARGET_V = 0xFFF
const APB_SARADC_DAC_TIMER_TARGET_S = 0
const APB_SARADC_APB_CTRL_DATE = 0xFFFFFFFF
const APB_SARADC_APB_CTRL_DATE_V = 0xFFFFFFFF
const APB_SARADC_APB_CTRL_DATE_S = 0
const CONF0_REG_GEN_CLK_EN_V = 0x1
const CONF0_REG_GEN_CLK_EN_S = 13
const CONF0_REG_MEM_TRANS_EN_V = 0x1
const CONF0_REG_MEM_TRANS_EN_S = 12
const CONF0_REG_OUT_DATA_BURST_EN_V = 0x1
const CONF0_REG_OUT_DATA_BURST_EN_S = 11
const CONF0_REG_INDSCR_BURST_EN_V = 0x1
const CONF0_REG_INDSCR_BURST_EN_S = 10
const CONF0_REG_OUTDSCR_BURST_EN_V = 0x1
const CONF0_REG_OUTDSCR_BURST_EN_S = 9
const CONF0_REG_OUT_EOF_MODE_V = 0x1
const CONF0_REG_OUT_EOF_MODE_S = 8
const CONF0_REG_OUT_NO_RESTART_CLR_V = 0x1
const CONF0_REG_OUT_NO_RESTART_CLR_S = 7
const CONF0_REG_OUT_AUTO_WRBACK_V = 0x1
const CONF0_REG_OUT_AUTO_WRBACK_S = 6
const CONF0_REG_OUT_LOOP_TEST_V = 0x1
const CONF0_REG_OUT_LOOP_TEST_S = 5
const CONF0_REG_IN_LOOP_TEST_V = 0x1
const CONF0_REG_IN_LOOP_TEST_S = 4
const CONF0_REG_AHBM_RST_V = 0x1
const CONF0_REG_AHBM_RST_S = 3
const CONF0_REG_AHBM_FIFO_RST_V = 0x1
const CONF0_REG_AHBM_FIFO_RST_S = 2
const CONF0_REG_OUT_RST_V = 0x1
const CONF0_REG_OUT_RST_S = 1
const CONF0_REG_IN_RST_V = 0x1
const CONF0_REG_IN_RST_S = 0
const INT_RAW_OUT_TOTAL_EOF_V = 0x1
const INT_RAW_OUT_TOTAL_EOF_S = 8
const INT_RAW_IN_SUC_EOF_V = 0x1
const INT_RAW_IN_SUC_EOF_S = 1
const OUT_LINK_REG_OUTLINK_RESTART_V = 0x1
const OUT_LINK_REG_OUTLINK_RESTART_S = 30
const OUT_LINK_REG_OUTLINK_START_V = 0x1
const OUT_LINK_REG_OUTLINK_START_S = 29
const OUT_LINK_REG_OUTLINK_STOP_V = 0x1
const OUT_LINK_REG_OUTLINK_STOP_S = 28
const OUT_LINK_REG_OUTLINK_ADDR = 0x000FFFFF
const OUT_LINK_REG_OUTLINK_ADDR_V = 0xFFFFF
const OUT_LINK_REG_OUTLINK_ADDR_S = 0
const IN_LINK_REG_INLINK_RESTART_V = 0x1
const IN_LINK_REG_INLINK_RESTART_S = 30
const IN_LINK_REG_INLINK_START_V = 0x1
const IN_LINK_REG_INLINK_START_S = 29
const IN_LINK_REG_INLINK_STOP_V = 0x1
const IN_LINK_REG_INLINK_STOP_S = 28
const IN_LINK_REG_INLINK_ADDR = 0x000FFFFF
const IN_LINK_REG_INLINK_ADDR_V = 0xFFFFF
const IN_LINK_REG_INLINK_ADDR_S = 0
const AES_SHA_SELECT_V = 0x1
const AES_SHA_SELECT_S = 0
const EFUSE_WRITE_OP_CODE = 0x5a5a
const EFUSE_READ_OP_CODE = 0x5aa5
const EFUSE_PGM_DATA_0_S = 0
const EFUSE_PGM_RS_DATA_0_S = 0
const EFUSE_WR_DIS_S = 0
const EFUSE_RD_DIS_S = 0
const EFUSE_DIS_RTC_RAM_BOOT_S = 7
const EFUSE_DIS_ICACHE_S = 8
const EFUSE_DIS_DCACHE_S = 9
const EFUSE_DIS_DOWNLOAD_ICACHE_S = 10
const EFUSE_DIS_DOWNLOAD_DCACHE_S = 11
const EFUSE_DIS_FORCE_DOWNLOAD_S = 12
const EFUSE_DIS_USB_S = 13
const EFUSE_DIS_TWAI_S = 14
const EFUSE_DIS_BOOT_REMAP_S = 15
const EFUSE_RPT4_RESERVED5_S = 16
const EFUSE_SOFT_DIS_JTAG_S = 17
const EFUSE_HARD_DIS_JTAG_S = 18
const EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT_S = 19
const EFUSE_USB_DREFH_S = 20
const EFUSE_USB_DREFL_S = 22
const EFUSE_USB_EXCHG_PINS_S = 24
const EFUSE_USB_EXT_PHY_ENABLE_S = 25
const EFUSE_USB_FORCE_NOPERSIST_S = 26
const EFUSE_BLOCK0_VERSION_S = 27
const EFUSE_VDD_SPI_MODECURLIM_S = 29
const EFUSE_VDD_SPI_DREFH_S = 30
const EFUSE_VDD_SPI_DREFM_S = 0
const EFUSE_VDD_SPI_DREFL_S = 2
const EFUSE_VDD_SPI_XPD_S = 4
const EFUSE_VDD_SPI_TIEH_S = 5
const EFUSE_VDD_SPI_FORCE_S = 6
const EFUSE_VDD_SPI_EN_INIT_S = 7
const EFUSE_VDD_SPI_ENCURLIM_S = 8
const EFUSE_VDD_SPI_DCURLIM_S = 9
const EFUSE_VDD_SPI_INIT_S = 12
const EFUSE_VDD_SPI_DCAP_S = 14
const EFUSE_WDT_DELAY_SEL_S = 16
const EFUSE_SPI_BOOT_CRYPT_CNT_S = 18
const EFUSE_SECURE_BOOT_KEY_REVOKE0_S = 21
const EFUSE_SECURE_BOOT_KEY_REVOKE1_S = 22
const EFUSE_SECURE_BOOT_KEY_REVOKE2_S = 23
const EFUSE_KEY_PURPOSE_0_S = 24
const EFUSE_KEY_PURPOSE_1_S = 28
const EFUSE_KEY_PURPOSE_2_S = 0
const EFUSE_KEY_PURPOSE_3_S = 4
const EFUSE_KEY_PURPOSE_4_S = 8
const EFUSE_KEY_PURPOSE_5_S = 12
const EFUSE_KEY_PURPOSE_6_S = 16
const EFUSE_SECURE_BOOT_EN_S = 20
const EFUSE_SECURE_BOOT_AGGRESSIVE_REVOKE_S = 21
const EFUSE_RPT4_RESERVED1_S = 22
const EFUSE_FLASH_TPUW_S = 28
const EFUSE_DIS_DOWNLOAD_MODE_S = 0
const EFUSE_DIS_LEGACY_SPI_BOOT_S = 1
const EFUSE_UART_PRINT_CHANNEL_S = 2
const EFUSE_RPT4_RESERVED3_S = 3
const EFUSE_DIS_USB_DOWNLOAD_MODE_S = 4
const EFUSE_ENABLE_SECURITY_DOWNLOAD_S = 5
const EFUSE_UART_PRINT_CONTROL_S = 6
const EFUSE_PIN_POWER_SELECTION_S = 8
const EFUSE_FLASH_TYPE_S = 9
const EFUSE_FORCE_SEND_RESUME_S = 10
const EFUSE_SECURE_VERSION_S = 11
const EFUSE_RPT4_RESERVED2_S = 27
const EFUSE_DISABLE_WAFER_VERSION_MAJOR_S = 0
const EFUSE_DISABLE_BLK_VERSION_MAJOR_S = 1
const EFUSE_RESERVED_0_162_S = 2
const EFUSE_MAC_0_S = 0
const EFUSE_MAC_1_S = 0
const EFUSE_SPI_PAD_CONFIG_CLK_S = 16
const EFUSE_SPI_PAD_CONFIG_Q_S = 22
const EFUSE_SPI_PAD_CONFIG_D_S = 28
const EFUSE_SPI_PAD_CONFIG_D_1_S = 0
const EFUSE_SPI_PAD_CONFIG_CS_S = 2
const EFUSE_SPI_PAD_CONFIG_HD_S = 8
const EFUSE_SPI_PAD_CONFIG_WP_S = 14
const EFUSE_SPI_PAD_CONFIG_DQS_S = 20
const EFUSE_SPI_PAD_CONFIG_D4_S = 26
const EFUSE_SPI_PAD_CONFIG_D5_S = 0
const EFUSE_SPI_PAD_CONFIG_D6_S = 6
const EFUSE_SPI_PAD_CONFIG_D7_S = 12
const EFUSE_WAFER_VERSION_MAJOR_S = 18
const EFUSE_WAFER_VERSION_MINOR_HI_S = 20
const EFUSE_FLASH_VERSION_S = 21
const EFUSE_BLK_VERSION_MAJOR_S = 25
const EFUSE_RESERVED_1_123_S = 27
const EFUSE_PSRAM_VERSION_S = 28
const EFUSE_PKG_VERSION_S = 0
const EFUSE_WAFER_VERSION_MINOR_LO_S = 4
const EFUSE_RESERVED_1_135_S = 7
const EFUSE_SYS_DATA_PART0_2_S = 0
const EFUSE_OPTIONAL_UNIQUE_ID_S = 0
const EFUSE_OPTIONAL_UNIQUE_ID_1_S = 0
const EFUSE_OPTIONAL_UNIQUE_ID_2_S = 0
const EFUSE_OPTIONAL_UNIQUE_ID_3_S = 0
const EFUSE_ADC_CALIB_S = 0
const EFUSE_BLK_VERSION_MINOR_S = 4
const EFUSE_TEMP_CALIB_S = 7
const EFUSE_RTCCALIB_V1IDX_A10H_S = 16
const EFUSE_RTCCALIB_V1IDX_A11H_S = 24
const EFUSE_RTCCALIB_V1IDX_A12H_S = 0
const EFUSE_RTCCALIB_V1IDX_A13H_S = 8
const EFUSE_RTCCALIB_V1IDX_A20H_S = 16
const EFUSE_RTCCALIB_V1IDX_A21H_S = 24
const EFUSE_RTCCALIB_V1IDX_A22H_S = 0
const EFUSE_RTCCALIB_V1IDX_A23H_S = 8
const EFUSE_RTCCALIB_V1IDX_A10L_S = 16
const EFUSE_RTCCALIB_V1IDX_A11L_S = 22
const EFUSE_RTCCALIB_V1IDX_A12L_S = 28
const EFUSE_RTCCALIB_V1IDX_A12L_1_S = 0
const EFUSE_RTCCALIB_V1IDX_A13L_S = 2
const EFUSE_RTCCALIB_V1IDX_A20L_S = 8
const EFUSE_RTCCALIB_V1IDX_A21L_S = 14
const EFUSE_RTCCALIB_V1IDX_A22L_S = 20
const EFUSE_RTCCALIB_V1IDX_A23L_S = 26
const EFUSE_USR_DATA0_S = 0
const EFUSE_USR_DATA1_S = 0
const EFUSE_USR_DATA2_S = 0
const EFUSE_USR_DATA3_S = 0
const EFUSE_USR_DATA4_S = 0
const EFUSE_USR_DATA5_S = 0
const EFUSE_RESERVED_3_192_S = 0
const EFUSE_CUSTOM_MAC_S = 8
const EFUSE_CUSTOM_MAC_1_S = 0
const EFUSE_RESERVED_3_248_S = 24
const EFUSE_KEY0_DATA0_S = 0
const EFUSE_KEY0_DATA1_S = 0
const EFUSE_KEY0_DATA2_S = 0
const EFUSE_KEY0_DATA3_S = 0
const EFUSE_KEY0_DATA4_S = 0
const EFUSE_KEY0_DATA5_S = 0
const EFUSE_KEY0_DATA6_S = 0
const EFUSE_KEY0_DATA7_S = 0
const EFUSE_KEY1_DATA0_S = 0
const EFUSE_KEY1_DATA1_S = 0
const EFUSE_KEY1_DATA2_S = 0
const EFUSE_KEY1_DATA3_S = 0
const EFUSE_KEY1_DATA4_S = 0
const EFUSE_KEY1_DATA5_S = 0
const EFUSE_KEY1_DATA6_S = 0
const EFUSE_KEY1_DATA7_S = 0
const EFUSE_KEY2_DATA0_S = 0
const EFUSE_KEY2_DATA1_S = 0
const EFUSE_KEY2_DATA2_S = 0
const EFUSE_KEY2_DATA3_S = 0
const EFUSE_KEY2_DATA4_S = 0
const EFUSE_KEY2_DATA5_S = 0
const EFUSE_KEY2_DATA6_S = 0
const EFUSE_KEY2_DATA7_S = 0
const EFUSE_KEY3_DATA0_S = 0
const EFUSE_KEY3_DATA1_S = 0
const EFUSE_KEY3_DATA2_S = 0
const EFUSE_KEY3_DATA3_S = 0
const EFUSE_KEY3_DATA4_S = 0
const EFUSE_KEY3_DATA5_S = 0
const EFUSE_KEY3_DATA6_S = 0
const EFUSE_KEY3_DATA7_S = 0
const EFUSE_KEY4_DATA0_S = 0
const EFUSE_KEY4_DATA1_S = 0
const EFUSE_KEY4_DATA2_S = 0
const EFUSE_KEY4_DATA3_S = 0
const EFUSE_KEY4_DATA4_S = 0
const EFUSE_KEY4_DATA5_S = 0
const EFUSE_KEY4_DATA6_S = 0
const EFUSE_KEY4_DATA7_S = 0
const EFUSE_KEY5_DATA0_S = 0
const EFUSE_KEY5_DATA1_S = 0
const EFUSE_KEY5_DATA2_S = 0
const EFUSE_KEY5_DATA3_S = 0
const EFUSE_KEY5_DATA4_S = 0
const EFUSE_KEY5_DATA5_S = 0
const EFUSE_KEY5_DATA6_S = 0
const EFUSE_KEY5_DATA7_S = 0
const EFUSE_SYS_DATA_PART2_0_S = 0
const EFUSE_SYS_DATA_PART2_1_S = 0
const EFUSE_SYS_DATA_PART2_2_S = 0
const EFUSE_SYS_DATA_PART2_3_S = 0
const EFUSE_SYS_DATA_PART2_4_S = 0
const EFUSE_SYS_DATA_PART2_5_S = 0
const EFUSE_SYS_DATA_PART2_6_S = 0
const EFUSE_SYS_DATA_PART2_7_S = 0
const EFUSE_RD_DIS_ERR_S = 0
const EFUSE_DIS_RTC_RAM_BOOT_ERR_S = 7
const EFUSE_DIS_ICACHE_ERR_S = 8
const EFUSE_DIS_DCACHE_ERR_S = 9
const EFUSE_DIS_DOWNLOAD_ICACHE_ERR_S = 10
const EFUSE_DIS_DOWNLOAD_DCACHE_ERR_S = 11
const EFUSE_DIS_FORCE_DOWNLOAD_ERR_S = 12
const EFUSE_DIS_USB_ERR_S = 13
const EFUSE_DIS_CAN_ERR_S = 14
const EFUSE_DIS_BOOT_REMAP_ERR_S = 15
const EFUSE_RPT4_RESERVED5_ERR_S = 16
const EFUSE_SOFT_DIS_JTAG_ERR_S = 17
const EFUSE_HARD_DIS_JTAG_ERR_S = 18
const EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR_S = 19
const EFUSE_USB_DREFH_ERR_S = 20
const EFUSE_USB_DREFL_ERR_S = 22
const EFUSE_USB_EXCHG_PINS_ERR_S = 24
const EFUSE_EXT_PHY_ENABLE_ERR_S = 25
const EFUSE_USB_FORCE_NOPERSIST_ERR_S = 26
const EFUSE_RPT4_RESERVED0_ERR_S = 27
const EFUSE_VDD_SPI_MODECURLIM_ERR_S = 29
const EFUSE_VDD_SPI_DREFH_ERR_S = 30
const EFUSE_VDD_SPI_DREFM_ERR_S = 0
const EFUSE_VDD_SPI_DREFL_ERR_S = 2
const EFUSE_VDD_SPI_XPD_ERR_S = 4
const EFUSE_VDD_SPI_TIEH_ERR_S = 5
const EFUSE_VDD_SPI_FORCE_ERR_S = 6
const EFUSE_VDD_SPI_EN_INIT_ERR_S = 7
const EFUSE_VDD_SPI_ENCURLIM_ERR_S = 8
const EFUSE_VDD_SPI_DCURLIM_ERR_S = 9
const EFUSE_VDD_SPI_INIT_ERR_S = 12
const EFUSE_VDD_SPI_DCAP_ERR_S = 14
const EFUSE_WDT_DELAY_SEL_ERR_S = 16
const EFUSE_SPI_BOOT_CRYPT_CNT_ERR_S = 18
const EFUSE_SECURE_BOOT_KEY_REVOKE0_ERR_S = 21
const EFUSE_SECURE_BOOT_KEY_REVOKE1_ERR_S = 22
const EFUSE_SECURE_BOOT_KEY_REVOKE2_ERR_S = 23
const EFUSE_KEY_PURPOSE_0_ERR_S = 24
const EFUSE_KEY_PURPOSE_1_ERR_S = 28
const EFUSE_KEY_PURPOSE_2_ERR_S = 0
const EFUSE_KEY_PURPOSE_3_ERR_S = 4
const EFUSE_KEY_PURPOSE_4_ERR_S = 8
const EFUSE_KEY_PURPOSE_5_ERR_S = 12
const EFUSE_KEY_PURPOSE_6_ERR_S = 16
const EFUSE_SECURE_BOOT_EN_ERR_S = 20
const EFUSE_SECURE_BOOT_AGGRESSIVE_REVOKE_ERR_S = 21
const EFUSE_RPT4_RESERVED1_ERR_S = 22
const EFUSE_FLASH_TPUW_ERR_S = 28
const EFUSE_DIS_DOWNLOAD_MODE_ERR_S = 0
const EFUSE_DIS_LEGACY_SPI_BOOT_ERR_S = 1
const EFUSE_UART_PRINT_CHANNEL_ERR_S = 2
const EFUSE_RPT4_RESERVED3_ERR_S = 3
const EFUSE_DIS_USB_DOWNLOAD_MODE_ERR_S = 4
const EFUSE_ENABLE_SECURITY_DOWNLOAD_ERR_S = 5
const EFUSE_UART_PRINT_CONTROL_ERR_S = 6
const EFUSE_PIN_POWER_SELECTION_ERR_S = 8
const EFUSE_FLASH_TYPE_ERR_S = 9
const EFUSE_FORCE_SEND_RESUME_ERR_S = 10
const EFUSE_SECURE_VERSION_ERR_S = 11
const EFUSE_RPT4_RESERVED2_ERR_S = 27
const EFUSE_RPT4_RESERVED4_ERR_S = 0
const EFUSE_MAC_SPI_8M_ERR_NUM_S = 0
const EFUSE_MAC_SPI_8M_FAIL_S = 3
const EFUSE_SYS_PART1_NUM_S = 4
const EFUSE_SYS_PART1_FAIL_S = 7
const EFUSE_USR_DATA_ERR_NUM_S = 8
const EFUSE_USR_DATA_FAIL_S = 11
const EFUSE_KEY0_ERR_NUM_S = 12
const EFUSE_KEY0_FAIL_S = 15
const EFUSE_KEY1_ERR_NUM_S = 16
const EFUSE_KEY1_FAIL_S = 19
const EFUSE_KEY2_ERR_NUM_S = 20
const EFUSE_KEY2_FAIL_S = 23
const EFUSE_KEY3_ERR_NUM_S = 24
const EFUSE_KEY3_FAIL_S = 27
const EFUSE_KEY4_ERR_NUM_S = 28
const EFUSE_KEY4_FAIL_S = 31
const EFUSE_KEY5_ERR_NUM_S = 0
const EFUSE_KEY5_FAIL_S = 3
const EFUSE_SYS_PART2_ERR_NUM_S = 4
const EFUSE_SYS_PART2_FAIL_S = 7
const EFUSE_EFUSE_MEM_FORCE_PD_S = 0
const EFUSE_MEM_CLK_FORCE_ON_S = 1
const EFUSE_EFUSE_MEM_FORCE_PU_S = 2
const EFUSE_CLK_EN_S = 16
const EFUSE_OP_CODE_S = 0
const EFUSE_STATE_S = 0
const EFUSE_OTP_LOAD_SW_S = 4
const EFUSE_OTP_VDDQ_C_SYNC2_S = 5
const EFUSE_OTP_STROBE_SW_S = 6
const EFUSE_OTP_CSB_SW_S = 7
const EFUSE_OTP_PGENB_SW_S = 8
const EFUSE_OTP_VDDQ_IS_SW_S = 9
const EFUSE_REPEAT_ERR_CNT_S = 10
const EFUSE_READ_CMD_S = 0
const EFUSE_PGM_CMD_S = 1
const EFUSE_BLK_NUM_S = 2
const EFUSE_READ_DONE_INT_RAW_S = 0
const EFUSE_PGM_DONE_INT_RAW_S = 1
const EFUSE_READ_DONE_INT_ST_S = 0
const EFUSE_PGM_DONE_INT_ST_S = 1
const EFUSE_READ_DONE_INT_ENA_S = 0
const EFUSE_PGM_DONE_INT_ENA_S = 1
const EFUSE_READ_DONE_INT_CLR_S = 0
const EFUSE_PGM_DONE_INT_CLR_S = 1
const EFUSE_DAC_CLK_DIV_S = 0
const EFUSE_DAC_CLK_PAD_SEL_S = 8
const EFUSE_DAC_NUM_S = 9
const EFUSE_OE_CLR_S = 17
const EFUSE_THR_A_S = 0
const EFUSE_TRD_S = 8
const EFUSE_TSUR_A_S = 16
const EFUSE_READ_INIT_NUM_S = 24
const EFUSE_THP_A_S = 0
const EFUSE_TPGM_INACTIVE_S = 8
const EFUSE_TPGM_S = 16
const EFUSE_TSUP_A_S = 0
const EFUSE_PWR_ON_NUM_S = 8
const EFUSE_PWR_OFF_NUM_S = 0
const EFUSE_DATE_S = 0
const EFUSE_SPICONFIG_SPI_DEFAULTS = 0
const EFUSE_SPICONFIG_HSPI_DEFAULTS = 1
const EFUSE_SPICONFIG_RET_SPICLK_MASK = 0x3f
const EFUSE_SPICONFIG_RET_SPICLK_SHIFT = 0
const EFUSE_SPICONFIG_RET_SPIQ_MASK = 0x3f
const EFUSE_SPICONFIG_RET_SPIQ_SHIFT = 6
const EFUSE_SPICONFIG_RET_SPID_MASK = 0x3f
const EFUSE_SPICONFIG_RET_SPID_SHIFT = 12
const EFUSE_SPICONFIG_RET_SPICS0_MASK = 0x3f
const EFUSE_SPICONFIG_RET_SPICS0_SHIFT = 18
const EFUSE_SPICONFIG_RET_SPIHD_MASK = 0x3f
const EFUSE_SPICONFIG_RET_SPIHD_SHIFT = 24
const XTHAL_RELEASE_MAJOR = 12000
const XTHAL_RELEASE_MINOR = 9
const XTHAL_RELEASE_NAME = "12.0.9"
const XTHAL_REL_12 = 1
const XTHAL_REL_12_0 = 1
const XTHAL_REL_12_0_9 = 1
const XTHAL_MAX_CPS = 8
const XTHAL_LITTLEENDIAN = 0
const XTHAL_BIGENDIAN = 1
const XTHAL_PREFETCH_DISABLE = 0xFFFF0000
const XTHAL_DCACHE_PREFETCH_L1_OFF = 0x90000000
const XTHAL_DCACHE_PREFETCH_L1 = 0x90001000
const XTHAL_ICACHE_PREFETCH_L1_OFF = 0xA0000000
const XTHAL_ICACHE_PREFETCH_L1 = 0xA0002000
const XTHAL_DISASM_BUFSIZE = 80
const XTHAL_DISASM_OPT_ADDR = 0x0001
const XTHAL_DISASM_OPT_OPHEX = 0x0002
const XTHAL_DISASM_OPT_OPCODE = 0x0004
const XTHAL_DISASM_OPT_PARMS = 0x0008
const XTHAL_DISASM_OPT_ALL = 0x0FFF
const XTHAL_MAX_INTERRUPTS = 32
const XTHAL_MAX_INTLEVELS = 16
const XTHAL_MAX_TIMERS = 4
const XTHAL_INTTYPE_UNCONFIGURED = 0
const XTHAL_INTTYPE_SOFTWARE = 1
const XTHAL_INTTYPE_EXTERN_EDGE = 2
const XTHAL_INTTYPE_EXTERN_LEVEL = 3
const XTHAL_INTTYPE_TIMER = 4
const XTHAL_INTTYPE_NMI = 5
const XTHAL_INTTYPE_WRITE_ERROR = 6
const XTHAL_INTTYPE_PROFILING = 7
const XTHAL_INTTYPE_IDMA_DONE = 8
const XTHAL_INTTYPE_IDMA_ERR = 9
const XTHAL_INTTYPE_GS_ERR = 10
const XTHAL_INTTYPE_SG_ERR = 10
const XTHAL_MAX_INTTYPES = 11
const XTHAL_MEMEP_PARITY = 1
const XTHAL_MEMEP_ECC = 2
const XTHAL_MEMEP_F_LOCAL = 0
const XTHAL_MEMEP_F_DCACHE_DATA = 4
const XTHAL_MEMEP_F_DCACHE_TAG = 5
const XTHAL_MEMEP_F_ICACHE_DATA = 6
const XTHAL_MEMEP_F_ICACHE_TAG = 7
const XTHAL_MEMEP_F_CORRECTABLE = 16
const XTHAL_AMB_EXCEPTION = 0
const XTHAL_AMB_HITCACHE = 1
const XTHAL_AMB_ALLOCATE = 2
const XTHAL_AMB_WRITETHRU = 3
const XTHAL_AMB_ISOLATE = 4
const XTHAL_AMB_GUARD = 5
const XTHAL_AMB_COHERENT = 6
const XTHAL_FAM_EXCEPTION = 0x001
const XTHAL_FAM_BYPASS = 0x000
const XTHAL_FAM_CACHED = 0x006
const XTHAL_LAM_EXCEPTION = 0x001
const XTHAL_LAM_ISOLATE = 0x012
const XTHAL_LAM_BYPASS = 0x000
const XTHAL_LAM_BYPASSG = 0x020
const XTHAL_LAM_CACHED_NOALLOC = 0x002
const XTHAL_LAM_NACACHEDG = 0x022
const XTHAL_LAM_CACHED = 0x006
const XTHAL_LAM_COHCACHED = 0x046
const XTHAL_SAM_EXCEPTION = 0x001
const XTHAL_SAM_ISOLATE = 0x032
const XTHAL_SAM_BYPASS = 0x028
const XTHAL_SAM_WRITETHRU = 0x02A
const XTHAL_SAM_WRITEBACK = 0x026
const XTHAL_SAM_WRITEBACK_NOALLOC = 0x022
const XTHAL_SAM_COHWRITEBACK = 0x066
const XTHAL_PAM_BYPASS = 0x000
const XTHAL_PAM_BYPASS_BUF = 0x010
const XTHAL_PAM_CACHED_NOALLOC = 0x030
const XTHAL_PAM_WRITETHRU = 0x0B0
const XTHAL_PAM_WRITEBACK_NOALLOC = 0x0F0
const XTHAL_PAM_WRITEBACK = 0x1F0
const XTHAL_CAFLAG_EXPAND = 0x000100
const XTHAL_CAFLAG_EXACT = 0x000200
const XTHAL_CAFLAG_NO_PARTIAL = 0x000400
const XTHAL_CAFLAG_NO_AUTO_WB = 0x000800
const XTHAL_CAFLAG_NO_AUTO_INV = 0x001000
const XTHAL_SUCCESS = 0
const XTHAL_AR_NONE = 0
const XTHAL_AR_R = 4
const XTHAL_AR_RX = 5
const XTHAL_AR_RW = 6
const XTHAL_AR_RWX = 7
const XTHAL_AR_Ww = 8
const XTHAL_AR_RWrwx = 9
const XTHAL_AR_RWr = 10
const XTHAL_AR_RWXrx = 11
const XTHAL_AR_Rr = 12
const XTHAL_AR_RXrx = 13
const XTHAL_AR_RWrw = 14
const XTHAL_AR_RWXrwx = 15
const XTHAL_AR_WIDTH = 4
const XTHAL_MPU_USE_EXISTING_ACCESS_RIGHTS = 0x00002000
const XTHAL_MPU_USE_EXISTING_MEMORY_TYPE = 0x00004000
const XTHAL_MEM_DEVICE = 0x00008000
const XTHAL_MEM_NON_CACHEABLE = 0x00090000
const XTHAL_MEM_WRITETHRU_NOALLOC = 0x00080000
const XTHAL_MEM_WRITETHRU = 0x00040000
const XTHAL_MEM_WRITETHRU_WRITEALLOC = 0x00060000
const XTHAL_MEM_WRITEBACK_NOALLOC = 0x00050000
const XTHAL_MEM_WRITEBACK = 0x00070000
const XTHAL_MEM_INTERRUPTIBLE = 0x08000000
const XTHAL_MEM_BUFFERABLE = 0x01000000
const XTHAL_MEM_NON_SHAREABLE = 0x00000000
const XTHAL_MEM_INNER_SHAREABLE = 0x02000000
const XTHAL_MEM_OUTER_SHAREABLE = 0x04000000
const XTHAL_MEM_SYSTEM_SHAREABLE = 0x06000000
const X_XTHAL_SYSTEM_CACHE_BITS = 0x000f0000
const X_XTHAL_LOCAL_CACHE_BITS = 0x00f00000
const X_XTHAL_MEM_SYSTEM_RWC_MASK = 0x00070000
const X_XTHAL_MEM_LOCAL_RWC_MASK = 0x00700000
const X_XTHAL_SHIFT_RWC = 16
const XTHAL_MEM_SW_SHAREABLE = 0
const XTENSA_HWVERSION_T1020_0 = 102000
const XTENSA_HWCIDSCHEME_T1020_0 = 10
const XTENSA_HWCIDVERS_T1020_0 = 2
const XTENSA_HWVERSION_T1020_1 = 102001
const XTENSA_HWCIDSCHEME_T1020_1 = 10
const XTENSA_HWCIDVERS_T1020_1 = 3
const XTENSA_HWVERSION_T1020_2 = 102002
const XTENSA_HWCIDSCHEME_T1020_2 = 10
const XTENSA_HWCIDVERS_T1020_2 = 4
const XTENSA_HWVERSION_T1020_2B = 102002
const XTENSA_HWCIDSCHEME_T1020_2B = 10
const XTENSA_HWCIDVERS_T1020_2B = 5
const XTENSA_HWVERSION_T1020_3 = 102003
const XTENSA_HWCIDSCHEME_T1020_3 = 10
const XTENSA_HWCIDVERS_T1020_3 = 6
const XTENSA_HWVERSION_T1020_4 = 102004
const XTENSA_HWCIDSCHEME_T1020_4 = 10
const XTENSA_HWCIDVERS_T1020_4 = 7
const XTENSA_HWVERSION_T1030_0 = 103000
const XTENSA_HWCIDSCHEME_T1030_0 = 10
const XTENSA_HWCIDVERS_T1030_0 = 9
const XTENSA_HWVERSION_T1030_1 = 103001
const XTENSA_HWCIDSCHEME_T1030_1 = 10
const XTENSA_HWCIDVERS_T1030_1 = 10
const XTENSA_HWVERSION_T1030_2 = 103002
const XTENSA_HWCIDSCHEME_T1030_2 = 10
const XTENSA_HWCIDVERS_T1030_2 = 11
const XTENSA_HWVERSION_T1030_3 = 103003
const XTENSA_HWCIDSCHEME_T1030_3 = 10
const XTENSA_HWCIDVERS_T1030_3 = 12
const XTENSA_HWVERSION_T1040_0 = 104000
const XTENSA_HWCIDSCHEME_T1040_0 = 10
const XTENSA_HWCIDVERS_T1040_0 = 15
const XTENSA_HWVERSION_T1040_1 = 104001
const XTENSA_HWCIDSCHEME_T1040_1 = 1
const XTENSA_HWCIDVERS_T1040_1 = 32
const XTENSA_HWVERSION_T1040_1P = 104001
const XTENSA_HWCIDSCHEME_T1040_1P = 10
const XTENSA_HWCIDVERS_T1040_1P = 16
const XTENSA_HWVERSION_T1040_2 = 104002
const XTENSA_HWCIDSCHEME_T1040_2 = 1
const XTENSA_HWCIDVERS_T1040_2 = 33
const XTENSA_HWVERSION_T1040_3 = 104003
const XTENSA_HWCIDSCHEME_T1040_3 = 1
const XTENSA_HWCIDVERS_T1040_3 = 34
const XTENSA_HWVERSION_T1050_0 = 105000
const XTENSA_HWCIDSCHEME_T1050_0 = 1100
const XTENSA_HWCIDVERS_T1050_0 = 1
const XTENSA_HWVERSION_T1050_1 = 105001
const XTENSA_HWCIDSCHEME_T1050_1 = 1100
const XTENSA_HWCIDVERS_T1050_1 = 2
const XTENSA_HWVERSION_T1050_2 = 105002
const XTENSA_HWCIDSCHEME_T1050_2 = 1100
const XTENSA_HWCIDVERS_T1050_2 = 4
const XTENSA_HWVERSION_T1050_3 = 105003
const XTENSA_HWCIDSCHEME_T1050_3 = 1100
const XTENSA_HWCIDVERS_T1050_3 = 6
const XTENSA_HWVERSION_T1050_4 = 105004
const XTENSA_HWCIDSCHEME_T1050_4 = 1100
const XTENSA_HWCIDVERS_T1050_4 = 7
const XTENSA_HWVERSION_T1050_5 = 105005
const XTENSA_HWCIDSCHEME_T1050_5 = 1100
const XTENSA_HWCIDVERS_T1050_5 = 8
const XTENSA_HWVERSION_RA_2004_1 = 210000
const XTENSA_HWCIDSCHEME_RA_2004_1 = 1100
const XTENSA_HWCIDVERS_RA_2004_1 = 3
const XTENSA_HWVERSION_RA_2005_1 = 210001
const XTENSA_HWCIDSCHEME_RA_2005_1 = 1100
const XTENSA_HWCIDVERS_RA_2005_1 = 20
const XTENSA_HWVERSION_RA_2005_2 = 210002
const XTENSA_HWCIDSCHEME_RA_2005_2 = 1100
const XTENSA_HWCIDVERS_RA_2005_2 = 21
const XTENSA_HWVERSION_RA_2005_3 = 210003
const XTENSA_HWCIDSCHEME_RA_2005_3 = 1100
const XTENSA_HWCIDVERS_RA_2005_3 = 22
const XTENSA_HWVERSION_RA_2006_4 = 210004
const XTENSA_HWCIDSCHEME_RA_2006_4 = 1100
const XTENSA_HWCIDVERS_RA_2006_4 = 23
const XTENSA_HWVERSION_RA_2006_5 = 210005
const XTENSA_HWCIDSCHEME_RA_2006_5 = 1100
const XTENSA_HWCIDVERS_RA_2006_5 = 24
const XTENSA_HWVERSION_RA_2006_6 = 210006
const XTENSA_HWCIDSCHEME_RA_2006_6 = 1100
const XTENSA_HWCIDVERS_RA_2006_6 = 25
const XTENSA_HWVERSION_RA_2007_7 = 210007
const XTENSA_HWCIDSCHEME_RA_2007_7 = 1100
const XTENSA_HWCIDVERS_RA_2007_7 = 26
const XTENSA_HWVERSION_RA_2008_8 = 210008
const XTENSA_HWCIDSCHEME_RA_2008_8 = 1100
const XTENSA_HWCIDVERS_RA_2008_8 = 27
const XTENSA_HWVERSION_RB_2006_0 = 220000
const XTENSA_HWCIDSCHEME_RB_2006_0 = 1100
const XTENSA_HWCIDVERS_RB_2006_0 = 48
const XTENSA_HWVERSION_RB_2007_1 = 220001
const XTENSA_HWCIDSCHEME_RB_2007_1 = 1100
const XTENSA_HWCIDVERS_RB_2007_1 = 49
const XTENSA_HWVERSION_RB_2007_2 = 221000
const XTENSA_HWCIDSCHEME_RB_2007_2 = 1100
const XTENSA_HWCIDVERS_RB_2007_2 = 52
const XTENSA_HWVERSION_RB_2008_3 = 221001
const XTENSA_HWCIDSCHEME_RB_2008_3 = 1100
const XTENSA_HWCIDVERS_RB_2008_3 = 53
const XTENSA_HWVERSION_RB_2008_4 = 221002
const XTENSA_HWCIDSCHEME_RB_2008_4 = 1100
const XTENSA_HWCIDVERS_RB_2008_4 = 54
const XTENSA_HWVERSION_RB_2009_5 = 221003
const XTENSA_HWCIDSCHEME_RB_2009_5 = 1100
const XTENSA_HWCIDVERS_RB_2009_5 = 55
const XTENSA_HWVERSION_RB_2007_2_MP = 221100
const XTENSA_HWCIDSCHEME_RB_2007_2_MP = 1100
const XTENSA_HWCIDVERS_RB_2007_2_MP = 64
const XTENSA_HWVERSION_RC_2009_0 = 230000
const XTENSA_HWCIDSCHEME_RC_2009_0 = 1100
const XTENSA_HWCIDVERS_RC_2009_0 = 65
const XTENSA_HWVERSION_RC_2010_1 = 230001
const XTENSA_HWCIDSCHEME_RC_2010_1 = 1100
const XTENSA_HWCIDVERS_RC_2010_1 = 66
const XTENSA_HWVERSION_RC_2010_2 = 230002
const XTENSA_HWCIDSCHEME_RC_2010_2 = 1100
const XTENSA_HWCIDVERS_RC_2010_2 = 67
const XTENSA_HWVERSION_RC_2011_3 = 230003
const XTENSA_HWCIDSCHEME_RC_2011_3 = 1100
const XTENSA_HWCIDVERS_RC_2011_3 = 68
const XTENSA_HWVERSION_RD_2010_0 = 240000
const XTENSA_HWCIDSCHEME_RD_2010_0 = 1100
const XTENSA_HWCIDVERS_RD_2010_0 = 80
const XTENSA_HWVERSION_RD_2011_1 = 240001
const XTENSA_HWCIDSCHEME_RD_2011_1 = 1100
const XTENSA_HWCIDVERS_RD_2011_1 = 81
const XTENSA_HWVERSION_RD_2011_2 = 240002
const XTENSA_HWCIDSCHEME_RD_2011_2 = 1100
const XTENSA_HWCIDVERS_RD_2011_2 = 82
const XTENSA_HWVERSION_RD_2011_3 = 240003
const XTENSA_HWCIDSCHEME_RD_2011_3 = 1100
const XTENSA_HWCIDVERS_RD_2011_3 = 83
const XTENSA_HWVERSION_RD_2012_4 = 240004
const XTENSA_HWCIDSCHEME_RD_2012_4 = 1100
const XTENSA_HWCIDVERS_RD_2012_4 = 84
const XTENSA_HWVERSION_RD_2012_5 = 240005
const XTENSA_HWCIDSCHEME_RD_2012_5 = 1100
const XTENSA_HWCIDVERS_RD_2012_5 = 85
const XTENSA_HWVERSION_RE_2012_0 = 250000
const XTENSA_HWCIDSCHEME_RE_2012_0 = 1100
const XTENSA_HWCIDVERS_RE_2012_0 = 96
const XTENSA_HWVERSION_RE_2012_1 = 250001
const XTENSA_HWCIDSCHEME_RE_2012_1 = 1100
const XTENSA_HWCIDVERS_RE_2012_1 = 97
const XTENSA_HWVERSION_RE_2013_2 = 250002
const XTENSA_HWCIDSCHEME_RE_2013_2 = 1100
const XTENSA_HWCIDVERS_RE_2013_2 = 98
const XTENSA_HWVERSION_RE_2013_3 = 250003
const XTENSA_HWCIDSCHEME_RE_2013_3 = 1100
const XTENSA_HWCIDVERS_RE_2013_3 = 99
const XTENSA_HWVERSION_RE_2013_4 = 250004
const XTENSA_HWCIDSCHEME_RE_2013_4 = 1100
const XTENSA_HWCIDVERS_RE_2013_4 = 100
const XTENSA_HWVERSION_RE_2014_5 = 250005
const XTENSA_HWCIDSCHEME_RE_2014_5 = 1100
const XTENSA_HWCIDVERS_RE_2014_5 = 101
const XTENSA_HWVERSION_RE_2015_6 = 250006
const XTENSA_HWCIDSCHEME_RE_2015_6 = 1100
const XTENSA_HWCIDVERS_RE_2015_6 = 102
const XTENSA_HWVERSION_RF_2014_0 = 260000
const XTENSA_HWCIDSCHEME_RF_2014_0 = 1100
const XTENSA_HWCIDVERS_RF_2014_0 = 112
const XTENSA_HWVERSION_RF_2014_1 = 260001
const XTENSA_HWCIDSCHEME_RF_2014_1 = 1100
const XTENSA_HWCIDVERS_RF_2014_1 = 113
const XTENSA_HWVERSION_RF_2015_2 = 260002
const XTENSA_HWCIDSCHEME_RF_2015_2 = 1100
const XTENSA_HWCIDVERS_RF_2015_2 = 114
const XTENSA_HWVERSION_RF_2015_3 = 260003
const XTENSA_HWCIDSCHEME_RF_2015_3 = 1100
const XTENSA_HWCIDVERS_RF_2015_3 = 115
const XTENSA_HWVERSION_RF_2016_4 = 260004
const XTENSA_HWCIDSCHEME_RF_2016_4 = 1100
const XTENSA_HWCIDVERS_RF_2016_4 = 116
const XTENSA_HWVERSION_RG_2015_0 = 270000
const XTENSA_HWCIDSCHEME_RG_2015_0 = 1100
const XTENSA_HWCIDVERS_RG_2015_0 = 128
const XTENSA_HWVERSION_RG_2015_1 = 270001
const XTENSA_HWCIDSCHEME_RG_2015_1 = 1100
const XTENSA_HWCIDVERS_RG_2015_1 = 129
const XTENSA_HWVERSION_RG_2015_2 = 270002
const XTENSA_HWCIDSCHEME_RG_2015_2 = 1100
const XTENSA_HWCIDVERS_RG_2015_2 = 130
const XTENSA_HWVERSION_RG_2016_3 = 270003
const XTENSA_HWCIDSCHEME_RG_2016_3 = 1100
const XTENSA_HWCIDVERS_RG_2016_3 = 131
const XTENSA_HWVERSION_RG_2016_4 = 270004
const XTENSA_HWCIDSCHEME_RG_2016_4 = 1100
const XTENSA_HWCIDVERS_RG_2016_4 = 132
const XTENSA_HWVERSION_RG_2017_5 = 270005
const XTENSA_HWCIDSCHEME_RG_2017_5 = 1100
const XTENSA_HWCIDVERS_RG_2017_5 = 133
const XTENSA_HWVERSION_RG_2017_6 = 270006
const XTENSA_HWCIDSCHEME_RG_2017_6 = 1100
const XTENSA_HWCIDVERS_RG_2017_6 = 134
const XTENSA_HWVERSION_RG_2017_7 = 270007
const XTENSA_HWCIDSCHEME_RG_2017_7 = 1100
const XTENSA_HWCIDVERS_RG_2017_7 = 135
const XTENSA_HWVERSION_RG_2017_8 = 270008
const XTENSA_HWCIDSCHEME_RG_2017_8 = 1100
const XTENSA_HWCIDVERS_RG_2017_8 = 136
const XTENSA_HWVERSION_RG_2018_9 = 270009
const XTENSA_HWCIDSCHEME_RG_2018_9 = 1100
const XTENSA_HWCIDVERS_RG_2018_9 = 137
const XTENSA_HWVERSION_RH_2016_0 = 280000
const XTENSA_HWCIDSCHEME_RH_2016_0 = 1100
const XTENSA_HWCIDVERS_RH_2016_0 = 144
const XTENSA_SWVERSION_T1020_0 = 102000
const XTENSA_SWVERSION_T1020_1 = 102001
const XTENSA_SWVERSION_T1020_2 = 102002
const XTENSA_SWVERSION_T1020_2B = 102002
const XTENSA_SWVERSION_T1020_3 = 102003
const XTENSA_SWVERSION_T1020_4 = 102004
const XTENSA_SWVERSION_T1030_0 = 103000
const XTENSA_SWVERSION_T1030_1 = 103001
const XTENSA_SWVERSION_T1030_2 = 103002
const XTENSA_SWVERSION_T1030_3 = 103003
const XTENSA_SWVERSION_T1040_0 = 104000
const XTENSA_SWVERSION_T1040_1 = 104001
const XTENSA_SWVERSION_T1040_1P = 104001
const XTENSA_SWVERSION_T1040_2 = 104002
const XTENSA_SWVERSION_T1040_3 = 104003
const XTENSA_SWVERSION_T1050_0 = 105000
const XTENSA_SWVERSION_T1050_1 = 105001
const XTENSA_SWVERSION_T1050_2 = 105002
const XTENSA_SWVERSION_T1050_3 = 105003
const XTENSA_SWVERSION_T1050_4 = 105004
const XTENSA_SWVERSION_T1050_5 = 105005
const XTENSA_SWVERSION_RA_2004_1 = 600000
const XTENSA_SWVERSION_RA_2005_1 = 600001
const XTENSA_SWVERSION_RA_2005_2 = 600002
const XTENSA_SWVERSION_RA_2005_3 = 600003
const XTENSA_SWVERSION_RA_2006_4 = 600004
const XTENSA_SWVERSION_RA_2006_5 = 600005
const XTENSA_SWVERSION_RA_2006_6 = 600006
const XTENSA_SWVERSION_RA_2007_7 = 600007
const XTENSA_SWVERSION_RA_2008_8 = 600008
const XTENSA_SWVERSION_RB_2006_0 = 700000
const XTENSA_SWVERSION_RB_2007_1 = 700001
const XTENSA_SWVERSION_RB_2007_2 = 701000
const XTENSA_SWVERSION_RB_2008_3 = 701001
const XTENSA_SWVERSION_RB_2008_4 = 701002
const XTENSA_SWVERSION_RB_2009_5 = 701003
const XTENSA_SWVERSION_RB_2007_2_MP = 701100
const XTENSA_SWVERSION_RC_2009_0 = 800000
const XTENSA_SWVERSION_RC_2010_1 = 800001
const XTENSA_SWVERSION_RC_2010_2 = 800002
const XTENSA_SWVERSION_RC_2011_3 = 800003
const XTENSA_SWVERSION_RD_2010_0 = 900000
const XTENSA_SWVERSION_RD_2011_1 = 900001
const XTENSA_SWVERSION_RD_2011_2 = 900002
const XTENSA_SWVERSION_RD_2011_3 = 900003
const XTENSA_SWVERSION_RD_2012_4 = 900004
const XTENSA_SWVERSION_RD_2012_5 = 900005
const XTENSA_SWVERSION_RE_2012_0 = 1000000
const XTENSA_SWVERSION_RE_2012_1 = 1000001
const XTENSA_SWVERSION_RE_2013_2 = 1000002
const XTENSA_SWVERSION_RE_2013_3 = 1000003
const XTENSA_SWVERSION_RE_2013_4 = 1000004
const XTENSA_SWVERSION_RE_2014_5 = 1000005
const XTENSA_SWVERSION_RE_2015_6 = 1000006
const XTENSA_SWVERSION_RF_2014_0 = 1100000
const XTENSA_SWVERSION_RF_2014_1 = 1100001
const XTENSA_SWVERSION_RF_2015_2 = 1100002
const XTENSA_SWVERSION_RF_2015_3 = 1100003
const XTENSA_SWVERSION_RF_2016_4 = 1100004
const XTENSA_SWVERSION_RG_2015_0 = 1200000
const XTENSA_SWVERSION_RG_2015_1 = 1200001
const XTENSA_SWVERSION_RG_2015_2 = 1200002
const XTENSA_SWVERSION_RG_2016_3 = 1200003
const XTENSA_SWVERSION_RG_2016_4 = 1200004
const XTENSA_SWVERSION_RG_2017_5 = 1200005
const XTENSA_SWVERSION_RG_2017_6 = 1200006
const XTENSA_SWVERSION_RG_2017_7 = 1200007
const XTENSA_SWVERSION_RG_2017_8 = 1200008
const XTENSA_SWVERSION_RG_2018_9 = 1200009
const XTENSA_SWVERSION_RH_2016_0 = 1300000
const XTENSA_RELEASE_NAME = "RG-2018.9"
const XTENSA_RELEASE_CANONICAL_NAME = "RG-2018.9"
const XTENSA_SWVERSION_NAME = "12.0.9"
const XTENSA_SWVERSION_NAME_IDENT = 12_0_9
const XTENSA_SWVERSION_CANONICAL_NAME = "12.0.9"
const XTENSA_SWVERSION_MAJORMID_NAME = "12.0"
const XTENSA_SWVERSION_MAJOR_NAME = "12"
const XTENSA_SWVERSION_LICENSE_NAME = "12.0"
const XCHAL_HAVE_BE = 0
const XCHAL_HAVE_WINDOWED = 1
const XCHAL_NUM_AREGS = 64
const XCHAL_NUM_AREGS_LOG2 = 6
const XCHAL_MAX_INSTRUCTION_SIZE = 3
const XCHAL_HAVE_DEBUG = 1
const XCHAL_HAVE_DENSITY = 1
const XCHAL_HAVE_LOOPS = 0
const XCHAL_LOOP_BUFFER_SIZE = 0
const XCHAL_HAVE_NSA = 1
const XCHAL_HAVE_MINMAX = 1
const XCHAL_HAVE_SEXT = 1
const XCHAL_HAVE_DEPBITS = 0
const XCHAL_HAVE_CLAMPS = 1
const XCHAL_HAVE_MUL16 = 1
const XCHAL_HAVE_MUL32 = 1
const XCHAL_HAVE_MUL32_HIGH = 1
const XCHAL_HAVE_DIV32 = 1
const XCHAL_HAVE_L32R = 1
const XCHAL_HAVE_ABSOLUTE_LITERALS = 0
const XCHAL_HAVE_CONST16 = 0
const XCHAL_HAVE_ADDX = 1
const XCHAL_HAVE_EXCLUSIVE = 0
const XCHAL_HAVE_WIDE_BRANCHES = 0
const XCHAL_HAVE_PREDICTED_BRANCHES = 0
const XCHAL_HAVE_CALL4AND12 = 1
const XCHAL_HAVE_ABS = 1
const XCHAL_HAVE_RELEASE_SYNC = 1
const XCHAL_HAVE_S32C1I = 0
const XCHAL_HAVE_SPECULATION = 0
const XCHAL_HAVE_FULL_RESET = 1
const XCHAL_NUM_CONTEXTS = 1
const XCHAL_NUM_MISC_REGS = 4
const XCHAL_HAVE_TAP_MASTER = 0
const XCHAL_HAVE_PRID = 1
const XCHAL_HAVE_EXTERN_REGS = 1
const XCHAL_HAVE_MX = 0
const XCHAL_HAVE_MP_INTERRUPTS = 0
const XCHAL_HAVE_MP_RUNSTALL = 0
const XCHAL_HAVE_PSO = 0
const XCHAL_HAVE_PSO_CDM = 0
const XCHAL_HAVE_PSO_FULL_RETENTION = 0
const XCHAL_HAVE_THREADPTR = 1
const XCHAL_HAVE_BOOLEANS = 0
const XCHAL_HAVE_CP = 1
const XCHAL_CP_MAXCFG = 8
const XCHAL_HAVE_MAC16 = 0
const XCHAL_HAVE_FUSION = 0
const XCHAL_HAVE_FUSION_FP = 0
const XCHAL_HAVE_FUSION_LOW_POWER = 0
const XCHAL_HAVE_FUSION_AES = 0
const XCHAL_HAVE_FUSION_CONVENC = 0
const XCHAL_HAVE_FUSION_LFSR_CRC = 0
const XCHAL_HAVE_FUSION_BITOPS = 0
const XCHAL_HAVE_FUSION_AVS = 0
const XCHAL_HAVE_FUSION_16BIT_BASEBAND = 0
const XCHAL_HAVE_FUSION_VITERBI = 0
const XCHAL_HAVE_FUSION_SOFTDEMAP = 0
const XCHAL_HAVE_HIFIPRO = 0
const XCHAL_HAVE_HIFI4 = 0
const XCHAL_HAVE_HIFI4_VFPU = 0
const XCHAL_HAVE_HIFI3 = 0
const XCHAL_HAVE_HIFI3_VFPU = 0
const XCHAL_HAVE_HIFI3Z = 0
const XCHAL_HAVE_HIFI3Z_VFPU = 0
const XCHAL_HAVE_HIFI2 = 0
const XCHAL_HAVE_HIFI2EP = 0
const XCHAL_HAVE_HIFI_MINI = 0
const XCHAL_HAVE_VECTORFPU2005 = 0
const XCHAL_HAVE_USER_DPFPU = 0
const XCHAL_HAVE_USER_SPFPU = 0
const XCHAL_HAVE_FP = 0
const XCHAL_HAVE_FP_DIV = 0
const XCHAL_HAVE_FP_RECIP = 0
const XCHAL_HAVE_FP_SQRT = 0
const XCHAL_HAVE_FP_RSQRT = 0
const XCHAL_HAVE_DFP = 0
const XCHAL_HAVE_DFP_DIV = 0
const XCHAL_HAVE_DFP_RECIP = 0
const XCHAL_HAVE_DFP_SQRT = 0
const XCHAL_HAVE_DFP_RSQRT = 0
const XCHAL_HAVE_DFP_ACCEL = 0
const XCHAL_HAVE_DFPU_SINGLE_ONLY = 0
const XCHAL_HAVE_DFPU_SINGLE_DOUBLE = 0
const XCHAL_HAVE_VECTRA1 = 0
const XCHAL_HAVE_VECTRALX = 0
const XCHAL_HAVE_FUSIONG = 0
const XCHAL_HAVE_FUSIONG3 = 0
const XCHAL_HAVE_FUSIONG6 = 0
const XCHAL_HAVE_FUSIONG_SP_VFPU = 0
const XCHAL_HAVE_FUSIONG_DP_VFPU = 0
const XCHAL_FUSIONG_SIMD32 = 0
const XCHAL_HAVE_PDX = 0
const XCHAL_PDX_SIMD32 = 0
const XCHAL_HAVE_PDX4 = 0
const XCHAL_HAVE_PDX8 = 0
const XCHAL_HAVE_PDX16 = 0
const XCHAL_HAVE_CONNXD2 = 0
const XCHAL_HAVE_CONNXD2_DUALLSFLIX = 0
const XCHAL_HAVE_BBE16 = 0
const XCHAL_HAVE_BBE16_RSQRT = 0
const XCHAL_HAVE_BBE16_VECDIV = 0
const XCHAL_HAVE_BBE16_DESPREAD = 0
const XCHAL_HAVE_BBENEP = 0
const XCHAL_HAVE_BBENEP_SP_VFPU = 0
const XCHAL_HAVE_BSP3 = 0
const XCHAL_HAVE_BSP3_TRANSPOSE = 0
const XCHAL_HAVE_SSP16 = 0
const XCHAL_HAVE_SSP16_VITERBI = 0
const XCHAL_HAVE_TURBO16 = 0
const XCHAL_HAVE_BBP16 = 0
const XCHAL_HAVE_FLIX3 = 0
const XCHAL_HAVE_GRIVPEP = 0
const XCHAL_HAVE_GRIVPEP_HISTOGRAM = 0
const XCHAL_HAVE_VISION = 0
const XCHAL_VISION_SIMD16 = 0
const XCHAL_VISION_TYPE = 0
const XCHAL_VISION_QUAD_MAC_TYPE = 0
const XCHAL_HAVE_VISION_HISTOGRAM = 0
const XCHAL_HAVE_VISION_SP_VFPU = 0
const XCHAL_HAVE_VISION_HP_VFPU = 0
const XCHAL_HAVE_VISIONC = 0
const XCHAL_NUM_LOADSTORE_UNITS = 1
const XCHAL_NUM_WRITEBUFFER_ENTRIES = 4
const XCHAL_INST_FETCH_WIDTH = 4
const XCHAL_DATA_WIDTH = 4
const XCHAL_DATA_PIPE_DELAY = 2
const XCHAL_CLOCK_GATING_GLOBAL = 0
const XCHAL_CLOCK_GATING_FUNCUNIT = 0
const XCHAL_UNALIGNED_LOAD_EXCEPTION = 0
const XCHAL_UNALIGNED_STORE_EXCEPTION = 0
const XCHAL_UNALIGNED_LOAD_HW = 1
const XCHAL_UNALIGNED_STORE_HW = 1
const XCHAL_SW_VERSION = 1200008
const XCHAL_CORE_ID = "test_0731_1_TIE_GPIO_f"
const XCHAL_BUILD_UNIQUE_ID = 0x00075F76
const XCHAL_HW_CONFIGID0 = 0xC2ECFAFE
const XCHAL_HW_CONFIGID1 = 0x22075F76
const XCHAL_HW_VERSION_NAME = "LX7.0.8"
const XCHAL_HW_VERSION_MAJOR = 2700
const XCHAL_HW_VERSION_MINOR = 8
const XCHAL_HW_VERSION = 270008
const XCHAL_HW_REL_LX7 = 1
const XCHAL_HW_REL_LX7_0 = 1
const XCHAL_HW_REL_LX7_0_8 = 1
const XCHAL_HW_CONFIGID_RELIABLE = 1
const XCHAL_HW_MIN_VERSION_MAJOR = 2700
const XCHAL_HW_MIN_VERSION_MINOR = 8
const XCHAL_HW_MIN_VERSION = 270008
const XCHAL_HW_MAX_VERSION_MAJOR = 2700
const XCHAL_HW_MAX_VERSION_MINOR = 8
const XCHAL_HW_MAX_VERSION = 270008
const XCHAL_ICACHE_LINESIZE = 4
const XCHAL_DCACHE_LINESIZE = 4
const XCHAL_ICACHE_LINEWIDTH = 2
const XCHAL_DCACHE_LINEWIDTH = 2
const XCHAL_ICACHE_SIZE = 0
const XCHAL_DCACHE_SIZE = 0
const XCHAL_DCACHE_IS_WRITEBACK = 0
const XCHAL_DCACHE_IS_COHERENT = 0
const XCHAL_HAVE_PREFETCH = 0
const XCHAL_HAVE_PREFETCH_L1 = 0
const XCHAL_PREFETCH_CASTOUT_LINES = 0
const XCHAL_PREFETCH_ENTRIES = 0
const XCHAL_PREFETCH_BLOCK_ENTRIES = 0
const XCHAL_HAVE_CACHE_BLOCKOPS = 0
const XCHAL_HAVE_ICACHE_TEST = 0
const XCHAL_HAVE_DCACHE_TEST = 0
const XCHAL_HAVE_ICACHE_DYN_WAYS = 0
const XCHAL_HAVE_DCACHE_DYN_WAYS = 0
const XCHAL_HAVE_PIF = 1
const XCHAL_HAVE_AXI = 0
const XCHAL_HAVE_AXI_ECC = 0
const XCHAL_HAVE_ACELITE = 0
const XCHAL_HAVE_PIF_WR_RESP = 0
const XCHAL_HAVE_PIF_REQ_ATTR = 1
const XCHAL_ICACHE_SETWIDTH = 0
const XCHAL_DCACHE_SETWIDTH = 0
const XCHAL_ICACHE_WAYS = 1
const XCHAL_DCACHE_WAYS = 1
const XCHAL_ICACHE_LINE_LOCKABLE = 0
const XCHAL_DCACHE_LINE_LOCKABLE = 0
const XCHAL_ICACHE_ECC_PARITY = 0
const XCHAL_DCACHE_ECC_PARITY = 0
const XCHAL_ICACHE_ACCESS_SIZE = 1
const XCHAL_DCACHE_ACCESS_SIZE = 1
const XCHAL_DCACHE_BANKS = 0
const XCHAL_CA_BITS = 4
const XCHAL_NUM_INSTROM = 1
const XCHAL_NUM_INSTRAM = 2
const XCHAL_NUM_DATAROM = 1
const XCHAL_NUM_DATARAM = 2
const XCHAL_NUM_URAM = 0
const XCHAL_NUM_XLMI = 1
const XCHAL_INSTROM0_VADDR = 0x40800000
const XCHAL_INSTROM0_PADDR = 0x40800000
const XCHAL_INSTROM0_SIZE = 4194304
const XCHAL_INSTROM0_ECC_PARITY = 0
const XCHAL_INSTRAM0_VADDR = 0x40000000
const XCHAL_INSTRAM0_PADDR = 0x40000000
const XCHAL_INSTRAM0_SIZE = 4194304
const XCHAL_INSTRAM0_ECC_PARITY = 0
const XCHAL_HAVE_INSTRAM0 = 1
const XCHAL_INSTRAM0_HAVE_IDMA = 0
const XCHAL_INSTRAM1_VADDR = 0x40400000
const XCHAL_INSTRAM1_PADDR = 0x40400000
const XCHAL_INSTRAM1_SIZE = 4194304
const XCHAL_INSTRAM1_ECC_PARITY = 0
const XCHAL_HAVE_INSTRAM1 = 1
const XCHAL_INSTRAM1_HAVE_IDMA = 0
const XCHAL_DATAROM0_VADDR = 0x3F400000
const XCHAL_DATAROM0_PADDR = 0x3F400000
const XCHAL_DATAROM0_SIZE = 4194304
const XCHAL_DATAROM0_ECC_PARITY = 0
const XCHAL_DATAROM0_BANKS = 1
const XCHAL_DATARAM0_VADDR = 0x3FF80000
const XCHAL_DATARAM0_PADDR = 0x3FF80000
const XCHAL_DATARAM0_SIZE = 524288
const XCHAL_DATARAM0_ECC_PARITY = 0
const XCHAL_DATARAM0_BANKS = 1
const XCHAL_HAVE_DATARAM0 = 1
const XCHAL_DATARAM0_HAVE_IDMA = 0
const XCHAL_DATARAM1_VADDR = 0x3F800000
const XCHAL_DATARAM1_PADDR = 0x3F800000
const XCHAL_DATARAM1_SIZE = 4194304
const XCHAL_DATARAM1_ECC_PARITY = 0
const XCHAL_DATARAM1_BANKS = 1
const XCHAL_HAVE_DATARAM1 = 1
const XCHAL_DATARAM1_HAVE_IDMA = 0
const XCHAL_XLMI0_VADDR = 0x3FE00000
const XCHAL_XLMI0_PADDR = 0x3FE00000
const XCHAL_XLMI0_SIZE = 1048576
const XCHAL_XLMI0_ECC_PARITY = 0
const XCHAL_HAVE_IDMA = 0
const XCHAL_HAVE_IDMA_TRANSPOSE = 0
const XCHAL_HAVE_IMEM_LOADSTORE = 1
const XCHAL_HAVE_INTERRUPTS = 1
const XCHAL_HAVE_HIGHPRI_INTERRUPTS = 1
const XCHAL_HAVE_NMI = 1
const XCHAL_HAVE_CCOUNT = 1
const XCHAL_NUM_TIMERS = 3
const XCHAL_NUM_INTERRUPTS = 32
const XCHAL_NUM_INTERRUPTS_LOG2 = 5
const XCHAL_NUM_EXTINTERRUPTS = 26
const XCHAL_NUM_INTLEVELS = 6
const XCHAL_EXCM_LEVEL = 3
const XCHAL_INTLEVEL1_MASK = 0x000637FF
const XCHAL_INTLEVEL2_MASK = 0x00380000
const XCHAL_INTLEVEL3_MASK = 0x28C08800
const XCHAL_INTLEVEL4_MASK = 0x53000000
const XCHAL_INTLEVEL5_MASK = 0x84010000
const XCHAL_INTLEVEL6_MASK = 0x00000000
const XCHAL_INTLEVEL7_MASK = 0x00004000
const XCHAL_INTLEVEL1_ANDBELOW_MASK = 0x000637FF
const XCHAL_INTLEVEL2_ANDBELOW_MASK = 0x003E37FF
const XCHAL_INTLEVEL3_ANDBELOW_MASK = 0x28FEBFFF
const XCHAL_INTLEVEL4_ANDBELOW_MASK = 0x7BFEBFFF
const XCHAL_INTLEVEL5_ANDBELOW_MASK = 0xFFFFBFFF
const XCHAL_INTLEVEL6_ANDBELOW_MASK = 0xFFFFBFFF
const XCHAL_INTLEVEL7_ANDBELOW_MASK = 0xFFFFFFFF
const XCHAL_INT0_LEVEL = 1
const XCHAL_INT1_LEVEL = 1
const XCHAL_INT2_LEVEL = 1
const XCHAL_INT3_LEVEL = 1
const XCHAL_INT4_LEVEL = 1
const XCHAL_INT5_LEVEL = 1
const XCHAL_INT6_LEVEL = 1
const XCHAL_INT7_LEVEL = 1
const XCHAL_INT8_LEVEL = 1
const XCHAL_INT9_LEVEL = 1
const XCHAL_INT10_LEVEL = 1
const XCHAL_INT11_LEVEL = 3
const XCHAL_INT12_LEVEL = 1
const XCHAL_INT13_LEVEL = 1
const XCHAL_INT14_LEVEL = 7
const XCHAL_INT15_LEVEL = 3
const XCHAL_INT16_LEVEL = 5
const XCHAL_INT17_LEVEL = 1
const XCHAL_INT18_LEVEL = 1
const XCHAL_INT19_LEVEL = 2
const XCHAL_INT20_LEVEL = 2
const XCHAL_INT21_LEVEL = 2
const XCHAL_INT22_LEVEL = 3
const XCHAL_INT23_LEVEL = 3
const XCHAL_INT24_LEVEL = 4
const XCHAL_INT25_LEVEL = 4
const XCHAL_INT26_LEVEL = 5
const XCHAL_INT27_LEVEL = 3
const XCHAL_INT28_LEVEL = 4
const XCHAL_INT29_LEVEL = 3
const XCHAL_INT30_LEVEL = 4
const XCHAL_INT31_LEVEL = 5
const XCHAL_DEBUGLEVEL = 6
const XCHAL_HAVE_DEBUG_EXTERN_INT = 1
const XCHAL_NMILEVEL = 7
const XCHAL_INTTYPE_MASK_UNCONFIGURED = 0x00000000
const XCHAL_INTTYPE_MASK_SOFTWARE = 0x20000080
const XCHAL_INTTYPE_MASK_EXTERN_EDGE = 0x50400400
const XCHAL_INTTYPE_MASK_EXTERN_LEVEL = 0x8FBE333F
const XCHAL_INTTYPE_MASK_TIMER = 0x00018040
const XCHAL_INTTYPE_MASK_NMI = 0x00004000
const XCHAL_INTTYPE_MASK_WRITE_ERROR = 0x00000000
const XCHAL_INTTYPE_MASK_PROFILING = 0x00000800
const XCHAL_INTTYPE_MASK_IDMA_DONE = 0x00000000
const XCHAL_INTTYPE_MASK_IDMA_ERR = 0x00000000
const XCHAL_INTTYPE_MASK_GS_ERR = 0x00000000
const XCHAL_TIMER0_INTERRUPT = 6
const XCHAL_TIMER1_INTERRUPT = 15
const XCHAL_TIMER2_INTERRUPT = 16
const XCHAL_NMI_INTERRUPT = 14
const XCHAL_PROFILING_INTERRUPT = 11
const XCHAL_INTLEVEL7_NUM = 14
const XCHAL_EXTINT0_NUM = 0
const XCHAL_EXTINT1_NUM = 1
const XCHAL_EXTINT2_NUM = 2
const XCHAL_EXTINT3_NUM = 3
const XCHAL_EXTINT4_NUM = 4
const XCHAL_EXTINT5_NUM = 5
const XCHAL_EXTINT6_NUM = 8
const XCHAL_EXTINT7_NUM = 9
const XCHAL_EXTINT8_NUM = 10
const XCHAL_EXTINT9_NUM = 12
const XCHAL_EXTINT10_NUM = 13
const XCHAL_EXTINT11_NUM = 14
const XCHAL_EXTINT12_NUM = 17
const XCHAL_EXTINT13_NUM = 18
const XCHAL_EXTINT14_NUM = 19
const XCHAL_EXTINT15_NUM = 20
const XCHAL_EXTINT16_NUM = 21
const XCHAL_EXTINT17_NUM = 22
const XCHAL_EXTINT18_NUM = 23
const XCHAL_EXTINT19_NUM = 24
const XCHAL_EXTINT20_NUM = 25
const XCHAL_EXTINT21_NUM = 26
const XCHAL_EXTINT22_NUM = 27
const XCHAL_EXTINT23_NUM = 28
const XCHAL_EXTINT24_NUM = 30
const XCHAL_EXTINT25_NUM = 31
const XCHAL_INT0_EXTNUM = 0
const XCHAL_INT1_EXTNUM = 1
const XCHAL_INT2_EXTNUM = 2
const XCHAL_INT3_EXTNUM = 3
const XCHAL_INT4_EXTNUM = 4
const XCHAL_INT5_EXTNUM = 5
const XCHAL_INT8_EXTNUM = 6
const XCHAL_INT9_EXTNUM = 7
const XCHAL_INT10_EXTNUM = 8
const XCHAL_INT12_EXTNUM = 9
const XCHAL_INT13_EXTNUM = 10
const XCHAL_INT14_EXTNUM = 11
const XCHAL_INT17_EXTNUM = 12
const XCHAL_INT18_EXTNUM = 13
const XCHAL_INT19_EXTNUM = 14
const XCHAL_INT20_EXTNUM = 15
const XCHAL_INT21_EXTNUM = 16
const XCHAL_INT22_EXTNUM = 17
const XCHAL_INT23_EXTNUM = 18
const XCHAL_INT24_EXTNUM = 19
const XCHAL_INT25_EXTNUM = 20
const XCHAL_INT26_EXTNUM = 21
const XCHAL_INT27_EXTNUM = 22
const XCHAL_INT28_EXTNUM = 23
const XCHAL_INT30_EXTNUM = 24
const XCHAL_INT31_EXTNUM = 25
const XCHAL_XEA_VERSION = 2
const XCHAL_HAVE_XEA1 = 0
const XCHAL_HAVE_XEA2 = 1
const XCHAL_HAVE_XEAX = 0
const XCHAL_HAVE_EXCEPTIONS = 1
const XCHAL_HAVE_HALT = 0
const XCHAL_HAVE_BOOTLOADER = 0
const XCHAL_HAVE_MEM_ECC_PARITY = 0
const XCHAL_HAVE_VECTOR_SELECT = 1
const XCHAL_HAVE_VECBASE = 1
const XCHAL_VECBASE_RESET_VADDR = 0x40000000
const XCHAL_VECBASE_RESET_PADDR = 0x40000000
const XCHAL_RESET_VECBASE_OVERLAP = 0
const XCHAL_RESET_VECTOR0_VADDR = 0x50000000
const XCHAL_RESET_VECTOR0_PADDR = 0x50000000
const XCHAL_RESET_VECTOR1_VADDR = 0x40000400
const XCHAL_RESET_VECTOR1_PADDR = 0x40000400
const XCHAL_RESET_VECTOR_VADDR = 0x40000400
const XCHAL_RESET_VECTOR_PADDR = 0x40000400
const XCHAL_USER_VECOFS = 0x00000340
const XCHAL_USER_VECTOR_VADDR = 0x40000340
const XCHAL_USER_VECTOR_PADDR = 0x40000340
const XCHAL_KERNEL_VECOFS = 0x00000300
const XCHAL_KERNEL_VECTOR_VADDR = 0x40000300
const XCHAL_KERNEL_VECTOR_PADDR = 0x40000300
const XCHAL_DOUBLEEXC_VECOFS = 0x000003C0
const XCHAL_DOUBLEEXC_VECTOR_VADDR = 0x400003C0
const XCHAL_DOUBLEEXC_VECTOR_PADDR = 0x400003C0
const XCHAL_WINDOW_OF4_VECOFS = 0x00000000
const XCHAL_WINDOW_UF4_VECOFS = 0x00000040
const XCHAL_WINDOW_OF8_VECOFS = 0x00000080
const XCHAL_WINDOW_UF8_VECOFS = 0x000000C0
const XCHAL_WINDOW_OF12_VECOFS = 0x00000100
const XCHAL_WINDOW_UF12_VECOFS = 0x00000140
const XCHAL_WINDOW_VECTORS_VADDR = 0x40000000
const XCHAL_WINDOW_VECTORS_PADDR = 0x40000000
const XCHAL_INTLEVEL2_VECOFS = 0x00000180
const XCHAL_INTLEVEL2_VECTOR_VADDR = 0x40000180
const XCHAL_INTLEVEL2_VECTOR_PADDR = 0x40000180
const XCHAL_INTLEVEL3_VECOFS = 0x000001C0
const XCHAL_INTLEVEL3_VECTOR_VADDR = 0x400001C0
const XCHAL_INTLEVEL3_VECTOR_PADDR = 0x400001C0
const XCHAL_INTLEVEL4_VECOFS = 0x00000200
const XCHAL_INTLEVEL4_VECTOR_VADDR = 0x40000200
const XCHAL_INTLEVEL4_VECTOR_PADDR = 0x40000200
const XCHAL_INTLEVEL5_VECOFS = 0x00000240
const XCHAL_INTLEVEL5_VECTOR_VADDR = 0x40000240
const XCHAL_INTLEVEL5_VECTOR_PADDR = 0x40000240
const XCHAL_INTLEVEL6_VECOFS = 0x00000280
const XCHAL_INTLEVEL6_VECTOR_VADDR = 0x40000280
const XCHAL_INTLEVEL6_VECTOR_PADDR = 0x40000280
const XCHAL_NMI_VECOFS = 0x000002C0
const XCHAL_NMI_VECTOR_VADDR = 0x400002C0
const XCHAL_NMI_VECTOR_PADDR = 0x400002C0
const XCHAL_HAVE_DEBUG_ERI = 1
const XCHAL_HAVE_DEBUG_APB = 0
const XCHAL_HAVE_DEBUG_JTAG = 1
const XCHAL_HAVE_OCD = 1
const XCHAL_NUM_IBREAK = 2
const XCHAL_NUM_DBREAK = 2
const XCHAL_HAVE_OCD_DIR_ARRAY = 0
const XCHAL_HAVE_OCD_LS32DDR = 1
const XCHAL_HAVE_TRAX = 1
const XCHAL_TRAX_MEM_SIZE = 16384
const XCHAL_TRAX_MEM_SHAREABLE = 1
const XCHAL_TRAX_ATB_WIDTH = 0
const XCHAL_TRAX_TIME_WIDTH = 0
const XCHAL_NUM_PERF_COUNTERS = 2
const XCHAL_HAVE_TLBS = 1
const XCHAL_HAVE_SPANNING_WAY = 1
const XCHAL_SPANNING_WAY = 0
const XCHAL_HAVE_IDENTITY_MAP = 1
const XCHAL_HAVE_CACHEATTR = 0
const XCHAL_HAVE_MIMIC_CACHEATTR = 1
const XCHAL_HAVE_XLT_CACHEATTR = 0
const XCHAL_HAVE_PTP_MMU = 0
const XCHAL_MMU_ASID_BITS = 0
const XCHAL_MMU_RINGS = 1
const XCHAL_MMU_RING_BITS = 0
const XCHAL_HAVE_MPU = 0
const XCHAL_MPU_ENTRIES = 0
const XCHAL_MPU_ALIGN_REQ = 1
const XCHAL_MPU_BACKGROUND_ENTRIES = 0
const XCHAL_MPU_BG_CACHEADRDIS = 0
const XCHAL_MPU_ALIGN_BITS = 0
const XCHAL_MPU_ALIGN = 0
const XCHAL_CA_BYPASS = 2
const XCHAL_CA_BYPASSBUF = 6
const XCHAL_CA_WRITETHRU = 1
const XCHAL_CA_WRITEBACK = 2
const XCHAL_HAVE_CA_WRITEBACK_NOALLOC = 0
const XCHAL_CA_WRITEBACK_NOALLOC = 2
const XCHAL_CA_BYPASS_RW = 0
const XCHAL_CA_WRITETHRU_RW = 0
const XCHAL_CA_WRITEBACK_RW = 0
const XCHAL_CA_WRITEBACK_NOALLOC_RW = 0
const XCHAL_CA_ILLEGAL = 15
const XCHAL_CA_ISOLATE = 0
const XCHAL_MMU_ASID_INVALID = 0
const XCHAL_MMU_ASID_KERNEL = 0
const XCHAL_MMU_SR_BITS = 0
const XCHAL_MMU_CA_BITS = 4
const XCHAL_MMU_MAX_PTE_PAGE_SIZE = 29
const XCHAL_MMU_MIN_PTE_PAGE_SIZE = 29
const XCHAL_ITLB_WAY_BITS = 0
const XCHAL_ITLB_WAYS = 1
const XCHAL_ITLB_ARF_WAYS = 0
const XCHAL_ITLB_SETS = 1
const XCHAL_ITLB_WAY0_SET = 0
const XCHAL_ITLB_ARF_SETS = 0
const XCHAL_ITLB_MINWIRED_SETS = 0
const XCHAL_ITLB_SET0_WAY = 0
const XCHAL_ITLB_SET0_WAYS = 1
const XCHAL_ITLB_SET0_ENTRIES_LOG2 = 3
const XCHAL_ITLB_SET0_ENTRIES = 8
const XCHAL_ITLB_SET0_ARF = 0
const XCHAL_ITLB_SET0_PAGESIZES = 1
const XCHAL_ITLB_SET0_PAGESZ_BITS = 0
const XCHAL_ITLB_SET0_PAGESZ_LOG2_MIN = 29
const XCHAL_ITLB_SET0_PAGESZ_LOG2_MAX = 29
const XCHAL_ITLB_SET0_PAGESZ_LOG2_LIST = 29
const XCHAL_ITLB_SET0_ASID_CONSTMASK = 0
const XCHAL_ITLB_SET0_VPN_CONSTMASK = 0x00000000
const XCHAL_ITLB_SET0_PPN_CONSTMASK = 0xE0000000
const XCHAL_ITLB_SET0_CA_CONSTMASK = 0
const XCHAL_ITLB_SET0_ASID_RESET = 0
const XCHAL_ITLB_SET0_VPN_RESET = 0
const XCHAL_ITLB_SET0_PPN_RESET = 0
const XCHAL_ITLB_SET0_CA_RESET = 1
const XCHAL_ITLB_SET0_E0_VPN_CONST = 0x00000000
const XCHAL_ITLB_SET0_E1_VPN_CONST = 0x20000000
const XCHAL_ITLB_SET0_E2_VPN_CONST = 0x40000000
const XCHAL_ITLB_SET0_E3_VPN_CONST = 0x60000000
const XCHAL_ITLB_SET0_E4_VPN_CONST = 0x80000000
const XCHAL_ITLB_SET0_E5_VPN_CONST = 0xA0000000
const XCHAL_ITLB_SET0_E6_VPN_CONST = 0xC0000000
const XCHAL_ITLB_SET0_E7_VPN_CONST = 0xE0000000
const XCHAL_ITLB_SET0_E0_PPN_CONST = 0x00000000
const XCHAL_ITLB_SET0_E1_PPN_CONST = 0x20000000
const XCHAL_ITLB_SET0_E2_PPN_CONST = 0x40000000
const XCHAL_ITLB_SET0_E3_PPN_CONST = 0x60000000
const XCHAL_ITLB_SET0_E4_PPN_CONST = 0x80000000
const XCHAL_ITLB_SET0_E5_PPN_CONST = 0xA0000000
const XCHAL_ITLB_SET0_E6_PPN_CONST = 0xC0000000
const XCHAL_ITLB_SET0_E7_PPN_CONST = 0xE0000000
const XCHAL_ITLB_SET0_E0_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E1_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E2_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E3_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E4_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E5_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E6_CA_RESET = 0x02
const XCHAL_ITLB_SET0_E7_CA_RESET = 0x02
const XCHAL_DTLB_WAY_BITS = 0
const XCHAL_DTLB_WAYS = 1
const XCHAL_DTLB_ARF_WAYS = 0
const XCHAL_DTLB_SETS = 1
const XCHAL_DTLB_WAY0_SET = 0
const XCHAL_DTLB_ARF_SETS = 0
const XCHAL_DTLB_MINWIRED_SETS = 0
const XCHAL_DTLB_SET0_WAY = 0
const XCHAL_DTLB_SET0_WAYS = 1
const XCHAL_DTLB_SET0_ENTRIES_LOG2 = 3
const XCHAL_DTLB_SET0_ENTRIES = 8
const XCHAL_DTLB_SET0_ARF = 0
const XCHAL_DTLB_SET0_PAGESIZES = 1
const XCHAL_DTLB_SET0_PAGESZ_BITS = 0
const XCHAL_DTLB_SET0_PAGESZ_LOG2_MIN = 29
const XCHAL_DTLB_SET0_PAGESZ_LOG2_MAX = 29
const XCHAL_DTLB_SET0_PAGESZ_LOG2_LIST = 29
const XCHAL_DTLB_SET0_ASID_CONSTMASK = 0
const XCHAL_DTLB_SET0_VPN_CONSTMASK = 0x00000000
const XCHAL_DTLB_SET0_PPN_CONSTMASK = 0xE0000000
const XCHAL_DTLB_SET0_CA_CONSTMASK = 0
const XCHAL_DTLB_SET0_ASID_RESET = 0
const XCHAL_DTLB_SET0_VPN_RESET = 0
const XCHAL_DTLB_SET0_PPN_RESET = 0
const XCHAL_DTLB_SET0_CA_RESET = 1
const XCHAL_DTLB_SET0_E0_VPN_CONST = 0x00000000
const XCHAL_DTLB_SET0_E1_VPN_CONST = 0x20000000
const XCHAL_DTLB_SET0_E2_VPN_CONST = 0x40000000
const XCHAL_DTLB_SET0_E3_VPN_CONST = 0x60000000
const XCHAL_DTLB_SET0_E4_VPN_CONST = 0x80000000
const XCHAL_DTLB_SET0_E5_VPN_CONST = 0xA0000000
const XCHAL_DTLB_SET0_E6_VPN_CONST = 0xC0000000
const XCHAL_DTLB_SET0_E7_VPN_CONST = 0xE0000000
const XCHAL_DTLB_SET0_E0_PPN_CONST = 0x00000000
const XCHAL_DTLB_SET0_E1_PPN_CONST = 0x20000000
const XCHAL_DTLB_SET0_E2_PPN_CONST = 0x40000000
const XCHAL_DTLB_SET0_E3_PPN_CONST = 0x60000000
const XCHAL_DTLB_SET0_E4_PPN_CONST = 0x80000000
const XCHAL_DTLB_SET0_E5_PPN_CONST = 0xA0000000
const XCHAL_DTLB_SET0_E6_PPN_CONST = 0xC0000000
const XCHAL_DTLB_SET0_E7_PPN_CONST = 0xE0000000
const XCHAL_DTLB_SET0_E0_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E1_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E2_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E3_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E4_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E5_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E6_CA_RESET = 0x02
const XCHAL_DTLB_SET0_E7_CA_RESET = 0x02
const XCHAL_CP_NUM = 0
const XCHAL_CP_MAX = 0
const XCHAL_CP_MASK = 0x00
const XCHAL_CP_PORT_MASK = 0x00
const XCHAL_NCP_SA_SIZE = 4
const XCHAL_NCP_SA_ALIGN = 4
const XCHAL_TOTAL_SA_SIZE = 16
const XCHAL_TOTAL_SA_ALIGN = 4
const XCHAL_NCP_SA_NUM = 1
const XCHAL_CP0_SA_NUM = 0
const XCHAL_CP1_SA_NUM = 0
const XCHAL_CP2_SA_NUM = 0
const XCHAL_CP3_SA_NUM = 0
const XCHAL_CP4_SA_NUM = 0
const XCHAL_CP5_SA_NUM = 0
const XCHAL_CP6_SA_NUM = 0
const XCHAL_CP7_SA_NUM = 0
const XCHAL_ERRATUM_453 = 0
const XCHAL_ERRATUM_497 = 0
const XCHAL_HAVE_LE = 1
const XCHAL_NUM_LOWPRI_LEVELS = 1
const XCHAL_INTLEVEL0_MASK = 0x00000000
const XCHAL_INTLEVEL8_MASK = 0x00000000
const XCHAL_INTLEVEL9_MASK = 0x00000000
const XCHAL_INTLEVEL10_MASK = 0x00000000
const XCHAL_INTLEVEL11_MASK = 0x00000000
const XCHAL_INTLEVEL12_MASK = 0x00000000
const XCHAL_INTLEVEL13_MASK = 0x00000000
const XCHAL_INTLEVEL14_MASK = 0x00000000
const XCHAL_INTLEVEL15_MASK = 0x00000000
const XCHAL_INTLEVEL0_ANDBELOW_MASK = 0x00000000
const XCHAL_EXCCAUSE_ILLEGAL_INSTRUCTION = 0
const XCHAL_EXCCAUSE_SYSTEM_CALL = 1
const XCHAL_EXCCAUSE_INSTRUCTION_FETCH_ERROR = 2
const XCHAL_EXCCAUSE_LOAD_STORE_ERROR = 3
const XCHAL_EXCCAUSE_LEVEL1_INTERRUPT = 4
const XCHAL_EXCCAUSE_ALLOCA = 5
const XCHAL_EXCCAUSE_INTEGER_DIVIDE_BY_ZERO = 6
const XCHAL_EXCCAUSE_SPECULATION = 7
const XCHAL_EXCCAUSE_PRIVILEGED = 8
const XCHAL_EXCCAUSE_UNALIGNED = 9
const XCHAL_EXCCAUSE_ITLB_MISS = 16
const XCHAL_EXCCAUSE_ITLB_MULTIHIT = 17
const XCHAL_EXCCAUSE_ITLB_PRIVILEGE = 18
const XCHAL_EXCCAUSE_ITLB_SIZE_RESTRICTION = 19
const XCHAL_EXCCAUSE_FETCH_CACHE_ATTRIBUTE = 20
const XCHAL_EXCCAUSE_DTLB_MISS = 24
const XCHAL_EXCCAUSE_DTLB_MULTIHIT = 25
const XCHAL_EXCCAUSE_DTLB_PRIVILEGE = 26
const XCHAL_EXCCAUSE_DTLB_SIZE_RESTRICTION = 27
const XCHAL_EXCCAUSE_LOAD_CACHE_ATTRIBUTE = 28
const XCHAL_EXCCAUSE_STORE_CACHE_ATTRIBUTE = 29
const XCHAL_EXCCAUSE_COPROCESSOR0_DISABLED = 32
const XCHAL_EXCCAUSE_COPROCESSOR1_DISABLED = 33
const XCHAL_EXCCAUSE_COPROCESSOR2_DISABLED = 34
const XCHAL_EXCCAUSE_COPROCESSOR3_DISABLED = 35
const XCHAL_EXCCAUSE_COPROCESSOR4_DISABLED = 36
const XCHAL_EXCCAUSE_COPROCESSOR5_DISABLED = 37
const XCHAL_EXCCAUSE_COPROCESSOR6_DISABLED = 38
const XCHAL_EXCCAUSE_COPROCESSOR7_DISABLED = 39
const XCHAL_DBREAKC_VALIDMASK = 0xC000003F
const XCHAL_DBREAKC_MASK_BITS = 6
const XCHAL_DBREAKC_MASK_NUM = 64
const XCHAL_DBREAKC_MASK_SHIFT = 0
const XCHAL_DBREAKC_MASK_MASK = 0x0000003F
const XCHAL_DBREAKC_LOADBREAK_BITS = 1
const XCHAL_DBREAKC_LOADBREAK_NUM = 2
const XCHAL_DBREAKC_LOADBREAK_SHIFT = 30
const XCHAL_DBREAKC_LOADBREAK_MASK = 0x40000000
const XCHAL_DBREAKC_STOREBREAK_BITS = 1
const XCHAL_DBREAKC_STOREBREAK_NUM = 2
const XCHAL_DBREAKC_STOREBREAK_SHIFT = 31
const XCHAL_DBREAKC_STOREBREAK_MASK = 0x80000000
const XCHAL_PS_VALIDMASK = 0x00070F3F
const XCHAL_PS_INTLEVEL_BITS = 4
const XCHAL_PS_INTLEVEL_NUM = 16
const XCHAL_PS_INTLEVEL_SHIFT = 0
const XCHAL_PS_INTLEVEL_MASK = 0x0000000F
const XCHAL_PS_EXCM_BITS = 1
const XCHAL_PS_EXCM_NUM = 2
const XCHAL_PS_EXCM_SHIFT = 4
const XCHAL_PS_EXCM_MASK = 0x00000010
const XCHAL_PS_UM_BITS = 1
const XCHAL_PS_UM_NUM = 2
const XCHAL_PS_UM_SHIFT = 5
const XCHAL_PS_UM_MASK = 0x00000020
const XCHAL_PS_RING_BITS = 2
const XCHAL_PS_RING_NUM = 4
const XCHAL_PS_RING_SHIFT = 6
const XCHAL_PS_RING_MASK = 0x000000C0
const XCHAL_PS_OWB_BITS = 4
const XCHAL_PS_OWB_NUM = 16
const XCHAL_PS_OWB_SHIFT = 8
const XCHAL_PS_OWB_MASK = 0x00000F00
const XCHAL_PS_CALLINC_BITS = 2
const XCHAL_PS_CALLINC_NUM = 4
const XCHAL_PS_CALLINC_SHIFT = 16
const XCHAL_PS_CALLINC_MASK = 0x00030000
const XCHAL_PS_WOE_BITS = 1
const XCHAL_PS_WOE_NUM = 2
const XCHAL_PS_WOE_SHIFT = 18
const XCHAL_PS_WOE_MASK = 0x00040000
const XCHAL_EXCCAUSE_VALIDMASK = 0x0000003F
const XCHAL_EXCCAUSE_BITS = 6
const XCHAL_EXCCAUSE_NUM = 64
const XCHAL_EXCCAUSE_SHIFT = 0
const XCHAL_EXCCAUSE_MASK = 0x0000003F
const XCHAL_DEBUGCAUSE_VALIDMASK = 0x0000003F
const XCHAL_DEBUGCAUSE_ICOUNT_BITS = 1
const XCHAL_DEBUGCAUSE_ICOUNT_NUM = 2
const XCHAL_DEBUGCAUSE_ICOUNT_SHIFT = 0
const XCHAL_DEBUGCAUSE_ICOUNT_MASK = 0x00000001
const XCHAL_DEBUGCAUSE_IBREAK_BITS = 1
const XCHAL_DEBUGCAUSE_IBREAK_NUM = 2
const XCHAL_DEBUGCAUSE_IBREAK_SHIFT = 1
const XCHAL_DEBUGCAUSE_IBREAK_MASK = 0x00000002
const XCHAL_DEBUGCAUSE_DBREAK_BITS = 1
const XCHAL_DEBUGCAUSE_DBREAK_NUM = 2
const XCHAL_DEBUGCAUSE_DBREAK_SHIFT = 2
const XCHAL_DEBUGCAUSE_DBREAK_MASK = 0x00000004
const XCHAL_DEBUGCAUSE_BREAK_BITS = 1
const XCHAL_DEBUGCAUSE_BREAK_NUM = 2
const XCHAL_DEBUGCAUSE_BREAK_SHIFT = 3
const XCHAL_DEBUGCAUSE_BREAK_MASK = 0x00000008
const XCHAL_DEBUGCAUSE_BREAKN_BITS = 1
const XCHAL_DEBUGCAUSE_BREAKN_NUM = 2
const XCHAL_DEBUGCAUSE_BREAKN_SHIFT = 4
const XCHAL_DEBUGCAUSE_BREAKN_MASK = 0x00000010
const XCHAL_DEBUGCAUSE_DEBUGINT_BITS = 1
const XCHAL_DEBUGCAUSE_DEBUGINT_NUM = 2
const XCHAL_DEBUGCAUSE_DEBUGINT_SHIFT = 5
const XCHAL_DEBUGCAUSE_DEBUGINT_MASK = 0x00000020
const XCHAL_CACHE_PREFCTL_DEFAULT = 0x01044
const XCHAL_ICACHE_TAG_V_SHIFT = 0
const XCHAL_ICACHE_TAG_V = 0x1
const XCHAL_ICACHE_TAG_F_SHIFT = 0
const XCHAL_ICACHE_TAG_F = 0
const XCHAL_ICACHE_TAG_L = 0
const XCHAL_DCACHE_TAG_V_SHIFT = 0
const XCHAL_DCACHE_TAG_V = 0x1
const XCHAL_DCACHE_TAG_F_SHIFT = 0
const XCHAL_DCACHE_TAG_F = 0
const XCHAL_DCACHE_TAG_D = 0
const XCHAL_DCACHE_TAG_L = 0
const X_MEMCTL_SNOOP_EN = 0x00
const X_MEMCTL_L0IBUF_EN = 0x00
const XCHAL_CP0_NAME = 0
const XCHAL_CP0_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP1_NAME = 0
const XCHAL_CP1_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP2_NAME = 0
const XCHAL_CP2_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP3_NAME = 0
const XCHAL_CP3_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP4_NAME = 0
const XCHAL_CP4_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP5_NAME = 0
const XCHAL_CP5_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP6_NAME = 0
const XCHAL_CP6_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP7_NAME = 0
const XCHAL_CP7_SA_CONTENTS_LIBDB_NUM = 0
const XCHAL_CP0_SA_SIZE = 0
const XCHAL_CP0_SA_ALIGN = 1
const XCHAL_CP1_SA_SIZE = 0
const XCHAL_CP1_SA_ALIGN = 1
const XCHAL_CP2_SA_SIZE = 0
const XCHAL_CP2_SA_ALIGN = 1
const XCHAL_CP3_SA_SIZE = 0
const XCHAL_CP3_SA_ALIGN = 1
const XCHAL_CP4_SA_SIZE = 0
const XCHAL_CP4_SA_ALIGN = 1
const XCHAL_CP5_SA_SIZE = 0
const XCHAL_CP5_SA_ALIGN = 1
const XCHAL_CP6_SA_SIZE = 0
const XCHAL_CP6_SA_ALIGN = 1
const XCHAL_CP7_SA_SIZE = 0
const XCHAL_CP7_SA_ALIGN = 1
const XCHAL_INST_ILLN = 0xF06D
const XCHAL_INST_ILLN_BYTE0 = 0x6D
const XCHAL_INST_ILLN_BYTE1 = 0xF0
const XTHAL_INST_ILL = 0x000000
const EXCCAUSE_EXCCAUSE_SHIFT = 0
const EXCCAUSE_EXCCAUSE_MASK = 0x3F
const EXCCAUSE_ILLEGAL = 0
const EXCCAUSE_SYSCALL = 1
const EXCCAUSE_INSTR_ERROR = 2
const EXCCAUSE_IFETCHERROR = 2
const EXCCAUSE_LOAD_STORE_ERROR = 3
const EXCCAUSE_LOADSTOREERROR = 3
const EXCCAUSE_LEVEL1_INTERRUPT = 4
const EXCCAUSE_LEVEL1INTERRUPT = 4
const EXCCAUSE_ALLOCA = 5
const EXCCAUSE_DIVIDE_BY_ZERO = 6
const EXCCAUSE_SPECULATION = 7
const EXCCAUSE_PC_ERROR = 7
const EXCCAUSE_PRIVILEGED = 8
const EXCCAUSE_UNALIGNED = 9
const EXCCAUSE_EXTREG_PRIVILEGE = 10
const EXCCAUSE_EXCLUSIVE_ERROR = 11
const EXCCAUSE_INSTR_DATA_ERROR = 12
const EXCCAUSE_LOAD_STORE_DATA_ERROR = 13
const EXCCAUSE_INSTR_ADDR_ERROR = 14
const EXCCAUSE_LOAD_STORE_ADDR_ERROR = 15
const EXCCAUSE_ITLB_MISS = 16
const EXCCAUSE_ITLB_MULTIHIT = 17
const EXCCAUSE_INSTR_RING = 18
const EXCCAUSE_INSTR_PROHIBITED = 20
const EXCCAUSE_DTLB_MISS = 24
const EXCCAUSE_DTLB_MULTIHIT = 25
const EXCCAUSE_LOAD_STORE_RING = 26
const EXCCAUSE_LOAD_PROHIBITED = 28
const EXCCAUSE_STORE_PROHIBITED = 29
const EXCCAUSE_CP0_DISABLED = 32
const EXCCAUSE_CP1_DISABLED = 33
const EXCCAUSE_CP2_DISABLED = 34
const EXCCAUSE_CP3_DISABLED = 35
const EXCCAUSE_CP4_DISABLED = 36
const EXCCAUSE_CP5_DISABLED = 37
const EXCCAUSE_CP6_DISABLED = 38
const EXCCAUSE_CP7_DISABLED = 39
const PS_WOE_SHIFT = 18
const PS_WOE_MASK = 0x00040000
const PS_CALLINC_SHIFT = 16
const PS_CALLINC_MASK = 0x00030000
const PS_OWB_SHIFT = 8
const PS_OWB_MASK = 0x00000F00
const PS_RING_SHIFT = 6
const PS_RING_MASK = 0x000000C0
const PS_UM_SHIFT = 5
const PS_UM_MASK = 0x00000020
const PS_EXCM_SHIFT = 4
const PS_EXCM_MASK = 0x00000010
const PS_INTLEVEL_SHIFT = 0
const PS_INTLEVEL_MASK = 0x0000000F
const DBREAKC_MASK_SHIFT = 0
const DBREAKC_MASK_MASK = 0x0000003F
const DBREAKC_LOADBREAK_SHIFT = 30
const DBREAKC_LOADBREAK_MASK = 0x40000000
const DBREAKC_STOREBREAK_SHIFT = 31
const DBREAKC_STOREBREAK_MASK = 0x80000000
const DEBUGCAUSE_DEBUGINT_SHIFT = 5
const DEBUGCAUSE_DEBUGINT_MASK = 0x20
const DEBUGCAUSE_BREAKN_SHIFT = 4
const DEBUGCAUSE_BREAKN_MASK = 0x10
const DEBUGCAUSE_BREAK_SHIFT = 3
const DEBUGCAUSE_BREAK_MASK = 0x08
const DEBUGCAUSE_DBREAK_SHIFT = 2
const DEBUGCAUSE_DBREAK_MASK = 0x04
const DEBUGCAUSE_IBREAK_SHIFT = 1
const DEBUGCAUSE_IBREAK_MASK = 0x02
const DEBUGCAUSE_ICOUNT_SHIFT = 0
const DEBUGCAUSE_ICOUNT_MASK = 0x01
const MESR_MEME = 0x00000001
const MESR_MEME_SHIFT = 0
const MESR_DME = 0x00000002
const MESR_DME_SHIFT = 1
const MESR_RCE = 0x00000010
const MESR_RCE_SHIFT = 4
const MESR_ERRENAB = 0x00000100
const MESR_ERRENAB_SHIFT = 8
const MESR_ERRTEST = 0x00000200
const MESR_ERRTEST_SHIFT = 9
const MESR_DATEXC = 0x00000400
const MESR_DATEXC_SHIFT = 10
const MESR_INSEXC = 0x00000800
const MESR_INSEXC_SHIFT = 11
const MESR_WAYNUM_SHIFT = 16
const MESR_ACCTYPE_SHIFT = 20
const MESR_MEMTYPE_SHIFT = 24
const MESR_ERRTYPE_SHIFT = 30
const MEMCTL_SNOOP_EN_SHIFT = 1
const MEMCTL_SNOOP_EN = 0x02
const MEMCTL_L0IBUF_EN_SHIFT = 0
const MEMCTL_L0IBUF_EN = 0x01
const MEMCTL_INV_EN_SHIFT = 23
const MEMCTL_INV_EN = 0x00800000
const MEMCTL_DCWU_SHIFT = 8
const MEMCTL_DCWU_BITS = 5
const MEMCTL_DCWA_SHIFT = 13
const MEMCTL_DCWA_BITS = 5
const MEMCTL_ICWU_SHIFT = 18
const MEMCTL_ICWU_BITS = 5
const MEMCTL_DCWU_MASK = 0x00001F00
const MEMCTL_DCWA_MASK = 0x0003E000
const MEMCTL_ICWU_MASK = 0x007C0000
const SAR = 3
const WINDOWBASE = 72
const WINDOWSTART = 73
const IBREAKENABLE = 96
const DDR = 104
const IBREAKA_0 = 128
const IBREAKA_1 = 129
const DBREAKA_0 = 144
const DBREAKA_1 = 145
const DBREAKC_0 = 160
const DBREAKC_1 = 161
const CONFIGID0 = 176
const EPC_1 = 177
const EPC_2 = 178
const EPC_3 = 179
const EPC_4 = 180
const EPC_5 = 181
const EPC_6 = 182
const EPC_7 = 183
const DEPC = 192
const EPS_2 = 194
const EPS_3 = 195
const EPS_4 = 196
const EPS_5 = 197
const EPS_6 = 198
const EPS_7 = 199
const CONFIGID1 = 208
const EXCSAVE_1 = 209
const EXCSAVE_2 = 210
const EXCSAVE_3 = 211
const EXCSAVE_4 = 212
const EXCSAVE_5 = 213
const EXCSAVE_6 = 214
const EXCSAVE_7 = 215
const CPENABLE = 224
const INTERRUPT = 226
const INTENABLE = 228
const PS = 230
const VECBASE = 231
const EXCCAUSE = 232
const DEBUGCAUSE = 233
const CCOUNT = 234
const PRID = 235
const ICOUNT = 236
const ICOUNTLEVEL = 237
const EXCVADDR = 238
const CCOMPARE_0 = 240
const CCOMPARE_1 = 241
const CCOMPARE_2 = 242
const MISC_REG_0 = 244
const MISC_REG_1 = 245
const MISC_REG_2 = 246
const MISC_REG_3 = 247
const IBREAKA = 128
const DBREAKA = 144
const DBREAKC = 160
const EPC = 176
const EPS = 192
const EXCSAVE = 208
const CCOMPARE = 240
const INTREAD = 226
const INTSET = 226
const INTCLEAR = 227
const CALL0_ABI = 0
const KERNELSTACKSIZE = 1024
const CORE_STATE_SIGNATURE = 0xB1C5AFED
const XTOS_KEEPON_MEM = 0x00000100
const XTOS_KEEPON_MEM_SHIFT = 8
const XTOS_KEEPON_DEBUG = 0x00001000
const XTOS_KEEPON_DEBUG_SHIFT = 12
const XTOS_IDMA_NO_WAIT = 0x00010000
const XTOS_IDMA_WAIT_STANDBY = 0x00020000
const XTOS_COREF_PSO = 0x00000001
const XTOS_COREF_PSO_SHIFT = 0
const EXTRA_SAVE_AREA_SIZE = 32
const BASE_SAVE_AREA_SIZE = 16
const BASE_AREA_SP_OFFSET = 12
const SYSCON_RST_TICK_CNT_V = 0x1
const SYSCON_RST_TICK_CNT_S = 12
const SYSCON_CLK_EN_V = 0x1
const SYSCON_CLK_EN_S = 11
const SYSCON_CLK_320M_EN_V = 0x1
const SYSCON_CLK_320M_EN_S = 10
const SYSCON_TICK_ENABLE_V = 0x1
const SYSCON_TICK_ENABLE_S = 16
const SYSCON_CK8M_TICK_NUM = 0x000000FF
const SYSCON_CK8M_TICK_NUM_V = 0xFF
const SYSCON_CK8M_TICK_NUM_S = 8
const SYSCON_XTAL_TICK_NUM = 0x000000FF
const SYSCON_XTAL_TICK_NUM_V = 0xFF
const SYSCON_XTAL_TICK_NUM_S = 0
const SYSCON_CLK_XTAL_OEN_V = 0x1
const SYSCON_CLK_XTAL_OEN_S = 10
const SYSCON_CLK40X_BB_OEN_V = 0x1
const SYSCON_CLK40X_BB_OEN_S = 9
const SYSCON_CLK_DAC_CPU_OEN_V = 0x1
const SYSCON_CLK_DAC_CPU_OEN_S = 8
const SYSCON_CLK_ADC_INF_OEN_V = 0x1
const SYSCON_CLK_ADC_INF_OEN_S = 7
const SYSCON_CLK_320M_OEN_V = 0x1
const SYSCON_CLK_320M_OEN_S = 6
const SYSCON_CLK160_OEN_V = 0x1
const SYSCON_CLK160_OEN_S = 5
const SYSCON_CLK80_OEN_V = 0x1
const SYSCON_CLK80_OEN_S = 4
const SYSCON_CLK_BB_OEN_V = 0x1
const SYSCON_CLK_BB_OEN_S = 3
const SYSCON_CLK44_OEN_V = 0x1
const SYSCON_CLK44_OEN_S = 2
const SYSCON_CLK22_OEN_V = 0x1
const SYSCON_CLK22_OEN_S = 1
const SYSCON_CLK20_OEN_V = 0x1
const SYSCON_CLK20_OEN_S = 0
const SYSCON_PERI_IO_SWAP = 0x000000FF
const SYSCON_PERI_IO_SWAP_V = 0xFF
const SYSCON_PERI_IO_SWAP_S = 0
const SYSCON_EXT_MEM_PMS_LOCK_V = 0x1
const SYSCON_EXT_MEM_PMS_LOCK_S = 0
const SYSCON_FLASH_ACE0_ATTR = 0x00000007
const SYSCON_FLASH_ACE0_ATTR_V = 0x7
const SYSCON_FLASH_ACE0_ATTR_S = 0
const SYSCON_FLASH_ACE1_ATTR = 0x00000007
const SYSCON_FLASH_ACE1_ATTR_V = 0x7
const SYSCON_FLASH_ACE1_ATTR_S = 0
const SYSCON_FLASH_ACE2_ATTR = 0x00000007
const SYSCON_FLASH_ACE2_ATTR_V = 0x7
const SYSCON_FLASH_ACE2_ATTR_S = 0
const SYSCON_FLASH_ACE3_ATTR = 0x00000007
const SYSCON_FLASH_ACE3_ATTR_V = 0x7
const SYSCON_FLASH_ACE3_ATTR_S = 0
const SYSCON_FLASH_ACE0_ADDR_S = 0xFFFFFFFF
const SYSCON_FLASH_ACE0_ADDR_S_V = 0xFFFFFFFF
const SYSCON_FLASH_ACE0_ADDR_S_S = 0
const SYSCON_FLASH_ACE1_ADDR_S = 0xFFFFFFFF
const SYSCON_FLASH_ACE1_ADDR_S_V = 0xFFFFFFFF
const SYSCON_FLASH_ACE1_ADDR_S_S = 0
const SYSCON_FLASH_ACE2_ADDR_S = 0xFFFFFFFF
const SYSCON_FLASH_ACE2_ADDR_S_V = 0xFFFFFFFF
const SYSCON_FLASH_ACE2_ADDR_S_S = 0
const SYSCON_FLASH_ACE3_ADDR_S = 0xFFFFFFFF
const SYSCON_FLASH_ACE3_ADDR_S_V = 0xFFFFFFFF
const SYSCON_FLASH_ACE3_ADDR_S_S = 0
const SYSCON_FLASH_ACE0_SIZE = 0x0000FFFF
const SYSCON_FLASH_ACE0_SIZE_V = 0xFFFF
const SYSCON_FLASH_ACE0_SIZE_S = 0
const SYSCON_FLASH_ACE1_SIZE = 0x0000FFFF
const SYSCON_FLASH_ACE1_SIZE_V = 0xFFFF
const SYSCON_FLASH_ACE1_SIZE_S = 0
const SYSCON_FLASH_ACE2_SIZE = 0x0000FFFF
const SYSCON_FLASH_ACE2_SIZE_V = 0xFFFF
const SYSCON_FLASH_ACE2_SIZE_S = 0
const SYSCON_FLASH_ACE3_SIZE = 0x0000FFFF
const SYSCON_FLASH_ACE3_SIZE_V = 0xFFFF
const SYSCON_FLASH_ACE3_SIZE_S = 0
const SYSCON_SRAM_ACE0_ATTR = 0x00000007
const SYSCON_SRAM_ACE0_ATTR_V = 0x7
const SYSCON_SRAM_ACE0_ATTR_S = 0
const SYSCON_SRAM_ACE1_ATTR = 0x00000007
const SYSCON_SRAM_ACE1_ATTR_V = 0x7
const SYSCON_SRAM_ACE1_ATTR_S = 0
const SYSCON_SRAM_ACE2_ATTR = 0x00000007
const SYSCON_SRAM_ACE2_ATTR_V = 0x7
const SYSCON_SRAM_ACE2_ATTR_S = 0
const SYSCON_SRAM_ACE3_ATTR = 0x00000007
const SYSCON_SRAM_ACE3_ATTR_V = 0x7
const SYSCON_SRAM_ACE3_ATTR_S = 0
const SYSCON_SRAM_ACE0_ADDR_S = 0xFFFFFFFF
const SYSCON_SRAM_ACE0_ADDR_S_V = 0xFFFFFFFF
const SYSCON_SRAM_ACE0_ADDR_S_S = 0
const SYSCON_SRAM_ACE1_ADDR_S = 0xFFFFFFFF
const SYSCON_SRAM_ACE1_ADDR_S_V = 0xFFFFFFFF
const SYSCON_SRAM_ACE1_ADDR_S_S = 0
const SYSCON_SRAM_ACE2_ADDR_S = 0xFFFFFFFF
const SYSCON_SRAM_ACE2_ADDR_S_V = 0xFFFFFFFF
const SYSCON_SRAM_ACE2_ADDR_S_S = 0
const SYSCON_SRAM_ACE3_ADDR_S = 0xFFFFFFFF
const SYSCON_SRAM_ACE3_ADDR_S_V = 0xFFFFFFFF
const SYSCON_SRAM_ACE3_ADDR_S_S = 0
const SYSCON_SRAM_ACE0_SIZE = 0x0000FFFF
const SYSCON_SRAM_ACE0_SIZE_V = 0xFFFF
const SYSCON_SRAM_ACE0_SIZE_S = 0
const SYSCON_SRAM_ACE1_SIZE = 0x0000FFFF
const SYSCON_SRAM_ACE1_SIZE_V = 0xFFFF
const SYSCON_SRAM_ACE1_SIZE_S = 0
const SYSCON_SRAM_ACE2_SIZE = 0x0000FFFF
const SYSCON_SRAM_ACE2_SIZE_V = 0xFFFF
const SYSCON_SRAM_ACE2_SIZE_S = 0
const SYSCON_SRAM_ACE3_SIZE = 0x0000FFFF
const SYSCON_SRAM_ACE3_SIZE_V = 0xFFFF
const SYSCON_SRAM_ACE3_SIZE_S = 0
const SYSCON_SPI_MEM_REJECT_CDE = 0x0000001F
const SYSCON_SPI_MEM_REJECT_CDE_V = 0x1F
const SYSCON_SPI_MEM_REJECT_CDE_S = 2
const SYSCON_SPI_MEM_REJECT_CLR_V = 0x1
const SYSCON_SPI_MEM_REJECT_CLR_S = 1
const SYSCON_SPI_MEM_REJECT_INT_V = 0x1
const SYSCON_SPI_MEM_REJECT_INT_S = 0
const SYSCON_SPI_MEM_REJECT_ADDR = 0xFFFFFFFF
const SYSCON_SPI_MEM_REJECT_ADDR_V = 0xFFFFFFFF
const SYSCON_SPI_MEM_REJECT_ADDR_S = 0
const SYSCON_SDIO_WIN_ACCESS_EN_V = 0x1
const SYSCON_SDIO_WIN_ACCESS_EN_S = 0
const SYSCON_REDCY_ANDOR_V = 0x1
const SYSCON_REDCY_ANDOR_S = 31
const SYSCON_REDCY_SIG0 = 0x7FFFFFFF
const SYSCON_REDCY_SIG0_V = 0x7FFFFFFF
const SYSCON_REDCY_SIG0_S = 0
const SYSCON_REDCY_NANDOR_V = 0x1
const SYSCON_REDCY_NANDOR_S = 31
const SYSCON_REDCY_SIG1 = 0x7FFFFFFF
const SYSCON_REDCY_SIG1_V = 0x7FFFFFFF
const SYSCON_REDCY_SIG1_S = 0
const SYSCON_WIFI_BB_CFG = 0xFFFFFFFF
const SYSCON_WIFI_BB_CFG_V = 0xFFFFFFFF
const SYSCON_WIFI_BB_CFG_S = 0
const SYSCON_WIFI_BB_CFG_2 = 0xFFFFFFFF
const SYSCON_WIFI_BB_CFG_2_V = 0xFFFFFFFF
const SYSCON_WIFI_BB_CFG_2_S = 0
const SYSCON_WIFI_CLK_EN = 0xFFFFFFFF
const SYSCON_WIFI_CLK_EN_V = 0xFFFFFFFF
const SYSCON_WIFI_CLK_EN_S = 0
const SYSCON_WIFI_RST = 0xFFFFFFFF
const SYSCON_WIFI_RST_V = 0xFFFFFFFF
const SYSCON_WIFI_RST_S = 0
const DPORT_WIFI_CLK_EN = 0xFFFFFFFF
const DPORT_WIFI_CLK_EN_V = 0xFFFFFFFF
const DPORT_WIFI_CLK_EN_S = 0
const DPORT_WIFI_CLK_WIFI_EN = 0x003807cf
const DPORT_WIFI_CLK_WIFI_EN_V = 0x7cf
const DPORT_WIFI_CLK_WIFI_EN_S = 0
const DPORT_WIFI_CLK_BT_EN = 0x61
const DPORT_WIFI_CLK_BT_EN_V = 0x61
const DPORT_WIFI_CLK_BT_EN_S = 11
const SYSTEM_WIFI_CLK_WIFI_BT_COMMON_M = 0x000003c9
const DPORT_WIFI_RST = 0xFFFFFFFF
const DPORT_WIFI_RST_V = 0xFFFFFFFF
const DPORT_WIFI_RST_S = 0
const SYSCON_DC_MEM_FORCE_PD_V = 0x1
const SYSCON_DC_MEM_FORCE_PD_S = 5
const SYSCON_DC_MEM_FORCE_PU_V = 0x1
const SYSCON_DC_MEM_FORCE_PU_S = 4
const SYSCON_PBUS_MEM_FORCE_PD_V = 0x1
const SYSCON_PBUS_MEM_FORCE_PD_S = 3
const SYSCON_PBUS_MEM_FORCE_PU_V = 0x1
const SYSCON_PBUS_MEM_FORCE_PU_S = 2
const SYSCON_AGC_MEM_FORCE_PD_V = 0x1
const SYSCON_AGC_MEM_FORCE_PD_S = 1
const SYSCON_AGC_MEM_FORCE_PU_V = 0x1
const SYSCON_AGC_MEM_FORCE_PU_S = 0
const SYSCON_DATE = 0xFFFFFFFF
const SYSCON_DATE_V = 0xFFFFFFFF
const SYSCON_DATE_S = 0
const GPIO_PIN_CONFIG_MSB = 12
const GPIO_PIN_CONFIG_LSB = 11
const GPIO_PIN_CONFIG_MASK = 0x00001800
const GPIO_WAKEUP_ENABLE = 1
const GPIO_PIN_WAKEUP_ENABLE_MSB = 10
const GPIO_PIN_WAKEUP_ENABLE_LSB = 10
const GPIO_PIN_WAKEUP_ENABLE_MASK = 0x00000400
const GPIO_PIN_INT_TYPE_MASK = 0x380
const GPIO_PIN_INT_TYPE_MSB = 9
const GPIO_PIN_INT_TYPE_LSB = 7
const GPIO_PAD_DRIVER_ENABLE = 1
const GPIO_PIN_PAD_DRIVER_MSB = 2
const GPIO_PIN_PAD_DRIVER_LSB = 2
const GPIO_PIN_PAD_DRIVER_MASK = 0x00000004
const GPIO_BT_SEL = 0xFFFFFFFF
const GPIO_BT_SEL_V = 0xFFFFFFFF
const GPIO_BT_SEL_S = 0
const GPIO_OUT_DATA = 0xFFFFFFFF
const GPIO_OUT_DATA_V = 0xFFFFFFFF
const GPIO_OUT_DATA_S = 0
const GPIO_OUT_W1TS = 0xFFFFFFFF
const GPIO_OUT_W1TS_V = 0xFFFFFFFF
const GPIO_OUT_W1TS_S = 0
const GPIO_OUT_W1TC = 0xFFFFFFFF
const GPIO_OUT_W1TC_V = 0xFFFFFFFF
const GPIO_OUT_W1TC_S = 0
const GPIO_OUT1_DATA = 0x003FFFFF
const GPIO_OUT1_DATA_V = 0x3FFFFF
const GPIO_OUT1_DATA_S = 0
const GPIO_OUT1_W1TS = 0x003FFFFF
const GPIO_OUT1_W1TS_V = 0x3FFFFF
const GPIO_OUT1_W1TS_S = 0
const GPIO_OUT1_W1TC = 0x003FFFFF
const GPIO_OUT1_W1TC_V = 0x3FFFFF
const GPIO_OUT1_W1TC_S = 0
const GPIO_SDIO_SEL = 0x000000FF
const GPIO_SDIO_SEL_V = 0xFF
const GPIO_SDIO_SEL_S = 0
const GPIO_ENABLE_DATA = 0xFFFFFFFF
const GPIO_ENABLE_DATA_V = 0xFFFFFFFF
const GPIO_ENABLE_DATA_S = 0
const GPIO_ENABLE_W1TS = 0xFFFFFFFF
const GPIO_ENABLE_W1TS_V = 0xFFFFFFFF
const GPIO_ENABLE_W1TS_S = 0
const GPIO_ENABLE_W1TC = 0xFFFFFFFF
const GPIO_ENABLE_W1TC_V = 0xFFFFFFFF
const GPIO_ENABLE_W1TC_S = 0
const GPIO_ENABLE1_DATA = 0x003FFFFF
const GPIO_ENABLE1_DATA_V = 0x3FFFFF
const GPIO_ENABLE1_DATA_S = 0
const GPIO_ENABLE1_W1TS = 0x003FFFFF
const GPIO_ENABLE1_W1TS_V = 0x3FFFFF
const GPIO_ENABLE1_W1TS_S = 0
const GPIO_ENABLE1_W1TC = 0x003FFFFF
const GPIO_ENABLE1_W1TC_V = 0x3FFFFF
const GPIO_ENABLE1_W1TC_S = 0
const GPIO_STRAPPING = 0x0000FFFF
const GPIO_STRAPPING_V = 0xFFFF
const GPIO_STRAPPING_S = 0
const GPIO_IN_DATA = 0xFFFFFFFF
const GPIO_IN_DATA_V = 0xFFFFFFFF
const GPIO_IN_DATA_S = 0
const GPIO_IN1_DATA = 0x003FFFFF
const GPIO_IN1_DATA_V = 0x3FFFFF
const GPIO_IN1_DATA_S = 0
const GPIO_STATUS_INT = 0xFFFFFFFF
const GPIO_STATUS_INT_V = 0xFFFFFFFF
const GPIO_STATUS_INT_S = 0
const GPIO_STATUS_W1TS = 0xFFFFFFFF
const GPIO_STATUS_W1TS_V = 0xFFFFFFFF
const GPIO_STATUS_W1TS_S = 0
const GPIO_STATUS_W1TC = 0xFFFFFFFF
const GPIO_STATUS_W1TC_V = 0xFFFFFFFF
const GPIO_STATUS_W1TC_S = 0
const GPIO_STATUS1_INT = 0x003FFFFF
const GPIO_STATUS1_INT_V = 0x3FFFFF
const GPIO_STATUS1_INT_S = 0
const GPIO_STATUS1_W1TS = 0x003FFFFF
const GPIO_STATUS1_W1TS_V = 0x3FFFFF
const GPIO_STATUS1_W1TS_S = 0
const GPIO_STATUS1_W1TC = 0x003FFFFF
const GPIO_STATUS1_W1TC_V = 0x3FFFFF
const GPIO_STATUS1_W1TC_S = 0
const GPIO_PROCPU_INT = 0xFFFFFFFF
const GPIO_PROCPU_INT_V = 0xFFFFFFFF
const GPIO_PROCPU_INT_S = 0
const GPIO_PROCPU_NMI_INT = 0xFFFFFFFF
const GPIO_PROCPU_NMI_INT_V = 0xFFFFFFFF
const GPIO_PROCPU_NMI_INT_S = 0
const GPIO_SDIO_INT = 0xFFFFFFFF
const GPIO_SDIO_INT_V = 0xFFFFFFFF
const GPIO_SDIO_INT_S = 0
const GPIO_PROCPU_INT_H = 0x003FFFFF
const GPIO_PROCPU_INT_H_V = 0x3FFFFF
const GPIO_PROCPU_INT_H_S = 0
const GPIO_PROCPU_NMI_INT_H = 0x003FFFFF
const GPIO_PROCPU_NMI_INT_H_V = 0x3FFFFF
const GPIO_PROCPU_NMI_INT_H_S = 0
const GPIO_SDIO_INT_H = 0x003FFFFF
const GPIO_SDIO_INT_H_V = 0x3FFFFF
const GPIO_SDIO_INT_H_S = 0
const GPIO_PIN0_INT_ENA = 0x0000001F
const GPIO_PIN0_INT_ENA_V = 0x1F
const GPIO_PIN0_INT_ENA_S = 13
const GPIO_PIN0_CONFIG = 0x00000003
const GPIO_PIN0_CONFIG_V = 0x3
const GPIO_PIN0_CONFIG_S = 11
const GPIO_PIN0_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN0_WAKEUP_ENABLE_S = 10
const GPIO_PIN0_INT_TYPE = 0x00000007
const GPIO_PIN0_INT_TYPE_V = 0x7
const GPIO_PIN0_INT_TYPE_S = 7
const GPIO_PIN0_SYNC1_BYPASS = 0x00000003
const GPIO_PIN0_SYNC1_BYPASS_V = 0x3
const GPIO_PIN0_SYNC1_BYPASS_S = 3
const GPIO_PIN0_PAD_DRIVER_V = 0x1
const GPIO_PIN0_PAD_DRIVER_S = 2
const GPIO_PIN0_SYNC2_BYPASS = 0x00000003
const GPIO_PIN0_SYNC2_BYPASS_V = 0x3
const GPIO_PIN0_SYNC2_BYPASS_S = 0
const GPIO_PIN1_INT_ENA = 0x0000001F
const GPIO_PIN1_INT_ENA_V = 0x1F
const GPIO_PIN1_INT_ENA_S = 13
const GPIO_PIN1_CONFIG = 0x00000003
const GPIO_PIN1_CONFIG_V = 0x3
const GPIO_PIN1_CONFIG_S = 11
const GPIO_PIN1_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN1_WAKEUP_ENABLE_S = 10
const GPIO_PIN1_INT_TYPE = 0x00000007
const GPIO_PIN1_INT_TYPE_V = 0x7
const GPIO_PIN1_INT_TYPE_S = 7
const GPIO_PIN1_SYNC1_BYPASS = 0x00000003
const GPIO_PIN1_SYNC1_BYPASS_V = 0x3
const GPIO_PIN1_SYNC1_BYPASS_S = 3
const GPIO_PIN1_PAD_DRIVER_V = 0x1
const GPIO_PIN1_PAD_DRIVER_S = 2
const GPIO_PIN1_SYNC2_BYPASS = 0x00000003
const GPIO_PIN1_SYNC2_BYPASS_V = 0x3
const GPIO_PIN1_SYNC2_BYPASS_S = 0
const GPIO_PIN2_INT_ENA = 0x0000001F
const GPIO_PIN2_INT_ENA_V = 0x1F
const GPIO_PIN2_INT_ENA_S = 13
const GPIO_PIN2_CONFIG = 0x00000003
const GPIO_PIN2_CONFIG_V = 0x3
const GPIO_PIN2_CONFIG_S = 11
const GPIO_PIN2_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN2_WAKEUP_ENABLE_S = 10
const GPIO_PIN2_INT_TYPE = 0x00000007
const GPIO_PIN2_INT_TYPE_V = 0x7
const GPIO_PIN2_INT_TYPE_S = 7
const GPIO_PIN2_SYNC1_BYPASS = 0x00000003
const GPIO_PIN2_SYNC1_BYPASS_V = 0x3
const GPIO_PIN2_SYNC1_BYPASS_S = 3
const GPIO_PIN2_PAD_DRIVER_V = 0x1
const GPIO_PIN2_PAD_DRIVER_S = 2
const GPIO_PIN2_SYNC2_BYPASS = 0x00000003
const GPIO_PIN2_SYNC2_BYPASS_V = 0x3
const GPIO_PIN2_SYNC2_BYPASS_S = 0
const GPIO_PIN3_INT_ENA = 0x0000001F
const GPIO_PIN3_INT_ENA_V = 0x1F
const GPIO_PIN3_INT_ENA_S = 13
const GPIO_PIN3_CONFIG = 0x00000003
const GPIO_PIN3_CONFIG_V = 0x3
const GPIO_PIN3_CONFIG_S = 11
const GPIO_PIN3_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN3_WAKEUP_ENABLE_S = 10
const GPIO_PIN3_INT_TYPE = 0x00000007
const GPIO_PIN3_INT_TYPE_V = 0x7
const GPIO_PIN3_INT_TYPE_S = 7
const GPIO_PIN3_SYNC1_BYPASS = 0x00000003
const GPIO_PIN3_SYNC1_BYPASS_V = 0x3
const GPIO_PIN3_SYNC1_BYPASS_S = 3
const GPIO_PIN3_PAD_DRIVER_V = 0x1
const GPIO_PIN3_PAD_DRIVER_S = 2
const GPIO_PIN3_SYNC2_BYPASS = 0x00000003
const GPIO_PIN3_SYNC2_BYPASS_V = 0x3
const GPIO_PIN3_SYNC2_BYPASS_S = 0
const GPIO_PIN4_INT_ENA = 0x0000001F
const GPIO_PIN4_INT_ENA_V = 0x1F
const GPIO_PIN4_INT_ENA_S = 13
const GPIO_PIN4_CONFIG = 0x00000003
const GPIO_PIN4_CONFIG_V = 0x3
const GPIO_PIN4_CONFIG_S = 11
const GPIO_PIN4_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN4_WAKEUP_ENABLE_S = 10
const GPIO_PIN4_INT_TYPE = 0x00000007
const GPIO_PIN4_INT_TYPE_V = 0x7
const GPIO_PIN4_INT_TYPE_S = 7
const GPIO_PIN4_SYNC1_BYPASS = 0x00000003
const GPIO_PIN4_SYNC1_BYPASS_V = 0x3
const GPIO_PIN4_SYNC1_BYPASS_S = 3
const GPIO_PIN4_PAD_DRIVER_V = 0x1
const GPIO_PIN4_PAD_DRIVER_S = 2
const GPIO_PIN4_SYNC2_BYPASS = 0x00000003
const GPIO_PIN4_SYNC2_BYPASS_V = 0x3
const GPIO_PIN4_SYNC2_BYPASS_S = 0
const GPIO_PIN5_INT_ENA = 0x0000001F
const GPIO_PIN5_INT_ENA_V = 0x1F
const GPIO_PIN5_INT_ENA_S = 13
const GPIO_PIN5_CONFIG = 0x00000003
const GPIO_PIN5_CONFIG_V = 0x3
const GPIO_PIN5_CONFIG_S = 11
const GPIO_PIN5_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN5_WAKEUP_ENABLE_S = 10
const GPIO_PIN5_INT_TYPE = 0x00000007
const GPIO_PIN5_INT_TYPE_V = 0x7
const GPIO_PIN5_INT_TYPE_S = 7
const GPIO_PIN5_SYNC1_BYPASS = 0x00000003
const GPIO_PIN5_SYNC1_BYPASS_V = 0x3
const GPIO_PIN5_SYNC1_BYPASS_S = 3
const GPIO_PIN5_PAD_DRIVER_V = 0x1
const GPIO_PIN5_PAD_DRIVER_S = 2
const GPIO_PIN5_SYNC2_BYPASS = 0x00000003
const GPIO_PIN5_SYNC2_BYPASS_V = 0x3
const GPIO_PIN5_SYNC2_BYPASS_S = 0
const GPIO_PIN6_INT_ENA = 0x0000001F
const GPIO_PIN6_INT_ENA_V = 0x1F
const GPIO_PIN6_INT_ENA_S = 13
const GPIO_PIN6_CONFIG = 0x00000003
const GPIO_PIN6_CONFIG_V = 0x3
const GPIO_PIN6_CONFIG_S = 11
const GPIO_PIN6_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN6_WAKEUP_ENABLE_S = 10
const GPIO_PIN6_INT_TYPE = 0x00000007
const GPIO_PIN6_INT_TYPE_V = 0x7
const GPIO_PIN6_INT_TYPE_S = 7
const GPIO_PIN6_SYNC1_BYPASS = 0x00000003
const GPIO_PIN6_SYNC1_BYPASS_V = 0x3
const GPIO_PIN6_SYNC1_BYPASS_S = 3
const GPIO_PIN6_PAD_DRIVER_V = 0x1
const GPIO_PIN6_PAD_DRIVER_S = 2
const GPIO_PIN6_SYNC2_BYPASS = 0x00000003
const GPIO_PIN6_SYNC2_BYPASS_V = 0x3
const GPIO_PIN6_SYNC2_BYPASS_S = 0
const GPIO_PIN7_INT_ENA = 0x0000001F
const GPIO_PIN7_INT_ENA_V = 0x1F
const GPIO_PIN7_INT_ENA_S = 13
const GPIO_PIN7_CONFIG = 0x00000003
const GPIO_PIN7_CONFIG_V = 0x3
const GPIO_PIN7_CONFIG_S = 11
const GPIO_PIN7_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN7_WAKEUP_ENABLE_S = 10
const GPIO_PIN7_INT_TYPE = 0x00000007
const GPIO_PIN7_INT_TYPE_V = 0x7
const GPIO_PIN7_INT_TYPE_S = 7
const GPIO_PIN7_SYNC1_BYPASS = 0x00000003
const GPIO_PIN7_SYNC1_BYPASS_V = 0x3
const GPIO_PIN7_SYNC1_BYPASS_S = 3
const GPIO_PIN7_PAD_DRIVER_V = 0x1
const GPIO_PIN7_PAD_DRIVER_S = 2
const GPIO_PIN7_SYNC2_BYPASS = 0x00000003
const GPIO_PIN7_SYNC2_BYPASS_V = 0x3
const GPIO_PIN7_SYNC2_BYPASS_S = 0
const GPIO_PIN8_INT_ENA = 0x0000001F
const GPIO_PIN8_INT_ENA_V = 0x1F
const GPIO_PIN8_INT_ENA_S = 13
const GPIO_PIN8_CONFIG = 0x00000003
const GPIO_PIN8_CONFIG_V = 0x3
const GPIO_PIN8_CONFIG_S = 11
const GPIO_PIN8_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN8_WAKEUP_ENABLE_S = 10
const GPIO_PIN8_INT_TYPE = 0x00000007
const GPIO_PIN8_INT_TYPE_V = 0x7
const GPIO_PIN8_INT_TYPE_S = 7
const GPIO_PIN8_SYNC1_BYPASS = 0x00000003
const GPIO_PIN8_SYNC1_BYPASS_V = 0x3
const GPIO_PIN8_SYNC1_BYPASS_S = 3
const GPIO_PIN8_PAD_DRIVER_V = 0x1
const GPIO_PIN8_PAD_DRIVER_S = 2
const GPIO_PIN8_SYNC2_BYPASS = 0x00000003
const GPIO_PIN8_SYNC2_BYPASS_V = 0x3
const GPIO_PIN8_SYNC2_BYPASS_S = 0
const GPIO_PIN9_INT_ENA = 0x0000001F
const GPIO_PIN9_INT_ENA_V = 0x1F
const GPIO_PIN9_INT_ENA_S = 13
const GPIO_PIN9_CONFIG = 0x00000003
const GPIO_PIN9_CONFIG_V = 0x3
const GPIO_PIN9_CONFIG_S = 11
const GPIO_PIN9_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN9_WAKEUP_ENABLE_S = 10
const GPIO_PIN9_INT_TYPE = 0x00000007
const GPIO_PIN9_INT_TYPE_V = 0x7
const GPIO_PIN9_INT_TYPE_S = 7
const GPIO_PIN9_SYNC1_BYPASS = 0x00000003
const GPIO_PIN9_SYNC1_BYPASS_V = 0x3
const GPIO_PIN9_SYNC1_BYPASS_S = 3
const GPIO_PIN9_PAD_DRIVER_V = 0x1
const GPIO_PIN9_PAD_DRIVER_S = 2
const GPIO_PIN9_SYNC2_BYPASS = 0x00000003
const GPIO_PIN9_SYNC2_BYPASS_V = 0x3
const GPIO_PIN9_SYNC2_BYPASS_S = 0
const GPIO_PIN10_INT_ENA = 0x0000001F
const GPIO_PIN10_INT_ENA_V = 0x1F
const GPIO_PIN10_INT_ENA_S = 13
const GPIO_PIN10_CONFIG = 0x00000003
const GPIO_PIN10_CONFIG_V = 0x3
const GPIO_PIN10_CONFIG_S = 11
const GPIO_PIN10_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN10_WAKEUP_ENABLE_S = 10
const GPIO_PIN10_INT_TYPE = 0x00000007
const GPIO_PIN10_INT_TYPE_V = 0x7
const GPIO_PIN10_INT_TYPE_S = 7
const GPIO_PIN10_SYNC1_BYPASS = 0x00000003
const GPIO_PIN10_SYNC1_BYPASS_V = 0x3
const GPIO_PIN10_SYNC1_BYPASS_S = 3
const GPIO_PIN10_PAD_DRIVER_V = 0x1
const GPIO_PIN10_PAD_DRIVER_S = 2
const GPIO_PIN10_SYNC2_BYPASS = 0x00000003
const GPIO_PIN10_SYNC2_BYPASS_V = 0x3
const GPIO_PIN10_SYNC2_BYPASS_S = 0
const GPIO_PIN11_INT_ENA = 0x0000001F
const GPIO_PIN11_INT_ENA_V = 0x1F
const GPIO_PIN11_INT_ENA_S = 13
const GPIO_PIN11_CONFIG = 0x00000003
const GPIO_PIN11_CONFIG_V = 0x3
const GPIO_PIN11_CONFIG_S = 11
const GPIO_PIN11_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN11_WAKEUP_ENABLE_S = 10
const GPIO_PIN11_INT_TYPE = 0x00000007
const GPIO_PIN11_INT_TYPE_V = 0x7
const GPIO_PIN11_INT_TYPE_S = 7
const GPIO_PIN11_SYNC1_BYPASS = 0x00000003
const GPIO_PIN11_SYNC1_BYPASS_V = 0x3
const GPIO_PIN11_SYNC1_BYPASS_S = 3
const GPIO_PIN11_PAD_DRIVER_V = 0x1
const GPIO_PIN11_PAD_DRIVER_S = 2
const GPIO_PIN11_SYNC2_BYPASS = 0x00000003
const GPIO_PIN11_SYNC2_BYPASS_V = 0x3
const GPIO_PIN11_SYNC2_BYPASS_S = 0
const GPIO_PIN12_INT_ENA = 0x0000001F
const GPIO_PIN12_INT_ENA_V = 0x1F
const GPIO_PIN12_INT_ENA_S = 13
const GPIO_PIN12_CONFIG = 0x00000003
const GPIO_PIN12_CONFIG_V = 0x3
const GPIO_PIN12_CONFIG_S = 11
const GPIO_PIN12_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN12_WAKEUP_ENABLE_S = 10
const GPIO_PIN12_INT_TYPE = 0x00000007
const GPIO_PIN12_INT_TYPE_V = 0x7
const GPIO_PIN12_INT_TYPE_S = 7
const GPIO_PIN12_SYNC1_BYPASS = 0x00000003
const GPIO_PIN12_SYNC1_BYPASS_V = 0x3
const GPIO_PIN12_SYNC1_BYPASS_S = 3
const GPIO_PIN12_PAD_DRIVER_V = 0x1
const GPIO_PIN12_PAD_DRIVER_S = 2
const GPIO_PIN12_SYNC2_BYPASS = 0x00000003
const GPIO_PIN12_SYNC2_BYPASS_V = 0x3
const GPIO_PIN12_SYNC2_BYPASS_S = 0
const GPIO_PIN13_INT_ENA = 0x0000001F
const GPIO_PIN13_INT_ENA_V = 0x1F
const GPIO_PIN13_INT_ENA_S = 13
const GPIO_PIN13_CONFIG = 0x00000003
const GPIO_PIN13_CONFIG_V = 0x3
const GPIO_PIN13_CONFIG_S = 11
const GPIO_PIN13_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN13_WAKEUP_ENABLE_S = 10
const GPIO_PIN13_INT_TYPE = 0x00000007
const GPIO_PIN13_INT_TYPE_V = 0x7
const GPIO_PIN13_INT_TYPE_S = 7
const GPIO_PIN13_SYNC1_BYPASS = 0x00000003
const GPIO_PIN13_SYNC1_BYPASS_V = 0x3
const GPIO_PIN13_SYNC1_BYPASS_S = 3
const GPIO_PIN13_PAD_DRIVER_V = 0x1
const GPIO_PIN13_PAD_DRIVER_S = 2
const GPIO_PIN13_SYNC2_BYPASS = 0x00000003
const GPIO_PIN13_SYNC2_BYPASS_V = 0x3
const GPIO_PIN13_SYNC2_BYPASS_S = 0
const GPIO_PIN14_INT_ENA = 0x0000001F
const GPIO_PIN14_INT_ENA_V = 0x1F
const GPIO_PIN14_INT_ENA_S = 13
const GPIO_PIN14_CONFIG = 0x00000003
const GPIO_PIN14_CONFIG_V = 0x3
const GPIO_PIN14_CONFIG_S = 11
const GPIO_PIN14_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN14_WAKEUP_ENABLE_S = 10
const GPIO_PIN14_INT_TYPE = 0x00000007
const GPIO_PIN14_INT_TYPE_V = 0x7
const GPIO_PIN14_INT_TYPE_S = 7
const GPIO_PIN14_SYNC1_BYPASS = 0x00000003
const GPIO_PIN14_SYNC1_BYPASS_V = 0x3
const GPIO_PIN14_SYNC1_BYPASS_S = 3
const GPIO_PIN14_PAD_DRIVER_V = 0x1
const GPIO_PIN14_PAD_DRIVER_S = 2
const GPIO_PIN14_SYNC2_BYPASS = 0x00000003
const GPIO_PIN14_SYNC2_BYPASS_V = 0x3
const GPIO_PIN14_SYNC2_BYPASS_S = 0
const GPIO_PIN15_INT_ENA = 0x0000001F
const GPIO_PIN15_INT_ENA_V = 0x1F
const GPIO_PIN15_INT_ENA_S = 13
const GPIO_PIN15_CONFIG = 0x00000003
const GPIO_PIN15_CONFIG_V = 0x3
const GPIO_PIN15_CONFIG_S = 11
const GPIO_PIN15_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN15_WAKEUP_ENABLE_S = 10
const GPIO_PIN15_INT_TYPE = 0x00000007
const GPIO_PIN15_INT_TYPE_V = 0x7
const GPIO_PIN15_INT_TYPE_S = 7
const GPIO_PIN15_SYNC1_BYPASS = 0x00000003
const GPIO_PIN15_SYNC1_BYPASS_V = 0x3
const GPIO_PIN15_SYNC1_BYPASS_S = 3
const GPIO_PIN15_PAD_DRIVER_V = 0x1
const GPIO_PIN15_PAD_DRIVER_S = 2
const GPIO_PIN15_SYNC2_BYPASS = 0x00000003
const GPIO_PIN15_SYNC2_BYPASS_V = 0x3
const GPIO_PIN15_SYNC2_BYPASS_S = 0
const GPIO_PIN16_INT_ENA = 0x0000001F
const GPIO_PIN16_INT_ENA_V = 0x1F
const GPIO_PIN16_INT_ENA_S = 13
const GPIO_PIN16_CONFIG = 0x00000003
const GPIO_PIN16_CONFIG_V = 0x3
const GPIO_PIN16_CONFIG_S = 11
const GPIO_PIN16_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN16_WAKEUP_ENABLE_S = 10
const GPIO_PIN16_INT_TYPE = 0x00000007
const GPIO_PIN16_INT_TYPE_V = 0x7
const GPIO_PIN16_INT_TYPE_S = 7
const GPIO_PIN16_SYNC1_BYPASS = 0x00000003
const GPIO_PIN16_SYNC1_BYPASS_V = 0x3
const GPIO_PIN16_SYNC1_BYPASS_S = 3
const GPIO_PIN16_PAD_DRIVER_V = 0x1
const GPIO_PIN16_PAD_DRIVER_S = 2
const GPIO_PIN16_SYNC2_BYPASS = 0x00000003
const GPIO_PIN16_SYNC2_BYPASS_V = 0x3
const GPIO_PIN16_SYNC2_BYPASS_S = 0
const GPIO_PIN17_INT_ENA = 0x0000001F
const GPIO_PIN17_INT_ENA_V = 0x1F
const GPIO_PIN17_INT_ENA_S = 13
const GPIO_PIN17_CONFIG = 0x00000003
const GPIO_PIN17_CONFIG_V = 0x3
const GPIO_PIN17_CONFIG_S = 11
const GPIO_PIN17_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN17_WAKEUP_ENABLE_S = 10
const GPIO_PIN17_INT_TYPE = 0x00000007
const GPIO_PIN17_INT_TYPE_V = 0x7
const GPIO_PIN17_INT_TYPE_S = 7
const GPIO_PIN17_SYNC1_BYPASS = 0x00000003
const GPIO_PIN17_SYNC1_BYPASS_V = 0x3
const GPIO_PIN17_SYNC1_BYPASS_S = 3
const GPIO_PIN17_PAD_DRIVER_V = 0x1
const GPIO_PIN17_PAD_DRIVER_S = 2
const GPIO_PIN17_SYNC2_BYPASS = 0x00000003
const GPIO_PIN17_SYNC2_BYPASS_V = 0x3
const GPIO_PIN17_SYNC2_BYPASS_S = 0
const GPIO_PIN18_INT_ENA = 0x0000001F
const GPIO_PIN18_INT_ENA_V = 0x1F
const GPIO_PIN18_INT_ENA_S = 13
const GPIO_PIN18_CONFIG = 0x00000003
const GPIO_PIN18_CONFIG_V = 0x3
const GPIO_PIN18_CONFIG_S = 11
const GPIO_PIN18_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN18_WAKEUP_ENABLE_S = 10
const GPIO_PIN18_INT_TYPE = 0x00000007
const GPIO_PIN18_INT_TYPE_V = 0x7
const GPIO_PIN18_INT_TYPE_S = 7
const GPIO_PIN18_SYNC1_BYPASS = 0x00000003
const GPIO_PIN18_SYNC1_BYPASS_V = 0x3
const GPIO_PIN18_SYNC1_BYPASS_S = 3
const GPIO_PIN18_PAD_DRIVER_V = 0x1
const GPIO_PIN18_PAD_DRIVER_S = 2
const GPIO_PIN18_SYNC2_BYPASS = 0x00000003
const GPIO_PIN18_SYNC2_BYPASS_V = 0x3
const GPIO_PIN18_SYNC2_BYPASS_S = 0
const GPIO_PIN19_INT_ENA = 0x0000001F
const GPIO_PIN19_INT_ENA_V = 0x1F
const GPIO_PIN19_INT_ENA_S = 13
const GPIO_PIN19_CONFIG = 0x00000003
const GPIO_PIN19_CONFIG_V = 0x3
const GPIO_PIN19_CONFIG_S = 11
const GPIO_PIN19_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN19_WAKEUP_ENABLE_S = 10
const GPIO_PIN19_INT_TYPE = 0x00000007
const GPIO_PIN19_INT_TYPE_V = 0x7
const GPIO_PIN19_INT_TYPE_S = 7
const GPIO_PIN19_SYNC1_BYPASS = 0x00000003
const GPIO_PIN19_SYNC1_BYPASS_V = 0x3
const GPIO_PIN19_SYNC1_BYPASS_S = 3
const GPIO_PIN19_PAD_DRIVER_V = 0x1
const GPIO_PIN19_PAD_DRIVER_S = 2
const GPIO_PIN19_SYNC2_BYPASS = 0x00000003
const GPIO_PIN19_SYNC2_BYPASS_V = 0x3
const GPIO_PIN19_SYNC2_BYPASS_S = 0
const GPIO_PIN20_INT_ENA = 0x0000001F
const GPIO_PIN20_INT_ENA_V = 0x1F
const GPIO_PIN20_INT_ENA_S = 13
const GPIO_PIN20_CONFIG = 0x00000003
const GPIO_PIN20_CONFIG_V = 0x3
const GPIO_PIN20_CONFIG_S = 11
const GPIO_PIN20_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN20_WAKEUP_ENABLE_S = 10
const GPIO_PIN20_INT_TYPE = 0x00000007
const GPIO_PIN20_INT_TYPE_V = 0x7
const GPIO_PIN20_INT_TYPE_S = 7
const GPIO_PIN20_SYNC1_BYPASS = 0x00000003
const GPIO_PIN20_SYNC1_BYPASS_V = 0x3
const GPIO_PIN20_SYNC1_BYPASS_S = 3
const GPIO_PIN20_PAD_DRIVER_V = 0x1
const GPIO_PIN20_PAD_DRIVER_S = 2
const GPIO_PIN20_SYNC2_BYPASS = 0x00000003
const GPIO_PIN20_SYNC2_BYPASS_V = 0x3
const GPIO_PIN20_SYNC2_BYPASS_S = 0
const GPIO_PIN21_INT_ENA = 0x0000001F
const GPIO_PIN21_INT_ENA_V = 0x1F
const GPIO_PIN21_INT_ENA_S = 13
const GPIO_PIN21_CONFIG = 0x00000003
const GPIO_PIN21_CONFIG_V = 0x3
const GPIO_PIN21_CONFIG_S = 11
const GPIO_PIN21_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN21_WAKEUP_ENABLE_S = 10
const GPIO_PIN21_INT_TYPE = 0x00000007
const GPIO_PIN21_INT_TYPE_V = 0x7
const GPIO_PIN21_INT_TYPE_S = 7
const GPIO_PIN21_SYNC1_BYPASS = 0x00000003
const GPIO_PIN21_SYNC1_BYPASS_V = 0x3
const GPIO_PIN21_SYNC1_BYPASS_S = 3
const GPIO_PIN21_PAD_DRIVER_V = 0x1
const GPIO_PIN21_PAD_DRIVER_S = 2
const GPIO_PIN21_SYNC2_BYPASS = 0x00000003
const GPIO_PIN21_SYNC2_BYPASS_V = 0x3
const GPIO_PIN21_SYNC2_BYPASS_S = 0
const GPIO_PIN22_INT_ENA = 0x0000001F
const GPIO_PIN22_INT_ENA_V = 0x1F
const GPIO_PIN22_INT_ENA_S = 13
const GPIO_PIN22_CONFIG = 0x00000003
const GPIO_PIN22_CONFIG_V = 0x3
const GPIO_PIN22_CONFIG_S = 11
const GPIO_PIN22_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN22_WAKEUP_ENABLE_S = 10
const GPIO_PIN22_INT_TYPE = 0x00000007
const GPIO_PIN22_INT_TYPE_V = 0x7
const GPIO_PIN22_INT_TYPE_S = 7
const GPIO_PIN22_SYNC1_BYPASS = 0x00000003
const GPIO_PIN22_SYNC1_BYPASS_V = 0x3
const GPIO_PIN22_SYNC1_BYPASS_S = 3
const GPIO_PIN22_PAD_DRIVER_V = 0x1
const GPIO_PIN22_PAD_DRIVER_S = 2
const GPIO_PIN22_SYNC2_BYPASS = 0x00000003
const GPIO_PIN22_SYNC2_BYPASS_V = 0x3
const GPIO_PIN22_SYNC2_BYPASS_S = 0
const GPIO_PIN23_INT_ENA = 0x0000001F
const GPIO_PIN23_INT_ENA_V = 0x1F
const GPIO_PIN23_INT_ENA_S = 13
const GPIO_PIN23_CONFIG = 0x00000003
const GPIO_PIN23_CONFIG_V = 0x3
const GPIO_PIN23_CONFIG_S = 11
const GPIO_PIN23_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN23_WAKEUP_ENABLE_S = 10
const GPIO_PIN23_INT_TYPE = 0x00000007
const GPIO_PIN23_INT_TYPE_V = 0x7
const GPIO_PIN23_INT_TYPE_S = 7
const GPIO_PIN23_SYNC1_BYPASS = 0x00000003
const GPIO_PIN23_SYNC1_BYPASS_V = 0x3
const GPIO_PIN23_SYNC1_BYPASS_S = 3
const GPIO_PIN23_PAD_DRIVER_V = 0x1
const GPIO_PIN23_PAD_DRIVER_S = 2
const GPIO_PIN23_SYNC2_BYPASS = 0x00000003
const GPIO_PIN23_SYNC2_BYPASS_V = 0x3
const GPIO_PIN23_SYNC2_BYPASS_S = 0
const GPIO_PIN24_INT_ENA = 0x0000001F
const GPIO_PIN24_INT_ENA_V = 0x1F
const GPIO_PIN24_INT_ENA_S = 13
const GPIO_PIN24_CONFIG = 0x00000003
const GPIO_PIN24_CONFIG_V = 0x3
const GPIO_PIN24_CONFIG_S = 11
const GPIO_PIN24_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN24_WAKEUP_ENABLE_S = 10
const GPIO_PIN24_INT_TYPE = 0x00000007
const GPIO_PIN24_INT_TYPE_V = 0x7
const GPIO_PIN24_INT_TYPE_S = 7
const GPIO_PIN24_SYNC1_BYPASS = 0x00000003
const GPIO_PIN24_SYNC1_BYPASS_V = 0x3
const GPIO_PIN24_SYNC1_BYPASS_S = 3
const GPIO_PIN24_PAD_DRIVER_V = 0x1
const GPIO_PIN24_PAD_DRIVER_S = 2
const GPIO_PIN24_SYNC2_BYPASS = 0x00000003
const GPIO_PIN24_SYNC2_BYPASS_V = 0x3
const GPIO_PIN24_SYNC2_BYPASS_S = 0
const GPIO_PIN25_INT_ENA = 0x0000001F
const GPIO_PIN25_INT_ENA_V = 0x1F
const GPIO_PIN25_INT_ENA_S = 13
const GPIO_PIN25_CONFIG = 0x00000003
const GPIO_PIN25_CONFIG_V = 0x3
const GPIO_PIN25_CONFIG_S = 11
const GPIO_PIN25_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN25_WAKEUP_ENABLE_S = 10
const GPIO_PIN25_INT_TYPE = 0x00000007
const GPIO_PIN25_INT_TYPE_V = 0x7
const GPIO_PIN25_INT_TYPE_S = 7
const GPIO_PIN25_SYNC1_BYPASS = 0x00000003
const GPIO_PIN25_SYNC1_BYPASS_V = 0x3
const GPIO_PIN25_SYNC1_BYPASS_S = 3
const GPIO_PIN25_PAD_DRIVER_V = 0x1
const GPIO_PIN25_PAD_DRIVER_S = 2
const GPIO_PIN25_SYNC2_BYPASS = 0x00000003
const GPIO_PIN25_SYNC2_BYPASS_V = 0x3
const GPIO_PIN25_SYNC2_BYPASS_S = 0
const GPIO_PIN26_INT_ENA = 0x0000001F
const GPIO_PIN26_INT_ENA_V = 0x1F
const GPIO_PIN26_INT_ENA_S = 13
const GPIO_PIN26_CONFIG = 0x00000003
const GPIO_PIN26_CONFIG_V = 0x3
const GPIO_PIN26_CONFIG_S = 11
const GPIO_PIN26_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN26_WAKEUP_ENABLE_S = 10
const GPIO_PIN26_INT_TYPE = 0x00000007
const GPIO_PIN26_INT_TYPE_V = 0x7
const GPIO_PIN26_INT_TYPE_S = 7
const GPIO_PIN26_SYNC1_BYPASS = 0x00000003
const GPIO_PIN26_SYNC1_BYPASS_V = 0x3
const GPIO_PIN26_SYNC1_BYPASS_S = 3
const GPIO_PIN26_PAD_DRIVER_V = 0x1
const GPIO_PIN26_PAD_DRIVER_S = 2
const GPIO_PIN26_SYNC2_BYPASS = 0x00000003
const GPIO_PIN26_SYNC2_BYPASS_V = 0x3
const GPIO_PIN26_SYNC2_BYPASS_S = 0
const GPIO_PIN27_INT_ENA = 0x0000001F
const GPIO_PIN27_INT_ENA_V = 0x1F
const GPIO_PIN27_INT_ENA_S = 13
const GPIO_PIN27_CONFIG = 0x00000003
const GPIO_PIN27_CONFIG_V = 0x3
const GPIO_PIN27_CONFIG_S = 11
const GPIO_PIN27_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN27_WAKEUP_ENABLE_S = 10
const GPIO_PIN27_INT_TYPE = 0x00000007
const GPIO_PIN27_INT_TYPE_V = 0x7
const GPIO_PIN27_INT_TYPE_S = 7
const GPIO_PIN27_SYNC1_BYPASS = 0x00000003
const GPIO_PIN27_SYNC1_BYPASS_V = 0x3
const GPIO_PIN27_SYNC1_BYPASS_S = 3
const GPIO_PIN27_PAD_DRIVER_V = 0x1
const GPIO_PIN27_PAD_DRIVER_S = 2
const GPIO_PIN27_SYNC2_BYPASS = 0x00000003
const GPIO_PIN27_SYNC2_BYPASS_V = 0x3
const GPIO_PIN27_SYNC2_BYPASS_S = 0
const GPIO_PIN28_INT_ENA = 0x0000001F
const GPIO_PIN28_INT_ENA_V = 0x1F
const GPIO_PIN28_INT_ENA_S = 13
const GPIO_PIN28_CONFIG = 0x00000003
const GPIO_PIN28_CONFIG_V = 0x3
const GPIO_PIN28_CONFIG_S = 11
const GPIO_PIN28_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN28_WAKEUP_ENABLE_S = 10
const GPIO_PIN28_INT_TYPE = 0x00000007
const GPIO_PIN28_INT_TYPE_V = 0x7
const GPIO_PIN28_INT_TYPE_S = 7
const GPIO_PIN28_SYNC1_BYPASS = 0x00000003
const GPIO_PIN28_SYNC1_BYPASS_V = 0x3
const GPIO_PIN28_SYNC1_BYPASS_S = 3
const GPIO_PIN28_PAD_DRIVER_V = 0x1
const GPIO_PIN28_PAD_DRIVER_S = 2
const GPIO_PIN28_SYNC2_BYPASS = 0x00000003
const GPIO_PIN28_SYNC2_BYPASS_V = 0x3
const GPIO_PIN28_SYNC2_BYPASS_S = 0
const GPIO_PIN29_INT_ENA = 0x0000001F
const GPIO_PIN29_INT_ENA_V = 0x1F
const GPIO_PIN29_INT_ENA_S = 13
const GPIO_PIN29_CONFIG = 0x00000003
const GPIO_PIN29_CONFIG_V = 0x3
const GPIO_PIN29_CONFIG_S = 11
const GPIO_PIN29_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN29_WAKEUP_ENABLE_S = 10
const GPIO_PIN29_INT_TYPE = 0x00000007
const GPIO_PIN29_INT_TYPE_V = 0x7
const GPIO_PIN29_INT_TYPE_S = 7
const GPIO_PIN29_SYNC1_BYPASS = 0x00000003
const GPIO_PIN29_SYNC1_BYPASS_V = 0x3
const GPIO_PIN29_SYNC1_BYPASS_S = 3
const GPIO_PIN29_PAD_DRIVER_V = 0x1
const GPIO_PIN29_PAD_DRIVER_S = 2
const GPIO_PIN29_SYNC2_BYPASS = 0x00000003
const GPIO_PIN29_SYNC2_BYPASS_V = 0x3
const GPIO_PIN29_SYNC2_BYPASS_S = 0
const GPIO_PIN30_INT_ENA = 0x0000001F
const GPIO_PIN30_INT_ENA_V = 0x1F
const GPIO_PIN30_INT_ENA_S = 13
const GPIO_PIN30_CONFIG = 0x00000003
const GPIO_PIN30_CONFIG_V = 0x3
const GPIO_PIN30_CONFIG_S = 11
const GPIO_PIN30_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN30_WAKEUP_ENABLE_S = 10
const GPIO_PIN30_INT_TYPE = 0x00000007
const GPIO_PIN30_INT_TYPE_V = 0x7
const GPIO_PIN30_INT_TYPE_S = 7
const GPIO_PIN30_SYNC1_BYPASS = 0x00000003
const GPIO_PIN30_SYNC1_BYPASS_V = 0x3
const GPIO_PIN30_SYNC1_BYPASS_S = 3
const GPIO_PIN30_PAD_DRIVER_V = 0x1
const GPIO_PIN30_PAD_DRIVER_S = 2
const GPIO_PIN30_SYNC2_BYPASS = 0x00000003
const GPIO_PIN30_SYNC2_BYPASS_V = 0x3
const GPIO_PIN30_SYNC2_BYPASS_S = 0
const GPIO_PIN31_INT_ENA = 0x0000001F
const GPIO_PIN31_INT_ENA_V = 0x1F
const GPIO_PIN31_INT_ENA_S = 13
const GPIO_PIN31_CONFIG = 0x00000003
const GPIO_PIN31_CONFIG_V = 0x3
const GPIO_PIN31_CONFIG_S = 11
const GPIO_PIN31_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN31_WAKEUP_ENABLE_S = 10
const GPIO_PIN31_INT_TYPE = 0x00000007
const GPIO_PIN31_INT_TYPE_V = 0x7
const GPIO_PIN31_INT_TYPE_S = 7
const GPIO_PIN31_SYNC1_BYPASS = 0x00000003
const GPIO_PIN31_SYNC1_BYPASS_V = 0x3
const GPIO_PIN31_SYNC1_BYPASS_S = 3
const GPIO_PIN31_PAD_DRIVER_V = 0x1
const GPIO_PIN31_PAD_DRIVER_S = 2
const GPIO_PIN31_SYNC2_BYPASS = 0x00000003
const GPIO_PIN31_SYNC2_BYPASS_V = 0x3
const GPIO_PIN31_SYNC2_BYPASS_S = 0
const GPIO_PIN32_INT_ENA = 0x0000001F
const GPIO_PIN32_INT_ENA_V = 0x1F
const GPIO_PIN32_INT_ENA_S = 13
const GPIO_PIN32_CONFIG = 0x00000003
const GPIO_PIN32_CONFIG_V = 0x3
const GPIO_PIN32_CONFIG_S = 11
const GPIO_PIN32_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN32_WAKEUP_ENABLE_S = 10
const GPIO_PIN32_INT_TYPE = 0x00000007
const GPIO_PIN32_INT_TYPE_V = 0x7
const GPIO_PIN32_INT_TYPE_S = 7
const GPIO_PIN32_SYNC1_BYPASS = 0x00000003
const GPIO_PIN32_SYNC1_BYPASS_V = 0x3
const GPIO_PIN32_SYNC1_BYPASS_S = 3
const GPIO_PIN32_PAD_DRIVER_V = 0x1
const GPIO_PIN32_PAD_DRIVER_S = 2
const GPIO_PIN32_SYNC2_BYPASS = 0x00000003
const GPIO_PIN32_SYNC2_BYPASS_V = 0x3
const GPIO_PIN32_SYNC2_BYPASS_S = 0
const GPIO_PIN33_INT_ENA = 0x0000001F
const GPIO_PIN33_INT_ENA_V = 0x1F
const GPIO_PIN33_INT_ENA_S = 13
const GPIO_PIN33_CONFIG = 0x00000003
const GPIO_PIN33_CONFIG_V = 0x3
const GPIO_PIN33_CONFIG_S = 11
const GPIO_PIN33_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN33_WAKEUP_ENABLE_S = 10
const GPIO_PIN33_INT_TYPE = 0x00000007
const GPIO_PIN33_INT_TYPE_V = 0x7
const GPIO_PIN33_INT_TYPE_S = 7
const GPIO_PIN33_SYNC1_BYPASS = 0x00000003
const GPIO_PIN33_SYNC1_BYPASS_V = 0x3
const GPIO_PIN33_SYNC1_BYPASS_S = 3
const GPIO_PIN33_PAD_DRIVER_V = 0x1
const GPIO_PIN33_PAD_DRIVER_S = 2
const GPIO_PIN33_SYNC2_BYPASS = 0x00000003
const GPIO_PIN33_SYNC2_BYPASS_V = 0x3
const GPIO_PIN33_SYNC2_BYPASS_S = 0
const GPIO_PIN34_INT_ENA = 0x0000001F
const GPIO_PIN34_INT_ENA_V = 0x1F
const GPIO_PIN34_INT_ENA_S = 13
const GPIO_PIN34_CONFIG = 0x00000003
const GPIO_PIN34_CONFIG_V = 0x3
const GPIO_PIN34_CONFIG_S = 11
const GPIO_PIN34_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN34_WAKEUP_ENABLE_S = 10
const GPIO_PIN34_INT_TYPE = 0x00000007
const GPIO_PIN34_INT_TYPE_V = 0x7
const GPIO_PIN34_INT_TYPE_S = 7
const GPIO_PIN34_SYNC1_BYPASS = 0x00000003
const GPIO_PIN34_SYNC1_BYPASS_V = 0x3
const GPIO_PIN34_SYNC1_BYPASS_S = 3
const GPIO_PIN34_PAD_DRIVER_V = 0x1
const GPIO_PIN34_PAD_DRIVER_S = 2
const GPIO_PIN34_SYNC2_BYPASS = 0x00000003
const GPIO_PIN34_SYNC2_BYPASS_V = 0x3
const GPIO_PIN34_SYNC2_BYPASS_S = 0
const GPIO_PIN35_INT_ENA = 0x0000001F
const GPIO_PIN35_INT_ENA_V = 0x1F
const GPIO_PIN35_INT_ENA_S = 13
const GPIO_PIN35_CONFIG = 0x00000003
const GPIO_PIN35_CONFIG_V = 0x3
const GPIO_PIN35_CONFIG_S = 11
const GPIO_PIN35_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN35_WAKEUP_ENABLE_S = 10
const GPIO_PIN35_INT_TYPE = 0x00000007
const GPIO_PIN35_INT_TYPE_V = 0x7
const GPIO_PIN35_INT_TYPE_S = 7
const GPIO_PIN35_SYNC1_BYPASS = 0x00000003
const GPIO_PIN35_SYNC1_BYPASS_V = 0x3
const GPIO_PIN35_SYNC1_BYPASS_S = 3
const GPIO_PIN35_PAD_DRIVER_V = 0x1
const GPIO_PIN35_PAD_DRIVER_S = 2
const GPIO_PIN35_SYNC2_BYPASS = 0x00000003
const GPIO_PIN35_SYNC2_BYPASS_V = 0x3
const GPIO_PIN35_SYNC2_BYPASS_S = 0
const GPIO_PIN36_INT_ENA = 0x0000001F
const GPIO_PIN36_INT_ENA_V = 0x1F
const GPIO_PIN36_INT_ENA_S = 13
const GPIO_PIN36_CONFIG = 0x00000003
const GPIO_PIN36_CONFIG_V = 0x3
const GPIO_PIN36_CONFIG_S = 11
const GPIO_PIN36_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN36_WAKEUP_ENABLE_S = 10
const GPIO_PIN36_INT_TYPE = 0x00000007
const GPIO_PIN36_INT_TYPE_V = 0x7
const GPIO_PIN36_INT_TYPE_S = 7
const GPIO_PIN36_SYNC1_BYPASS = 0x00000003
const GPIO_PIN36_SYNC1_BYPASS_V = 0x3
const GPIO_PIN36_SYNC1_BYPASS_S = 3
const GPIO_PIN36_PAD_DRIVER_V = 0x1
const GPIO_PIN36_PAD_DRIVER_S = 2
const GPIO_PIN36_SYNC2_BYPASS = 0x00000003
const GPIO_PIN36_SYNC2_BYPASS_V = 0x3
const GPIO_PIN36_SYNC2_BYPASS_S = 0
const GPIO_PIN37_INT_ENA = 0x0000001F
const GPIO_PIN37_INT_ENA_V = 0x1F
const GPIO_PIN37_INT_ENA_S = 13
const GPIO_PIN37_CONFIG = 0x00000003
const GPIO_PIN37_CONFIG_V = 0x3
const GPIO_PIN37_CONFIG_S = 11
const GPIO_PIN37_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN37_WAKEUP_ENABLE_S = 10
const GPIO_PIN37_INT_TYPE = 0x00000007
const GPIO_PIN37_INT_TYPE_V = 0x7
const GPIO_PIN37_INT_TYPE_S = 7
const GPIO_PIN37_SYNC1_BYPASS = 0x00000003
const GPIO_PIN37_SYNC1_BYPASS_V = 0x3
const GPIO_PIN37_SYNC1_BYPASS_S = 3
const GPIO_PIN37_PAD_DRIVER_V = 0x1
const GPIO_PIN37_PAD_DRIVER_S = 2
const GPIO_PIN37_SYNC2_BYPASS = 0x00000003
const GPIO_PIN37_SYNC2_BYPASS_V = 0x3
const GPIO_PIN37_SYNC2_BYPASS_S = 0
const GPIO_PIN38_INT_ENA = 0x0000001F
const GPIO_PIN38_INT_ENA_V = 0x1F
const GPIO_PIN38_INT_ENA_S = 13
const GPIO_PIN38_CONFIG = 0x00000003
const GPIO_PIN38_CONFIG_V = 0x3
const GPIO_PIN38_CONFIG_S = 11
const GPIO_PIN38_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN38_WAKEUP_ENABLE_S = 10
const GPIO_PIN38_INT_TYPE = 0x00000007
const GPIO_PIN38_INT_TYPE_V = 0x7
const GPIO_PIN38_INT_TYPE_S = 7
const GPIO_PIN38_SYNC1_BYPASS = 0x00000003
const GPIO_PIN38_SYNC1_BYPASS_V = 0x3
const GPIO_PIN38_SYNC1_BYPASS_S = 3
const GPIO_PIN38_PAD_DRIVER_V = 0x1
const GPIO_PIN38_PAD_DRIVER_S = 2
const GPIO_PIN38_SYNC2_BYPASS = 0x00000003
const GPIO_PIN38_SYNC2_BYPASS_V = 0x3
const GPIO_PIN38_SYNC2_BYPASS_S = 0
const GPIO_PIN39_INT_ENA = 0x0000001F
const GPIO_PIN39_INT_ENA_V = 0x1F
const GPIO_PIN39_INT_ENA_S = 13
const GPIO_PIN39_CONFIG = 0x00000003
const GPIO_PIN39_CONFIG_V = 0x3
const GPIO_PIN39_CONFIG_S = 11
const GPIO_PIN39_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN39_WAKEUP_ENABLE_S = 10
const GPIO_PIN39_INT_TYPE = 0x00000007
const GPIO_PIN39_INT_TYPE_V = 0x7
const GPIO_PIN39_INT_TYPE_S = 7
const GPIO_PIN39_SYNC1_BYPASS = 0x00000003
const GPIO_PIN39_SYNC1_BYPASS_V = 0x3
const GPIO_PIN39_SYNC1_BYPASS_S = 3
const GPIO_PIN39_PAD_DRIVER_V = 0x1
const GPIO_PIN39_PAD_DRIVER_S = 2
const GPIO_PIN39_SYNC2_BYPASS = 0x00000003
const GPIO_PIN39_SYNC2_BYPASS_V = 0x3
const GPIO_PIN39_SYNC2_BYPASS_S = 0
const GPIO_PIN40_INT_ENA = 0x0000001F
const GPIO_PIN40_INT_ENA_V = 0x1F
const GPIO_PIN40_INT_ENA_S = 13
const GPIO_PIN40_CONFIG = 0x00000003
const GPIO_PIN40_CONFIG_V = 0x3
const GPIO_PIN40_CONFIG_S = 11
const GPIO_PIN40_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN40_WAKEUP_ENABLE_S = 10
const GPIO_PIN40_INT_TYPE = 0x00000007
const GPIO_PIN40_INT_TYPE_V = 0x7
const GPIO_PIN40_INT_TYPE_S = 7
const GPIO_PIN40_SYNC1_BYPASS = 0x00000003
const GPIO_PIN40_SYNC1_BYPASS_V = 0x3
const GPIO_PIN40_SYNC1_BYPASS_S = 3
const GPIO_PIN40_PAD_DRIVER_V = 0x1
const GPIO_PIN40_PAD_DRIVER_S = 2
const GPIO_PIN40_SYNC2_BYPASS = 0x00000003
const GPIO_PIN40_SYNC2_BYPASS_V = 0x3
const GPIO_PIN40_SYNC2_BYPASS_S = 0
const GPIO_PIN41_INT_ENA = 0x0000001F
const GPIO_PIN41_INT_ENA_V = 0x1F
const GPIO_PIN41_INT_ENA_S = 13
const GPIO_PIN41_CONFIG = 0x00000003
const GPIO_PIN41_CONFIG_V = 0x3
const GPIO_PIN41_CONFIG_S = 11
const GPIO_PIN41_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN41_WAKEUP_ENABLE_S = 10
const GPIO_PIN41_INT_TYPE = 0x00000007
const GPIO_PIN41_INT_TYPE_V = 0x7
const GPIO_PIN41_INT_TYPE_S = 7
const GPIO_PIN41_SYNC1_BYPASS = 0x00000003
const GPIO_PIN41_SYNC1_BYPASS_V = 0x3
const GPIO_PIN41_SYNC1_BYPASS_S = 3
const GPIO_PIN41_PAD_DRIVER_V = 0x1
const GPIO_PIN41_PAD_DRIVER_S = 2
const GPIO_PIN41_SYNC2_BYPASS = 0x00000003
const GPIO_PIN41_SYNC2_BYPASS_V = 0x3
const GPIO_PIN41_SYNC2_BYPASS_S = 0
const GPIO_PIN42_INT_ENA = 0x0000001F
const GPIO_PIN42_INT_ENA_V = 0x1F
const GPIO_PIN42_INT_ENA_S = 13
const GPIO_PIN42_CONFIG = 0x00000003
const GPIO_PIN42_CONFIG_V = 0x3
const GPIO_PIN42_CONFIG_S = 11
const GPIO_PIN42_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN42_WAKEUP_ENABLE_S = 10
const GPIO_PIN42_INT_TYPE = 0x00000007
const GPIO_PIN42_INT_TYPE_V = 0x7
const GPIO_PIN42_INT_TYPE_S = 7
const GPIO_PIN42_SYNC1_BYPASS = 0x00000003
const GPIO_PIN42_SYNC1_BYPASS_V = 0x3
const GPIO_PIN42_SYNC1_BYPASS_S = 3
const GPIO_PIN42_PAD_DRIVER_V = 0x1
const GPIO_PIN42_PAD_DRIVER_S = 2
const GPIO_PIN42_SYNC2_BYPASS = 0x00000003
const GPIO_PIN42_SYNC2_BYPASS_V = 0x3
const GPIO_PIN42_SYNC2_BYPASS_S = 0
const GPIO_PIN43_INT_ENA = 0x0000001F
const GPIO_PIN43_INT_ENA_V = 0x1F
const GPIO_PIN43_INT_ENA_S = 13
const GPIO_PIN43_CONFIG = 0x00000003
const GPIO_PIN43_CONFIG_V = 0x3
const GPIO_PIN43_CONFIG_S = 11
const GPIO_PIN43_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN43_WAKEUP_ENABLE_S = 10
const GPIO_PIN43_INT_TYPE = 0x00000007
const GPIO_PIN43_INT_TYPE_V = 0x7
const GPIO_PIN43_INT_TYPE_S = 7
const GPIO_PIN43_SYNC1_BYPASS = 0x00000003
const GPIO_PIN43_SYNC1_BYPASS_V = 0x3
const GPIO_PIN43_SYNC1_BYPASS_S = 3
const GPIO_PIN43_PAD_DRIVER_V = 0x1
const GPIO_PIN43_PAD_DRIVER_S = 2
const GPIO_PIN43_SYNC2_BYPASS = 0x00000003
const GPIO_PIN43_SYNC2_BYPASS_V = 0x3
const GPIO_PIN43_SYNC2_BYPASS_S = 0
const GPIO_PIN44_INT_ENA = 0x0000001F
const GPIO_PIN44_INT_ENA_V = 0x1F
const GPIO_PIN44_INT_ENA_S = 13
const GPIO_PIN44_CONFIG = 0x00000003
const GPIO_PIN44_CONFIG_V = 0x3
const GPIO_PIN44_CONFIG_S = 11
const GPIO_PIN44_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN44_WAKEUP_ENABLE_S = 10
const GPIO_PIN44_INT_TYPE = 0x00000007
const GPIO_PIN44_INT_TYPE_V = 0x7
const GPIO_PIN44_INT_TYPE_S = 7
const GPIO_PIN44_SYNC1_BYPASS = 0x00000003
const GPIO_PIN44_SYNC1_BYPASS_V = 0x3
const GPIO_PIN44_SYNC1_BYPASS_S = 3
const GPIO_PIN44_PAD_DRIVER_V = 0x1
const GPIO_PIN44_PAD_DRIVER_S = 2
const GPIO_PIN44_SYNC2_BYPASS = 0x00000003
const GPIO_PIN44_SYNC2_BYPASS_V = 0x3
const GPIO_PIN44_SYNC2_BYPASS_S = 0
const GPIO_PIN45_INT_ENA = 0x0000001F
const GPIO_PIN45_INT_ENA_V = 0x1F
const GPIO_PIN45_INT_ENA_S = 13
const GPIO_PIN45_CONFIG = 0x00000003
const GPIO_PIN45_CONFIG_V = 0x3
const GPIO_PIN45_CONFIG_S = 11
const GPIO_PIN45_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN45_WAKEUP_ENABLE_S = 10
const GPIO_PIN45_INT_TYPE = 0x00000007
const GPIO_PIN45_INT_TYPE_V = 0x7
const GPIO_PIN45_INT_TYPE_S = 7
const GPIO_PIN45_SYNC1_BYPASS = 0x00000003
const GPIO_PIN45_SYNC1_BYPASS_V = 0x3
const GPIO_PIN45_SYNC1_BYPASS_S = 3
const GPIO_PIN45_PAD_DRIVER_V = 0x1
const GPIO_PIN45_PAD_DRIVER_S = 2
const GPIO_PIN45_SYNC2_BYPASS = 0x00000003
const GPIO_PIN45_SYNC2_BYPASS_V = 0x3
const GPIO_PIN45_SYNC2_BYPASS_S = 0
const GPIO_PIN46_INT_ENA = 0x0000001F
const GPIO_PIN46_INT_ENA_V = 0x1F
const GPIO_PIN46_INT_ENA_S = 13
const GPIO_PIN46_CONFIG = 0x00000003
const GPIO_PIN46_CONFIG_V = 0x3
const GPIO_PIN46_CONFIG_S = 11
const GPIO_PIN46_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN46_WAKEUP_ENABLE_S = 10
const GPIO_PIN46_INT_TYPE = 0x00000007
const GPIO_PIN46_INT_TYPE_V = 0x7
const GPIO_PIN46_INT_TYPE_S = 7
const GPIO_PIN46_SYNC1_BYPASS = 0x00000003
const GPIO_PIN46_SYNC1_BYPASS_V = 0x3
const GPIO_PIN46_SYNC1_BYPASS_S = 3
const GPIO_PIN46_PAD_DRIVER_V = 0x1
const GPIO_PIN46_PAD_DRIVER_S = 2
const GPIO_PIN46_SYNC2_BYPASS = 0x00000003
const GPIO_PIN46_SYNC2_BYPASS_V = 0x3
const GPIO_PIN46_SYNC2_BYPASS_S = 0
const GPIO_PIN47_INT_ENA = 0x0000001F
const GPIO_PIN47_INT_ENA_V = 0x1F
const GPIO_PIN47_INT_ENA_S = 13
const GPIO_PIN47_CONFIG = 0x00000003
const GPIO_PIN47_CONFIG_V = 0x3
const GPIO_PIN47_CONFIG_S = 11
const GPIO_PIN47_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN47_WAKEUP_ENABLE_S = 10
const GPIO_PIN47_INT_TYPE = 0x00000007
const GPIO_PIN47_INT_TYPE_V = 0x7
const GPIO_PIN47_INT_TYPE_S = 7
const GPIO_PIN47_SYNC1_BYPASS = 0x00000003
const GPIO_PIN47_SYNC1_BYPASS_V = 0x3
const GPIO_PIN47_SYNC1_BYPASS_S = 3
const GPIO_PIN47_PAD_DRIVER_V = 0x1
const GPIO_PIN47_PAD_DRIVER_S = 2
const GPIO_PIN47_SYNC2_BYPASS = 0x00000003
const GPIO_PIN47_SYNC2_BYPASS_V = 0x3
const GPIO_PIN47_SYNC2_BYPASS_S = 0
const GPIO_PIN48_INT_ENA = 0x0000001F
const GPIO_PIN48_INT_ENA_V = 0x1F
const GPIO_PIN48_INT_ENA_S = 13
const GPIO_PIN48_CONFIG = 0x00000003
const GPIO_PIN48_CONFIG_V = 0x3
const GPIO_PIN48_CONFIG_S = 11
const GPIO_PIN48_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN48_WAKEUP_ENABLE_S = 10
const GPIO_PIN48_INT_TYPE = 0x00000007
const GPIO_PIN48_INT_TYPE_V = 0x7
const GPIO_PIN48_INT_TYPE_S = 7
const GPIO_PIN48_SYNC1_BYPASS = 0x00000003
const GPIO_PIN48_SYNC1_BYPASS_V = 0x3
const GPIO_PIN48_SYNC1_BYPASS_S = 3
const GPIO_PIN48_PAD_DRIVER_V = 0x1
const GPIO_PIN48_PAD_DRIVER_S = 2
const GPIO_PIN48_SYNC2_BYPASS = 0x00000003
const GPIO_PIN48_SYNC2_BYPASS_V = 0x3
const GPIO_PIN48_SYNC2_BYPASS_S = 0
const GPIO_PIN49_INT_ENA = 0x0000001F
const GPIO_PIN49_INT_ENA_V = 0x1F
const GPIO_PIN49_INT_ENA_S = 13
const GPIO_PIN49_CONFIG = 0x00000003
const GPIO_PIN49_CONFIG_V = 0x3
const GPIO_PIN49_CONFIG_S = 11
const GPIO_PIN49_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN49_WAKEUP_ENABLE_S = 10
const GPIO_PIN49_INT_TYPE = 0x00000007
const GPIO_PIN49_INT_TYPE_V = 0x7
const GPIO_PIN49_INT_TYPE_S = 7
const GPIO_PIN49_SYNC1_BYPASS = 0x00000003
const GPIO_PIN49_SYNC1_BYPASS_V = 0x3
const GPIO_PIN49_SYNC1_BYPASS_S = 3
const GPIO_PIN49_PAD_DRIVER_V = 0x1
const GPIO_PIN49_PAD_DRIVER_S = 2
const GPIO_PIN49_SYNC2_BYPASS = 0x00000003
const GPIO_PIN49_SYNC2_BYPASS_V = 0x3
const GPIO_PIN49_SYNC2_BYPASS_S = 0
const GPIO_PIN50_INT_ENA = 0x0000001F
const GPIO_PIN50_INT_ENA_V = 0x1F
const GPIO_PIN50_INT_ENA_S = 13
const GPIO_PIN50_CONFIG = 0x00000003
const GPIO_PIN50_CONFIG_V = 0x3
const GPIO_PIN50_CONFIG_S = 11
const GPIO_PIN50_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN50_WAKEUP_ENABLE_S = 10
const GPIO_PIN50_INT_TYPE = 0x00000007
const GPIO_PIN50_INT_TYPE_V = 0x7
const GPIO_PIN50_INT_TYPE_S = 7
const GPIO_PIN50_SYNC1_BYPASS = 0x00000003
const GPIO_PIN50_SYNC1_BYPASS_V = 0x3
const GPIO_PIN50_SYNC1_BYPASS_S = 3
const GPIO_PIN50_PAD_DRIVER_V = 0x1
const GPIO_PIN50_PAD_DRIVER_S = 2
const GPIO_PIN50_SYNC2_BYPASS = 0x00000003
const GPIO_PIN50_SYNC2_BYPASS_V = 0x3
const GPIO_PIN50_SYNC2_BYPASS_S = 0
const GPIO_PIN51_INT_ENA = 0x0000001F
const GPIO_PIN51_INT_ENA_V = 0x1F
const GPIO_PIN51_INT_ENA_S = 13
const GPIO_PIN51_CONFIG = 0x00000003
const GPIO_PIN51_CONFIG_V = 0x3
const GPIO_PIN51_CONFIG_S = 11
const GPIO_PIN51_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN51_WAKEUP_ENABLE_S = 10
const GPIO_PIN51_INT_TYPE = 0x00000007
const GPIO_PIN51_INT_TYPE_V = 0x7
const GPIO_PIN51_INT_TYPE_S = 7
const GPIO_PIN51_SYNC1_BYPASS = 0x00000003
const GPIO_PIN51_SYNC1_BYPASS_V = 0x3
const GPIO_PIN51_SYNC1_BYPASS_S = 3
const GPIO_PIN51_PAD_DRIVER_V = 0x1
const GPIO_PIN51_PAD_DRIVER_S = 2
const GPIO_PIN51_SYNC2_BYPASS = 0x00000003
const GPIO_PIN51_SYNC2_BYPASS_V = 0x3
const GPIO_PIN51_SYNC2_BYPASS_S = 0
const GPIO_PIN52_INT_ENA = 0x0000001F
const GPIO_PIN52_INT_ENA_V = 0x1F
const GPIO_PIN52_INT_ENA_S = 13
const GPIO_PIN52_CONFIG = 0x00000003
const GPIO_PIN52_CONFIG_V = 0x3
const GPIO_PIN52_CONFIG_S = 11
const GPIO_PIN52_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN52_WAKEUP_ENABLE_S = 10
const GPIO_PIN52_INT_TYPE = 0x00000007
const GPIO_PIN52_INT_TYPE_V = 0x7
const GPIO_PIN52_INT_TYPE_S = 7
const GPIO_PIN52_SYNC1_BYPASS = 0x00000003
const GPIO_PIN52_SYNC1_BYPASS_V = 0x3
const GPIO_PIN52_SYNC1_BYPASS_S = 3
const GPIO_PIN52_PAD_DRIVER_V = 0x1
const GPIO_PIN52_PAD_DRIVER_S = 2
const GPIO_PIN52_SYNC2_BYPASS = 0x00000003
const GPIO_PIN52_SYNC2_BYPASS_V = 0x3
const GPIO_PIN52_SYNC2_BYPASS_S = 0
const GPIO_PIN53_INT_ENA = 0x0000001F
const GPIO_PIN53_INT_ENA_V = 0x1F
const GPIO_PIN53_INT_ENA_S = 13
const GPIO_PIN53_CONFIG = 0x00000003
const GPIO_PIN53_CONFIG_V = 0x3
const GPIO_PIN53_CONFIG_S = 11
const GPIO_PIN53_WAKEUP_ENABLE_V = 0x1
const GPIO_PIN53_WAKEUP_ENABLE_S = 10
const GPIO_PIN53_INT_TYPE = 0x00000007
const GPIO_PIN53_INT_TYPE_V = 0x7
const GPIO_PIN53_INT_TYPE_S = 7
const GPIO_PIN53_SYNC1_BYPASS = 0x00000003
const GPIO_PIN53_SYNC1_BYPASS_V = 0x3
const GPIO_PIN53_SYNC1_BYPASS_S = 3
const GPIO_PIN53_PAD_DRIVER_V = 0x1
const GPIO_PIN53_PAD_DRIVER_S = 2
const GPIO_PIN53_SYNC2_BYPASS = 0x00000003
const GPIO_PIN53_SYNC2_BYPASS_V = 0x3
const GPIO_PIN53_SYNC2_BYPASS_S = 0
const GPIO_STATUS_INTERRUPT_NEXT = 0xFFFFFFFF
const GPIO_STATUS_INTERRUPT_NEXT_V = 0xFFFFFFFF
const GPIO_STATUS_INTERRUPT_NEXT_S = 0
const GPIO_STATUS_INTERRUPT_NEXT1 = 0x003FFFFF
const GPIO_STATUS_INTERRUPT_NEXT1_V = 0x3FFFFF
const GPIO_STATUS_INTERRUPT_NEXT1_S = 0
const GPIO_SIG0_IN_SEL_V = 0x1
const GPIO_SIG0_IN_SEL_S = 7
const GPIO_FUNC0_IN_INV_SEL_V = 0x1
const GPIO_FUNC0_IN_INV_SEL_S = 6
const GPIO_FUNC0_IN_SEL = 0x0000003F
const GPIO_FUNC0_IN_SEL_V = 0x3F
const GPIO_FUNC0_IN_SEL_S = 0
const GPIO_SIG1_IN_SEL_V = 0x1
const GPIO_SIG1_IN_SEL_S = 7
const GPIO_FUNC1_IN_INV_SEL_V = 0x1
const GPIO_FUNC1_IN_INV_SEL_S = 6
const GPIO_FUNC1_IN_SEL = 0x0000003F
const GPIO_FUNC1_IN_SEL_V = 0x3F
const GPIO_FUNC1_IN_SEL_S = 0
const GPIO_SIG2_IN_SEL_V = 0x1
const GPIO_SIG2_IN_SEL_S = 7
const GPIO_FUNC2_IN_INV_SEL_V = 0x1
const GPIO_FUNC2_IN_INV_SEL_S = 6
const GPIO_FUNC2_IN_SEL = 0x0000003F
const GPIO_FUNC2_IN_SEL_V = 0x3F
const GPIO_FUNC2_IN_SEL_S = 0
const GPIO_SIG3_IN_SEL_V = 0x1
const GPIO_SIG3_IN_SEL_S = 7
const GPIO_FUNC3_IN_INV_SEL_V = 0x1
const GPIO_FUNC3_IN_INV_SEL_S = 6
const GPIO_FUNC3_IN_SEL = 0x0000003F
const GPIO_FUNC3_IN_SEL_V = 0x3F
const GPIO_FUNC3_IN_SEL_S = 0
const GPIO_SIG4_IN_SEL_V = 0x1
const GPIO_SIG4_IN_SEL_S = 7
const GPIO_FUNC4_IN_INV_SEL_V = 0x1
const GPIO_FUNC4_IN_INV_SEL_S = 6
const GPIO_FUNC4_IN_SEL = 0x0000003F
const GPIO_FUNC4_IN_SEL_V = 0x3F
const GPIO_FUNC4_IN_SEL_S = 0
const GPIO_SIG5_IN_SEL_V = 0x1
const GPIO_SIG5_IN_SEL_S = 7
const GPIO_FUNC5_IN_INV_SEL_V = 0x1
const GPIO_FUNC5_IN_INV_SEL_S = 6
const GPIO_FUNC5_IN_SEL = 0x0000003F
const GPIO_FUNC5_IN_SEL_V = 0x3F
const GPIO_FUNC5_IN_SEL_S = 0
const GPIO_SIG6_IN_SEL_V = 0x1
const GPIO_SIG6_IN_SEL_S = 7
const GPIO_FUNC6_IN_INV_SEL_V = 0x1
const GPIO_FUNC6_IN_INV_SEL_S = 6
const GPIO_FUNC6_IN_SEL = 0x0000003F
const GPIO_FUNC6_IN_SEL_V = 0x3F
const GPIO_FUNC6_IN_SEL_S = 0
const GPIO_SIG7_IN_SEL_V = 0x1
const GPIO_SIG7_IN_SEL_S = 7
const GPIO_FUNC7_IN_INV_SEL_V = 0x1
const GPIO_FUNC7_IN_INV_SEL_S = 6
const GPIO_FUNC7_IN_SEL = 0x0000003F
const GPIO_FUNC7_IN_SEL_V = 0x3F
const GPIO_FUNC7_IN_SEL_S = 0
const GPIO_SIG8_IN_SEL_V = 0x1
const GPIO_SIG8_IN_SEL_S = 7
const GPIO_FUNC8_IN_INV_SEL_V = 0x1
const GPIO_FUNC8_IN_INV_SEL_S = 6
const GPIO_FUNC8_IN_SEL = 0x0000003F
const GPIO_FUNC8_IN_SEL_V = 0x3F
const GPIO_FUNC8_IN_SEL_S = 0
const GPIO_SIG9_IN_SEL_V = 0x1
const GPIO_SIG9_IN_SEL_S = 7
const GPIO_FUNC9_IN_INV_SEL_V = 0x1
const GPIO_FUNC9_IN_INV_SEL_S = 6
const GPIO_FUNC9_IN_SEL = 0x0000003F
const GPIO_FUNC9_IN_SEL_V = 0x3F
const GPIO_FUNC9_IN_SEL_S = 0
const GPIO_SIG10_IN_SEL_V = 0x1
const GPIO_SIG10_IN_SEL_S = 7
const GPIO_FUNC10_IN_INV_SEL_V = 0x1
const GPIO_FUNC10_IN_INV_SEL_S = 6
const GPIO_FUNC10_IN_SEL = 0x0000003F
const GPIO_FUNC10_IN_SEL_V = 0x3F
const GPIO_FUNC10_IN_SEL_S = 0
const GPIO_SIG11_IN_SEL_V = 0x1
const GPIO_SIG11_IN_SEL_S = 7
const GPIO_FUNC11_IN_INV_SEL_V = 0x1
const GPIO_FUNC11_IN_INV_SEL_S = 6
const GPIO_FUNC11_IN_SEL = 0x0000003F
const GPIO_FUNC11_IN_SEL_V = 0x3F
const GPIO_FUNC11_IN_SEL_S = 0
const GPIO_SIG12_IN_SEL_V = 0x1
const GPIO_SIG12_IN_SEL_S = 7
const GPIO_FUNC12_IN_INV_SEL_V = 0x1
const GPIO_FUNC12_IN_INV_SEL_S = 6
const GPIO_FUNC12_IN_SEL = 0x0000003F
const GPIO_FUNC12_IN_SEL_V = 0x3F
const GPIO_FUNC12_IN_SEL_S = 0
const GPIO_SIG13_IN_SEL_V = 0x1
const GPIO_SIG13_IN_SEL_S = 7
const GPIO_FUNC13_IN_INV_SEL_V = 0x1
const GPIO_FUNC13_IN_INV_SEL_S = 6
const GPIO_FUNC13_IN_SEL = 0x0000003F
const GPIO_FUNC13_IN_SEL_V = 0x3F
const GPIO_FUNC13_IN_SEL_S = 0
const GPIO_SIG14_IN_SEL_V = 0x1
const GPIO_SIG14_IN_SEL_S = 7
const GPIO_FUNC14_IN_INV_SEL_V = 0x1
const GPIO_FUNC14_IN_INV_SEL_S = 6
const GPIO_FUNC14_IN_SEL = 0x0000003F
const GPIO_FUNC14_IN_SEL_V = 0x3F
const GPIO_FUNC14_IN_SEL_S = 0
const GPIO_SIG15_IN_SEL_V = 0x1
const GPIO_SIG15_IN_SEL_S = 7
const GPIO_FUNC15_IN_INV_SEL_V = 0x1
const GPIO_FUNC15_IN_INV_SEL_S = 6
const GPIO_FUNC15_IN_SEL = 0x0000003F
const GPIO_FUNC15_IN_SEL_V = 0x3F
const GPIO_FUNC15_IN_SEL_S = 0
const GPIO_SIG16_IN_SEL_V = 0x1
const GPIO_SIG16_IN_SEL_S = 7
const GPIO_FUNC16_IN_INV_SEL_V = 0x1
const GPIO_FUNC16_IN_INV_SEL_S = 6
const GPIO_FUNC16_IN_SEL = 0x0000003F
const GPIO_FUNC16_IN_SEL_V = 0x3F
const GPIO_FUNC16_IN_SEL_S = 0
const GPIO_SIG17_IN_SEL_V = 0x1
const GPIO_SIG17_IN_SEL_S = 7
const GPIO_FUNC17_IN_INV_SEL_V = 0x1
const GPIO_FUNC17_IN_INV_SEL_S = 6
const GPIO_FUNC17_IN_SEL = 0x0000003F
const GPIO_FUNC17_IN_SEL_V = 0x3F
const GPIO_FUNC17_IN_SEL_S = 0
const GPIO_SIG18_IN_SEL_V = 0x1
const GPIO_SIG18_IN_SEL_S = 7
const GPIO_FUNC18_IN_INV_SEL_V = 0x1
const GPIO_FUNC18_IN_INV_SEL_S = 6
const GPIO_FUNC18_IN_SEL = 0x0000003F
const GPIO_FUNC18_IN_SEL_V = 0x3F
const GPIO_FUNC18_IN_SEL_S = 0
const GPIO_SIG19_IN_SEL_V = 0x1
const GPIO_SIG19_IN_SEL_S = 7
const GPIO_FUNC19_IN_INV_SEL_V = 0x1
const GPIO_FUNC19_IN_INV_SEL_S = 6
const GPIO_FUNC19_IN_SEL = 0x0000003F
const GPIO_FUNC19_IN_SEL_V = 0x3F
const GPIO_FUNC19_IN_SEL_S = 0
const GPIO_SIG20_IN_SEL_V = 0x1
const GPIO_SIG20_IN_SEL_S = 7
const GPIO_FUNC20_IN_INV_SEL_V = 0x1
const GPIO_FUNC20_IN_INV_SEL_S = 6
const GPIO_FUNC20_IN_SEL = 0x0000003F
const GPIO_FUNC20_IN_SEL_V = 0x3F
const GPIO_FUNC20_IN_SEL_S = 0
const GPIO_SIG21_IN_SEL_V = 0x1
const GPIO_SIG21_IN_SEL_S = 7
const GPIO_FUNC21_IN_INV_SEL_V = 0x1
const GPIO_FUNC21_IN_INV_SEL_S = 6
const GPIO_FUNC21_IN_SEL = 0x0000003F
const GPIO_FUNC21_IN_SEL_V = 0x3F
const GPIO_FUNC21_IN_SEL_S = 0
const GPIO_SIG22_IN_SEL_V = 0x1
const GPIO_SIG22_IN_SEL_S = 7
const GPIO_FUNC22_IN_INV_SEL_V = 0x1
const GPIO_FUNC22_IN_INV_SEL_S = 6
const GPIO_FUNC22_IN_SEL = 0x0000003F
const GPIO_FUNC22_IN_SEL_V = 0x3F
const GPIO_FUNC22_IN_SEL_S = 0
const GPIO_SIG23_IN_SEL_V = 0x1
const GPIO_SIG23_IN_SEL_S = 7
const GPIO_FUNC23_IN_INV_SEL_V = 0x1
const GPIO_FUNC23_IN_INV_SEL_S = 6
const GPIO_FUNC23_IN_SEL = 0x0000003F
const GPIO_FUNC23_IN_SEL_V = 0x3F
const GPIO_FUNC23_IN_SEL_S = 0
const GPIO_SIG24_IN_SEL_V = 0x1
const GPIO_SIG24_IN_SEL_S = 7
const GPIO_FUNC24_IN_INV_SEL_V = 0x1
const GPIO_FUNC24_IN_INV_SEL_S = 6
const GPIO_FUNC24_IN_SEL = 0x0000003F
const GPIO_FUNC24_IN_SEL_V = 0x3F
const GPIO_FUNC24_IN_SEL_S = 0
const GPIO_SIG25_IN_SEL_V = 0x1
const GPIO_SIG25_IN_SEL_S = 7
const GPIO_FUNC25_IN_INV_SEL_V = 0x1
const GPIO_FUNC25_IN_INV_SEL_S = 6
const GPIO_FUNC25_IN_SEL = 0x0000003F
const GPIO_FUNC25_IN_SEL_V = 0x3F
const GPIO_FUNC25_IN_SEL_S = 0
const GPIO_SIG26_IN_SEL_V = 0x1
const GPIO_SIG26_IN_SEL_S = 7
const GPIO_FUNC26_IN_INV_SEL_V = 0x1
const GPIO_FUNC26_IN_INV_SEL_S = 6
const GPIO_FUNC26_IN_SEL = 0x0000003F
const GPIO_FUNC26_IN_SEL_V = 0x3F
const GPIO_FUNC26_IN_SEL_S = 0
const GPIO_SIG27_IN_SEL_V = 0x1
const GPIO_SIG27_IN_SEL_S = 7
const GPIO_FUNC27_IN_INV_SEL_V = 0x1
const GPIO_FUNC27_IN_INV_SEL_S = 6
const GPIO_FUNC27_IN_SEL = 0x0000003F
const GPIO_FUNC27_IN_SEL_V = 0x3F
const GPIO_FUNC27_IN_SEL_S = 0
const GPIO_SIG28_IN_SEL_V = 0x1
const GPIO_SIG28_IN_SEL_S = 7
const GPIO_FUNC28_IN_INV_SEL_V = 0x1
const GPIO_FUNC28_IN_INV_SEL_S = 6
const GPIO_FUNC28_IN_SEL = 0x0000003F
const GPIO_FUNC28_IN_SEL_V = 0x3F
const GPIO_FUNC28_IN_SEL_S = 0
const GPIO_SIG29_IN_SEL_V = 0x1
const GPIO_SIG29_IN_SEL_S = 7
const GPIO_FUNC29_IN_INV_SEL_V = 0x1
const GPIO_FUNC29_IN_INV_SEL_S = 6
const GPIO_FUNC29_IN_SEL = 0x0000003F
const GPIO_FUNC29_IN_SEL_V = 0x3F
const GPIO_FUNC29_IN_SEL_S = 0
const GPIO_SIG30_IN_SEL_V = 0x1
const GPIO_SIG30_IN_SEL_S = 7
const GPIO_FUNC30_IN_INV_SEL_V = 0x1
const GPIO_FUNC30_IN_INV_SEL_S = 6
const GPIO_FUNC30_IN_SEL = 0x0000003F
const GPIO_FUNC30_IN_SEL_V = 0x3F
const GPIO_FUNC30_IN_SEL_S = 0
const GPIO_SIG31_IN_SEL_V = 0x1
const GPIO_SIG31_IN_SEL_S = 7
const GPIO_FUNC31_IN_INV_SEL_V = 0x1
const GPIO_FUNC31_IN_INV_SEL_S = 6
const GPIO_FUNC31_IN_SEL = 0x0000003F
const GPIO_FUNC31_IN_SEL_V = 0x3F
const GPIO_FUNC31_IN_SEL_S = 0
const GPIO_SIG32_IN_SEL_V = 0x1
const GPIO_SIG32_IN_SEL_S = 7
const GPIO_FUNC32_IN_INV_SEL_V = 0x1
const GPIO_FUNC32_IN_INV_SEL_S = 6
const GPIO_FUNC32_IN_SEL = 0x0000003F
const GPIO_FUNC32_IN_SEL_V = 0x3F
const GPIO_FUNC32_IN_SEL_S = 0
const GPIO_SIG33_IN_SEL_V = 0x1
const GPIO_SIG33_IN_SEL_S = 7
const GPIO_FUNC33_IN_INV_SEL_V = 0x1
const GPIO_FUNC33_IN_INV_SEL_S = 6
const GPIO_FUNC33_IN_SEL = 0x0000003F
const GPIO_FUNC33_IN_SEL_V = 0x3F
const GPIO_FUNC33_IN_SEL_S = 0
const GPIO_SIG34_IN_SEL_V = 0x1
const GPIO_SIG34_IN_SEL_S = 7
const GPIO_FUNC34_IN_INV_SEL_V = 0x1
const GPIO_FUNC34_IN_INV_SEL_S = 6
const GPIO_FUNC34_IN_SEL = 0x0000003F
const GPIO_FUNC34_IN_SEL_V = 0x3F
const GPIO_FUNC34_IN_SEL_S = 0
const GPIO_SIG35_IN_SEL_V = 0x1
const GPIO_SIG35_IN_SEL_S = 7
const GPIO_FUNC35_IN_INV_SEL_V = 0x1
const GPIO_FUNC35_IN_INV_SEL_S = 6
const GPIO_FUNC35_IN_SEL = 0x0000003F
const GPIO_FUNC35_IN_SEL_V = 0x3F
const GPIO_FUNC35_IN_SEL_S = 0
const GPIO_SIG36_IN_SEL_V = 0x1
const GPIO_SIG36_IN_SEL_S = 7
const GPIO_FUNC36_IN_INV_SEL_V = 0x1
const GPIO_FUNC36_IN_INV_SEL_S = 6
const GPIO_FUNC36_IN_SEL = 0x0000003F
const GPIO_FUNC36_IN_SEL_V = 0x3F
const GPIO_FUNC36_IN_SEL_S = 0
const GPIO_SIG37_IN_SEL_V = 0x1
const GPIO_SIG37_IN_SEL_S = 7
const GPIO_FUNC37_IN_INV_SEL_V = 0x1
const GPIO_FUNC37_IN_INV_SEL_S = 6
const GPIO_FUNC37_IN_SEL = 0x0000003F
const GPIO_FUNC37_IN_SEL_V = 0x3F
const GPIO_FUNC37_IN_SEL_S = 0
const GPIO_SIG38_IN_SEL_V = 0x1
const GPIO_SIG38_IN_SEL_S = 7
const GPIO_FUNC38_IN_INV_SEL_V = 0x1
const GPIO_FUNC38_IN_INV_SEL_S = 6
const GPIO_FUNC38_IN_SEL = 0x0000003F
const GPIO_FUNC38_IN_SEL_V = 0x3F
const GPIO_FUNC38_IN_SEL_S = 0
const GPIO_SIG39_IN_SEL_V = 0x1
const GPIO_SIG39_IN_SEL_S = 7
const GPIO_FUNC39_IN_INV_SEL_V = 0x1
const GPIO_FUNC39_IN_INV_SEL_S = 6
const GPIO_FUNC39_IN_SEL = 0x0000003F
const GPIO_FUNC39_IN_SEL_V = 0x3F
const GPIO_FUNC39_IN_SEL_S = 0
const GPIO_SIG40_IN_SEL_V = 0x1
const GPIO_SIG40_IN_SEL_S = 7
const GPIO_FUNC40_IN_INV_SEL_V = 0x1
const GPIO_FUNC40_IN_INV_SEL_S = 6
const GPIO_FUNC40_IN_SEL = 0x0000003F
const GPIO_FUNC40_IN_SEL_V = 0x3F
const GPIO_FUNC40_IN_SEL_S = 0
const GPIO_SIG41_IN_SEL_V = 0x1
const GPIO_SIG41_IN_SEL_S = 7
const GPIO_FUNC41_IN_INV_SEL_V = 0x1
const GPIO_FUNC41_IN_INV_SEL_S = 6
const GPIO_FUNC41_IN_SEL = 0x0000003F
const GPIO_FUNC41_IN_SEL_V = 0x3F
const GPIO_FUNC41_IN_SEL_S = 0
const GPIO_SIG42_IN_SEL_V = 0x1
const GPIO_SIG42_IN_SEL_S = 7
const GPIO_FUNC42_IN_INV_SEL_V = 0x1
const GPIO_FUNC42_IN_INV_SEL_S = 6
const GPIO_FUNC42_IN_SEL = 0x0000003F
const GPIO_FUNC42_IN_SEL_V = 0x3F
const GPIO_FUNC42_IN_SEL_S = 0
const GPIO_SIG43_IN_SEL_V = 0x1
const GPIO_SIG43_IN_SEL_S = 7
const GPIO_FUNC43_IN_INV_SEL_V = 0x1
const GPIO_FUNC43_IN_INV_SEL_S = 6
const GPIO_FUNC43_IN_SEL = 0x0000003F
const GPIO_FUNC43_IN_SEL_V = 0x3F
const GPIO_FUNC43_IN_SEL_S = 0
const GPIO_SIG44_IN_SEL_V = 0x1
const GPIO_SIG44_IN_SEL_S = 7
const GPIO_FUNC44_IN_INV_SEL_V = 0x1
const GPIO_FUNC44_IN_INV_SEL_S = 6
const GPIO_FUNC44_IN_SEL = 0x0000003F
const GPIO_FUNC44_IN_SEL_V = 0x3F
const GPIO_FUNC44_IN_SEL_S = 0
const GPIO_SIG45_IN_SEL_V = 0x1
const GPIO_SIG45_IN_SEL_S = 7
const GPIO_FUNC45_IN_INV_SEL_V = 0x1
const GPIO_FUNC45_IN_INV_SEL_S = 6
const GPIO_FUNC45_IN_SEL = 0x0000003F
const GPIO_FUNC45_IN_SEL_V = 0x3F
const GPIO_FUNC45_IN_SEL_S = 0
const GPIO_SIG46_IN_SEL_V = 0x1
const GPIO_SIG46_IN_SEL_S = 7
const GPIO_FUNC46_IN_INV_SEL_V = 0x1
const GPIO_FUNC46_IN_INV_SEL_S = 6
const GPIO_FUNC46_IN_SEL = 0x0000003F
const GPIO_FUNC46_IN_SEL_V = 0x3F
const GPIO_FUNC46_IN_SEL_S = 0
const GPIO_SIG47_IN_SEL_V = 0x1
const GPIO_SIG47_IN_SEL_S = 7
const GPIO_FUNC47_IN_INV_SEL_V = 0x1
const GPIO_FUNC47_IN_INV_SEL_S = 6
const GPIO_FUNC47_IN_SEL = 0x0000003F
const GPIO_FUNC47_IN_SEL_V = 0x3F
const GPIO_FUNC47_IN_SEL_S = 0
const GPIO_SIG48_IN_SEL_V = 0x1
const GPIO_SIG48_IN_SEL_S = 7
const GPIO_FUNC48_IN_INV_SEL_V = 0x1
const GPIO_FUNC48_IN_INV_SEL_S = 6
const GPIO_FUNC48_IN_SEL = 0x0000003F
const GPIO_FUNC48_IN_SEL_V = 0x3F
const GPIO_FUNC48_IN_SEL_S = 0
const GPIO_SIG49_IN_SEL_V = 0x1
const GPIO_SIG49_IN_SEL_S = 7
const GPIO_FUNC49_IN_INV_SEL_V = 0x1
const GPIO_FUNC49_IN_INV_SEL_S = 6
const GPIO_FUNC49_IN_SEL = 0x0000003F
const GPIO_FUNC49_IN_SEL_V = 0x3F
const GPIO_FUNC49_IN_SEL_S = 0
const GPIO_SIG50_IN_SEL_V = 0x1
const GPIO_SIG50_IN_SEL_S = 7
const GPIO_FUNC50_IN_INV_SEL_V = 0x1
const GPIO_FUNC50_IN_INV_SEL_S = 6
const GPIO_FUNC50_IN_SEL = 0x0000003F
const GPIO_FUNC50_IN_SEL_V = 0x3F
const GPIO_FUNC50_IN_SEL_S = 0
const GPIO_SIG51_IN_SEL_V = 0x1
const GPIO_SIG51_IN_SEL_S = 7
const GPIO_FUNC51_IN_INV_SEL_V = 0x1
const GPIO_FUNC51_IN_INV_SEL_S = 6
const GPIO_FUNC51_IN_SEL = 0x0000003F
const GPIO_FUNC51_IN_SEL_V = 0x3F
const GPIO_FUNC51_IN_SEL_S = 0
const GPIO_SIG52_IN_SEL_V = 0x1
const GPIO_SIG52_IN_SEL_S = 7
const GPIO_FUNC52_IN_INV_SEL_V = 0x1
const GPIO_FUNC52_IN_INV_SEL_S = 6
const GPIO_FUNC52_IN_SEL = 0x0000003F
const GPIO_FUNC52_IN_SEL_V = 0x3F
const GPIO_FUNC52_IN_SEL_S = 0
const GPIO_SIG53_IN_SEL_V = 0x1
const GPIO_SIG53_IN_SEL_S = 7
const GPIO_FUNC53_IN_INV_SEL_V = 0x1
const GPIO_FUNC53_IN_INV_SEL_S = 6
const GPIO_FUNC53_IN_SEL = 0x0000003F
const GPIO_FUNC53_IN_SEL_V = 0x3F
const GPIO_FUNC53_IN_SEL_S = 0
const GPIO_SIG54_IN_SEL_V = 0x1
const GPIO_SIG54_IN_SEL_S = 7
const GPIO_FUNC54_IN_INV_SEL_V = 0x1
const GPIO_FUNC54_IN_INV_SEL_S = 6
const GPIO_FUNC54_IN_SEL = 0x0000003F
const GPIO_FUNC54_IN_SEL_V = 0x3F
const GPIO_FUNC54_IN_SEL_S = 0
const GPIO_SIG55_IN_SEL_V = 0x1
const GPIO_SIG55_IN_SEL_S = 7
const GPIO_FUNC55_IN_INV_SEL_V = 0x1
const GPIO_FUNC55_IN_INV_SEL_S = 6
const GPIO_FUNC55_IN_SEL = 0x0000003F
const GPIO_FUNC55_IN_SEL_V = 0x3F
const GPIO_FUNC55_IN_SEL_S = 0
const GPIO_SIG56_IN_SEL_V = 0x1
const GPIO_SIG56_IN_SEL_S = 7
const GPIO_FUNC56_IN_INV_SEL_V = 0x1
const GPIO_FUNC56_IN_INV_SEL_S = 6
const GPIO_FUNC56_IN_SEL = 0x0000003F
const GPIO_FUNC56_IN_SEL_V = 0x3F
const GPIO_FUNC56_IN_SEL_S = 0
const GPIO_SIG57_IN_SEL_V = 0x1
const GPIO_SIG57_IN_SEL_S = 7
const GPIO_FUNC57_IN_INV_SEL_V = 0x1
const GPIO_FUNC57_IN_INV_SEL_S = 6
const GPIO_FUNC57_IN_SEL = 0x0000003F
const GPIO_FUNC57_IN_SEL_V = 0x3F
const GPIO_FUNC57_IN_SEL_S = 0
const GPIO_SIG58_IN_SEL_V = 0x1
const GPIO_SIG58_IN_SEL_S = 7
const GPIO_FUNC58_IN_INV_SEL_V = 0x1
const GPIO_FUNC58_IN_INV_SEL_S = 6
const GPIO_FUNC58_IN_SEL = 0x0000003F
const GPIO_FUNC58_IN_SEL_V = 0x3F
const GPIO_FUNC58_IN_SEL_S = 0
const GPIO_SIG59_IN_SEL_V = 0x1
const GPIO_SIG59_IN_SEL_S = 7
const GPIO_FUNC59_IN_INV_SEL_V = 0x1
const GPIO_FUNC59_IN_INV_SEL_S = 6
const GPIO_FUNC59_IN_SEL = 0x0000003F
const GPIO_FUNC59_IN_SEL_V = 0x3F
const GPIO_FUNC59_IN_SEL_S = 0
const GPIO_SIG60_IN_SEL_V = 0x1
const GPIO_SIG60_IN_SEL_S = 7
const GPIO_FUNC60_IN_INV_SEL_V = 0x1
const GPIO_FUNC60_IN_INV_SEL_S = 6
const GPIO_FUNC60_IN_SEL = 0x0000003F
const GPIO_FUNC60_IN_SEL_V = 0x3F
const GPIO_FUNC60_IN_SEL_S = 0
const GPIO_SIG61_IN_SEL_V = 0x1
const GPIO_SIG61_IN_SEL_S = 7
const GPIO_FUNC61_IN_INV_SEL_V = 0x1
const GPIO_FUNC61_IN_INV_SEL_S = 6
const GPIO_FUNC61_IN_SEL = 0x0000003F
const GPIO_FUNC61_IN_SEL_V = 0x3F
const GPIO_FUNC61_IN_SEL_S = 0
const GPIO_SIG62_IN_SEL_V = 0x1
const GPIO_SIG62_IN_SEL_S = 7
const GPIO_FUNC62_IN_INV_SEL_V = 0x1
const GPIO_FUNC62_IN_INV_SEL_S = 6
const GPIO_FUNC62_IN_SEL = 0x0000003F
const GPIO_FUNC62_IN_SEL_V = 0x3F
const GPIO_FUNC62_IN_SEL_S = 0
const GPIO_SIG63_IN_SEL_V = 0x1
const GPIO_SIG63_IN_SEL_S = 7
const GPIO_FUNC63_IN_INV_SEL_V = 0x1
const GPIO_FUNC63_IN_INV_SEL_S = 6
const GPIO_FUNC63_IN_SEL = 0x0000003F
const GPIO_FUNC63_IN_SEL_V = 0x3F
const GPIO_FUNC63_IN_SEL_S = 0
const GPIO_SIG64_IN_SEL_V = 0x1
const GPIO_SIG64_IN_SEL_S = 7
const GPIO_FUNC64_IN_INV_SEL_V = 0x1
const GPIO_FUNC64_IN_INV_SEL_S = 6
const GPIO_FUNC64_IN_SEL = 0x0000003F
const GPIO_FUNC64_IN_SEL_V = 0x3F
const GPIO_FUNC64_IN_SEL_S = 0
const GPIO_SIG65_IN_SEL_V = 0x1
const GPIO_SIG65_IN_SEL_S = 7
const GPIO_FUNC65_IN_INV_SEL_V = 0x1
const GPIO_FUNC65_IN_INV_SEL_S = 6
const GPIO_FUNC65_IN_SEL = 0x0000003F
const GPIO_FUNC65_IN_SEL_V = 0x3F
const GPIO_FUNC65_IN_SEL_S = 0
const GPIO_SIG66_IN_SEL_V = 0x1
const GPIO_SIG66_IN_SEL_S = 7
const GPIO_FUNC66_IN_INV_SEL_V = 0x1
const GPIO_FUNC66_IN_INV_SEL_S = 6
const GPIO_FUNC66_IN_SEL = 0x0000003F
const GPIO_FUNC66_IN_SEL_V = 0x3F
const GPIO_FUNC66_IN_SEL_S = 0
const GPIO_SIG67_IN_SEL_V = 0x1
const GPIO_SIG67_IN_SEL_S = 7
const GPIO_FUNC67_IN_INV_SEL_V = 0x1
const GPIO_FUNC67_IN_INV_SEL_S = 6
const GPIO_FUNC67_IN_SEL = 0x0000003F
const GPIO_FUNC67_IN_SEL_V = 0x3F
const GPIO_FUNC67_IN_SEL_S = 0
const GPIO_SIG68_IN_SEL_V = 0x1
const GPIO_SIG68_IN_SEL_S = 7
const GPIO_FUNC68_IN_INV_SEL_V = 0x1
const GPIO_FUNC68_IN_INV_SEL_S = 6
const GPIO_FUNC68_IN_SEL = 0x0000003F
const GPIO_FUNC68_IN_SEL_V = 0x3F
const GPIO_FUNC68_IN_SEL_S = 0
const GPIO_SIG69_IN_SEL_V = 0x1
const GPIO_SIG69_IN_SEL_S = 7
const GPIO_FUNC69_IN_INV_SEL_V = 0x1
const GPIO_FUNC69_IN_INV_SEL_S = 6
const GPIO_FUNC69_IN_SEL = 0x0000003F
const GPIO_FUNC69_IN_SEL_V = 0x3F
const GPIO_FUNC69_IN_SEL_S = 0
const GPIO_SIG70_IN_SEL_V = 0x1
const GPIO_SIG70_IN_SEL_S = 7
const GPIO_FUNC70_IN_INV_SEL_V = 0x1
const GPIO_FUNC70_IN_INV_SEL_S = 6
const GPIO_FUNC70_IN_SEL = 0x0000003F
const GPIO_FUNC70_IN_SEL_V = 0x3F
const GPIO_FUNC70_IN_SEL_S = 0
const GPIO_SIG71_IN_SEL_V = 0x1
const GPIO_SIG71_IN_SEL_S = 7
const GPIO_FUNC71_IN_INV_SEL_V = 0x1
const GPIO_FUNC71_IN_INV_SEL_S = 6
const GPIO_FUNC71_IN_SEL = 0x0000003F
const GPIO_FUNC71_IN_SEL_V = 0x3F
const GPIO_FUNC71_IN_SEL_S = 0
const GPIO_SIG72_IN_SEL_V = 0x1
const GPIO_SIG72_IN_SEL_S = 7
const GPIO_FUNC72_IN_INV_SEL_V = 0x1
const GPIO_FUNC72_IN_INV_SEL_S = 6
const GPIO_FUNC72_IN_SEL = 0x0000003F
const GPIO_FUNC72_IN_SEL_V = 0x3F
const GPIO_FUNC72_IN_SEL_S = 0
const GPIO_SIG73_IN_SEL_V = 0x1
const GPIO_SIG73_IN_SEL_S = 7
const GPIO_FUNC73_IN_INV_SEL_V = 0x1
const GPIO_FUNC73_IN_INV_SEL_S = 6
const GPIO_FUNC73_IN_SEL = 0x0000003F
const GPIO_FUNC73_IN_SEL_V = 0x3F
const GPIO_FUNC73_IN_SEL_S = 0
const GPIO_SIG74_IN_SEL_V = 0x1
const GPIO_SIG74_IN_SEL_S = 7
const GPIO_FUNC74_IN_INV_SEL_V = 0x1
const GPIO_FUNC74_IN_INV_SEL_S = 6
const GPIO_FUNC74_IN_SEL = 0x0000003F
const GPIO_FUNC74_IN_SEL_V = 0x3F
const GPIO_FUNC74_IN_SEL_S = 0
const GPIO_SIG75_IN_SEL_V = 0x1
const GPIO_SIG75_IN_SEL_S = 7
const GPIO_FUNC75_IN_INV_SEL_V = 0x1
const GPIO_FUNC75_IN_INV_SEL_S = 6
const GPIO_FUNC75_IN_SEL = 0x0000003F
const GPIO_FUNC75_IN_SEL_V = 0x3F
const GPIO_FUNC75_IN_SEL_S = 0
const GPIO_SIG76_IN_SEL_V = 0x1
const GPIO_SIG76_IN_SEL_S = 7
const GPIO_FUNC76_IN_INV_SEL_V = 0x1
const GPIO_FUNC76_IN_INV_SEL_S = 6
const GPIO_FUNC76_IN_SEL = 0x0000003F
const GPIO_FUNC76_IN_SEL_V = 0x3F
const GPIO_FUNC76_IN_SEL_S = 0
const GPIO_SIG77_IN_SEL_V = 0x1
const GPIO_SIG77_IN_SEL_S = 7
const GPIO_FUNC77_IN_INV_SEL_V = 0x1
const GPIO_FUNC77_IN_INV_SEL_S = 6
const GPIO_FUNC77_IN_SEL = 0x0000003F
const GPIO_FUNC77_IN_SEL_V = 0x3F
const GPIO_FUNC77_IN_SEL_S = 0
const GPIO_SIG78_IN_SEL_V = 0x1
const GPIO_SIG78_IN_SEL_S = 7
const GPIO_FUNC78_IN_INV_SEL_V = 0x1
const GPIO_FUNC78_IN_INV_SEL_S = 6
const GPIO_FUNC78_IN_SEL = 0x0000003F
const GPIO_FUNC78_IN_SEL_V = 0x3F
const GPIO_FUNC78_IN_SEL_S = 0
const GPIO_SIG79_IN_SEL_V = 0x1
const GPIO_SIG79_IN_SEL_S = 7
const GPIO_FUNC79_IN_INV_SEL_V = 0x1
const GPIO_FUNC79_IN_INV_SEL_S = 6
const GPIO_FUNC79_IN_SEL = 0x0000003F
const GPIO_FUNC79_IN_SEL_V = 0x3F
const GPIO_FUNC79_IN_SEL_S = 0
const GPIO_SIG80_IN_SEL_V = 0x1
const GPIO_SIG80_IN_SEL_S = 7
const GPIO_FUNC80_IN_INV_SEL_V = 0x1
const GPIO_FUNC80_IN_INV_SEL_S = 6
const GPIO_FUNC80_IN_SEL = 0x0000003F
const GPIO_FUNC80_IN_SEL_V = 0x3F
const GPIO_FUNC80_IN_SEL_S = 0
const GPIO_SIG81_IN_SEL_V = 0x1
const GPIO_SIG81_IN_SEL_S = 7
const GPIO_FUNC81_IN_INV_SEL_V = 0x1
const GPIO_FUNC81_IN_INV_SEL_S = 6
const GPIO_FUNC81_IN_SEL = 0x0000003F
const GPIO_FUNC81_IN_SEL_V = 0x3F
const GPIO_FUNC81_IN_SEL_S = 0
const GPIO_SIG82_IN_SEL_V = 0x1
const GPIO_SIG82_IN_SEL_S = 7
const GPIO_FUNC82_IN_INV_SEL_V = 0x1
const GPIO_FUNC82_IN_INV_SEL_S = 6
const GPIO_FUNC82_IN_SEL = 0x0000003F
const GPIO_FUNC82_IN_SEL_V = 0x3F
const GPIO_FUNC82_IN_SEL_S = 0
const GPIO_SIG83_IN_SEL_V = 0x1
const GPIO_SIG83_IN_SEL_S = 7
const GPIO_FUNC83_IN_INV_SEL_V = 0x1
const GPIO_FUNC83_IN_INV_SEL_S = 6
const GPIO_FUNC83_IN_SEL = 0x0000003F
const GPIO_FUNC83_IN_SEL_V = 0x3F
const GPIO_FUNC83_IN_SEL_S = 0
const GPIO_SIG84_IN_SEL_V = 0x1
const GPIO_SIG84_IN_SEL_S = 7
const GPIO_FUNC84_IN_INV_SEL_V = 0x1
const GPIO_FUNC84_IN_INV_SEL_S = 6
const GPIO_FUNC84_IN_SEL = 0x0000003F
const GPIO_FUNC84_IN_SEL_V = 0x3F
const GPIO_FUNC84_IN_SEL_S = 0
const GPIO_SIG85_IN_SEL_V = 0x1
const GPIO_SIG85_IN_SEL_S = 7
const GPIO_FUNC85_IN_INV_SEL_V = 0x1
const GPIO_FUNC85_IN_INV_SEL_S = 6
const GPIO_FUNC85_IN_SEL = 0x0000003F
const GPIO_FUNC85_IN_SEL_V = 0x3F
const GPIO_FUNC85_IN_SEL_S = 0
const GPIO_SIG86_IN_SEL_V = 0x1
const GPIO_SIG86_IN_SEL_S = 7
const GPIO_FUNC86_IN_INV_SEL_V = 0x1
const GPIO_FUNC86_IN_INV_SEL_S = 6
const GPIO_FUNC86_IN_SEL = 0x0000003F
const GPIO_FUNC86_IN_SEL_V = 0x3F
const GPIO_FUNC86_IN_SEL_S = 0
const GPIO_SIG87_IN_SEL_V = 0x1
const GPIO_SIG87_IN_SEL_S = 7
const GPIO_FUNC87_IN_INV_SEL_V = 0x1
const GPIO_FUNC87_IN_INV_SEL_S = 6
const GPIO_FUNC87_IN_SEL = 0x0000003F
const GPIO_FUNC87_IN_SEL_V = 0x3F
const GPIO_FUNC87_IN_SEL_S = 0
const GPIO_SIG88_IN_SEL_V = 0x1
const GPIO_SIG88_IN_SEL_S = 7
const GPIO_FUNC88_IN_INV_SEL_V = 0x1
const GPIO_FUNC88_IN_INV_SEL_S = 6
const GPIO_FUNC88_IN_SEL = 0x0000003F
const GPIO_FUNC88_IN_SEL_V = 0x3F
const GPIO_FUNC88_IN_SEL_S = 0
const GPIO_SIG89_IN_SEL_V = 0x1
const GPIO_SIG89_IN_SEL_S = 7
const GPIO_FUNC89_IN_INV_SEL_V = 0x1
const GPIO_FUNC89_IN_INV_SEL_S = 6
const GPIO_FUNC89_IN_SEL = 0x0000003F
const GPIO_FUNC89_IN_SEL_V = 0x3F
const GPIO_FUNC89_IN_SEL_S = 0
const GPIO_SIG90_IN_SEL_V = 0x1
const GPIO_SIG90_IN_SEL_S = 7
const GPIO_FUNC90_IN_INV_SEL_V = 0x1
const GPIO_FUNC90_IN_INV_SEL_S = 6
const GPIO_FUNC90_IN_SEL = 0x0000003F
const GPIO_FUNC90_IN_SEL_V = 0x3F
const GPIO_FUNC90_IN_SEL_S = 0
const GPIO_SIG91_IN_SEL_V = 0x1
const GPIO_SIG91_IN_SEL_S = 7
const GPIO_FUNC91_IN_INV_SEL_V = 0x1
const GPIO_FUNC91_IN_INV_SEL_S = 6
const GPIO_FUNC91_IN_SEL = 0x0000003F
const GPIO_FUNC91_IN_SEL_V = 0x3F
const GPIO_FUNC91_IN_SEL_S = 0
const GPIO_SIG92_IN_SEL_V = 0x1
const GPIO_SIG92_IN_SEL_S = 7
const GPIO_FUNC92_IN_INV_SEL_V = 0x1
const GPIO_FUNC92_IN_INV_SEL_S = 6
const GPIO_FUNC92_IN_SEL = 0x0000003F
const GPIO_FUNC92_IN_SEL_V = 0x3F
const GPIO_FUNC92_IN_SEL_S = 0
const GPIO_SIG93_IN_SEL_V = 0x1
const GPIO_SIG93_IN_SEL_S = 7
const GPIO_FUNC93_IN_INV_SEL_V = 0x1
const GPIO_FUNC93_IN_INV_SEL_S = 6
const GPIO_FUNC93_IN_SEL = 0x0000003F
const GPIO_FUNC93_IN_SEL_V = 0x3F
const GPIO_FUNC93_IN_SEL_S = 0
const GPIO_SIG94_IN_SEL_V = 0x1
const GPIO_SIG94_IN_SEL_S = 7
const GPIO_FUNC94_IN_INV_SEL_V = 0x1
const GPIO_FUNC94_IN_INV_SEL_S = 6
const GPIO_FUNC94_IN_SEL = 0x0000003F
const GPIO_FUNC94_IN_SEL_V = 0x3F
const GPIO_FUNC94_IN_SEL_S = 0
const GPIO_SIG95_IN_SEL_V = 0x1
const GPIO_SIG95_IN_SEL_S = 7
const GPIO_FUNC95_IN_INV_SEL_V = 0x1
const GPIO_FUNC95_IN_INV_SEL_S = 6
const GPIO_FUNC95_IN_SEL = 0x0000003F
const GPIO_FUNC95_IN_SEL_V = 0x3F
const GPIO_FUNC95_IN_SEL_S = 0
const GPIO_SIG96_IN_SEL_V = 0x1
const GPIO_SIG96_IN_SEL_S = 7
const GPIO_FUNC96_IN_INV_SEL_V = 0x1
const GPIO_FUNC96_IN_INV_SEL_S = 6
const GPIO_FUNC96_IN_SEL = 0x0000003F
const GPIO_FUNC96_IN_SEL_V = 0x3F
const GPIO_FUNC96_IN_SEL_S = 0
const GPIO_SIG97_IN_SEL_V = 0x1
const GPIO_SIG97_IN_SEL_S = 7
const GPIO_FUNC97_IN_INV_SEL_V = 0x1
const GPIO_FUNC97_IN_INV_SEL_S = 6
const GPIO_FUNC97_IN_SEL = 0x0000003F
const GPIO_FUNC97_IN_SEL_V = 0x3F
const GPIO_FUNC97_IN_SEL_S = 0
const GPIO_SIG98_IN_SEL_V = 0x1
const GPIO_SIG98_IN_SEL_S = 7
const GPIO_FUNC98_IN_INV_SEL_V = 0x1
const GPIO_FUNC98_IN_INV_SEL_S = 6
const GPIO_FUNC98_IN_SEL = 0x0000003F
const GPIO_FUNC98_IN_SEL_V = 0x3F
const GPIO_FUNC98_IN_SEL_S = 0
const GPIO_SIG99_IN_SEL_V = 0x1
const GPIO_SIG99_IN_SEL_S = 7
const GPIO_FUNC99_IN_INV_SEL_V = 0x1
const GPIO_FUNC99_IN_INV_SEL_S = 6
const GPIO_FUNC99_IN_SEL = 0x0000003F
const GPIO_FUNC99_IN_SEL_V = 0x3F
const GPIO_FUNC99_IN_SEL_S = 0
const GPIO_SIG100_IN_SEL_V = 0x1
const GPIO_SIG100_IN_SEL_S = 7
const GPIO_FUNC100_IN_INV_SEL_V = 0x1
const GPIO_FUNC100_IN_INV_SEL_S = 6
const GPIO_FUNC100_IN_SEL = 0x0000003F
const GPIO_FUNC100_IN_SEL_V = 0x3F
const GPIO_FUNC100_IN_SEL_S = 0
const GPIO_SIG101_IN_SEL_V = 0x1
const GPIO_SIG101_IN_SEL_S = 7
const GPIO_FUNC101_IN_INV_SEL_V = 0x1
const GPIO_FUNC101_IN_INV_SEL_S = 6
const GPIO_FUNC101_IN_SEL = 0x0000003F
const GPIO_FUNC101_IN_SEL_V = 0x3F
const GPIO_FUNC101_IN_SEL_S = 0
const GPIO_SIG102_IN_SEL_V = 0x1
const GPIO_SIG102_IN_SEL_S = 7
const GPIO_FUNC102_IN_INV_SEL_V = 0x1
const GPIO_FUNC102_IN_INV_SEL_S = 6
const GPIO_FUNC102_IN_SEL = 0x0000003F
const GPIO_FUNC102_IN_SEL_V = 0x3F
const GPIO_FUNC102_IN_SEL_S = 0
const GPIO_SIG103_IN_SEL_V = 0x1
const GPIO_SIG103_IN_SEL_S = 7
const GPIO_FUNC103_IN_INV_SEL_V = 0x1
const GPIO_FUNC103_IN_INV_SEL_S = 6
const GPIO_FUNC103_IN_SEL = 0x0000003F
const GPIO_FUNC103_IN_SEL_V = 0x3F
const GPIO_FUNC103_IN_SEL_S = 0
const GPIO_SIG104_IN_SEL_V = 0x1
const GPIO_SIG104_IN_SEL_S = 7
const GPIO_FUNC104_IN_INV_SEL_V = 0x1
const GPIO_FUNC104_IN_INV_SEL_S = 6
const GPIO_FUNC104_IN_SEL = 0x0000003F
const GPIO_FUNC104_IN_SEL_V = 0x3F
const GPIO_FUNC104_IN_SEL_S = 0
const GPIO_SIG105_IN_SEL_V = 0x1
const GPIO_SIG105_IN_SEL_S = 7
const GPIO_FUNC105_IN_INV_SEL_V = 0x1
const GPIO_FUNC105_IN_INV_SEL_S = 6
const GPIO_FUNC105_IN_SEL = 0x0000003F
const GPIO_FUNC105_IN_SEL_V = 0x3F
const GPIO_FUNC105_IN_SEL_S = 0
const GPIO_SIG106_IN_SEL_V = 0x1
const GPIO_SIG106_IN_SEL_S = 7
const GPIO_FUNC106_IN_INV_SEL_V = 0x1
const GPIO_FUNC106_IN_INV_SEL_S = 6
const GPIO_FUNC106_IN_SEL = 0x0000003F
const GPIO_FUNC106_IN_SEL_V = 0x3F
const GPIO_FUNC106_IN_SEL_S = 0
const GPIO_SIG107_IN_SEL_V = 0x1
const GPIO_SIG107_IN_SEL_S = 7
const GPIO_FUNC107_IN_INV_SEL_V = 0x1
const GPIO_FUNC107_IN_INV_SEL_S = 6
const GPIO_FUNC107_IN_SEL = 0x0000003F
const GPIO_FUNC107_IN_SEL_V = 0x3F
const GPIO_FUNC107_IN_SEL_S = 0
const GPIO_SIG108_IN_SEL_V = 0x1
const GPIO_SIG108_IN_SEL_S = 7
const GPIO_FUNC108_IN_INV_SEL_V = 0x1
const GPIO_FUNC108_IN_INV_SEL_S = 6
const GPIO_FUNC108_IN_SEL = 0x0000003F
const GPIO_FUNC108_IN_SEL_V = 0x3F
const GPIO_FUNC108_IN_SEL_S = 0
const GPIO_SIG109_IN_SEL_V = 0x1
const GPIO_SIG109_IN_SEL_S = 7
const GPIO_FUNC109_IN_INV_SEL_V = 0x1
const GPIO_FUNC109_IN_INV_SEL_S = 6
const GPIO_FUNC109_IN_SEL = 0x0000003F
const GPIO_FUNC109_IN_SEL_V = 0x3F
const GPIO_FUNC109_IN_SEL_S = 0
const GPIO_SIG110_IN_SEL_V = 0x1
const GPIO_SIG110_IN_SEL_S = 7
const GPIO_FUNC110_IN_INV_SEL_V = 0x1
const GPIO_FUNC110_IN_INV_SEL_S = 6
const GPIO_FUNC110_IN_SEL = 0x0000003F
const GPIO_FUNC110_IN_SEL_V = 0x3F
const GPIO_FUNC110_IN_SEL_S = 0
const GPIO_SIG111_IN_SEL_V = 0x1
const GPIO_SIG111_IN_SEL_S = 7
const GPIO_FUNC111_IN_INV_SEL_V = 0x1
const GPIO_FUNC111_IN_INV_SEL_S = 6
const GPIO_FUNC111_IN_SEL = 0x0000003F
const GPIO_FUNC111_IN_SEL_V = 0x3F
const GPIO_FUNC111_IN_SEL_S = 0
const GPIO_SIG112_IN_SEL_V = 0x1
const GPIO_SIG112_IN_SEL_S = 7
const GPIO_FUNC112_IN_INV_SEL_V = 0x1
const GPIO_FUNC112_IN_INV_SEL_S = 6
const GPIO_FUNC112_IN_SEL = 0x0000003F
const GPIO_FUNC112_IN_SEL_V = 0x3F
const GPIO_FUNC112_IN_SEL_S = 0
const GPIO_SIG113_IN_SEL_V = 0x1
const GPIO_SIG113_IN_SEL_S = 7
const GPIO_FUNC113_IN_INV_SEL_V = 0x1
const GPIO_FUNC113_IN_INV_SEL_S = 6
const GPIO_FUNC113_IN_SEL = 0x0000003F
const GPIO_FUNC113_IN_SEL_V = 0x3F
const GPIO_FUNC113_IN_SEL_S = 0
const GPIO_SIG114_IN_SEL_V = 0x1
const GPIO_SIG114_IN_SEL_S = 7
const GPIO_FUNC114_IN_INV_SEL_V = 0x1
const GPIO_FUNC114_IN_INV_SEL_S = 6
const GPIO_FUNC114_IN_SEL = 0x0000003F
const GPIO_FUNC114_IN_SEL_V = 0x3F
const GPIO_FUNC114_IN_SEL_S = 0
const GPIO_SIG115_IN_SEL_V = 0x1
const GPIO_SIG115_IN_SEL_S = 7
const GPIO_FUNC115_IN_INV_SEL_V = 0x1
const GPIO_FUNC115_IN_INV_SEL_S = 6
const GPIO_FUNC115_IN_SEL = 0x0000003F
const GPIO_FUNC115_IN_SEL_V = 0x3F
const GPIO_FUNC115_IN_SEL_S = 0
const GPIO_SIG116_IN_SEL_V = 0x1
const GPIO_SIG116_IN_SEL_S = 7
const GPIO_FUNC116_IN_INV_SEL_V = 0x1
const GPIO_FUNC116_IN_INV_SEL_S = 6
const GPIO_FUNC116_IN_SEL = 0x0000003F
const GPIO_FUNC116_IN_SEL_V = 0x3F
const GPIO_FUNC116_IN_SEL_S = 0
const GPIO_SIG117_IN_SEL_V = 0x1
const GPIO_SIG117_IN_SEL_S = 7
const GPIO_FUNC117_IN_INV_SEL_V = 0x1
const GPIO_FUNC117_IN_INV_SEL_S = 6
const GPIO_FUNC117_IN_SEL = 0x0000003F
const GPIO_FUNC117_IN_SEL_V = 0x3F
const GPIO_FUNC117_IN_SEL_S = 0
const GPIO_SIG118_IN_SEL_V = 0x1
const GPIO_SIG118_IN_SEL_S = 7
const GPIO_FUNC118_IN_INV_SEL_V = 0x1
const GPIO_FUNC118_IN_INV_SEL_S = 6
const GPIO_FUNC118_IN_SEL = 0x0000003F
const GPIO_FUNC118_IN_SEL_V = 0x3F
const GPIO_FUNC118_IN_SEL_S = 0
const GPIO_SIG119_IN_SEL_V = 0x1
const GPIO_SIG119_IN_SEL_S = 7
const GPIO_FUNC119_IN_INV_SEL_V = 0x1
const GPIO_FUNC119_IN_INV_SEL_S = 6
const GPIO_FUNC119_IN_SEL = 0x0000003F
const GPIO_FUNC119_IN_SEL_V = 0x3F
const GPIO_FUNC119_IN_SEL_S = 0
const GPIO_SIG120_IN_SEL_V = 0x1
const GPIO_SIG120_IN_SEL_S = 7
const GPIO_FUNC120_IN_INV_SEL_V = 0x1
const GPIO_FUNC120_IN_INV_SEL_S = 6
const GPIO_FUNC120_IN_SEL = 0x0000003F
const GPIO_FUNC120_IN_SEL_V = 0x3F
const GPIO_FUNC120_IN_SEL_S = 0
const GPIO_SIG121_IN_SEL_V = 0x1
const GPIO_SIG121_IN_SEL_S = 7
const GPIO_FUNC121_IN_INV_SEL_V = 0x1
const GPIO_FUNC121_IN_INV_SEL_S = 6
const GPIO_FUNC121_IN_SEL = 0x0000003F
const GPIO_FUNC121_IN_SEL_V = 0x3F
const GPIO_FUNC121_IN_SEL_S = 0
const GPIO_SIG122_IN_SEL_V = 0x1
const GPIO_SIG122_IN_SEL_S = 7
const GPIO_FUNC122_IN_INV_SEL_V = 0x1
const GPIO_FUNC122_IN_INV_SEL_S = 6
const GPIO_FUNC122_IN_SEL = 0x0000003F
const GPIO_FUNC122_IN_SEL_V = 0x3F
const GPIO_FUNC122_IN_SEL_S = 0
const GPIO_SIG123_IN_SEL_V = 0x1
const GPIO_SIG123_IN_SEL_S = 7
const GPIO_FUNC123_IN_INV_SEL_V = 0x1
const GPIO_FUNC123_IN_INV_SEL_S = 6
const GPIO_FUNC123_IN_SEL = 0x0000003F
const GPIO_FUNC123_IN_SEL_V = 0x3F
const GPIO_FUNC123_IN_SEL_S = 0
const GPIO_SIG124_IN_SEL_V = 0x1
const GPIO_SIG124_IN_SEL_S = 7
const GPIO_FUNC124_IN_INV_SEL_V = 0x1
const GPIO_FUNC124_IN_INV_SEL_S = 6
const GPIO_FUNC124_IN_SEL = 0x0000003F
const GPIO_FUNC124_IN_SEL_V = 0x3F
const GPIO_FUNC124_IN_SEL_S = 0
const GPIO_SIG125_IN_SEL_V = 0x1
const GPIO_SIG125_IN_SEL_S = 7
const GPIO_FUNC125_IN_INV_SEL_V = 0x1
const GPIO_FUNC125_IN_INV_SEL_S = 6
const GPIO_FUNC125_IN_SEL = 0x0000003F
const GPIO_FUNC125_IN_SEL_V = 0x3F
const GPIO_FUNC125_IN_SEL_S = 0
const GPIO_SIG126_IN_SEL_V = 0x1
const GPIO_SIG126_IN_SEL_S = 7
const GPIO_FUNC126_IN_INV_SEL_V = 0x1
const GPIO_FUNC126_IN_INV_SEL_S = 6
const GPIO_FUNC126_IN_SEL = 0x0000003F
const GPIO_FUNC126_IN_SEL_V = 0x3F
const GPIO_FUNC126_IN_SEL_S = 0
const GPIO_SIG127_IN_SEL_V = 0x1
const GPIO_SIG127_IN_SEL_S = 7
const GPIO_FUNC127_IN_INV_SEL_V = 0x1
const GPIO_FUNC127_IN_INV_SEL_S = 6
const GPIO_FUNC127_IN_SEL = 0x0000003F
const GPIO_FUNC127_IN_SEL_V = 0x3F
const GPIO_FUNC127_IN_SEL_S = 0
const GPIO_SIG128_IN_SEL_V = 0x1
const GPIO_SIG128_IN_SEL_S = 7
const GPIO_FUNC128_IN_INV_SEL_V = 0x1
const GPIO_FUNC128_IN_INV_SEL_S = 6
const GPIO_FUNC128_IN_SEL = 0x0000003F
const GPIO_FUNC128_IN_SEL_V = 0x3F
const GPIO_FUNC128_IN_SEL_S = 0
const GPIO_SIG129_IN_SEL_V = 0x1
const GPIO_SIG129_IN_SEL_S = 7
const GPIO_FUNC129_IN_INV_SEL_V = 0x1
const GPIO_FUNC129_IN_INV_SEL_S = 6
const GPIO_FUNC129_IN_SEL = 0x0000003F
const GPIO_FUNC129_IN_SEL_V = 0x3F
const GPIO_FUNC129_IN_SEL_S = 0
const GPIO_SIG130_IN_SEL_V = 0x1
const GPIO_SIG130_IN_SEL_S = 7
const GPIO_FUNC130_IN_INV_SEL_V = 0x1
const GPIO_FUNC130_IN_INV_SEL_S = 6
const GPIO_FUNC130_IN_SEL = 0x0000003F
const GPIO_FUNC130_IN_SEL_V = 0x3F
const GPIO_FUNC130_IN_SEL_S = 0
const GPIO_SIG131_IN_SEL_V = 0x1
const GPIO_SIG131_IN_SEL_S = 7
const GPIO_FUNC131_IN_INV_SEL_V = 0x1
const GPIO_FUNC131_IN_INV_SEL_S = 6
const GPIO_FUNC131_IN_SEL = 0x0000003F
const GPIO_FUNC131_IN_SEL_V = 0x3F
const GPIO_FUNC131_IN_SEL_S = 0
const GPIO_SIG132_IN_SEL_V = 0x1
const GPIO_SIG132_IN_SEL_S = 7
const GPIO_FUNC132_IN_INV_SEL_V = 0x1
const GPIO_FUNC132_IN_INV_SEL_S = 6
const GPIO_FUNC132_IN_SEL = 0x0000003F
const GPIO_FUNC132_IN_SEL_V = 0x3F
const GPIO_FUNC132_IN_SEL_S = 0
const GPIO_SIG133_IN_SEL_V = 0x1
const GPIO_SIG133_IN_SEL_S = 7
const GPIO_FUNC133_IN_INV_SEL_V = 0x1
const GPIO_FUNC133_IN_INV_SEL_S = 6
const GPIO_FUNC133_IN_SEL = 0x0000003F
const GPIO_FUNC133_IN_SEL_V = 0x3F
const GPIO_FUNC133_IN_SEL_S = 0
const GPIO_SIG134_IN_SEL_V = 0x1
const GPIO_SIG134_IN_SEL_S = 7
const GPIO_FUNC134_IN_INV_SEL_V = 0x1
const GPIO_FUNC134_IN_INV_SEL_S = 6
const GPIO_FUNC134_IN_SEL = 0x0000003F
const GPIO_FUNC134_IN_SEL_V = 0x3F
const GPIO_FUNC134_IN_SEL_S = 0
const GPIO_SIG135_IN_SEL_V = 0x1
const GPIO_SIG135_IN_SEL_S = 7
const GPIO_FUNC135_IN_INV_SEL_V = 0x1
const GPIO_FUNC135_IN_INV_SEL_S = 6
const GPIO_FUNC135_IN_SEL = 0x0000003F
const GPIO_FUNC135_IN_SEL_V = 0x3F
const GPIO_FUNC135_IN_SEL_S = 0
const GPIO_SIG136_IN_SEL_V = 0x1
const GPIO_SIG136_IN_SEL_S = 7
const GPIO_FUNC136_IN_INV_SEL_V = 0x1
const GPIO_FUNC136_IN_INV_SEL_S = 6
const GPIO_FUNC136_IN_SEL = 0x0000003F
const GPIO_FUNC136_IN_SEL_V = 0x3F
const GPIO_FUNC136_IN_SEL_S = 0
const GPIO_SIG137_IN_SEL_V = 0x1
const GPIO_SIG137_IN_SEL_S = 7
const GPIO_FUNC137_IN_INV_SEL_V = 0x1
const GPIO_FUNC137_IN_INV_SEL_S = 6
const GPIO_FUNC137_IN_SEL = 0x0000003F
const GPIO_FUNC137_IN_SEL_V = 0x3F
const GPIO_FUNC137_IN_SEL_S = 0
const GPIO_SIG138_IN_SEL_V = 0x1
const GPIO_SIG138_IN_SEL_S = 7
const GPIO_FUNC138_IN_INV_SEL_V = 0x1
const GPIO_FUNC138_IN_INV_SEL_S = 6
const GPIO_FUNC138_IN_SEL = 0x0000003F
const GPIO_FUNC138_IN_SEL_V = 0x3F
const GPIO_FUNC138_IN_SEL_S = 0
const GPIO_SIG139_IN_SEL_V = 0x1
const GPIO_SIG139_IN_SEL_S = 7
const GPIO_FUNC139_IN_INV_SEL_V = 0x1
const GPIO_FUNC139_IN_INV_SEL_S = 6
const GPIO_FUNC139_IN_SEL = 0x0000003F
const GPIO_FUNC139_IN_SEL_V = 0x3F
const GPIO_FUNC139_IN_SEL_S = 0
const GPIO_SIG140_IN_SEL_V = 0x1
const GPIO_SIG140_IN_SEL_S = 7
const GPIO_FUNC140_IN_INV_SEL_V = 0x1
const GPIO_FUNC140_IN_INV_SEL_S = 6
const GPIO_FUNC140_IN_SEL = 0x0000003F
const GPIO_FUNC140_IN_SEL_V = 0x3F
const GPIO_FUNC140_IN_SEL_S = 0
const GPIO_SIG141_IN_SEL_V = 0x1
const GPIO_SIG141_IN_SEL_S = 7
const GPIO_FUNC141_IN_INV_SEL_V = 0x1
const GPIO_FUNC141_IN_INV_SEL_S = 6
const GPIO_FUNC141_IN_SEL = 0x0000003F
const GPIO_FUNC141_IN_SEL_V = 0x3F
const GPIO_FUNC141_IN_SEL_S = 0
const GPIO_SIG142_IN_SEL_V = 0x1
const GPIO_SIG142_IN_SEL_S = 7
const GPIO_FUNC142_IN_INV_SEL_V = 0x1
const GPIO_FUNC142_IN_INV_SEL_S = 6
const GPIO_FUNC142_IN_SEL = 0x0000003F
const GPIO_FUNC142_IN_SEL_V = 0x3F
const GPIO_FUNC142_IN_SEL_S = 0
const GPIO_SIG143_IN_SEL_V = 0x1
const GPIO_SIG143_IN_SEL_S = 7
const GPIO_FUNC143_IN_INV_SEL_V = 0x1
const GPIO_FUNC143_IN_INV_SEL_S = 6
const GPIO_FUNC143_IN_SEL = 0x0000003F
const GPIO_FUNC143_IN_SEL_V = 0x3F
const GPIO_FUNC143_IN_SEL_S = 0
const GPIO_SIG144_IN_SEL_V = 0x1
const GPIO_SIG144_IN_SEL_S = 7
const GPIO_FUNC144_IN_INV_SEL_V = 0x1
const GPIO_FUNC144_IN_INV_SEL_S = 6
const GPIO_FUNC144_IN_SEL = 0x0000003F
const GPIO_FUNC144_IN_SEL_V = 0x3F
const GPIO_FUNC144_IN_SEL_S = 0
const GPIO_SIG145_IN_SEL_V = 0x1
const GPIO_SIG145_IN_SEL_S = 7
const GPIO_FUNC145_IN_INV_SEL_V = 0x1
const GPIO_FUNC145_IN_INV_SEL_S = 6
const GPIO_FUNC145_IN_SEL = 0x0000003F
const GPIO_FUNC145_IN_SEL_V = 0x3F
const GPIO_FUNC145_IN_SEL_S = 0
const GPIO_SIG146_IN_SEL_V = 0x1
const GPIO_SIG146_IN_SEL_S = 7
const GPIO_FUNC146_IN_INV_SEL_V = 0x1
const GPIO_FUNC146_IN_INV_SEL_S = 6
const GPIO_FUNC146_IN_SEL = 0x0000003F
const GPIO_FUNC146_IN_SEL_V = 0x3F
const GPIO_FUNC146_IN_SEL_S = 0
const GPIO_SIG147_IN_SEL_V = 0x1
const GPIO_SIG147_IN_SEL_S = 7
const GPIO_FUNC147_IN_INV_SEL_V = 0x1
const GPIO_FUNC147_IN_INV_SEL_S = 6
const GPIO_FUNC147_IN_SEL = 0x0000003F
const GPIO_FUNC147_IN_SEL_V = 0x3F
const GPIO_FUNC147_IN_SEL_S = 0
const GPIO_SIG148_IN_SEL_V = 0x1
const GPIO_SIG148_IN_SEL_S = 7
const GPIO_FUNC148_IN_INV_SEL_V = 0x1
const GPIO_FUNC148_IN_INV_SEL_S = 6
const GPIO_FUNC148_IN_SEL = 0x0000003F
const GPIO_FUNC148_IN_SEL_V = 0x3F
const GPIO_FUNC148_IN_SEL_S = 0
const GPIO_SIG149_IN_SEL_V = 0x1
const GPIO_SIG149_IN_SEL_S = 7
const GPIO_FUNC149_IN_INV_SEL_V = 0x1
const GPIO_FUNC149_IN_INV_SEL_S = 6
const GPIO_FUNC149_IN_SEL = 0x0000003F
const GPIO_FUNC149_IN_SEL_V = 0x3F
const GPIO_FUNC149_IN_SEL_S = 0
const GPIO_SIG150_IN_SEL_V = 0x1
const GPIO_SIG150_IN_SEL_S = 7
const GPIO_FUNC150_IN_INV_SEL_V = 0x1
const GPIO_FUNC150_IN_INV_SEL_S = 6
const GPIO_FUNC150_IN_SEL = 0x0000003F
const GPIO_FUNC150_IN_SEL_V = 0x3F
const GPIO_FUNC150_IN_SEL_S = 0
const GPIO_SIG151_IN_SEL_V = 0x1
const GPIO_SIG151_IN_SEL_S = 7
const GPIO_FUNC151_IN_INV_SEL_V = 0x1
const GPIO_FUNC151_IN_INV_SEL_S = 6
const GPIO_FUNC151_IN_SEL = 0x0000003F
const GPIO_FUNC151_IN_SEL_V = 0x3F
const GPIO_FUNC151_IN_SEL_S = 0
const GPIO_SIG152_IN_SEL_V = 0x1
const GPIO_SIG152_IN_SEL_S = 7
const GPIO_FUNC152_IN_INV_SEL_V = 0x1
const GPIO_FUNC152_IN_INV_SEL_S = 6
const GPIO_FUNC152_IN_SEL = 0x0000003F
const GPIO_FUNC152_IN_SEL_V = 0x3F
const GPIO_FUNC152_IN_SEL_S = 0
const GPIO_SIG153_IN_SEL_V = 0x1
const GPIO_SIG153_IN_SEL_S = 7
const GPIO_FUNC153_IN_INV_SEL_V = 0x1
const GPIO_FUNC153_IN_INV_SEL_S = 6
const GPIO_FUNC153_IN_SEL = 0x0000003F
const GPIO_FUNC153_IN_SEL_V = 0x3F
const GPIO_FUNC153_IN_SEL_S = 0
const GPIO_SIG154_IN_SEL_V = 0x1
const GPIO_SIG154_IN_SEL_S = 7
const GPIO_FUNC154_IN_INV_SEL_V = 0x1
const GPIO_FUNC154_IN_INV_SEL_S = 6
const GPIO_FUNC154_IN_SEL = 0x0000003F
const GPIO_FUNC154_IN_SEL_V = 0x3F
const GPIO_FUNC154_IN_SEL_S = 0
const GPIO_SIG155_IN_SEL_V = 0x1
const GPIO_SIG155_IN_SEL_S = 7
const GPIO_FUNC155_IN_INV_SEL_V = 0x1
const GPIO_FUNC155_IN_INV_SEL_S = 6
const GPIO_FUNC155_IN_SEL = 0x0000003F
const GPIO_FUNC155_IN_SEL_V = 0x3F
const GPIO_FUNC155_IN_SEL_S = 0
const GPIO_SIG156_IN_SEL_V = 0x1
const GPIO_SIG156_IN_SEL_S = 7
const GPIO_FUNC156_IN_INV_SEL_V = 0x1
const GPIO_FUNC156_IN_INV_SEL_S = 6
const GPIO_FUNC156_IN_SEL = 0x0000003F
const GPIO_FUNC156_IN_SEL_V = 0x3F
const GPIO_FUNC156_IN_SEL_S = 0
const GPIO_SIG157_IN_SEL_V = 0x1
const GPIO_SIG157_IN_SEL_S = 7
const GPIO_FUNC157_IN_INV_SEL_V = 0x1
const GPIO_FUNC157_IN_INV_SEL_S = 6
const GPIO_FUNC157_IN_SEL = 0x0000003F
const GPIO_FUNC157_IN_SEL_V = 0x3F
const GPIO_FUNC157_IN_SEL_S = 0
const GPIO_SIG158_IN_SEL_V = 0x1
const GPIO_SIG158_IN_SEL_S = 7
const GPIO_FUNC158_IN_INV_SEL_V = 0x1
const GPIO_FUNC158_IN_INV_SEL_S = 6
const GPIO_FUNC158_IN_SEL = 0x0000003F
const GPIO_FUNC158_IN_SEL_V = 0x3F
const GPIO_FUNC158_IN_SEL_S = 0
const GPIO_SIG159_IN_SEL_V = 0x1
const GPIO_SIG159_IN_SEL_S = 7
const GPIO_FUNC159_IN_INV_SEL_V = 0x1
const GPIO_FUNC159_IN_INV_SEL_S = 6
const GPIO_FUNC159_IN_SEL = 0x0000003F
const GPIO_FUNC159_IN_SEL_V = 0x3F
const GPIO_FUNC159_IN_SEL_S = 0
const GPIO_SIG160_IN_SEL_V = 0x1
const GPIO_SIG160_IN_SEL_S = 7
const GPIO_FUNC160_IN_INV_SEL_V = 0x1
const GPIO_FUNC160_IN_INV_SEL_S = 6
const GPIO_FUNC160_IN_SEL = 0x0000003F
const GPIO_FUNC160_IN_SEL_V = 0x3F
const GPIO_FUNC160_IN_SEL_S = 0
const GPIO_SIG161_IN_SEL_V = 0x1
const GPIO_SIG161_IN_SEL_S = 7
const GPIO_FUNC161_IN_INV_SEL_V = 0x1
const GPIO_FUNC161_IN_INV_SEL_S = 6
const GPIO_FUNC161_IN_SEL = 0x0000003F
const GPIO_FUNC161_IN_SEL_V = 0x3F
const GPIO_FUNC161_IN_SEL_S = 0
const GPIO_SIG162_IN_SEL_V = 0x1
const GPIO_SIG162_IN_SEL_S = 7
const GPIO_FUNC162_IN_INV_SEL_V = 0x1
const GPIO_FUNC162_IN_INV_SEL_S = 6
const GPIO_FUNC162_IN_SEL = 0x0000003F
const GPIO_FUNC162_IN_SEL_V = 0x3F
const GPIO_FUNC162_IN_SEL_S = 0
const GPIO_SIG163_IN_SEL_V = 0x1
const GPIO_SIG163_IN_SEL_S = 7
const GPIO_FUNC163_IN_INV_SEL_V = 0x1
const GPIO_FUNC163_IN_INV_SEL_S = 6
const GPIO_FUNC163_IN_SEL = 0x0000003F
const GPIO_FUNC163_IN_SEL_V = 0x3F
const GPIO_FUNC163_IN_SEL_S = 0
const GPIO_SIG164_IN_SEL_V = 0x1
const GPIO_SIG164_IN_SEL_S = 7
const GPIO_FUNC164_IN_INV_SEL_V = 0x1
const GPIO_FUNC164_IN_INV_SEL_S = 6
const GPIO_FUNC164_IN_SEL = 0x0000003F
const GPIO_FUNC164_IN_SEL_V = 0x3F
const GPIO_FUNC164_IN_SEL_S = 0
const GPIO_SIG165_IN_SEL_V = 0x1
const GPIO_SIG165_IN_SEL_S = 7
const GPIO_FUNC165_IN_INV_SEL_V = 0x1
const GPIO_FUNC165_IN_INV_SEL_S = 6
const GPIO_FUNC165_IN_SEL = 0x0000003F
const GPIO_FUNC165_IN_SEL_V = 0x3F
const GPIO_FUNC165_IN_SEL_S = 0
const GPIO_SIG166_IN_SEL_V = 0x1
const GPIO_SIG166_IN_SEL_S = 7
const GPIO_FUNC166_IN_INV_SEL_V = 0x1
const GPIO_FUNC166_IN_INV_SEL_S = 6
const GPIO_FUNC166_IN_SEL = 0x0000003F
const GPIO_FUNC166_IN_SEL_V = 0x3F
const GPIO_FUNC166_IN_SEL_S = 0
const GPIO_SIG167_IN_SEL_V = 0x1
const GPIO_SIG167_IN_SEL_S = 7
const GPIO_FUNC167_IN_INV_SEL_V = 0x1
const GPIO_FUNC167_IN_INV_SEL_S = 6
const GPIO_FUNC167_IN_SEL = 0x0000003F
const GPIO_FUNC167_IN_SEL_V = 0x3F
const GPIO_FUNC167_IN_SEL_S = 0
const GPIO_SIG168_IN_SEL_V = 0x1
const GPIO_SIG168_IN_SEL_S = 7
const GPIO_FUNC168_IN_INV_SEL_V = 0x1
const GPIO_FUNC168_IN_INV_SEL_S = 6
const GPIO_FUNC168_IN_SEL = 0x0000003F
const GPIO_FUNC168_IN_SEL_V = 0x3F
const GPIO_FUNC168_IN_SEL_S = 0
const GPIO_SIG169_IN_SEL_V = 0x1
const GPIO_SIG169_IN_SEL_S = 7
const GPIO_FUNC169_IN_INV_SEL_V = 0x1
const GPIO_FUNC169_IN_INV_SEL_S = 6
const GPIO_FUNC169_IN_SEL = 0x0000003F
const GPIO_FUNC169_IN_SEL_V = 0x3F
const GPIO_FUNC169_IN_SEL_S = 0
const GPIO_SIG170_IN_SEL_V = 0x1
const GPIO_SIG170_IN_SEL_S = 7
const GPIO_FUNC170_IN_INV_SEL_V = 0x1
const GPIO_FUNC170_IN_INV_SEL_S = 6
const GPIO_FUNC170_IN_SEL = 0x0000003F
const GPIO_FUNC170_IN_SEL_V = 0x3F
const GPIO_FUNC170_IN_SEL_S = 0
const GPIO_SIG171_IN_SEL_V = 0x1
const GPIO_SIG171_IN_SEL_S = 7
const GPIO_FUNC171_IN_INV_SEL_V = 0x1
const GPIO_FUNC171_IN_INV_SEL_S = 6
const GPIO_FUNC171_IN_SEL = 0x0000003F
const GPIO_FUNC171_IN_SEL_V = 0x3F
const GPIO_FUNC171_IN_SEL_S = 0
const GPIO_SIG172_IN_SEL_V = 0x1
const GPIO_SIG172_IN_SEL_S = 7
const GPIO_FUNC172_IN_INV_SEL_V = 0x1
const GPIO_FUNC172_IN_INV_SEL_S = 6
const GPIO_FUNC172_IN_SEL = 0x0000003F
const GPIO_FUNC172_IN_SEL_V = 0x3F
const GPIO_FUNC172_IN_SEL_S = 0
const GPIO_SIG173_IN_SEL_V = 0x1
const GPIO_SIG173_IN_SEL_S = 7
const GPIO_FUNC173_IN_INV_SEL_V = 0x1
const GPIO_FUNC173_IN_INV_SEL_S = 6
const GPIO_FUNC173_IN_SEL = 0x0000003F
const GPIO_FUNC173_IN_SEL_V = 0x3F
const GPIO_FUNC173_IN_SEL_S = 0
const GPIO_SIG174_IN_SEL_V = 0x1
const GPIO_SIG174_IN_SEL_S = 7
const GPIO_FUNC174_IN_INV_SEL_V = 0x1
const GPIO_FUNC174_IN_INV_SEL_S = 6
const GPIO_FUNC174_IN_SEL = 0x0000003F
const GPIO_FUNC174_IN_SEL_V = 0x3F
const GPIO_FUNC174_IN_SEL_S = 0
const GPIO_SIG175_IN_SEL_V = 0x1
const GPIO_SIG175_IN_SEL_S = 7
const GPIO_FUNC175_IN_INV_SEL_V = 0x1
const GPIO_FUNC175_IN_INV_SEL_S = 6
const GPIO_FUNC175_IN_SEL = 0x0000003F
const GPIO_FUNC175_IN_SEL_V = 0x3F
const GPIO_FUNC175_IN_SEL_S = 0
const GPIO_SIG176_IN_SEL_V = 0x1
const GPIO_SIG176_IN_SEL_S = 7
const GPIO_FUNC176_IN_INV_SEL_V = 0x1
const GPIO_FUNC176_IN_INV_SEL_S = 6
const GPIO_FUNC176_IN_SEL = 0x0000003F
const GPIO_FUNC176_IN_SEL_V = 0x3F
const GPIO_FUNC176_IN_SEL_S = 0
const GPIO_SIG177_IN_SEL_V = 0x1
const GPIO_SIG177_IN_SEL_S = 7
const GPIO_FUNC177_IN_INV_SEL_V = 0x1
const GPIO_FUNC177_IN_INV_SEL_S = 6
const GPIO_FUNC177_IN_SEL = 0x0000003F
const GPIO_FUNC177_IN_SEL_V = 0x3F
const GPIO_FUNC177_IN_SEL_S = 0
const GPIO_SIG178_IN_SEL_V = 0x1
const GPIO_SIG178_IN_SEL_S = 7
const GPIO_FUNC178_IN_INV_SEL_V = 0x1
const GPIO_FUNC178_IN_INV_SEL_S = 6
const GPIO_FUNC178_IN_SEL = 0x0000003F
const GPIO_FUNC178_IN_SEL_V = 0x3F
const GPIO_FUNC178_IN_SEL_S = 0
const GPIO_SIG179_IN_SEL_V = 0x1
const GPIO_SIG179_IN_SEL_S = 7
const GPIO_FUNC179_IN_INV_SEL_V = 0x1
const GPIO_FUNC179_IN_INV_SEL_S = 6
const GPIO_FUNC179_IN_SEL = 0x0000003F
const GPIO_FUNC179_IN_SEL_V = 0x3F
const GPIO_FUNC179_IN_SEL_S = 0
const GPIO_SIG180_IN_SEL_V = 0x1
const GPIO_SIG180_IN_SEL_S = 7
const GPIO_FUNC180_IN_INV_SEL_V = 0x1
const GPIO_FUNC180_IN_INV_SEL_S = 6
const GPIO_FUNC180_IN_SEL = 0x0000003F
const GPIO_FUNC180_IN_SEL_V = 0x3F
const GPIO_FUNC180_IN_SEL_S = 0
const GPIO_SIG181_IN_SEL_V = 0x1
const GPIO_SIG181_IN_SEL_S = 7
const GPIO_FUNC181_IN_INV_SEL_V = 0x1
const GPIO_FUNC181_IN_INV_SEL_S = 6
const GPIO_FUNC181_IN_SEL = 0x0000003F
const GPIO_FUNC181_IN_SEL_V = 0x3F
const GPIO_FUNC181_IN_SEL_S = 0
const GPIO_SIG182_IN_SEL_V = 0x1
const GPIO_SIG182_IN_SEL_S = 7
const GPIO_FUNC182_IN_INV_SEL_V = 0x1
const GPIO_FUNC182_IN_INV_SEL_S = 6
const GPIO_FUNC182_IN_SEL = 0x0000003F
const GPIO_FUNC182_IN_SEL_V = 0x3F
const GPIO_FUNC182_IN_SEL_S = 0
const GPIO_SIG183_IN_SEL_V = 0x1
const GPIO_SIG183_IN_SEL_S = 7
const GPIO_FUNC183_IN_INV_SEL_V = 0x1
const GPIO_FUNC183_IN_INV_SEL_S = 6
const GPIO_FUNC183_IN_SEL = 0x0000003F
const GPIO_FUNC183_IN_SEL_V = 0x3F
const GPIO_FUNC183_IN_SEL_S = 0
const GPIO_SIG184_IN_SEL_V = 0x1
const GPIO_SIG184_IN_SEL_S = 7
const GPIO_FUNC184_IN_INV_SEL_V = 0x1
const GPIO_FUNC184_IN_INV_SEL_S = 6
const GPIO_FUNC184_IN_SEL = 0x0000003F
const GPIO_FUNC184_IN_SEL_V = 0x3F
const GPIO_FUNC184_IN_SEL_S = 0
const GPIO_SIG185_IN_SEL_V = 0x1
const GPIO_SIG185_IN_SEL_S = 7
const GPIO_FUNC185_IN_INV_SEL_V = 0x1
const GPIO_FUNC185_IN_INV_SEL_S = 6
const GPIO_FUNC185_IN_SEL = 0x0000003F
const GPIO_FUNC185_IN_SEL_V = 0x3F
const GPIO_FUNC185_IN_SEL_S = 0
const GPIO_SIG186_IN_SEL_V = 0x1
const GPIO_SIG186_IN_SEL_S = 7
const GPIO_FUNC186_IN_INV_SEL_V = 0x1
const GPIO_FUNC186_IN_INV_SEL_S = 6
const GPIO_FUNC186_IN_SEL = 0x0000003F
const GPIO_FUNC186_IN_SEL_V = 0x3F
const GPIO_FUNC186_IN_SEL_S = 0
const GPIO_SIG187_IN_SEL_V = 0x1
const GPIO_SIG187_IN_SEL_S = 7
const GPIO_FUNC187_IN_INV_SEL_V = 0x1
const GPIO_FUNC187_IN_INV_SEL_S = 6
const GPIO_FUNC187_IN_SEL = 0x0000003F
const GPIO_FUNC187_IN_SEL_V = 0x3F
const GPIO_FUNC187_IN_SEL_S = 0
const GPIO_SIG188_IN_SEL_V = 0x1
const GPIO_SIG188_IN_SEL_S = 7
const GPIO_FUNC188_IN_INV_SEL_V = 0x1
const GPIO_FUNC188_IN_INV_SEL_S = 6
const GPIO_FUNC188_IN_SEL = 0x0000003F
const GPIO_FUNC188_IN_SEL_V = 0x3F
const GPIO_FUNC188_IN_SEL_S = 0
const GPIO_SIG189_IN_SEL_V = 0x1
const GPIO_SIG189_IN_SEL_S = 7
const GPIO_FUNC189_IN_INV_SEL_V = 0x1
const GPIO_FUNC189_IN_INV_SEL_S = 6
const GPIO_FUNC189_IN_SEL = 0x0000003F
const GPIO_FUNC189_IN_SEL_V = 0x3F
const GPIO_FUNC189_IN_SEL_S = 0
const GPIO_SIG190_IN_SEL_V = 0x1
const GPIO_SIG190_IN_SEL_S = 7
const GPIO_FUNC190_IN_INV_SEL_V = 0x1
const GPIO_FUNC190_IN_INV_SEL_S = 6
const GPIO_FUNC190_IN_SEL = 0x0000003F
const GPIO_FUNC190_IN_SEL_V = 0x3F
const GPIO_FUNC190_IN_SEL_S = 0
const GPIO_SIG191_IN_SEL_V = 0x1
const GPIO_SIG191_IN_SEL_S = 7
const GPIO_FUNC191_IN_INV_SEL_V = 0x1
const GPIO_FUNC191_IN_INV_SEL_S = 6
const GPIO_FUNC191_IN_SEL = 0x0000003F
const GPIO_FUNC191_IN_SEL_V = 0x3F
const GPIO_FUNC191_IN_SEL_S = 0
const GPIO_SIG192_IN_SEL_V = 0x1
const GPIO_SIG192_IN_SEL_S = 7
const GPIO_FUNC192_IN_INV_SEL_V = 0x1
const GPIO_FUNC192_IN_INV_SEL_S = 6
const GPIO_FUNC192_IN_SEL = 0x0000003F
const GPIO_FUNC192_IN_SEL_V = 0x3F
const GPIO_FUNC192_IN_SEL_S = 0
const GPIO_SIG193_IN_SEL_V = 0x1
const GPIO_SIG193_IN_SEL_S = 7
const GPIO_FUNC193_IN_INV_SEL_V = 0x1
const GPIO_FUNC193_IN_INV_SEL_S = 6
const GPIO_FUNC193_IN_SEL = 0x0000003F
const GPIO_FUNC193_IN_SEL_V = 0x3F
const GPIO_FUNC193_IN_SEL_S = 0
const GPIO_SIG194_IN_SEL_V = 0x1
const GPIO_SIG194_IN_SEL_S = 7
const GPIO_FUNC194_IN_INV_SEL_V = 0x1
const GPIO_FUNC194_IN_INV_SEL_S = 6
const GPIO_FUNC194_IN_SEL = 0x0000003F
const GPIO_FUNC194_IN_SEL_V = 0x3F
const GPIO_FUNC194_IN_SEL_S = 0
const GPIO_SIG195_IN_SEL_V = 0x1
const GPIO_SIG195_IN_SEL_S = 7
const GPIO_FUNC195_IN_INV_SEL_V = 0x1
const GPIO_FUNC195_IN_INV_SEL_S = 6
const GPIO_FUNC195_IN_SEL = 0x0000003F
const GPIO_FUNC195_IN_SEL_V = 0x3F
const GPIO_FUNC195_IN_SEL_S = 0
const GPIO_SIG196_IN_SEL_V = 0x1
const GPIO_SIG196_IN_SEL_S = 7
const GPIO_FUNC196_IN_INV_SEL_V = 0x1
const GPIO_FUNC196_IN_INV_SEL_S = 6
const GPIO_FUNC196_IN_SEL = 0x0000003F
const GPIO_FUNC196_IN_SEL_V = 0x3F
const GPIO_FUNC196_IN_SEL_S = 0
const GPIO_SIG197_IN_SEL_V = 0x1
const GPIO_SIG197_IN_SEL_S = 7
const GPIO_FUNC197_IN_INV_SEL_V = 0x1
const GPIO_FUNC197_IN_INV_SEL_S = 6
const GPIO_FUNC197_IN_SEL = 0x0000003F
const GPIO_FUNC197_IN_SEL_V = 0x3F
const GPIO_FUNC197_IN_SEL_S = 0
const GPIO_SIG198_IN_SEL_V = 0x1
const GPIO_SIG198_IN_SEL_S = 7
const GPIO_FUNC198_IN_INV_SEL_V = 0x1
const GPIO_FUNC198_IN_INV_SEL_S = 6
const GPIO_FUNC198_IN_SEL = 0x0000003F
const GPIO_FUNC198_IN_SEL_V = 0x3F
const GPIO_FUNC198_IN_SEL_S = 0
const GPIO_SIG199_IN_SEL_V = 0x1
const GPIO_SIG199_IN_SEL_S = 7
const GPIO_FUNC199_IN_INV_SEL_V = 0x1
const GPIO_FUNC199_IN_INV_SEL_S = 6
const GPIO_FUNC199_IN_SEL = 0x0000003F
const GPIO_FUNC199_IN_SEL_V = 0x3F
const GPIO_FUNC199_IN_SEL_S = 0
const GPIO_SIG200_IN_SEL_V = 0x1
const GPIO_SIG200_IN_SEL_S = 7
const GPIO_FUNC200_IN_INV_SEL_V = 0x1
const GPIO_FUNC200_IN_INV_SEL_S = 6
const GPIO_FUNC200_IN_SEL = 0x0000003F
const GPIO_FUNC200_IN_SEL_V = 0x3F
const GPIO_FUNC200_IN_SEL_S = 0
const GPIO_SIG201_IN_SEL_V = 0x1
const GPIO_SIG201_IN_SEL_S = 7
const GPIO_FUNC201_IN_INV_SEL_V = 0x1
const GPIO_FUNC201_IN_INV_SEL_S = 6
const GPIO_FUNC201_IN_SEL = 0x0000003F
const GPIO_FUNC201_IN_SEL_V = 0x3F
const GPIO_FUNC201_IN_SEL_S = 0
const GPIO_SIG202_IN_SEL_V = 0x1
const GPIO_SIG202_IN_SEL_S = 7
const GPIO_FUNC202_IN_INV_SEL_V = 0x1
const GPIO_FUNC202_IN_INV_SEL_S = 6
const GPIO_FUNC202_IN_SEL = 0x0000003F
const GPIO_FUNC202_IN_SEL_V = 0x3F
const GPIO_FUNC202_IN_SEL_S = 0
const GPIO_SIG203_IN_SEL_V = 0x1
const GPIO_SIG203_IN_SEL_S = 7
const GPIO_FUNC203_IN_INV_SEL_V = 0x1
const GPIO_FUNC203_IN_INV_SEL_S = 6
const GPIO_FUNC203_IN_SEL = 0x0000003F
const GPIO_FUNC203_IN_SEL_V = 0x3F
const GPIO_FUNC203_IN_SEL_S = 0
const GPIO_SIG204_IN_SEL_V = 0x1
const GPIO_SIG204_IN_SEL_S = 7
const GPIO_FUNC204_IN_INV_SEL_V = 0x1
const GPIO_FUNC204_IN_INV_SEL_S = 6
const GPIO_FUNC204_IN_SEL = 0x0000003F
const GPIO_FUNC204_IN_SEL_V = 0x3F
const GPIO_FUNC204_IN_SEL_S = 0
const GPIO_SIG205_IN_SEL_V = 0x1
const GPIO_SIG205_IN_SEL_S = 7
const GPIO_FUNC205_IN_INV_SEL_V = 0x1
const GPIO_FUNC205_IN_INV_SEL_S = 6
const GPIO_FUNC205_IN_SEL = 0x0000003F
const GPIO_FUNC205_IN_SEL_V = 0x3F
const GPIO_FUNC205_IN_SEL_S = 0
const GPIO_SIG206_IN_SEL_V = 0x1
const GPIO_SIG206_IN_SEL_S = 7
const GPIO_FUNC206_IN_INV_SEL_V = 0x1
const GPIO_FUNC206_IN_INV_SEL_S = 6
const GPIO_FUNC206_IN_SEL = 0x0000003F
const GPIO_FUNC206_IN_SEL_V = 0x3F
const GPIO_FUNC206_IN_SEL_S = 0
const GPIO_SIG207_IN_SEL_V = 0x1
const GPIO_SIG207_IN_SEL_S = 7
const GPIO_FUNC207_IN_INV_SEL_V = 0x1
const GPIO_FUNC207_IN_INV_SEL_S = 6
const GPIO_FUNC207_IN_SEL = 0x0000003F
const GPIO_FUNC207_IN_SEL_V = 0x3F
const GPIO_FUNC207_IN_SEL_S = 0
const GPIO_SIG208_IN_SEL_V = 0x1
const GPIO_SIG208_IN_SEL_S = 7
const GPIO_FUNC208_IN_INV_SEL_V = 0x1
const GPIO_FUNC208_IN_INV_SEL_S = 6
const GPIO_FUNC208_IN_SEL = 0x0000003F
const GPIO_FUNC208_IN_SEL_V = 0x3F
const GPIO_FUNC208_IN_SEL_S = 0
const GPIO_SIG209_IN_SEL_V = 0x1
const GPIO_SIG209_IN_SEL_S = 7
const GPIO_FUNC209_IN_INV_SEL_V = 0x1
const GPIO_FUNC209_IN_INV_SEL_S = 6
const GPIO_FUNC209_IN_SEL = 0x0000003F
const GPIO_FUNC209_IN_SEL_V = 0x3F
const GPIO_FUNC209_IN_SEL_S = 0
const GPIO_SIG210_IN_SEL_V = 0x1
const GPIO_SIG210_IN_SEL_S = 7
const GPIO_FUNC210_IN_INV_SEL_V = 0x1
const GPIO_FUNC210_IN_INV_SEL_S = 6
const GPIO_FUNC210_IN_SEL = 0x0000003F
const GPIO_FUNC210_IN_SEL_V = 0x3F
const GPIO_FUNC210_IN_SEL_S = 0
const GPIO_SIG211_IN_SEL_V = 0x1
const GPIO_SIG211_IN_SEL_S = 7
const GPIO_FUNC211_IN_INV_SEL_V = 0x1
const GPIO_FUNC211_IN_INV_SEL_S = 6
const GPIO_FUNC211_IN_SEL = 0x0000003F
const GPIO_FUNC211_IN_SEL_V = 0x3F
const GPIO_FUNC211_IN_SEL_S = 0
const GPIO_SIG212_IN_SEL_V = 0x1
const GPIO_SIG212_IN_SEL_S = 7
const GPIO_FUNC212_IN_INV_SEL_V = 0x1
const GPIO_FUNC212_IN_INV_SEL_S = 6
const GPIO_FUNC212_IN_SEL = 0x0000003F
const GPIO_FUNC212_IN_SEL_V = 0x3F
const GPIO_FUNC212_IN_SEL_S = 0
const GPIO_SIG213_IN_SEL_V = 0x1
const GPIO_SIG213_IN_SEL_S = 7
const GPIO_FUNC213_IN_INV_SEL_V = 0x1
const GPIO_FUNC213_IN_INV_SEL_S = 6
const GPIO_FUNC213_IN_SEL = 0x0000003F
const GPIO_FUNC213_IN_SEL_V = 0x3F
const GPIO_FUNC213_IN_SEL_S = 0
const GPIO_SIG214_IN_SEL_V = 0x1
const GPIO_SIG214_IN_SEL_S = 7
const GPIO_FUNC214_IN_INV_SEL_V = 0x1
const GPIO_FUNC214_IN_INV_SEL_S = 6
const GPIO_FUNC214_IN_SEL = 0x0000003F
const GPIO_FUNC214_IN_SEL_V = 0x3F
const GPIO_FUNC214_IN_SEL_S = 0
const GPIO_SIG215_IN_SEL_V = 0x1
const GPIO_SIG215_IN_SEL_S = 7
const GPIO_FUNC215_IN_INV_SEL_V = 0x1
const GPIO_FUNC215_IN_INV_SEL_S = 6
const GPIO_FUNC215_IN_SEL = 0x0000003F
const GPIO_FUNC215_IN_SEL_V = 0x3F
const GPIO_FUNC215_IN_SEL_S = 0
const GPIO_SIG216_IN_SEL_V = 0x1
const GPIO_SIG216_IN_SEL_S = 7
const GPIO_FUNC216_IN_INV_SEL_V = 0x1
const GPIO_FUNC216_IN_INV_SEL_S = 6
const GPIO_FUNC216_IN_SEL = 0x0000003F
const GPIO_FUNC216_IN_SEL_V = 0x3F
const GPIO_FUNC216_IN_SEL_S = 0
const GPIO_SIG217_IN_SEL_V = 0x1
const GPIO_SIG217_IN_SEL_S = 7
const GPIO_FUNC217_IN_INV_SEL_V = 0x1
const GPIO_FUNC217_IN_INV_SEL_S = 6
const GPIO_FUNC217_IN_SEL = 0x0000003F
const GPIO_FUNC217_IN_SEL_V = 0x3F
const GPIO_FUNC217_IN_SEL_S = 0
const GPIO_SIG218_IN_SEL_V = 0x1
const GPIO_SIG218_IN_SEL_S = 7
const GPIO_FUNC218_IN_INV_SEL_V = 0x1
const GPIO_FUNC218_IN_INV_SEL_S = 6
const GPIO_FUNC218_IN_SEL = 0x0000003F
const GPIO_FUNC218_IN_SEL_V = 0x3F
const GPIO_FUNC218_IN_SEL_S = 0
const GPIO_SIG219_IN_SEL_V = 0x1
const GPIO_SIG219_IN_SEL_S = 7
const GPIO_FUNC219_IN_INV_SEL_V = 0x1
const GPIO_FUNC219_IN_INV_SEL_S = 6
const GPIO_FUNC219_IN_SEL = 0x0000003F
const GPIO_FUNC219_IN_SEL_V = 0x3F
const GPIO_FUNC219_IN_SEL_S = 0
const GPIO_SIG220_IN_SEL_V = 0x1
const GPIO_SIG220_IN_SEL_S = 7
const GPIO_FUNC220_IN_INV_SEL_V = 0x1
const GPIO_FUNC220_IN_INV_SEL_S = 6
const GPIO_FUNC220_IN_SEL = 0x0000003F
const GPIO_FUNC220_IN_SEL_V = 0x3F
const GPIO_FUNC220_IN_SEL_S = 0
const GPIO_SIG221_IN_SEL_V = 0x1
const GPIO_SIG221_IN_SEL_S = 7
const GPIO_FUNC221_IN_INV_SEL_V = 0x1
const GPIO_FUNC221_IN_INV_SEL_S = 6
const GPIO_FUNC221_IN_SEL = 0x0000003F
const GPIO_FUNC221_IN_SEL_V = 0x3F
const GPIO_FUNC221_IN_SEL_S = 0
const GPIO_SIG222_IN_SEL_V = 0x1
const GPIO_SIG222_IN_SEL_S = 7
const GPIO_FUNC222_IN_INV_SEL_V = 0x1
const GPIO_FUNC222_IN_INV_SEL_S = 6
const GPIO_FUNC222_IN_SEL = 0x0000003F
const GPIO_FUNC222_IN_SEL_V = 0x3F
const GPIO_FUNC222_IN_SEL_S = 0
const GPIO_SIG223_IN_SEL_V = 0x1
const GPIO_SIG223_IN_SEL_S = 7
const GPIO_FUNC223_IN_INV_SEL_V = 0x1
const GPIO_FUNC223_IN_INV_SEL_S = 6
const GPIO_FUNC223_IN_SEL = 0x0000003F
const GPIO_FUNC223_IN_SEL_V = 0x3F
const GPIO_FUNC223_IN_SEL_S = 0
const GPIO_SIG224_IN_SEL_V = 0x1
const GPIO_SIG224_IN_SEL_S = 7
const GPIO_FUNC224_IN_INV_SEL_V = 0x1
const GPIO_FUNC224_IN_INV_SEL_S = 6
const GPIO_FUNC224_IN_SEL = 0x0000003F
const GPIO_FUNC224_IN_SEL_V = 0x3F
const GPIO_FUNC224_IN_SEL_S = 0
const GPIO_SIG225_IN_SEL_V = 0x1
const GPIO_SIG225_IN_SEL_S = 7
const GPIO_FUNC225_IN_INV_SEL_V = 0x1
const GPIO_FUNC225_IN_INV_SEL_S = 6
const GPIO_FUNC225_IN_SEL = 0x0000003F
const GPIO_FUNC225_IN_SEL_V = 0x3F
const GPIO_FUNC225_IN_SEL_S = 0
const GPIO_SIG226_IN_SEL_V = 0x1
const GPIO_SIG226_IN_SEL_S = 7
const GPIO_FUNC226_IN_INV_SEL_V = 0x1
const GPIO_FUNC226_IN_INV_SEL_S = 6
const GPIO_FUNC226_IN_SEL = 0x0000003F
const GPIO_FUNC226_IN_SEL_V = 0x3F
const GPIO_FUNC226_IN_SEL_S = 0
const GPIO_SIG227_IN_SEL_V = 0x1
const GPIO_SIG227_IN_SEL_S = 7
const GPIO_FUNC227_IN_INV_SEL_V = 0x1
const GPIO_FUNC227_IN_INV_SEL_S = 6
const GPIO_FUNC227_IN_SEL = 0x0000003F
const GPIO_FUNC227_IN_SEL_V = 0x3F
const GPIO_FUNC227_IN_SEL_S = 0
const GPIO_SIG228_IN_SEL_V = 0x1
const GPIO_SIG228_IN_SEL_S = 7
const GPIO_FUNC228_IN_INV_SEL_V = 0x1
const GPIO_FUNC228_IN_INV_SEL_S = 6
const GPIO_FUNC228_IN_SEL = 0x0000003F
const GPIO_FUNC228_IN_SEL_V = 0x3F
const GPIO_FUNC228_IN_SEL_S = 0
const GPIO_SIG229_IN_SEL_V = 0x1
const GPIO_SIG229_IN_SEL_S = 7
const GPIO_FUNC229_IN_INV_SEL_V = 0x1
const GPIO_FUNC229_IN_INV_SEL_S = 6
const GPIO_FUNC229_IN_SEL = 0x0000003F
const GPIO_FUNC229_IN_SEL_V = 0x3F
const GPIO_FUNC229_IN_SEL_S = 0
const GPIO_SIG230_IN_SEL_V = 0x1
const GPIO_SIG230_IN_SEL_S = 7
const GPIO_FUNC230_IN_INV_SEL_V = 0x1
const GPIO_FUNC230_IN_INV_SEL_S = 6
const GPIO_FUNC230_IN_SEL = 0x0000003F
const GPIO_FUNC230_IN_SEL_V = 0x3F
const GPIO_FUNC230_IN_SEL_S = 0
const GPIO_SIG231_IN_SEL_V = 0x1
const GPIO_SIG231_IN_SEL_S = 7
const GPIO_FUNC231_IN_INV_SEL_V = 0x1
const GPIO_FUNC231_IN_INV_SEL_S = 6
const GPIO_FUNC231_IN_SEL = 0x0000003F
const GPIO_FUNC231_IN_SEL_V = 0x3F
const GPIO_FUNC231_IN_SEL_S = 0
const GPIO_SIG232_IN_SEL_V = 0x1
const GPIO_SIG232_IN_SEL_S = 7
const GPIO_FUNC232_IN_INV_SEL_V = 0x1
const GPIO_FUNC232_IN_INV_SEL_S = 6
const GPIO_FUNC232_IN_SEL = 0x0000003F
const GPIO_FUNC232_IN_SEL_V = 0x3F
const GPIO_FUNC232_IN_SEL_S = 0
const GPIO_SIG233_IN_SEL_V = 0x1
const GPIO_SIG233_IN_SEL_S = 7
const GPIO_FUNC233_IN_INV_SEL_V = 0x1
const GPIO_FUNC233_IN_INV_SEL_S = 6
const GPIO_FUNC233_IN_SEL = 0x0000003F
const GPIO_FUNC233_IN_SEL_V = 0x3F
const GPIO_FUNC233_IN_SEL_S = 0
const GPIO_SIG234_IN_SEL_V = 0x1
const GPIO_SIG234_IN_SEL_S = 7
const GPIO_FUNC234_IN_INV_SEL_V = 0x1
const GPIO_FUNC234_IN_INV_SEL_S = 6
const GPIO_FUNC234_IN_SEL = 0x0000003F
const GPIO_FUNC234_IN_SEL_V = 0x3F
const GPIO_FUNC234_IN_SEL_S = 0
const GPIO_SIG235_IN_SEL_V = 0x1
const GPIO_SIG235_IN_SEL_S = 7
const GPIO_FUNC235_IN_INV_SEL_V = 0x1
const GPIO_FUNC235_IN_INV_SEL_S = 6
const GPIO_FUNC235_IN_SEL = 0x0000003F
const GPIO_FUNC235_IN_SEL_V = 0x3F
const GPIO_FUNC235_IN_SEL_S = 0
const GPIO_SIG236_IN_SEL_V = 0x1
const GPIO_SIG236_IN_SEL_S = 7
const GPIO_FUNC236_IN_INV_SEL_V = 0x1
const GPIO_FUNC236_IN_INV_SEL_S = 6
const GPIO_FUNC236_IN_SEL = 0x0000003F
const GPIO_FUNC236_IN_SEL_V = 0x3F
const GPIO_FUNC236_IN_SEL_S = 0
const GPIO_SIG237_IN_SEL_V = 0x1
const GPIO_SIG237_IN_SEL_S = 7
const GPIO_FUNC237_IN_INV_SEL_V = 0x1
const GPIO_FUNC237_IN_INV_SEL_S = 6
const GPIO_FUNC237_IN_SEL = 0x0000003F
const GPIO_FUNC237_IN_SEL_V = 0x3F
const GPIO_FUNC237_IN_SEL_S = 0
const GPIO_SIG238_IN_SEL_V = 0x1
const GPIO_SIG238_IN_SEL_S = 7
const GPIO_FUNC238_IN_INV_SEL_V = 0x1
const GPIO_FUNC238_IN_INV_SEL_S = 6
const GPIO_FUNC238_IN_SEL = 0x0000003F
const GPIO_FUNC238_IN_SEL_V = 0x3F
const GPIO_FUNC238_IN_SEL_S = 0
const GPIO_SIG239_IN_SEL_V = 0x1
const GPIO_SIG239_IN_SEL_S = 7
const GPIO_FUNC239_IN_INV_SEL_V = 0x1
const GPIO_FUNC239_IN_INV_SEL_S = 6
const GPIO_FUNC239_IN_SEL = 0x0000003F
const GPIO_FUNC239_IN_SEL_V = 0x3F
const GPIO_FUNC239_IN_SEL_S = 0
const GPIO_SIG240_IN_SEL_V = 0x1
const GPIO_SIG240_IN_SEL_S = 7
const GPIO_FUNC240_IN_INV_SEL_V = 0x1
const GPIO_FUNC240_IN_INV_SEL_S = 6
const GPIO_FUNC240_IN_SEL = 0x0000003F
const GPIO_FUNC240_IN_SEL_V = 0x3F
const GPIO_FUNC240_IN_SEL_S = 0
const GPIO_SIG241_IN_SEL_V = 0x1
const GPIO_SIG241_IN_SEL_S = 7
const GPIO_FUNC241_IN_INV_SEL_V = 0x1
const GPIO_FUNC241_IN_INV_SEL_S = 6
const GPIO_FUNC241_IN_SEL = 0x0000003F
const GPIO_FUNC241_IN_SEL_V = 0x3F
const GPIO_FUNC241_IN_SEL_S = 0
const GPIO_SIG242_IN_SEL_V = 0x1
const GPIO_SIG242_IN_SEL_S = 7
const GPIO_FUNC242_IN_INV_SEL_V = 0x1
const GPIO_FUNC242_IN_INV_SEL_S = 6
const GPIO_FUNC242_IN_SEL = 0x0000003F
const GPIO_FUNC242_IN_SEL_V = 0x3F
const GPIO_FUNC242_IN_SEL_S = 0
const GPIO_SIG243_IN_SEL_V = 0x1
const GPIO_SIG243_IN_SEL_S = 7
const GPIO_FUNC243_IN_INV_SEL_V = 0x1
const GPIO_FUNC243_IN_INV_SEL_S = 6
const GPIO_FUNC243_IN_SEL = 0x0000003F
const GPIO_FUNC243_IN_SEL_V = 0x3F
const GPIO_FUNC243_IN_SEL_S = 0
const GPIO_SIG244_IN_SEL_V = 0x1
const GPIO_SIG244_IN_SEL_S = 7
const GPIO_FUNC244_IN_INV_SEL_V = 0x1
const GPIO_FUNC244_IN_INV_SEL_S = 6
const GPIO_FUNC244_IN_SEL = 0x0000003F
const GPIO_FUNC244_IN_SEL_V = 0x3F
const GPIO_FUNC244_IN_SEL_S = 0
const GPIO_SIG245_IN_SEL_V = 0x1
const GPIO_SIG245_IN_SEL_S = 7
const GPIO_FUNC245_IN_INV_SEL_V = 0x1
const GPIO_FUNC245_IN_INV_SEL_S = 6
const GPIO_FUNC245_IN_SEL = 0x0000003F
const GPIO_FUNC245_IN_SEL_V = 0x3F
const GPIO_FUNC245_IN_SEL_S = 0
const GPIO_SIG246_IN_SEL_V = 0x1
const GPIO_SIG246_IN_SEL_S = 7
const GPIO_FUNC246_IN_INV_SEL_V = 0x1
const GPIO_FUNC246_IN_INV_SEL_S = 6
const GPIO_FUNC246_IN_SEL = 0x0000003F
const GPIO_FUNC246_IN_SEL_V = 0x3F
const GPIO_FUNC246_IN_SEL_S = 0
const GPIO_SIG247_IN_SEL_V = 0x1
const GPIO_SIG247_IN_SEL_S = 7
const GPIO_FUNC247_IN_INV_SEL_V = 0x1
const GPIO_FUNC247_IN_INV_SEL_S = 6
const GPIO_FUNC247_IN_SEL = 0x0000003F
const GPIO_FUNC247_IN_SEL_V = 0x3F
const GPIO_FUNC247_IN_SEL_S = 0
const GPIO_SIG248_IN_SEL_V = 0x1
const GPIO_SIG248_IN_SEL_S = 7
const GPIO_FUNC248_IN_INV_SEL_V = 0x1
const GPIO_FUNC248_IN_INV_SEL_S = 6
const GPIO_FUNC248_IN_SEL = 0x0000003F
const GPIO_FUNC248_IN_SEL_V = 0x3F
const GPIO_FUNC248_IN_SEL_S = 0
const GPIO_SIG249_IN_SEL_V = 0x1
const GPIO_SIG249_IN_SEL_S = 7
const GPIO_FUNC249_IN_INV_SEL_V = 0x1
const GPIO_FUNC249_IN_INV_SEL_S = 6
const GPIO_FUNC249_IN_SEL = 0x0000003F
const GPIO_FUNC249_IN_SEL_V = 0x3F
const GPIO_FUNC249_IN_SEL_S = 0
const GPIO_SIG250_IN_SEL_V = 0x1
const GPIO_SIG250_IN_SEL_S = 7
const GPIO_FUNC250_IN_INV_SEL_V = 0x1
const GPIO_FUNC250_IN_INV_SEL_S = 6
const GPIO_FUNC250_IN_SEL = 0x0000003F
const GPIO_FUNC250_IN_SEL_V = 0x3F
const GPIO_FUNC250_IN_SEL_S = 0
const GPIO_SIG251_IN_SEL_V = 0x1
const GPIO_SIG251_IN_SEL_S = 7
const GPIO_FUNC251_IN_INV_SEL_V = 0x1
const GPIO_FUNC251_IN_INV_SEL_S = 6
const GPIO_FUNC251_IN_SEL = 0x0000003F
const GPIO_FUNC251_IN_SEL_V = 0x3F
const GPIO_FUNC251_IN_SEL_S = 0
const GPIO_SIG252_IN_SEL_V = 0x1
const GPIO_SIG252_IN_SEL_S = 7
const GPIO_FUNC252_IN_INV_SEL_V = 0x1
const GPIO_FUNC252_IN_INV_SEL_S = 6
const GPIO_FUNC252_IN_SEL = 0x0000003F
const GPIO_FUNC252_IN_SEL_V = 0x3F
const GPIO_FUNC252_IN_SEL_S = 0
const GPIO_SIG253_IN_SEL_V = 0x1
const GPIO_SIG253_IN_SEL_S = 7
const GPIO_FUNC253_IN_INV_SEL_V = 0x1
const GPIO_FUNC253_IN_INV_SEL_S = 6
const GPIO_FUNC253_IN_SEL = 0x0000003F
const GPIO_FUNC253_IN_SEL_V = 0x3F
const GPIO_FUNC253_IN_SEL_S = 0
const GPIO_SIG254_IN_SEL_V = 0x1
const GPIO_SIG254_IN_SEL_S = 7
const GPIO_FUNC254_IN_INV_SEL_V = 0x1
const GPIO_FUNC254_IN_INV_SEL_S = 6
const GPIO_FUNC254_IN_SEL = 0x0000003F
const GPIO_FUNC254_IN_SEL_V = 0x3F
const GPIO_FUNC254_IN_SEL_S = 0
const GPIO_SIG255_IN_SEL_V = 0x1
const GPIO_SIG255_IN_SEL_S = 7
const GPIO_FUNC255_IN_INV_SEL_V = 0x1
const GPIO_FUNC255_IN_INV_SEL_S = 6
const GPIO_FUNC255_IN_SEL = 0x0000003F
const GPIO_FUNC255_IN_SEL_V = 0x3F
const GPIO_FUNC255_IN_SEL_S = 0
const GPIO_FUNC0_OEN_INV_SEL_V = 0x1
const GPIO_FUNC0_OEN_INV_SEL_S = 11
const GPIO_FUNC0_OEN_SEL_V = 0x1
const GPIO_FUNC0_OEN_SEL_S = 10
const GPIO_FUNC0_OUT_INV_SEL_V = 0x1
const GPIO_FUNC0_OUT_INV_SEL_S = 9
const GPIO_FUNC0_OUT_SEL = 0x000001FF
const GPIO_FUNC0_OUT_SEL_V = 0x1FF
const GPIO_FUNC0_OUT_SEL_S = 0
const GPIO_FUNC1_OEN_INV_SEL_V = 0x1
const GPIO_FUNC1_OEN_INV_SEL_S = 11
const GPIO_FUNC1_OEN_SEL_V = 0x1
const GPIO_FUNC1_OEN_SEL_S = 10
const GPIO_FUNC1_OUT_INV_SEL_V = 0x1
const GPIO_FUNC1_OUT_INV_SEL_S = 9
const GPIO_FUNC1_OUT_SEL = 0x000001FF
const GPIO_FUNC1_OUT_SEL_V = 0x1FF
const GPIO_FUNC1_OUT_SEL_S = 0
const GPIO_FUNC2_OEN_INV_SEL_V = 0x1
const GPIO_FUNC2_OEN_INV_SEL_S = 11
const GPIO_FUNC2_OEN_SEL_V = 0x1
const GPIO_FUNC2_OEN_SEL_S = 10
const GPIO_FUNC2_OUT_INV_SEL_V = 0x1
const GPIO_FUNC2_OUT_INV_SEL_S = 9
const GPIO_FUNC2_OUT_SEL = 0x000001FF
const GPIO_FUNC2_OUT_SEL_V = 0x1FF
const GPIO_FUNC2_OUT_SEL_S = 0
const GPIO_FUNC3_OEN_INV_SEL_V = 0x1
const GPIO_FUNC3_OEN_INV_SEL_S = 11
const GPIO_FUNC3_OEN_SEL_V = 0x1
const GPIO_FUNC3_OEN_SEL_S = 10
const GPIO_FUNC3_OUT_INV_SEL_V = 0x1
const GPIO_FUNC3_OUT_INV_SEL_S = 9
const GPIO_FUNC3_OUT_SEL = 0x000001FF
const GPIO_FUNC3_OUT_SEL_V = 0x1FF
const GPIO_FUNC3_OUT_SEL_S = 0
const GPIO_FUNC4_OEN_INV_SEL_V = 0x1
const GPIO_FUNC4_OEN_INV_SEL_S = 11
const GPIO_FUNC4_OEN_SEL_V = 0x1
const GPIO_FUNC4_OEN_SEL_S = 10
const GPIO_FUNC4_OUT_INV_SEL_V = 0x1
const GPIO_FUNC4_OUT_INV_SEL_S = 9
const GPIO_FUNC4_OUT_SEL = 0x000001FF
const GPIO_FUNC4_OUT_SEL_V = 0x1FF
const GPIO_FUNC4_OUT_SEL_S = 0
const GPIO_FUNC5_OEN_INV_SEL_V = 0x1
const GPIO_FUNC5_OEN_INV_SEL_S = 11
const GPIO_FUNC5_OEN_SEL_V = 0x1
const GPIO_FUNC5_OEN_SEL_S = 10
const GPIO_FUNC5_OUT_INV_SEL_V = 0x1
const GPIO_FUNC5_OUT_INV_SEL_S = 9
const GPIO_FUNC5_OUT_SEL = 0x000001FF
const GPIO_FUNC5_OUT_SEL_V = 0x1FF
const GPIO_FUNC5_OUT_SEL_S = 0
const GPIO_FUNC6_OEN_INV_SEL_V = 0x1
const GPIO_FUNC6_OEN_INV_SEL_S = 11
const GPIO_FUNC6_OEN_SEL_V = 0x1
const GPIO_FUNC6_OEN_SEL_S = 10
const GPIO_FUNC6_OUT_INV_SEL_V = 0x1
const GPIO_FUNC6_OUT_INV_SEL_S = 9
const GPIO_FUNC6_OUT_SEL = 0x000001FF
const GPIO_FUNC6_OUT_SEL_V = 0x1FF
const GPIO_FUNC6_OUT_SEL_S = 0
const GPIO_FUNC7_OEN_INV_SEL_V = 0x1
const GPIO_FUNC7_OEN_INV_SEL_S = 11
const GPIO_FUNC7_OEN_SEL_V = 0x1
const GPIO_FUNC7_OEN_SEL_S = 10
const GPIO_FUNC7_OUT_INV_SEL_V = 0x1
const GPIO_FUNC7_OUT_INV_SEL_S = 9
const GPIO_FUNC7_OUT_SEL = 0x000001FF
const GPIO_FUNC7_OUT_SEL_V = 0x1FF
const GPIO_FUNC7_OUT_SEL_S = 0
const GPIO_FUNC8_OEN_INV_SEL_V = 0x1
const GPIO_FUNC8_OEN_INV_SEL_S = 11
const GPIO_FUNC8_OEN_SEL_V = 0x1
const GPIO_FUNC8_OEN_SEL_S = 10
const GPIO_FUNC8_OUT_INV_SEL_V = 0x1
const GPIO_FUNC8_OUT_INV_SEL_S = 9
const GPIO_FUNC8_OUT_SEL = 0x000001FF
const GPIO_FUNC8_OUT_SEL_V = 0x1FF
const GPIO_FUNC8_OUT_SEL_S = 0
const GPIO_FUNC9_OEN_INV_SEL_V = 0x1
const GPIO_FUNC9_OEN_INV_SEL_S = 11
const GPIO_FUNC9_OEN_SEL_V = 0x1
const GPIO_FUNC9_OEN_SEL_S = 10
const GPIO_FUNC9_OUT_INV_SEL_V = 0x1
const GPIO_FUNC9_OUT_INV_SEL_S = 9
const GPIO_FUNC9_OUT_SEL = 0x000001FF
const GPIO_FUNC9_OUT_SEL_V = 0x1FF
const GPIO_FUNC9_OUT_SEL_S = 0
const GPIO_FUNC10_OEN_INV_SEL_V = 0x1
const GPIO_FUNC10_OEN_INV_SEL_S = 11
const GPIO_FUNC10_OEN_SEL_V = 0x1
const GPIO_FUNC10_OEN_SEL_S = 10
const GPIO_FUNC10_OUT_INV_SEL_V = 0x1
const GPIO_FUNC10_OUT_INV_SEL_S = 9
const GPIO_FUNC10_OUT_SEL = 0x000001FF
const GPIO_FUNC10_OUT_SEL_V = 0x1FF
const GPIO_FUNC10_OUT_SEL_S = 0
const GPIO_FUNC11_OEN_INV_SEL_V = 0x1
const GPIO_FUNC11_OEN_INV_SEL_S = 11
const GPIO_FUNC11_OEN_SEL_V = 0x1
const GPIO_FUNC11_OEN_SEL_S = 10
const GPIO_FUNC11_OUT_INV_SEL_V = 0x1
const GPIO_FUNC11_OUT_INV_SEL_S = 9
const GPIO_FUNC11_OUT_SEL = 0x000001FF
const GPIO_FUNC11_OUT_SEL_V = 0x1FF
const GPIO_FUNC11_OUT_SEL_S = 0
const GPIO_FUNC12_OEN_INV_SEL_V = 0x1
const GPIO_FUNC12_OEN_INV_SEL_S = 11
const GPIO_FUNC12_OEN_SEL_V = 0x1
const GPIO_FUNC12_OEN_SEL_S = 10
const GPIO_FUNC12_OUT_INV_SEL_V = 0x1
const GPIO_FUNC12_OUT_INV_SEL_S = 9
const GPIO_FUNC12_OUT_SEL = 0x000001FF
const GPIO_FUNC12_OUT_SEL_V = 0x1FF
const GPIO_FUNC12_OUT_SEL_S = 0
const GPIO_FUNC13_OEN_INV_SEL_V = 0x1
const GPIO_FUNC13_OEN_INV_SEL_S = 11
const GPIO_FUNC13_OEN_SEL_V = 0x1
const GPIO_FUNC13_OEN_SEL_S = 10
const GPIO_FUNC13_OUT_INV_SEL_V = 0x1
const GPIO_FUNC13_OUT_INV_SEL_S = 9
const GPIO_FUNC13_OUT_SEL = 0x000001FF
const GPIO_FUNC13_OUT_SEL_V = 0x1FF
const GPIO_FUNC13_OUT_SEL_S = 0
const GPIO_FUNC14_OEN_INV_SEL_V = 0x1
const GPIO_FUNC14_OEN_INV_SEL_S = 11
const GPIO_FUNC14_OEN_SEL_V = 0x1
const GPIO_FUNC14_OEN_SEL_S = 10
const GPIO_FUNC14_OUT_INV_SEL_V = 0x1
const GPIO_FUNC14_OUT_INV_SEL_S = 9
const GPIO_FUNC14_OUT_SEL = 0x000001FF
const GPIO_FUNC14_OUT_SEL_V = 0x1FF
const GPIO_FUNC14_OUT_SEL_S = 0
const GPIO_FUNC15_OEN_INV_SEL_V = 0x1
const GPIO_FUNC15_OEN_INV_SEL_S = 11
const GPIO_FUNC15_OEN_SEL_V = 0x1
const GPIO_FUNC15_OEN_SEL_S = 10
const GPIO_FUNC15_OUT_INV_SEL_V = 0x1
const GPIO_FUNC15_OUT_INV_SEL_S = 9
const GPIO_FUNC15_OUT_SEL = 0x000001FF
const GPIO_FUNC15_OUT_SEL_V = 0x1FF
const GPIO_FUNC15_OUT_SEL_S = 0
const GPIO_FUNC16_OEN_INV_SEL_V = 0x1
const GPIO_FUNC16_OEN_INV_SEL_S = 11
const GPIO_FUNC16_OEN_SEL_V = 0x1
const GPIO_FUNC16_OEN_SEL_S = 10
const GPIO_FUNC16_OUT_INV_SEL_V = 0x1
const GPIO_FUNC16_OUT_INV_SEL_S = 9
const GPIO_FUNC16_OUT_SEL = 0x000001FF
const GPIO_FUNC16_OUT_SEL_V = 0x1FF
const GPIO_FUNC16_OUT_SEL_S = 0
const GPIO_FUNC17_OEN_INV_SEL_V = 0x1
const GPIO_FUNC17_OEN_INV_SEL_S = 11
const GPIO_FUNC17_OEN_SEL_V = 0x1
const GPIO_FUNC17_OEN_SEL_S = 10
const GPIO_FUNC17_OUT_INV_SEL_V = 0x1
const GPIO_FUNC17_OUT_INV_SEL_S = 9
const GPIO_FUNC17_OUT_SEL = 0x000001FF
const GPIO_FUNC17_OUT_SEL_V = 0x1FF
const GPIO_FUNC17_OUT_SEL_S = 0
const GPIO_FUNC18_OEN_INV_SEL_V = 0x1
const GPIO_FUNC18_OEN_INV_SEL_S = 11
const GPIO_FUNC18_OEN_SEL_V = 0x1
const GPIO_FUNC18_OEN_SEL_S = 10
const GPIO_FUNC18_OUT_INV_SEL_V = 0x1
const GPIO_FUNC18_OUT_INV_SEL_S = 9
const GPIO_FUNC18_OUT_SEL = 0x000001FF
const GPIO_FUNC18_OUT_SEL_V = 0x1FF
const GPIO_FUNC18_OUT_SEL_S = 0
const GPIO_FUNC19_OEN_INV_SEL_V = 0x1
const GPIO_FUNC19_OEN_INV_SEL_S = 11
const GPIO_FUNC19_OEN_SEL_V = 0x1
const GPIO_FUNC19_OEN_SEL_S = 10
const GPIO_FUNC19_OUT_INV_SEL_V = 0x1
const GPIO_FUNC19_OUT_INV_SEL_S = 9
const GPIO_FUNC19_OUT_SEL = 0x000001FF
const GPIO_FUNC19_OUT_SEL_V = 0x1FF
const GPIO_FUNC19_OUT_SEL_S = 0
const GPIO_FUNC20_OEN_INV_SEL_V = 0x1
const GPIO_FUNC20_OEN_INV_SEL_S = 11
const GPIO_FUNC20_OEN_SEL_V = 0x1
const GPIO_FUNC20_OEN_SEL_S = 10
const GPIO_FUNC20_OUT_INV_SEL_V = 0x1
const GPIO_FUNC20_OUT_INV_SEL_S = 9
const GPIO_FUNC20_OUT_SEL = 0x000001FF
const GPIO_FUNC20_OUT_SEL_V = 0x1FF
const GPIO_FUNC20_OUT_SEL_S = 0
const GPIO_FUNC21_OEN_INV_SEL_V = 0x1
const GPIO_FUNC21_OEN_INV_SEL_S = 11
const GPIO_FUNC21_OEN_SEL_V = 0x1
const GPIO_FUNC21_OEN_SEL_S = 10
const GPIO_FUNC21_OUT_INV_SEL_V = 0x1
const GPIO_FUNC21_OUT_INV_SEL_S = 9
const GPIO_FUNC21_OUT_SEL = 0x000001FF
const GPIO_FUNC21_OUT_SEL_V = 0x1FF
const GPIO_FUNC21_OUT_SEL_S = 0
const GPIO_FUNC22_OEN_INV_SEL_V = 0x1
const GPIO_FUNC22_OEN_INV_SEL_S = 11
const GPIO_FUNC22_OEN_SEL_V = 0x1
const GPIO_FUNC22_OEN_SEL_S = 10
const GPIO_FUNC22_OUT_INV_SEL_V = 0x1
const GPIO_FUNC22_OUT_INV_SEL_S = 9
const GPIO_FUNC22_OUT_SEL = 0x000001FF
const GPIO_FUNC22_OUT_SEL_V = 0x1FF
const GPIO_FUNC22_OUT_SEL_S = 0
const GPIO_FUNC23_OEN_INV_SEL_V = 0x1
const GPIO_FUNC23_OEN_INV_SEL_S = 11
const GPIO_FUNC23_OEN_SEL_V = 0x1
const GPIO_FUNC23_OEN_SEL_S = 10
const GPIO_FUNC23_OUT_INV_SEL_V = 0x1
const GPIO_FUNC23_OUT_INV_SEL_S = 9
const GPIO_FUNC23_OUT_SEL = 0x000001FF
const GPIO_FUNC23_OUT_SEL_V = 0x1FF
const GPIO_FUNC23_OUT_SEL_S = 0
const GPIO_FUNC24_OEN_INV_SEL_V = 0x1
const GPIO_FUNC24_OEN_INV_SEL_S = 11
const GPIO_FUNC24_OEN_SEL_V = 0x1
const GPIO_FUNC24_OEN_SEL_S = 10
const GPIO_FUNC24_OUT_INV_SEL_V = 0x1
const GPIO_FUNC24_OUT_INV_SEL_S = 9
const GPIO_FUNC24_OUT_SEL = 0x000001FF
const GPIO_FUNC24_OUT_SEL_V = 0x1FF
const GPIO_FUNC24_OUT_SEL_S = 0
const GPIO_FUNC25_OEN_INV_SEL_V = 0x1
const GPIO_FUNC25_OEN_INV_SEL_S = 11
const GPIO_FUNC25_OEN_SEL_V = 0x1
const GPIO_FUNC25_OEN_SEL_S = 10
const GPIO_FUNC25_OUT_INV_SEL_V = 0x1
const GPIO_FUNC25_OUT_INV_SEL_S = 9
const GPIO_FUNC25_OUT_SEL = 0x000001FF
const GPIO_FUNC25_OUT_SEL_V = 0x1FF
const GPIO_FUNC25_OUT_SEL_S = 0
const GPIO_FUNC26_OEN_INV_SEL_V = 0x1
const GPIO_FUNC26_OEN_INV_SEL_S = 11
const GPIO_FUNC26_OEN_SEL_V = 0x1
const GPIO_FUNC26_OEN_SEL_S = 10
const GPIO_FUNC26_OUT_INV_SEL_V = 0x1
const GPIO_FUNC26_OUT_INV_SEL_S = 9
const GPIO_FUNC26_OUT_SEL = 0x000001FF
const GPIO_FUNC26_OUT_SEL_V = 0x1FF
const GPIO_FUNC26_OUT_SEL_S = 0
const GPIO_FUNC27_OEN_INV_SEL_V = 0x1
const GPIO_FUNC27_OEN_INV_SEL_S = 11
const GPIO_FUNC27_OEN_SEL_V = 0x1
const GPIO_FUNC27_OEN_SEL_S = 10
const GPIO_FUNC27_OUT_INV_SEL_V = 0x1
const GPIO_FUNC27_OUT_INV_SEL_S = 9
const GPIO_FUNC27_OUT_SEL = 0x000001FF
const GPIO_FUNC27_OUT_SEL_V = 0x1FF
const GPIO_FUNC27_OUT_SEL_S = 0
const GPIO_FUNC28_OEN_INV_SEL_V = 0x1
const GPIO_FUNC28_OEN_INV_SEL_S = 11
const GPIO_FUNC28_OEN_SEL_V = 0x1
const GPIO_FUNC28_OEN_SEL_S = 10
const GPIO_FUNC28_OUT_INV_SEL_V = 0x1
const GPIO_FUNC28_OUT_INV_SEL_S = 9
const GPIO_FUNC28_OUT_SEL = 0x000001FF
const GPIO_FUNC28_OUT_SEL_V = 0x1FF
const GPIO_FUNC28_OUT_SEL_S = 0
const GPIO_FUNC29_OEN_INV_SEL_V = 0x1
const GPIO_FUNC29_OEN_INV_SEL_S = 11
const GPIO_FUNC29_OEN_SEL_V = 0x1
const GPIO_FUNC29_OEN_SEL_S = 10
const GPIO_FUNC29_OUT_INV_SEL_V = 0x1
const GPIO_FUNC29_OUT_INV_SEL_S = 9
const GPIO_FUNC29_OUT_SEL = 0x000001FF
const GPIO_FUNC29_OUT_SEL_V = 0x1FF
const GPIO_FUNC29_OUT_SEL_S = 0
const GPIO_FUNC30_OEN_INV_SEL_V = 0x1
const GPIO_FUNC30_OEN_INV_SEL_S = 11
const GPIO_FUNC30_OEN_SEL_V = 0x1
const GPIO_FUNC30_OEN_SEL_S = 10
const GPIO_FUNC30_OUT_INV_SEL_V = 0x1
const GPIO_FUNC30_OUT_INV_SEL_S = 9
const GPIO_FUNC30_OUT_SEL = 0x000001FF
const GPIO_FUNC30_OUT_SEL_V = 0x1FF
const GPIO_FUNC30_OUT_SEL_S = 0
const GPIO_FUNC31_OEN_INV_SEL_V = 0x1
const GPIO_FUNC31_OEN_INV_SEL_S = 11
const GPIO_FUNC31_OEN_SEL_V = 0x1
const GPIO_FUNC31_OEN_SEL_S = 10
const GPIO_FUNC31_OUT_INV_SEL_V = 0x1
const GPIO_FUNC31_OUT_INV_SEL_S = 9
const GPIO_FUNC31_OUT_SEL = 0x000001FF
const GPIO_FUNC31_OUT_SEL_V = 0x1FF
const GPIO_FUNC31_OUT_SEL_S = 0
const GPIO_FUNC32_OEN_INV_SEL_V = 0x1
const GPIO_FUNC32_OEN_INV_SEL_S = 11
const GPIO_FUNC32_OEN_SEL_V = 0x1
const GPIO_FUNC32_OEN_SEL_S = 10
const GPIO_FUNC32_OUT_INV_SEL_V = 0x1
const GPIO_FUNC32_OUT_INV_SEL_S = 9
const GPIO_FUNC32_OUT_SEL = 0x000001FF
const GPIO_FUNC32_OUT_SEL_V = 0x1FF
const GPIO_FUNC32_OUT_SEL_S = 0
const GPIO_FUNC33_OEN_INV_SEL_V = 0x1
const GPIO_FUNC33_OEN_INV_SEL_S = 11
const GPIO_FUNC33_OEN_SEL_V = 0x1
const GPIO_FUNC33_OEN_SEL_S = 10
const GPIO_FUNC33_OUT_INV_SEL_V = 0x1
const GPIO_FUNC33_OUT_INV_SEL_S = 9
const GPIO_FUNC33_OUT_SEL = 0x000001FF
const GPIO_FUNC33_OUT_SEL_V = 0x1FF
const GPIO_FUNC33_OUT_SEL_S = 0
const GPIO_FUNC34_OEN_INV_SEL_V = 0x1
const GPIO_FUNC34_OEN_INV_SEL_S = 11
const GPIO_FUNC34_OEN_SEL_V = 0x1
const GPIO_FUNC34_OEN_SEL_S = 10
const GPIO_FUNC34_OUT_INV_SEL_V = 0x1
const GPIO_FUNC34_OUT_INV_SEL_S = 9
const GPIO_FUNC34_OUT_SEL = 0x000001FF
const GPIO_FUNC34_OUT_SEL_V = 0x1FF
const GPIO_FUNC34_OUT_SEL_S = 0
const GPIO_FUNC35_OEN_INV_SEL_V = 0x1
const GPIO_FUNC35_OEN_INV_SEL_S = 11
const GPIO_FUNC35_OEN_SEL_V = 0x1
const GPIO_FUNC35_OEN_SEL_S = 10
const GPIO_FUNC35_OUT_INV_SEL_V = 0x1
const GPIO_FUNC35_OUT_INV_SEL_S = 9
const GPIO_FUNC35_OUT_SEL = 0x000001FF
const GPIO_FUNC35_OUT_SEL_V = 0x1FF
const GPIO_FUNC35_OUT_SEL_S = 0
const GPIO_FUNC36_OEN_INV_SEL_V = 0x1
const GPIO_FUNC36_OEN_INV_SEL_S = 11
const GPIO_FUNC36_OEN_SEL_V = 0x1
const GPIO_FUNC36_OEN_SEL_S = 10
const GPIO_FUNC36_OUT_INV_SEL_V = 0x1
const GPIO_FUNC36_OUT_INV_SEL_S = 9
const GPIO_FUNC36_OUT_SEL = 0x000001FF
const GPIO_FUNC36_OUT_SEL_V = 0x1FF
const GPIO_FUNC36_OUT_SEL_S = 0
const GPIO_FUNC37_OEN_INV_SEL_V = 0x1
const GPIO_FUNC37_OEN_INV_SEL_S = 11
const GPIO_FUNC37_OEN_SEL_V = 0x1
const GPIO_FUNC37_OEN_SEL_S = 10
const GPIO_FUNC37_OUT_INV_SEL_V = 0x1
const GPIO_FUNC37_OUT_INV_SEL_S = 9
const GPIO_FUNC37_OUT_SEL = 0x000001FF
const GPIO_FUNC37_OUT_SEL_V = 0x1FF
const GPIO_FUNC37_OUT_SEL_S = 0
const GPIO_FUNC38_OEN_INV_SEL_V = 0x1
const GPIO_FUNC38_OEN_INV_SEL_S = 11
const GPIO_FUNC38_OEN_SEL_V = 0x1
const GPIO_FUNC38_OEN_SEL_S = 10
const GPIO_FUNC38_OUT_INV_SEL_V = 0x1
const GPIO_FUNC38_OUT_INV_SEL_S = 9
const GPIO_FUNC38_OUT_SEL = 0x000001FF
const GPIO_FUNC38_OUT_SEL_V = 0x1FF
const GPIO_FUNC38_OUT_SEL_S = 0
const GPIO_FUNC39_OEN_INV_SEL_V = 0x1
const GPIO_FUNC39_OEN_INV_SEL_S = 11
const GPIO_FUNC39_OEN_SEL_V = 0x1
const GPIO_FUNC39_OEN_SEL_S = 10
const GPIO_FUNC39_OUT_INV_SEL_V = 0x1
const GPIO_FUNC39_OUT_INV_SEL_S = 9
const GPIO_FUNC39_OUT_SEL = 0x000001FF
const GPIO_FUNC39_OUT_SEL_V = 0x1FF
const GPIO_FUNC39_OUT_SEL_S = 0
const GPIO_FUNC40_OEN_INV_SEL_V = 0x1
const GPIO_FUNC40_OEN_INV_SEL_S = 11
const GPIO_FUNC40_OEN_SEL_V = 0x1
const GPIO_FUNC40_OEN_SEL_S = 10
const GPIO_FUNC40_OUT_INV_SEL_V = 0x1
const GPIO_FUNC40_OUT_INV_SEL_S = 9
const GPIO_FUNC40_OUT_SEL = 0x000001FF
const GPIO_FUNC40_OUT_SEL_V = 0x1FF
const GPIO_FUNC40_OUT_SEL_S = 0
const GPIO_FUNC41_OEN_INV_SEL_V = 0x1
const GPIO_FUNC41_OEN_INV_SEL_S = 11
const GPIO_FUNC41_OEN_SEL_V = 0x1
const GPIO_FUNC41_OEN_SEL_S = 10
const GPIO_FUNC41_OUT_INV_SEL_V = 0x1
const GPIO_FUNC41_OUT_INV_SEL_S = 9
const GPIO_FUNC41_OUT_SEL = 0x000001FF
const GPIO_FUNC41_OUT_SEL_V = 0x1FF
const GPIO_FUNC41_OUT_SEL_S = 0
const GPIO_FUNC42_OEN_INV_SEL_V = 0x1
const GPIO_FUNC42_OEN_INV_SEL_S = 11
const GPIO_FUNC42_OEN_SEL_V = 0x1
const GPIO_FUNC42_OEN_SEL_S = 10
const GPIO_FUNC42_OUT_INV_SEL_V = 0x1
const GPIO_FUNC42_OUT_INV_SEL_S = 9
const GPIO_FUNC42_OUT_SEL = 0x000001FF
const GPIO_FUNC42_OUT_SEL_V = 0x1FF
const GPIO_FUNC42_OUT_SEL_S = 0
const GPIO_FUNC43_OEN_INV_SEL_V = 0x1
const GPIO_FUNC43_OEN_INV_SEL_S = 11
const GPIO_FUNC43_OEN_SEL_V = 0x1
const GPIO_FUNC43_OEN_SEL_S = 10
const GPIO_FUNC43_OUT_INV_SEL_V = 0x1
const GPIO_FUNC43_OUT_INV_SEL_S = 9
const GPIO_FUNC43_OUT_SEL = 0x000001FF
const GPIO_FUNC43_OUT_SEL_V = 0x1FF
const GPIO_FUNC43_OUT_SEL_S = 0
const GPIO_FUNC44_OEN_INV_SEL_V = 0x1
const GPIO_FUNC44_OEN_INV_SEL_S = 11
const GPIO_FUNC44_OEN_SEL_V = 0x1
const GPIO_FUNC44_OEN_SEL_S = 10
const GPIO_FUNC44_OUT_INV_SEL_V = 0x1
const GPIO_FUNC44_OUT_INV_SEL_S = 9
const GPIO_FUNC44_OUT_SEL = 0x000001FF
const GPIO_FUNC44_OUT_SEL_V = 0x1FF
const GPIO_FUNC44_OUT_SEL_S = 0
const GPIO_FUNC45_OEN_INV_SEL_V = 0x1
const GPIO_FUNC45_OEN_INV_SEL_S = 11
const GPIO_FUNC45_OEN_SEL_V = 0x1
const GPIO_FUNC45_OEN_SEL_S = 10
const GPIO_FUNC45_OUT_INV_SEL_V = 0x1
const GPIO_FUNC45_OUT_INV_SEL_S = 9
const GPIO_FUNC45_OUT_SEL = 0x000001FF
const GPIO_FUNC45_OUT_SEL_V = 0x1FF
const GPIO_FUNC45_OUT_SEL_S = 0
const GPIO_FUNC46_OEN_INV_SEL_V = 0x1
const GPIO_FUNC46_OEN_INV_SEL_S = 11
const GPIO_FUNC46_OEN_SEL_V = 0x1
const GPIO_FUNC46_OEN_SEL_S = 10
const GPIO_FUNC46_OUT_INV_SEL_V = 0x1
const GPIO_FUNC46_OUT_INV_SEL_S = 9
const GPIO_FUNC46_OUT_SEL = 0x000001FF
const GPIO_FUNC46_OUT_SEL_V = 0x1FF
const GPIO_FUNC46_OUT_SEL_S = 0
const GPIO_FUNC47_OEN_INV_SEL_V = 0x1
const GPIO_FUNC47_OEN_INV_SEL_S = 11
const GPIO_FUNC47_OEN_SEL_V = 0x1
const GPIO_FUNC47_OEN_SEL_S = 10
const GPIO_FUNC47_OUT_INV_SEL_V = 0x1
const GPIO_FUNC47_OUT_INV_SEL_S = 9
const GPIO_FUNC47_OUT_SEL = 0x000001FF
const GPIO_FUNC47_OUT_SEL_V = 0x1FF
const GPIO_FUNC47_OUT_SEL_S = 0
const GPIO_FUNC48_OEN_INV_SEL_V = 0x1
const GPIO_FUNC48_OEN_INV_SEL_S = 11
const GPIO_FUNC48_OEN_SEL_V = 0x1
const GPIO_FUNC48_OEN_SEL_S = 10
const GPIO_FUNC48_OUT_INV_SEL_V = 0x1
const GPIO_FUNC48_OUT_INV_SEL_S = 9
const GPIO_FUNC48_OUT_SEL = 0x000001FF
const GPIO_FUNC48_OUT_SEL_V = 0x1FF
const GPIO_FUNC48_OUT_SEL_S = 0
const GPIO_FUNC49_OEN_INV_SEL_V = 0x1
const GPIO_FUNC49_OEN_INV_SEL_S = 11
const GPIO_FUNC49_OEN_SEL_V = 0x1
const GPIO_FUNC49_OEN_SEL_S = 10
const GPIO_FUNC49_OUT_INV_SEL_V = 0x1
const GPIO_FUNC49_OUT_INV_SEL_S = 9
const GPIO_FUNC49_OUT_SEL = 0x000001FF
const GPIO_FUNC49_OUT_SEL_V = 0x1FF
const GPIO_FUNC49_OUT_SEL_S = 0
const GPIO_FUNC50_OEN_INV_SEL_V = 0x1
const GPIO_FUNC50_OEN_INV_SEL_S = 11
const GPIO_FUNC50_OEN_SEL_V = 0x1
const GPIO_FUNC50_OEN_SEL_S = 10
const GPIO_FUNC50_OUT_INV_SEL_V = 0x1
const GPIO_FUNC50_OUT_INV_SEL_S = 9
const GPIO_FUNC50_OUT_SEL = 0x000001FF
const GPIO_FUNC50_OUT_SEL_V = 0x1FF
const GPIO_FUNC50_OUT_SEL_S = 0
const GPIO_FUNC51_OEN_INV_SEL_V = 0x1
const GPIO_FUNC51_OEN_INV_SEL_S = 11
const GPIO_FUNC51_OEN_SEL_V = 0x1
const GPIO_FUNC51_OEN_SEL_S = 10
const GPIO_FUNC51_OUT_INV_SEL_V = 0x1
const GPIO_FUNC51_OUT_INV_SEL_S = 9
const GPIO_FUNC51_OUT_SEL = 0x000001FF
const GPIO_FUNC51_OUT_SEL_V = 0x1FF
const GPIO_FUNC51_OUT_SEL_S = 0
const GPIO_FUNC52_OEN_INV_SEL_V = 0x1
const GPIO_FUNC52_OEN_INV_SEL_S = 11
const GPIO_FUNC52_OEN_SEL_V = 0x1
const GPIO_FUNC52_OEN_SEL_S = 10
const GPIO_FUNC52_OUT_INV_SEL_V = 0x1
const GPIO_FUNC52_OUT_INV_SEL_S = 9
const GPIO_FUNC52_OUT_SEL = 0x000001FF
const GPIO_FUNC52_OUT_SEL_V = 0x1FF
const GPIO_FUNC52_OUT_SEL_S = 0
const GPIO_FUNC53_OEN_INV_SEL_V = 0x1
const GPIO_FUNC53_OEN_INV_SEL_S = 11
const GPIO_FUNC53_OEN_SEL_V = 0x1
const GPIO_FUNC53_OEN_SEL_S = 10
const GPIO_FUNC53_OUT_INV_SEL_V = 0x1
const GPIO_FUNC53_OUT_INV_SEL_S = 9
const GPIO_FUNC53_OUT_SEL = 0x000001FF
const GPIO_FUNC53_OUT_SEL_V = 0x1FF
const GPIO_FUNC53_OUT_SEL_S = 0
const GPIO_CLK_EN_V = 0x1
const GPIO_CLK_EN_S = 0
const GPIO_DATE = 0x0FFFFFFF
const GPIO_DATE_V = 0xFFFFFFF
const GPIO_DATE_S = 0
const RTC_GPIO_OUT_DATA = 0x003FFFFF
const RTC_GPIO_OUT_DATA_V = 0x3FFFFF
const RTC_GPIO_OUT_DATA_S = 10
const RTC_GPIO_OUT_DATA_W1TS = 0x003FFFFF
const RTC_GPIO_OUT_DATA_W1TS_V = 0x3FFFFF
const RTC_GPIO_OUT_DATA_W1TS_S = 10
const RTC_GPIO_OUT_DATA_W1TC = 0x003FFFFF
const RTC_GPIO_OUT_DATA_W1TC_V = 0x3FFFFF
const RTC_GPIO_OUT_DATA_W1TC_S = 10
const RTC_GPIO_ENABLE = 0x003FFFFF
const RTC_GPIO_ENABLE_V = 0x3FFFFF
const RTC_GPIO_ENABLE_S = 10
const RTC_GPIO_ENABLE_W1TS = 0x003FFFFF
const RTC_GPIO_ENABLE_W1TS_V = 0x3FFFFF
const RTC_GPIO_ENABLE_W1TS_S = 10
const RTC_GPIO_ENABLE_W1TC = 0x003FFFFF
const RTC_GPIO_ENABLE_W1TC_V = 0x3FFFFF
const RTC_GPIO_ENABLE_W1TC_S = 10
const RTC_GPIO_STATUS_INT = 0x003FFFFF
const RTC_GPIO_STATUS_INT_V = 0x3FFFFF
const RTC_GPIO_STATUS_INT_S = 10
const RTC_GPIO_STATUS_INT_W1TS = 0x003FFFFF
const RTC_GPIO_STATUS_INT_W1TS_V = 0x3FFFFF
const RTC_GPIO_STATUS_INT_W1TS_S = 10
const RTC_GPIO_STATUS_INT_W1TC = 0x003FFFFF
const RTC_GPIO_STATUS_INT_W1TC_V = 0x3FFFFF
const RTC_GPIO_STATUS_INT_W1TC_S = 10
const RTC_GPIO_IN_NEXT = 0x003FFFFF
const RTC_GPIO_IN_NEXT_V = 0x3FFFFF
const RTC_GPIO_IN_NEXT_S = 10
const RTC_GPIO_PIN0_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN0_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN0_INT_TYPE = 0x00000007
const RTC_GPIO_PIN0_INT_TYPE_V = 0x7
const RTC_GPIO_PIN0_INT_TYPE_S = 7
const RTC_GPIO_PIN0_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN0_PAD_DRIVER_S = 2
const RTC_GPIO_PIN1_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN1_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN1_INT_TYPE = 0x00000007
const RTC_GPIO_PIN1_INT_TYPE_V = 0x7
const RTC_GPIO_PIN1_INT_TYPE_S = 7
const RTC_GPIO_PIN1_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN1_PAD_DRIVER_S = 2
const RTC_GPIO_PIN2_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN2_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN2_INT_TYPE = 0x00000007
const RTC_GPIO_PIN2_INT_TYPE_V = 0x7
const RTC_GPIO_PIN2_INT_TYPE_S = 7
const RTC_GPIO_PIN2_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN2_PAD_DRIVER_S = 2
const RTC_GPIO_PIN3_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN3_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN3_INT_TYPE = 0x00000007
const RTC_GPIO_PIN3_INT_TYPE_V = 0x7
const RTC_GPIO_PIN3_INT_TYPE_S = 7
const RTC_GPIO_PIN3_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN3_PAD_DRIVER_S = 2
const RTC_GPIO_PIN4_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN4_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN4_INT_TYPE = 0x00000007
const RTC_GPIO_PIN4_INT_TYPE_V = 0x7
const RTC_GPIO_PIN4_INT_TYPE_S = 7
const RTC_GPIO_PIN4_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN4_PAD_DRIVER_S = 2
const RTC_GPIO_PIN5_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN5_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN5_INT_TYPE = 0x00000007
const RTC_GPIO_PIN5_INT_TYPE_V = 0x7
const RTC_GPIO_PIN5_INT_TYPE_S = 7
const RTC_GPIO_PIN5_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN5_PAD_DRIVER_S = 2
const RTC_GPIO_PIN6_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN6_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN6_INT_TYPE = 0x00000007
const RTC_GPIO_PIN6_INT_TYPE_V = 0x7
const RTC_GPIO_PIN6_INT_TYPE_S = 7
const RTC_GPIO_PIN6_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN6_PAD_DRIVER_S = 2
const RTC_GPIO_PIN7_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN7_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN7_INT_TYPE = 0x00000007
const RTC_GPIO_PIN7_INT_TYPE_V = 0x7
const RTC_GPIO_PIN7_INT_TYPE_S = 7
const RTC_GPIO_PIN7_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN7_PAD_DRIVER_S = 2
const RTC_GPIO_PIN8_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN8_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN8_INT_TYPE = 0x00000007
const RTC_GPIO_PIN8_INT_TYPE_V = 0x7
const RTC_GPIO_PIN8_INT_TYPE_S = 7
const RTC_GPIO_PIN8_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN8_PAD_DRIVER_S = 2
const RTC_GPIO_PIN9_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN9_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN9_INT_TYPE = 0x00000007
const RTC_GPIO_PIN9_INT_TYPE_V = 0x7
const RTC_GPIO_PIN9_INT_TYPE_S = 7
const RTC_GPIO_PIN9_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN9_PAD_DRIVER_S = 2
const RTC_GPIO_PIN10_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN10_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN10_INT_TYPE = 0x00000007
const RTC_GPIO_PIN10_INT_TYPE_V = 0x7
const RTC_GPIO_PIN10_INT_TYPE_S = 7
const RTC_GPIO_PIN10_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN10_PAD_DRIVER_S = 2
const RTC_GPIO_PIN11_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN11_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN11_INT_TYPE = 0x00000007
const RTC_GPIO_PIN11_INT_TYPE_V = 0x7
const RTC_GPIO_PIN11_INT_TYPE_S = 7
const RTC_GPIO_PIN11_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN11_PAD_DRIVER_S = 2
const RTC_GPIO_PIN12_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN12_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN12_INT_TYPE = 0x00000007
const RTC_GPIO_PIN12_INT_TYPE_V = 0x7
const RTC_GPIO_PIN12_INT_TYPE_S = 7
const RTC_GPIO_PIN12_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN12_PAD_DRIVER_S = 2
const RTC_GPIO_PIN13_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN13_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN13_INT_TYPE = 0x00000007
const RTC_GPIO_PIN13_INT_TYPE_V = 0x7
const RTC_GPIO_PIN13_INT_TYPE_S = 7
const RTC_GPIO_PIN13_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN13_PAD_DRIVER_S = 2
const RTC_GPIO_PIN14_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN14_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN14_INT_TYPE = 0x00000007
const RTC_GPIO_PIN14_INT_TYPE_V = 0x7
const RTC_GPIO_PIN14_INT_TYPE_S = 7
const RTC_GPIO_PIN14_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN14_PAD_DRIVER_S = 2
const RTC_GPIO_PIN15_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN15_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN15_INT_TYPE = 0x00000007
const RTC_GPIO_PIN15_INT_TYPE_V = 0x7
const RTC_GPIO_PIN15_INT_TYPE_S = 7
const RTC_GPIO_PIN15_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN15_PAD_DRIVER_S = 2
const RTC_GPIO_PIN16_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN16_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN16_INT_TYPE = 0x00000007
const RTC_GPIO_PIN16_INT_TYPE_V = 0x7
const RTC_GPIO_PIN16_INT_TYPE_S = 7
const RTC_GPIO_PIN16_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN16_PAD_DRIVER_S = 2
const RTC_GPIO_PIN17_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN17_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN17_INT_TYPE = 0x00000007
const RTC_GPIO_PIN17_INT_TYPE_V = 0x7
const RTC_GPIO_PIN17_INT_TYPE_S = 7
const RTC_GPIO_PIN17_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN17_PAD_DRIVER_S = 2
const RTC_GPIO_PIN18_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN18_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN18_INT_TYPE = 0x00000007
const RTC_GPIO_PIN18_INT_TYPE_V = 0x7
const RTC_GPIO_PIN18_INT_TYPE_S = 7
const RTC_GPIO_PIN18_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN18_PAD_DRIVER_S = 2
const RTC_GPIO_PIN19_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN19_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN19_INT_TYPE = 0x00000007
const RTC_GPIO_PIN19_INT_TYPE_V = 0x7
const RTC_GPIO_PIN19_INT_TYPE_S = 7
const RTC_GPIO_PIN19_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN19_PAD_DRIVER_S = 2
const RTC_GPIO_PIN20_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN20_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN20_INT_TYPE = 0x00000007
const RTC_GPIO_PIN20_INT_TYPE_V = 0x7
const RTC_GPIO_PIN20_INT_TYPE_S = 7
const RTC_GPIO_PIN20_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN20_PAD_DRIVER_S = 2
const RTC_GPIO_PIN21_WAKEUP_ENABLE_V = 0x1
const RTC_GPIO_PIN21_WAKEUP_ENABLE_S = 10
const RTC_GPIO_PIN21_INT_TYPE = 0x00000007
const RTC_GPIO_PIN21_INT_TYPE_V = 0x7
const RTC_GPIO_PIN21_INT_TYPE_S = 7
const RTC_GPIO_PIN21_PAD_DRIVER_V = 0x1
const RTC_GPIO_PIN21_PAD_DRIVER_S = 2
const RTC_IO_DEBUG_12M_NO_GATING_V = 0x1
const RTC_IO_DEBUG_12M_NO_GATING_S = 25
const RTC_IO_DEBUG_SEL4 = 0x0000001F
const RTC_IO_DEBUG_SEL4_V = 0x1F
const RTC_IO_DEBUG_SEL4_S = 20
const RTC_IO_DEBUG_SEL3 = 0x0000001F
const RTC_IO_DEBUG_SEL3_V = 0x1F
const RTC_IO_DEBUG_SEL3_S = 15
const RTC_IO_DEBUG_SEL2 = 0x0000001F
const RTC_IO_DEBUG_SEL2_V = 0x1F
const RTC_IO_DEBUG_SEL2_S = 10
const RTC_IO_DEBUG_SEL1 = 0x0000001F
const RTC_IO_DEBUG_SEL1_V = 0x1F
const RTC_IO_DEBUG_SEL1_S = 5
const RTC_IO_DEBUG_SEL0 = 0x0000001F
const RTC_IO_DEBUG_SEL0_V = 0x1F
const RTC_IO_DEBUG_SEL0_S = 0
const RTC_IO_TOUCH_PAD0_DRV = 0x00000003
const RTC_IO_TOUCH_PAD0_DRV_V = 0x3
const RTC_IO_TOUCH_PAD0_DRV_S = 29
const RTC_IO_TOUCH_PAD0_RDE_V = 0x1
const RTC_IO_TOUCH_PAD0_RDE_S = 28
const RTC_IO_TOUCH_PAD0_RUE_V = 0x1
const RTC_IO_TOUCH_PAD0_RUE_S = 27
const RTC_IO_TOUCH_PAD0_DAC = 0x00000007
const RTC_IO_TOUCH_PAD0_DAC_V = 0x7
const RTC_IO_TOUCH_PAD0_DAC_S = 23
const RTC_IO_TOUCH_PAD0_START_V = 0x1
const RTC_IO_TOUCH_PAD0_START_S = 22
const RTC_IO_TOUCH_PAD0_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD0_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD0_XPD_V = 0x1
const RTC_IO_TOUCH_PAD0_XPD_S = 20
const RTC_IO_TOUCH_PAD0_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD0_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD0_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD0_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD0_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD0_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD0_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD0_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD0_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD0_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD0_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD0_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD0_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD1_DRV = 0x00000003
const RTC_IO_TOUCH_PAD1_DRV_V = 0x3
const RTC_IO_TOUCH_PAD1_DRV_S = 29
const RTC_IO_TOUCH_PAD1_RDE_V = 0x1
const RTC_IO_TOUCH_PAD1_RDE_S = 28
const RTC_IO_TOUCH_PAD1_RUE_V = 0x1
const RTC_IO_TOUCH_PAD1_RUE_S = 27
const RTC_IO_TOUCH_PAD1_DAC = 0x00000007
const RTC_IO_TOUCH_PAD1_DAC_V = 0x7
const RTC_IO_TOUCH_PAD1_DAC_S = 23
const RTC_IO_TOUCH_PAD1_START_V = 0x1
const RTC_IO_TOUCH_PAD1_START_S = 22
const RTC_IO_TOUCH_PAD1_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD1_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD1_XPD_V = 0x1
const RTC_IO_TOUCH_PAD1_XPD_S = 20
const RTC_IO_TOUCH_PAD1_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD1_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD1_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD1_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD1_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD1_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD1_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD1_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD1_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD1_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD1_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD1_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD1_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD2_DRV = 0x00000003
const RTC_IO_TOUCH_PAD2_DRV_V = 0x3
const RTC_IO_TOUCH_PAD2_DRV_S = 29
const RTC_IO_TOUCH_PAD2_RDE_V = 0x1
const RTC_IO_TOUCH_PAD2_RDE_S = 28
const RTC_IO_TOUCH_PAD2_RUE_V = 0x1
const RTC_IO_TOUCH_PAD2_RUE_S = 27
const RTC_IO_TOUCH_PAD2_DAC = 0x00000007
const RTC_IO_TOUCH_PAD2_DAC_V = 0x7
const RTC_IO_TOUCH_PAD2_DAC_S = 23
const RTC_IO_TOUCH_PAD2_START_V = 0x1
const RTC_IO_TOUCH_PAD2_START_S = 22
const RTC_IO_TOUCH_PAD2_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD2_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD2_XPD_V = 0x1
const RTC_IO_TOUCH_PAD2_XPD_S = 20
const RTC_IO_TOUCH_PAD2_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD2_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD2_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD2_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD2_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD2_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD2_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD2_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD2_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD2_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD2_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD2_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD2_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD3_DRV = 0x00000003
const RTC_IO_TOUCH_PAD3_DRV_V = 0x3
const RTC_IO_TOUCH_PAD3_DRV_S = 29
const RTC_IO_TOUCH_PAD3_RDE_V = 0x1
const RTC_IO_TOUCH_PAD3_RDE_S = 28
const RTC_IO_TOUCH_PAD3_RUE_V = 0x1
const RTC_IO_TOUCH_PAD3_RUE_S = 27
const RTC_IO_TOUCH_PAD3_DAC = 0x00000007
const RTC_IO_TOUCH_PAD3_DAC_V = 0x7
const RTC_IO_TOUCH_PAD3_DAC_S = 23
const RTC_IO_TOUCH_PAD3_START_V = 0x1
const RTC_IO_TOUCH_PAD3_START_S = 22
const RTC_IO_TOUCH_PAD3_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD3_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD3_XPD_V = 0x1
const RTC_IO_TOUCH_PAD3_XPD_S = 20
const RTC_IO_TOUCH_PAD3_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD3_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD3_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD3_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD3_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD3_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD3_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD3_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD3_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD3_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD3_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD3_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD3_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD4_DRV = 0x00000003
const RTC_IO_TOUCH_PAD4_DRV_V = 0x3
const RTC_IO_TOUCH_PAD4_DRV_S = 29
const RTC_IO_TOUCH_PAD4_RDE_V = 0x1
const RTC_IO_TOUCH_PAD4_RDE_S = 28
const RTC_IO_TOUCH_PAD4_RUE_V = 0x1
const RTC_IO_TOUCH_PAD4_RUE_S = 27
const RTC_IO_TOUCH_PAD4_DAC = 0x00000007
const RTC_IO_TOUCH_PAD4_DAC_V = 0x7
const RTC_IO_TOUCH_PAD4_DAC_S = 23
const RTC_IO_TOUCH_PAD4_START_V = 0x1
const RTC_IO_TOUCH_PAD4_START_S = 22
const RTC_IO_TOUCH_PAD4_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD4_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD4_XPD_V = 0x1
const RTC_IO_TOUCH_PAD4_XPD_S = 20
const RTC_IO_TOUCH_PAD4_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD4_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD4_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD4_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD4_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD4_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD4_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD4_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD4_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD4_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD4_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD4_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD4_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD5_DRV = 0x00000003
const RTC_IO_TOUCH_PAD5_DRV_V = 0x3
const RTC_IO_TOUCH_PAD5_DRV_S = 29
const RTC_IO_TOUCH_PAD5_RDE_V = 0x1
const RTC_IO_TOUCH_PAD5_RDE_S = 28
const RTC_IO_TOUCH_PAD5_RUE_V = 0x1
const RTC_IO_TOUCH_PAD5_RUE_S = 27
const RTC_IO_TOUCH_PAD5_DAC = 0x00000007
const RTC_IO_TOUCH_PAD5_DAC_V = 0x7
const RTC_IO_TOUCH_PAD5_DAC_S = 23
const RTC_IO_TOUCH_PAD5_START_V = 0x1
const RTC_IO_TOUCH_PAD5_START_S = 22
const RTC_IO_TOUCH_PAD5_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD5_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD5_XPD_V = 0x1
const RTC_IO_TOUCH_PAD5_XPD_S = 20
const RTC_IO_TOUCH_PAD5_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD5_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD5_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD5_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD5_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD5_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD5_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD5_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD5_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD5_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD5_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD5_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD5_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD6_DRV = 0x00000003
const RTC_IO_TOUCH_PAD6_DRV_V = 0x3
const RTC_IO_TOUCH_PAD6_DRV_S = 29
const RTC_IO_TOUCH_PAD6_RDE_V = 0x1
const RTC_IO_TOUCH_PAD6_RDE_S = 28
const RTC_IO_TOUCH_PAD6_RUE_V = 0x1
const RTC_IO_TOUCH_PAD6_RUE_S = 27
const RTC_IO_TOUCH_PAD6_DAC = 0x00000007
const RTC_IO_TOUCH_PAD6_DAC_V = 0x7
const RTC_IO_TOUCH_PAD6_DAC_S = 23
const RTC_IO_TOUCH_PAD6_START_V = 0x1
const RTC_IO_TOUCH_PAD6_START_S = 22
const RTC_IO_TOUCH_PAD6_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD6_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD6_XPD_V = 0x1
const RTC_IO_TOUCH_PAD6_XPD_S = 20
const RTC_IO_TOUCH_PAD6_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD6_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD6_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD6_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD6_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD6_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD6_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD6_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD6_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD6_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD6_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD6_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD6_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD7_DRV = 0x00000003
const RTC_IO_TOUCH_PAD7_DRV_V = 0x3
const RTC_IO_TOUCH_PAD7_DRV_S = 29
const RTC_IO_TOUCH_PAD7_RDE_V = 0x1
const RTC_IO_TOUCH_PAD7_RDE_S = 28
const RTC_IO_TOUCH_PAD7_RUE_V = 0x1
const RTC_IO_TOUCH_PAD7_RUE_S = 27
const RTC_IO_TOUCH_PAD7_DAC = 0x00000007
const RTC_IO_TOUCH_PAD7_DAC_V = 0x7
const RTC_IO_TOUCH_PAD7_DAC_S = 23
const RTC_IO_TOUCH_PAD7_START_V = 0x1
const RTC_IO_TOUCH_PAD7_START_S = 22
const RTC_IO_TOUCH_PAD7_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD7_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD7_XPD_V = 0x1
const RTC_IO_TOUCH_PAD7_XPD_S = 20
const RTC_IO_TOUCH_PAD7_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD7_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD7_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD7_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD7_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD7_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD7_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD7_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD7_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD7_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD7_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD7_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD7_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD8_DRV = 0x00000003
const RTC_IO_TOUCH_PAD8_DRV_V = 0x3
const RTC_IO_TOUCH_PAD8_DRV_S = 29
const RTC_IO_TOUCH_PAD8_RDE_V = 0x1
const RTC_IO_TOUCH_PAD8_RDE_S = 28
const RTC_IO_TOUCH_PAD8_RUE_V = 0x1
const RTC_IO_TOUCH_PAD8_RUE_S = 27
const RTC_IO_TOUCH_PAD8_DAC = 0x00000007
const RTC_IO_TOUCH_PAD8_DAC_V = 0x7
const RTC_IO_TOUCH_PAD8_DAC_S = 23
const RTC_IO_TOUCH_PAD8_START_V = 0x1
const RTC_IO_TOUCH_PAD8_START_S = 22
const RTC_IO_TOUCH_PAD8_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD8_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD8_XPD_V = 0x1
const RTC_IO_TOUCH_PAD8_XPD_S = 20
const RTC_IO_TOUCH_PAD8_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD8_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD8_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD8_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD8_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD8_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD8_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD8_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD8_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD8_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD8_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD8_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD8_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD9_DRV = 0x00000003
const RTC_IO_TOUCH_PAD9_DRV_V = 0x3
const RTC_IO_TOUCH_PAD9_DRV_S = 29
const RTC_IO_TOUCH_PAD9_RDE_V = 0x1
const RTC_IO_TOUCH_PAD9_RDE_S = 28
const RTC_IO_TOUCH_PAD9_RUE_V = 0x1
const RTC_IO_TOUCH_PAD9_RUE_S = 27
const RTC_IO_TOUCH_PAD9_DAC = 0x00000007
const RTC_IO_TOUCH_PAD9_DAC_V = 0x7
const RTC_IO_TOUCH_PAD9_DAC_S = 23
const RTC_IO_TOUCH_PAD9_START_V = 0x1
const RTC_IO_TOUCH_PAD9_START_S = 22
const RTC_IO_TOUCH_PAD9_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD9_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD9_XPD_V = 0x1
const RTC_IO_TOUCH_PAD9_XPD_S = 20
const RTC_IO_TOUCH_PAD9_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD9_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD9_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD9_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD9_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD9_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD9_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD9_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD9_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD9_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD9_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD9_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD9_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD10_DRV = 0x00000003
const RTC_IO_TOUCH_PAD10_DRV_V = 0x3
const RTC_IO_TOUCH_PAD10_DRV_S = 29
const RTC_IO_TOUCH_PAD10_RDE_V = 0x1
const RTC_IO_TOUCH_PAD10_RDE_S = 28
const RTC_IO_TOUCH_PAD10_RUE_V = 0x1
const RTC_IO_TOUCH_PAD10_RUE_S = 27
const RTC_IO_TOUCH_PAD10_DAC = 0x00000007
const RTC_IO_TOUCH_PAD10_DAC_V = 0x7
const RTC_IO_TOUCH_PAD10_DAC_S = 23
const RTC_IO_TOUCH_PAD10_START_V = 0x1
const RTC_IO_TOUCH_PAD10_START_S = 22
const RTC_IO_TOUCH_PAD10_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD10_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD10_XPD_V = 0x1
const RTC_IO_TOUCH_PAD10_XPD_S = 20
const RTC_IO_TOUCH_PAD10_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD10_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD10_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD10_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD10_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD10_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD10_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD10_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD10_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD10_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD10_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD10_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD10_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD11_DRV = 0x00000003
const RTC_IO_TOUCH_PAD11_DRV_V = 0x3
const RTC_IO_TOUCH_PAD11_DRV_S = 29
const RTC_IO_TOUCH_PAD11_RDE_V = 0x1
const RTC_IO_TOUCH_PAD11_RDE_S = 28
const RTC_IO_TOUCH_PAD11_RUE_V = 0x1
const RTC_IO_TOUCH_PAD11_RUE_S = 27
const RTC_IO_TOUCH_PAD11_DAC = 0x00000007
const RTC_IO_TOUCH_PAD11_DAC_V = 0x7
const RTC_IO_TOUCH_PAD11_DAC_S = 23
const RTC_IO_TOUCH_PAD11_START_V = 0x1
const RTC_IO_TOUCH_PAD11_START_S = 22
const RTC_IO_TOUCH_PAD11_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD11_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD11_XPD_V = 0x1
const RTC_IO_TOUCH_PAD11_XPD_S = 20
const RTC_IO_TOUCH_PAD11_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD11_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD11_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD11_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD11_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD11_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD11_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD11_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD11_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD11_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD11_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD11_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD11_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD12_DRV = 0x00000003
const RTC_IO_TOUCH_PAD12_DRV_V = 0x3
const RTC_IO_TOUCH_PAD12_DRV_S = 29
const RTC_IO_TOUCH_PAD12_RDE_V = 0x1
const RTC_IO_TOUCH_PAD12_RDE_S = 28
const RTC_IO_TOUCH_PAD12_RUE_V = 0x1
const RTC_IO_TOUCH_PAD12_RUE_S = 27
const RTC_IO_TOUCH_PAD12_DAC = 0x00000007
const RTC_IO_TOUCH_PAD12_DAC_V = 0x7
const RTC_IO_TOUCH_PAD12_DAC_S = 23
const RTC_IO_TOUCH_PAD12_START_V = 0x1
const RTC_IO_TOUCH_PAD12_START_S = 22
const RTC_IO_TOUCH_PAD12_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD12_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD12_XPD_V = 0x1
const RTC_IO_TOUCH_PAD12_XPD_S = 20
const RTC_IO_TOUCH_PAD12_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD12_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD12_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD12_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD12_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD12_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD12_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD12_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD12_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD12_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD12_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD12_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD12_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD13_DRV = 0x00000003
const RTC_IO_TOUCH_PAD13_DRV_V = 0x3
const RTC_IO_TOUCH_PAD13_DRV_S = 29
const RTC_IO_TOUCH_PAD13_RDE_V = 0x1
const RTC_IO_TOUCH_PAD13_RDE_S = 28
const RTC_IO_TOUCH_PAD13_RUE_V = 0x1
const RTC_IO_TOUCH_PAD13_RUE_S = 27
const RTC_IO_TOUCH_PAD13_DAC = 0x00000007
const RTC_IO_TOUCH_PAD13_DAC_V = 0x7
const RTC_IO_TOUCH_PAD13_DAC_S = 23
const RTC_IO_TOUCH_PAD13_START_V = 0x1
const RTC_IO_TOUCH_PAD13_START_S = 22
const RTC_IO_TOUCH_PAD13_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD13_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD13_XPD_V = 0x1
const RTC_IO_TOUCH_PAD13_XPD_S = 20
const RTC_IO_TOUCH_PAD13_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD13_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD13_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD13_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD13_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD13_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD13_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD13_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD13_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD13_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD13_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD13_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD13_FUN_IE_S = 13
const RTC_IO_TOUCH_PAD14_DRV = 0x00000003
const RTC_IO_TOUCH_PAD14_DRV_V = 0x3
const RTC_IO_TOUCH_PAD14_DRV_S = 29
const RTC_IO_TOUCH_PAD14_RDE_V = 0x1
const RTC_IO_TOUCH_PAD14_RDE_S = 28
const RTC_IO_TOUCH_PAD14_RUE_V = 0x1
const RTC_IO_TOUCH_PAD14_RUE_S = 27
const RTC_IO_TOUCH_PAD14_DAC = 0x00000007
const RTC_IO_TOUCH_PAD14_DAC_V = 0x7
const RTC_IO_TOUCH_PAD14_DAC_S = 23
const RTC_IO_TOUCH_PAD14_START_V = 0x1
const RTC_IO_TOUCH_PAD14_START_S = 22
const RTC_IO_TOUCH_PAD14_TIE_OPT_V = 0x1
const RTC_IO_TOUCH_PAD14_TIE_OPT_S = 21
const RTC_IO_TOUCH_PAD14_XPD_V = 0x1
const RTC_IO_TOUCH_PAD14_XPD_S = 20
const RTC_IO_TOUCH_PAD14_MUX_SEL_V = 0x1
const RTC_IO_TOUCH_PAD14_MUX_SEL_S = 19
const RTC_IO_TOUCH_PAD14_FUN_SEL = 0x00000003
const RTC_IO_TOUCH_PAD14_FUN_SEL_V = 0x3
const RTC_IO_TOUCH_PAD14_FUN_SEL_S = 17
const RTC_IO_TOUCH_PAD14_SLP_SEL_V = 0x1
const RTC_IO_TOUCH_PAD14_SLP_SEL_S = 16
const RTC_IO_TOUCH_PAD14_SLP_IE_V = 0x1
const RTC_IO_TOUCH_PAD14_SLP_IE_S = 15
const RTC_IO_TOUCH_PAD14_SLP_OE_V = 0x1
const RTC_IO_TOUCH_PAD14_SLP_OE_S = 14
const RTC_IO_TOUCH_PAD14_FUN_IE_V = 0x1
const RTC_IO_TOUCH_PAD14_FUN_IE_S = 13
const RTC_IO_X32P_DRV = 0x00000003
const RTC_IO_X32P_DRV_V = 0x3
const RTC_IO_X32P_DRV_S = 29
const RTC_IO_X32P_RDE_V = 0x1
const RTC_IO_X32P_RDE_S = 28
const RTC_IO_X32P_RUE_V = 0x1
const RTC_IO_X32P_RUE_S = 27
const RTC_IO_X32P_MUX_SEL_V = 0x1
const RTC_IO_X32P_MUX_SEL_S = 19
const RTC_IO_X32P_FUN_SEL = 0x00000003
const RTC_IO_X32P_FUN_SEL_V = 0x3
const RTC_IO_X32P_FUN_SEL_S = 17
const RTC_IO_X32P_SLP_SEL_V = 0x1
const RTC_IO_X32P_SLP_SEL_S = 16
const RTC_IO_X32P_SLP_IE_V = 0x1
const RTC_IO_X32P_SLP_IE_S = 15
const RTC_IO_X32P_SLP_OE_V = 0x1
const RTC_IO_X32P_SLP_OE_S = 14
const RTC_IO_X32P_FUN_IE_V = 0x1
const RTC_IO_X32P_FUN_IE_S = 13
const RTC_IO_X32N_DRV = 0x00000003
const RTC_IO_X32N_DRV_V = 0x3
const RTC_IO_X32N_DRV_S = 29
const RTC_IO_X32N_RDE_V = 0x1
const RTC_IO_X32N_RDE_S = 28
const RTC_IO_X32N_RUE_V = 0x1
const RTC_IO_X32N_RUE_S = 27
const RTC_IO_X32N_MUX_SEL_V = 0x1
const RTC_IO_X32N_MUX_SEL_S = 19
const RTC_IO_X32N_FUN_SEL = 0x00000003
const RTC_IO_X32N_FUN_SEL_V = 0x3
const RTC_IO_X32N_FUN_SEL_S = 17
const RTC_IO_X32N_SLP_SEL_V = 0x1
const RTC_IO_X32N_SLP_SEL_S = 16
const RTC_IO_X32N_SLP_IE_V = 0x1
const RTC_IO_X32N_SLP_IE_S = 15
const RTC_IO_X32N_SLP_OE_V = 0x1
const RTC_IO_X32N_SLP_OE_S = 14
const RTC_IO_X32N_FUN_IE_V = 0x1
const RTC_IO_X32N_FUN_IE_S = 13
const RTC_IO_PDAC1_DRV = 0x00000003
const RTC_IO_PDAC1_DRV_V = 0x3
const RTC_IO_PDAC1_DRV_S = 29
const RTC_IO_PDAC1_RDE_V = 0x1
const RTC_IO_PDAC1_RDE_S = 28
const RTC_IO_PDAC1_RUE_V = 0x1
const RTC_IO_PDAC1_RUE_S = 27
const RTC_IO_PDAC1_MUX_SEL_V = 0x1
const RTC_IO_PDAC1_MUX_SEL_S = 19
const RTC_IO_PDAC1_FUN_SEL = 0x00000003
const RTC_IO_PDAC1_FUN_SEL_V = 0x3
const RTC_IO_PDAC1_FUN_SEL_S = 17
const RTC_IO_PDAC1_SLP_SEL_V = 0x1
const RTC_IO_PDAC1_SLP_SEL_S = 16
const RTC_IO_PDAC1_SLP_IE_V = 0x1
const RTC_IO_PDAC1_SLP_IE_S = 15
const RTC_IO_PDAC1_SLP_OE_V = 0x1
const RTC_IO_PDAC1_SLP_OE_S = 14
const RTC_IO_PDAC1_FUN_IE_V = 0x1
const RTC_IO_PDAC1_FUN_IE_S = 13
const RTC_IO_PDAC1_DAC_XPD_FORCE_V = 0x1
const RTC_IO_PDAC1_DAC_XPD_FORCE_S = 12
const RTC_IO_PDAC1_XPD_DAC_V = 0x1
const RTC_IO_PDAC1_XPD_DAC_S = 11
const RTC_IO_PDAC1_DAC = 0x000000FF
const RTC_IO_PDAC1_DAC_V = 0xFF
const RTC_IO_PDAC1_DAC_S = 3
const RTC_IO_PDAC2_DRV = 0x00000003
const RTC_IO_PDAC2_DRV_V = 0x3
const RTC_IO_PDAC2_DRV_S = 29
const RTC_IO_PDAC2_RDE_V = 0x1
const RTC_IO_PDAC2_RDE_S = 28
const RTC_IO_PDAC2_RUE_V = 0x1
const RTC_IO_PDAC2_RUE_S = 27
const RTC_IO_PDAC2_MUX_SEL_V = 0x1
const RTC_IO_PDAC2_MUX_SEL_S = 19
const RTC_IO_PDAC2_FUN_SEL = 0x00000003
const RTC_IO_PDAC2_FUN_SEL_V = 0x3
const RTC_IO_PDAC2_FUN_SEL_S = 17
const RTC_IO_PDAC2_SLP_SEL_V = 0x1
const RTC_IO_PDAC2_SLP_SEL_S = 16
const RTC_IO_PDAC2_SLP_IE_V = 0x1
const RTC_IO_PDAC2_SLP_IE_S = 15
const RTC_IO_PDAC2_SLP_OE_V = 0x1
const RTC_IO_PDAC2_SLP_OE_S = 14
const RTC_IO_PDAC2_FUN_IE_V = 0x1
const RTC_IO_PDAC2_FUN_IE_S = 13
const RTC_IO_PDAC2_DAC_XPD_FORCE_V = 0x1
const RTC_IO_PDAC2_DAC_XPD_FORCE_S = 12
const RTC_IO_PDAC2_XPD_DAC_V = 0x1
const RTC_IO_PDAC2_XPD_DAC_S = 11
const RTC_IO_PDAC2_DAC = 0x000000FF
const RTC_IO_PDAC2_DAC_V = 0xFF
const RTC_IO_PDAC2_DAC_S = 3
const RTC_IO_PAD19_DRV = 0x00000003
const RTC_IO_PAD19_DRV_V = 0x3
const RTC_IO_PAD19_DRV_S = 29
const RTC_IO_PAD19_RDE_V = 0x1
const RTC_IO_PAD19_RDE_S = 28
const RTC_IO_PAD19_RUE_V = 0x1
const RTC_IO_PAD19_RUE_S = 27
const RTC_IO_PAD19_MUX_SEL_V = 0x1
const RTC_IO_PAD19_MUX_SEL_S = 19
const RTC_IO_PAD19_FUN_SEL = 0x00000003
const RTC_IO_PAD19_FUN_SEL_V = 0x3
const RTC_IO_PAD19_FUN_SEL_S = 17
const RTC_IO_PAD19_SLP_SEL_V = 0x1
const RTC_IO_PAD19_SLP_SEL_S = 16
const RTC_IO_PAD19_SLP_IE_V = 0x1
const RTC_IO_PAD19_SLP_IE_S = 15
const RTC_IO_PAD19_SLP_OE_V = 0x1
const RTC_IO_PAD19_SLP_OE_S = 14
const RTC_IO_PAD19_FUN_IE_V = 0x1
const RTC_IO_PAD19_FUN_IE_S = 13
const RTC_IO_PAD20_DRV = 0x00000003
const RTC_IO_PAD20_DRV_V = 0x3
const RTC_IO_PAD20_DRV_S = 29
const RTC_IO_PAD20_RDE_V = 0x1
const RTC_IO_PAD20_RDE_S = 28
const RTC_IO_PAD20_RUE_V = 0x1
const RTC_IO_PAD20_RUE_S = 27
const RTC_IO_PAD20_MUX_SEL_V = 0x1
const RTC_IO_PAD20_MUX_SEL_S = 19
const RTC_IO_PAD20_FUN_SEL = 0x00000003
const RTC_IO_PAD20_FUN_SEL_V = 0x3
const RTC_IO_PAD20_FUN_SEL_S = 17
const RTC_IO_PAD20_SLP_SEL_V = 0x1
const RTC_IO_PAD20_SLP_SEL_S = 16
const RTC_IO_PAD20_SLP_IE_V = 0x1
const RTC_IO_PAD20_SLP_IE_S = 15
const RTC_IO_PAD20_SLP_OE_V = 0x1
const RTC_IO_PAD20_SLP_OE_S = 14
const RTC_IO_PAD20_FUN_IE_V = 0x1
const RTC_IO_PAD20_FUN_IE_S = 13
const RTC_IO_PAD21_DRV = 0x00000003
const RTC_IO_PAD21_DRV_V = 0x3
const RTC_IO_PAD21_DRV_S = 29
const RTC_IO_PAD21_RDE_V = 0x1
const RTC_IO_PAD21_RDE_S = 28
const RTC_IO_PAD21_RUE_V = 0x1
const RTC_IO_PAD21_RUE_S = 27
const RTC_IO_PAD21_MUX_SEL_V = 0x1
const RTC_IO_PAD21_MUX_SEL_S = 19
const RTC_IO_PAD21_FUN_SEL = 0x00000003
const RTC_IO_PAD21_FUN_SEL_V = 0x3
const RTC_IO_PAD21_FUN_SEL_S = 17
const RTC_IO_PAD21_SLP_SEL_V = 0x1
const RTC_IO_PAD21_SLP_SEL_S = 16
const RTC_IO_PAD21_SLP_IE_V = 0x1
const RTC_IO_PAD21_SLP_IE_S = 15
const RTC_IO_PAD21_SLP_OE_V = 0x1
const RTC_IO_PAD21_SLP_OE_S = 14
const RTC_IO_PAD21_FUN_IE_V = 0x1
const RTC_IO_PAD21_FUN_IE_S = 13
const RTC_IO_EXT_WAKEUP0_SEL = 0x0000001F
const RTC_IO_EXT_WAKEUP0_SEL_V = 0x1F
const RTC_IO_EXT_WAKEUP0_SEL_S = 27
const RTC_IO_XTL_EXT_CTR_SEL = 0x0000001F
const RTC_IO_XTL_EXT_CTR_SEL_V = 0x1F
const RTC_IO_XTL_EXT_CTR_SEL_S = 27
const RTC_IO_SAR_I2C_SDA_SEL = 0x00000003
const RTC_IO_SAR_I2C_SDA_SEL_V = 0x3
const RTC_IO_SAR_I2C_SDA_SEL_S = 30
const RTC_IO_SAR_I2C_SCL_SEL = 0x00000003
const RTC_IO_SAR_I2C_SCL_SEL_V = 0x3
const RTC_IO_SAR_I2C_SCL_SEL_S = 28
const RTC_IO_SAR_DEBUG_BIT_SEL = 0x0000001F
const RTC_IO_SAR_DEBUG_BIT_SEL_V = 0x1F
const RTC_IO_SAR_DEBUG_BIT_SEL_S = 23
const RTC_IO_IO_TOUCH_BUFMODE_V = 0x1
const RTC_IO_IO_TOUCH_BUFMODE_S = 4
const RTC_IO_IO_TOUCH_BUFSEL = 0x0000000F
const RTC_IO_IO_TOUCH_BUFSEL_V = 0xF
const RTC_IO_IO_TOUCH_BUFSEL_S = 0
const RTC_IO_IO_DATE = 0x0FFFFFFF
const RTC_IO_IO_DATE_V = 0xFFFFFFF
const RTC_IO_IO_DATE_S = 0
const RTCIO_GPIO0_CHANNEL = 0
const RTCIO_CHANNEL_0_GPIO_NUM = 0
const RTCIO_GPIO1_CHANNEL = 1
const RTCIO_CHANNEL_1_GPIO_NUM = 1
const RTCIO_GPIO2_CHANNEL = 2
const RTCIO_CHANNEL_2_GPIO_NUM = 2
const RTCIO_GPIO3_CHANNEL = 3
const RTCIO_CHANNEL_3_GPIO_NUM = 3
const RTCIO_GPIO4_CHANNEL = 4
const RTCIO_CHANNEL_4_GPIO_NUM = 4
const RTCIO_GPIO5_CHANNEL = 5
const RTCIO_CHANNEL_5_GPIO_NUM = 5
const RTCIO_GPIO6_CHANNEL = 6
const RTCIO_CHANNEL_6_GPIO_NUM = 6
const RTCIO_GPIO7_CHANNEL = 7
const RTCIO_CHANNEL_7_GPIO_NUM = 7
const RTCIO_GPIO8_CHANNEL = 8
const RTCIO_CHANNEL_8_GPIO_NUM = 8
const RTCIO_GPIO9_CHANNEL = 9
const RTCIO_CHANNEL_9_GPIO_NUM = 9
const RTCIO_GPIO10_CHANNEL = 10
const RTCIO_CHANNEL_10_GPIO_NUM = 10
const RTCIO_GPIO11_CHANNEL = 11
const RTCIO_CHANNEL_11_GPIO_NUM = 11
const RTCIO_GPIO12_CHANNEL = 12
const RTCIO_CHANNEL_12_GPIO_NUM = 12
const RTCIO_GPIO13_CHANNEL = 13
const RTCIO_CHANNEL_13_GPIO_NUM = 13
const RTCIO_GPIO14_CHANNEL = 14
const RTCIO_CHANNEL_14_GPIO_NUM = 14
const RTCIO_GPIO15_CHANNEL = 15
const RTCIO_CHANNEL_15_GPIO_NUM = 15
const RTCIO_GPIO16_CHANNEL = 16
const RTCIO_CHANNEL_16_GPIO_NUM = 16
const RTCIO_GPIO17_CHANNEL = 17
const RTCIO_CHANNEL_17_GPIO_NUM = 17
const RTCIO_GPIO18_CHANNEL = 18
const RTCIO_CHANNEL_18_GPIO_NUM = 18
const RTCIO_GPIO19_CHANNEL = 19
const RTCIO_CHANNEL_19_GPIO_NUM = 19
const RTCIO_GPIO20_CHANNEL = 20
const RTCIO_CHANNEL_20_GPIO_NUM = 20
const RTCIO_GPIO21_CHANNEL = 21
const RTCIO_CHANNEL_21_GPIO_NUM = 21
const I2S_RX_RESET_ST_V = 0x1
const I2S_RX_RESET_ST_S = 29
const I2S_RX_BIG_ENDIAN_V = 0x1
const I2S_RX_BIG_ENDIAN_S = 28
const I2S_TX_BIG_ENDIAN_V = 0x1
const I2S_TX_BIG_ENDIAN_S = 27
const I2S_PRE_REQ_EN_V = 0x1
const I2S_PRE_REQ_EN_S = 26
const I2S_RX_DMA_EQUAL_V = 0x1
const I2S_RX_DMA_EQUAL_S = 25
const I2S_TX_DMA_EQUAL_V = 0x1
const I2S_TX_DMA_EQUAL_S = 24
const I2S_TX_RESET_ST_V = 0x1
const I2S_TX_RESET_ST_S = 23
const I2S_RX_FIFO_RESET_ST_V = 0x1
const I2S_RX_FIFO_RESET_ST_S = 22
const I2S_TX_FIFO_RESET_ST_V = 0x1
const I2S_TX_FIFO_RESET_ST_S = 21
const I2S_SIG_LOOPBACK_V = 0x1
const I2S_SIG_LOOPBACK_S = 20
const I2S_RX_LSB_FIRST_DMA_V = 0x1
const I2S_RX_LSB_FIRST_DMA_S = 19
const I2S_TX_LSB_FIRST_DMA_V = 0x1
const I2S_TX_LSB_FIRST_DMA_S = 18
const I2S_RX_MSB_RIGHT_V = 0x1
const I2S_RX_MSB_RIGHT_S = 17
const I2S_TX_MSB_RIGHT_V = 0x1
const I2S_TX_MSB_RIGHT_S = 16
const I2S_RX_MONO_V = 0x1
const I2S_RX_MONO_S = 15
const I2S_TX_MONO_V = 0x1
const I2S_TX_MONO_S = 14
const I2S_RX_SHORT_SYNC_V = 0x1
const I2S_RX_SHORT_SYNC_S = 13
const I2S_TX_SHORT_SYNC_V = 0x1
const I2S_TX_SHORT_SYNC_S = 12
const I2S_RX_MSB_SHIFT_V = 0x1
const I2S_RX_MSB_SHIFT_S = 11
const I2S_TX_MSB_SHIFT_V = 0x1
const I2S_TX_MSB_SHIFT_S = 10
const I2S_RX_RIGHT_FIRST_V = 0x1
const I2S_RX_RIGHT_FIRST_S = 9
const I2S_TX_RIGHT_FIRST_V = 0x1
const I2S_TX_RIGHT_FIRST_S = 8
const I2S_RX_SLAVE_MOD_V = 0x1
const I2S_RX_SLAVE_MOD_S = 7
const I2S_TX_SLAVE_MOD_V = 0x1
const I2S_TX_SLAVE_MOD_S = 6
const I2S_RX_START_V = 0x1
const I2S_RX_START_S = 5
const I2S_TX_START_V = 0x1
const I2S_TX_START_S = 4
const I2S_RX_FIFO_RESET_V = 0x1
const I2S_RX_FIFO_RESET_S = 3
const I2S_TX_FIFO_RESET_V = 0x1
const I2S_TX_FIFO_RESET_S = 2
const I2S_RX_RESET_V = 0x1
const I2S_RX_RESET_S = 1
const I2S_TX_RESET_V = 0x1
const I2S_TX_RESET_S = 0
const I2S_V_SYNC_INT_RAW_V = 0x1
const I2S_V_SYNC_INT_RAW_S = 17
const I2S_OUT_TOTAL_EOF_INT_RAW_V = 0x1
const I2S_OUT_TOTAL_EOF_INT_RAW_S = 16
const I2S_IN_DSCR_EMPTY_INT_RAW_V = 0x1
const I2S_IN_DSCR_EMPTY_INT_RAW_S = 15
const I2S_OUT_DSCR_ERR_INT_RAW_V = 0x1
const I2S_OUT_DSCR_ERR_INT_RAW_S = 14
const I2S_IN_DSCR_ERR_INT_RAW_V = 0x1
const I2S_IN_DSCR_ERR_INT_RAW_S = 13
const I2S_OUT_EOF_INT_RAW_V = 0x1
const I2S_OUT_EOF_INT_RAW_S = 12
const I2S_OUT_DONE_INT_RAW_V = 0x1
const I2S_OUT_DONE_INT_RAW_S = 11
const I2S_IN_ERR_EOF_INT_RAW_V = 0x1
const I2S_IN_ERR_EOF_INT_RAW_S = 10
const I2S_IN_SUC_EOF_INT_RAW_V = 0x1
const I2S_IN_SUC_EOF_INT_RAW_S = 9
const I2S_IN_DONE_INT_RAW_V = 0x1
const I2S_IN_DONE_INT_RAW_S = 8
const I2S_TX_HUNG_INT_RAW_V = 0x1
const I2S_TX_HUNG_INT_RAW_S = 7
const I2S_RX_HUNG_INT_RAW_V = 0x1
const I2S_RX_HUNG_INT_RAW_S = 6
const I2S_TX_REMPTY_INT_RAW_V = 0x1
const I2S_TX_REMPTY_INT_RAW_S = 5
const I2S_TX_WFULL_INT_RAW_V = 0x1
const I2S_TX_WFULL_INT_RAW_S = 4
const I2S_RX_REMPTY_INT_RAW_V = 0x1
const I2S_RX_REMPTY_INT_RAW_S = 3
const I2S_RX_WFULL_INT_RAW_V = 0x1
const I2S_RX_WFULL_INT_RAW_S = 2
const I2S_TX_PUT_DATA_INT_RAW_V = 0x1
const I2S_TX_PUT_DATA_INT_RAW_S = 1
const I2S_RX_TAKE_DATA_INT_RAW_V = 0x1
const I2S_RX_TAKE_DATA_INT_RAW_S = 0
const I2S_V_SYNC_INT_ST_V = 0x1
const I2S_V_SYNC_INT_ST_S = 17
const I2S_OUT_TOTAL_EOF_INT_ST_V = 0x1
const I2S_OUT_TOTAL_EOF_INT_ST_S = 16
const I2S_IN_DSCR_EMPTY_INT_ST_V = 0x1
const I2S_IN_DSCR_EMPTY_INT_ST_S = 15
const I2S_OUT_DSCR_ERR_INT_ST_V = 0x1
const I2S_OUT_DSCR_ERR_INT_ST_S = 14
const I2S_IN_DSCR_ERR_INT_ST_V = 0x1
const I2S_IN_DSCR_ERR_INT_ST_S = 13
const I2S_OUT_EOF_INT_ST_V = 0x1
const I2S_OUT_EOF_INT_ST_S = 12
const I2S_OUT_DONE_INT_ST_V = 0x1
const I2S_OUT_DONE_INT_ST_S = 11
const I2S_IN_ERR_EOF_INT_ST_V = 0x1
const I2S_IN_ERR_EOF_INT_ST_S = 10
const I2S_IN_SUC_EOF_INT_ST_V = 0x1
const I2S_IN_SUC_EOF_INT_ST_S = 9
const I2S_IN_DONE_INT_ST_V = 0x1
const I2S_IN_DONE_INT_ST_S = 8
const I2S_TX_HUNG_INT_ST_V = 0x1
const I2S_TX_HUNG_INT_ST_S = 7
const I2S_RX_HUNG_INT_ST_V = 0x1
const I2S_RX_HUNG_INT_ST_S = 6
const I2S_TX_REMPTY_INT_ST_V = 0x1
const I2S_TX_REMPTY_INT_ST_S = 5
const I2S_TX_WFULL_INT_ST_V = 0x1
const I2S_TX_WFULL_INT_ST_S = 4
const I2S_RX_REMPTY_INT_ST_V = 0x1
const I2S_RX_REMPTY_INT_ST_S = 3
const I2S_RX_WFULL_INT_ST_V = 0x1
const I2S_RX_WFULL_INT_ST_S = 2
const I2S_TX_PUT_DATA_INT_ST_V = 0x1
const I2S_TX_PUT_DATA_INT_ST_S = 1
const I2S_RX_TAKE_DATA_INT_ST_V = 0x1
const I2S_RX_TAKE_DATA_INT_ST_S = 0
const I2S_V_SYNC_INT_ENA_V = 0x1
const I2S_V_SYNC_INT_ENA_S = 17
const I2S_OUT_TOTAL_EOF_INT_ENA_V = 0x1
const I2S_OUT_TOTAL_EOF_INT_ENA_S = 16
const I2S_IN_DSCR_EMPTY_INT_ENA_V = 0x1
const I2S_IN_DSCR_EMPTY_INT_ENA_S = 15
const I2S_OUT_DSCR_ERR_INT_ENA_V = 0x1
const I2S_OUT_DSCR_ERR_INT_ENA_S = 14
const I2S_IN_DSCR_ERR_INT_ENA_V = 0x1
const I2S_IN_DSCR_ERR_INT_ENA_S = 13
const I2S_OUT_EOF_INT_ENA_V = 0x1
const I2S_OUT_EOF_INT_ENA_S = 12
const I2S_OUT_DONE_INT_ENA_V = 0x1
const I2S_OUT_DONE_INT_ENA_S = 11
const I2S_IN_ERR_EOF_INT_ENA_V = 0x1
const I2S_IN_ERR_EOF_INT_ENA_S = 10
const I2S_IN_SUC_EOF_INT_ENA_V = 0x1
const I2S_IN_SUC_EOF_INT_ENA_S = 9
const I2S_IN_DONE_INT_ENA_V = 0x1
const I2S_IN_DONE_INT_ENA_S = 8
const I2S_TX_HUNG_INT_ENA_V = 0x1
const I2S_TX_HUNG_INT_ENA_S = 7
const I2S_RX_HUNG_INT_ENA_V = 0x1
const I2S_RX_HUNG_INT_ENA_S = 6
const I2S_TX_REMPTY_INT_ENA_V = 0x1
const I2S_TX_REMPTY_INT_ENA_S = 5
const I2S_TX_WFULL_INT_ENA_V = 0x1
const I2S_TX_WFULL_INT_ENA_S = 4
const I2S_RX_REMPTY_INT_ENA_V = 0x1
const I2S_RX_REMPTY_INT_ENA_S = 3
const I2S_RX_WFULL_INT_ENA_V = 0x1
const I2S_RX_WFULL_INT_ENA_S = 2
const I2S_TX_PUT_DATA_INT_ENA_V = 0x1
const I2S_TX_PUT_DATA_INT_ENA_S = 1
const I2S_RX_TAKE_DATA_INT_ENA_V = 0x1
const I2S_RX_TAKE_DATA_INT_ENA_S = 0
const I2S_V_SYNC_INT_CLR_V = 0x1
const I2S_V_SYNC_INT_CLR_S = 17
const I2S_OUT_TOTAL_EOF_INT_CLR_V = 0x1
const I2S_OUT_TOTAL_EOF_INT_CLR_S = 16
const I2S_IN_DSCR_EMPTY_INT_CLR_V = 0x1
const I2S_IN_DSCR_EMPTY_INT_CLR_S = 15
const I2S_OUT_DSCR_ERR_INT_CLR_V = 0x1
const I2S_OUT_DSCR_ERR_INT_CLR_S = 14
const I2S_IN_DSCR_ERR_INT_CLR_V = 0x1
const I2S_IN_DSCR_ERR_INT_CLR_S = 13
const I2S_OUT_EOF_INT_CLR_V = 0x1
const I2S_OUT_EOF_INT_CLR_S = 12
const I2S_OUT_DONE_INT_CLR_V = 0x1
const I2S_OUT_DONE_INT_CLR_S = 11
const I2S_IN_ERR_EOF_INT_CLR_V = 0x1
const I2S_IN_ERR_EOF_INT_CLR_S = 10
const I2S_IN_SUC_EOF_INT_CLR_V = 0x1
const I2S_IN_SUC_EOF_INT_CLR_S = 9
const I2S_IN_DONE_INT_CLR_V = 0x1
const I2S_IN_DONE_INT_CLR_S = 8
const I2S_TX_HUNG_INT_CLR_V = 0x1
const I2S_TX_HUNG_INT_CLR_S = 7
const I2S_RX_HUNG_INT_CLR_V = 0x1
const I2S_RX_HUNG_INT_CLR_S = 6
const I2S_TX_REMPTY_INT_CLR_V = 0x1
const I2S_TX_REMPTY_INT_CLR_S = 5
const I2S_TX_WFULL_INT_CLR_V = 0x1
const I2S_TX_WFULL_INT_CLR_S = 4
const I2S_RX_REMPTY_INT_CLR_V = 0x1
const I2S_RX_REMPTY_INT_CLR_S = 3
const I2S_RX_WFULL_INT_CLR_V = 0x1
const I2S_RX_WFULL_INT_CLR_S = 2
const I2S_PUT_DATA_INT_CLR_V = 0x1
const I2S_PUT_DATA_INT_CLR_S = 1
const I2S_TAKE_DATA_INT_CLR_V = 0x1
const I2S_TAKE_DATA_INT_CLR_S = 0
const I2S_TX_BCK_IN_INV_V = 0x1
const I2S_TX_BCK_IN_INV_S = 24
const I2S_DATA_ENABLE_DELAY = 0x00000003
const I2S_DATA_ENABLE_DELAY_V = 0x3
const I2S_DATA_ENABLE_DELAY_S = 22
const I2S_RX_DSYNC_SW_V = 0x1
const I2S_RX_DSYNC_SW_S = 21
const I2S_TX_DSYNC_SW_V = 0x1
const I2S_TX_DSYNC_SW_S = 20
const I2S_RX_BCK_OUT_DELAY = 0x00000003
const I2S_RX_BCK_OUT_DELAY_V = 0x3
const I2S_RX_BCK_OUT_DELAY_S = 18
const I2S_RX_WS_OUT_DELAY = 0x00000003
const I2S_RX_WS_OUT_DELAY_V = 0x3
const I2S_RX_WS_OUT_DELAY_S = 16
const I2S_TX_SD_OUT_DELAY = 0x00000003
const I2S_TX_SD_OUT_DELAY_V = 0x3
const I2S_TX_SD_OUT_DELAY_S = 14
const I2S_TX_WS_OUT_DELAY = 0x00000003
const I2S_TX_WS_OUT_DELAY_V = 0x3
const I2S_TX_WS_OUT_DELAY_S = 12
const I2S_TX_BCK_OUT_DELAY = 0x00000003
const I2S_TX_BCK_OUT_DELAY_V = 0x3
const I2S_TX_BCK_OUT_DELAY_S = 10
const I2S_RX_SD_IN_DELAY = 0x00000003
const I2S_RX_SD_IN_DELAY_V = 0x3
const I2S_RX_SD_IN_DELAY_S = 8
const I2S_RX_WS_IN_DELAY = 0x00000003
const I2S_RX_WS_IN_DELAY_V = 0x3
const I2S_RX_WS_IN_DELAY_S = 6
const I2S_RX_BCK_IN_DELAY = 0x00000003
const I2S_RX_BCK_IN_DELAY_V = 0x3
const I2S_RX_BCK_IN_DELAY_S = 4
const I2S_TX_WS_IN_DELAY = 0x00000003
const I2S_TX_WS_IN_DELAY_V = 0x3
const I2S_TX_WS_IN_DELAY_S = 2
const I2S_TX_BCK_IN_DELAY = 0x00000003
const I2S_TX_BCK_IN_DELAY_V = 0x3
const I2S_TX_BCK_IN_DELAY_S = 0
const I2S_RX_FIFO_MOD_FORCE_EN_V = 0x1
const I2S_RX_FIFO_MOD_FORCE_EN_S = 20
const I2S_TX_FIFO_MOD_FORCE_EN_V = 0x1
const I2S_TX_FIFO_MOD_FORCE_EN_S = 19
const I2S_RX_FIFO_MOD = 0x00000007
const I2S_RX_FIFO_MOD_V = 0x7
const I2S_RX_FIFO_MOD_S = 16
const I2S_TX_FIFO_MOD = 0x00000007
const I2S_TX_FIFO_MOD_V = 0x7
const I2S_TX_FIFO_MOD_S = 13
const I2S_DSCR_EN_V = 0x1
const I2S_DSCR_EN_S = 12
const I2S_TX_DATA_NUM = 0x0000003F
const I2S_TX_DATA_NUM_V = 0x3F
const I2S_TX_DATA_NUM_S = 6
const I2S_RX_DATA_NUM = 0x0000003F
const I2S_RX_DATA_NUM_V = 0x3F
const I2S_RX_DATA_NUM_S = 0
const I2S_RX_EOF_NUM = 0xFFFFFFFF
const I2S_RX_EOF_NUM_V = 0xFFFFFFFF
const I2S_RX_EOF_NUM_S = 0
const I2S_SIGLE_DATA = 0xFFFFFFFF
const I2S_SIGLE_DATA_V = 0xFFFFFFFF
const I2S_SIGLE_DATA_S = 0
const I2S_RX_CHAN_MOD = 0x00000003
const I2S_RX_CHAN_MOD_V = 0x3
const I2S_RX_CHAN_MOD_S = 3
const I2S_TX_CHAN_MOD = 0x00000007
const I2S_TX_CHAN_MOD_V = 0x7
const I2S_TX_CHAN_MOD_S = 0
const I2S_OUTLINK_PARK_V = 0x1
const I2S_OUTLINK_PARK_S = 31
const I2S_OUTLINK_RESTART_V = 0x1
const I2S_OUTLINK_RESTART_S = 30
const I2S_OUTLINK_START_V = 0x1
const I2S_OUTLINK_START_S = 29
const I2S_OUTLINK_STOP_V = 0x1
const I2S_OUTLINK_STOP_S = 28
const I2S_OUTLINK_ADDR = 0x000FFFFF
const I2S_OUTLINK_ADDR_V = 0xFFFFF
const I2S_OUTLINK_ADDR_S = 0
const I2S_INLINK_PARK_V = 0x1
const I2S_INLINK_PARK_S = 31
const I2S_INLINK_RESTART_V = 0x1
const I2S_INLINK_RESTART_S = 30
const I2S_INLINK_START_V = 0x1
const I2S_INLINK_START_S = 29
const I2S_INLINK_STOP_V = 0x1
const I2S_INLINK_STOP_S = 28
const I2S_INLINK_ADDR = 0x000FFFFF
const I2S_INLINK_ADDR_V = 0xFFFFF
const I2S_INLINK_ADDR_S = 0
const I2S_OUT_EOF_DES_ADDR = 0xFFFFFFFF
const I2S_OUT_EOF_DES_ADDR_V = 0xFFFFFFFF
const I2S_OUT_EOF_DES_ADDR_S = 0
const I2S_IN_SUC_EOF_DES_ADDR = 0xFFFFFFFF
const I2S_IN_SUC_EOF_DES_ADDR_V = 0xFFFFFFFF
const I2S_IN_SUC_EOF_DES_ADDR_S = 0
const I2S_OUT_EOF_BFR_DES_ADDR = 0xFFFFFFFF
const I2S_OUT_EOF_BFR_DES_ADDR_V = 0xFFFFFFFF
const I2S_OUT_EOF_BFR_DES_ADDR_S = 0
const I2S_AHB_TESTADDR = 0x00000003
const I2S_AHB_TESTADDR_V = 0x3
const I2S_AHB_TESTADDR_S = 4
const I2S_AHB_TESTMODE = 0x00000007
const I2S_AHB_TESTMODE_V = 0x7
const I2S_AHB_TESTMODE_S = 0
const I2S_INLINK_DSCR = 0xFFFFFFFF
const I2S_INLINK_DSCR_V = 0xFFFFFFFF
const I2S_INLINK_DSCR_S = 0
const I2S_INLINK_DSCR_BF0 = 0xFFFFFFFF
const I2S_INLINK_DSCR_BF0_V = 0xFFFFFFFF
const I2S_INLINK_DSCR_BF0_S = 0
const I2S_INLINK_DSCR_BF1 = 0xFFFFFFFF
const I2S_INLINK_DSCR_BF1_V = 0xFFFFFFFF
const I2S_INLINK_DSCR_BF1_S = 0
const I2S_OUTLINK_DSCR = 0xFFFFFFFF
const I2S_OUTLINK_DSCR_V = 0xFFFFFFFF
const I2S_OUTLINK_DSCR_S = 0
const I2S_OUTLINK_DSCR_BF0 = 0xFFFFFFFF
const I2S_OUTLINK_DSCR_BF0_V = 0xFFFFFFFF
const I2S_OUTLINK_DSCR_BF0_S = 0
const I2S_OUTLINK_DSCR_BF1 = 0xFFFFFFFF
const I2S_OUTLINK_DSCR_BF1_V = 0xFFFFFFFF
const I2S_OUTLINK_DSCR_BF1_S = 0
const I2S_EXT_MEM_BK_SIZE = 0x00000003
const I2S_EXT_MEM_BK_SIZE_V = 0x3
const I2S_EXT_MEM_BK_SIZE_S = 14
const I2S_MEM_TRANS_EN_V = 0x1
const I2S_MEM_TRANS_EN_S = 13
const I2S_CHECK_OWNER_V = 0x1
const I2S_CHECK_OWNER_S = 12
const I2S_OUT_DATA_BURST_EN_V = 0x1
const I2S_OUT_DATA_BURST_EN_S = 11
const I2S_INDSCR_BURST_EN_V = 0x1
const I2S_INDSCR_BURST_EN_S = 10
const I2S_OUTDSCR_BURST_EN_V = 0x1
const I2S_OUTDSCR_BURST_EN_S = 9
const I2S_OUT_EOF_MODE_V = 0x1
const I2S_OUT_EOF_MODE_S = 8
const I2S_OUT_NO_RESTART_CLR_V = 0x1
const I2S_OUT_NO_RESTART_CLR_S = 7
const I2S_OUT_AUTO_WRBACK_V = 0x1
const I2S_OUT_AUTO_WRBACK_S = 6
const I2S_IN_LOOP_TEST_V = 0x1
const I2S_IN_LOOP_TEST_S = 5
const I2S_OUT_LOOP_TEST_V = 0x1
const I2S_OUT_LOOP_TEST_S = 4
const I2S_AHBM_RST_V = 0x1
const I2S_AHBM_RST_S = 3
const I2S_AHBM_FIFO_RST_V = 0x1
const I2S_AHBM_FIFO_RST_S = 2
const I2S_OUT_RST_V = 0x1
const I2S_OUT_RST_S = 1
const I2S_IN_RST_V = 0x1
const I2S_IN_RST_S = 0
const I2S_OUTFIFO_PUSH_V = 0x1
const I2S_OUTFIFO_PUSH_S = 16
const I2S_OUTFIFO_WDATA = 0x000001FF
const I2S_OUTFIFO_WDATA_V = 0x1FF
const I2S_OUTFIFO_WDATA_S = 0
const I2S_INFIFO_POP_V = 0x1
const I2S_INFIFO_POP_S = 16
const I2S_INFIFO_RDATA = 0x00000FFF
const I2S_INFIFO_RDATA_V = 0xFFF
const I2S_INFIFO_RDATA_S = 0
const I2S_OUT_EMPTY_V = 0x1
const I2S_OUT_EMPTY_S = 31
const I2S_OUT_FULL_V = 0x1
const I2S_OUT_FULL_S = 30
const I2S_OUTFIFO_CNT = 0x0000007F
const I2S_OUTFIFO_CNT_V = 0x7F
const I2S_OUTFIFO_CNT_S = 23
const I2S_OUT_STATE = 0x00000007
const I2S_OUT_STATE_V = 0x7
const I2S_OUT_STATE_S = 20
const I2S_OUT_DSCR_STATE = 0x00000003
const I2S_OUT_DSCR_STATE_V = 0x3
const I2S_OUT_DSCR_STATE_S = 18
const I2S_OUTLINK_DSCR_ADDR = 0x0003FFFF
const I2S_OUTLINK_DSCR_ADDR_V = 0x3FFFF
const I2S_OUTLINK_DSCR_ADDR_S = 0
const I2S_IN_EMPTY_V = 0x1
const I2S_IN_EMPTY_S = 31
const I2S_IN_FULL_V = 0x1
const I2S_IN_FULL_S = 30
const I2S_INFIFO_CNT_DEBUG = 0x0000007F
const I2S_INFIFO_CNT_DEBUG_V = 0x7F
const I2S_INFIFO_CNT_DEBUG_S = 23
const I2S_IN_STATE = 0x00000007
const I2S_IN_STATE_V = 0x7
const I2S_IN_STATE_S = 20
const I2S_IN_DSCR_STATE = 0x00000003
const I2S_IN_DSCR_STATE_V = 0x3
const I2S_IN_DSCR_STATE_S = 18
const I2S_INLINK_DSCR_ADDR = 0x0003FFFF
const I2S_INLINK_DSCR_ADDR_V = 0x3FFFF
const I2S_INLINK_DSCR_ADDR_S = 0
const I2S_LC_FIFO_TIMEOUT_ENA_V = 0x1
const I2S_LC_FIFO_TIMEOUT_ENA_S = 11
const I2S_LC_FIFO_TIMEOUT_SHIFT = 0x00000007
const I2S_LC_FIFO_TIMEOUT_SHIFT_V = 0x7
const I2S_LC_FIFO_TIMEOUT_SHIFT_S = 8
const I2S_LC_FIFO_TIMEOUT = 0x000000FF
const I2S_LC_FIFO_TIMEOUT_V = 0xFF
const I2S_LC_FIFO_TIMEOUT_S = 0
const I2S_TX_STOP_EN_V = 0x1
const I2S_TX_STOP_EN_S = 8
const I2S_DMA_RAM_CLK_FO_V = 0x1
const I2S_DMA_RAM_CLK_FO_S = 6
const I2S_DMA_RAM_FORCE_PU_V = 0x1
const I2S_DMA_RAM_FORCE_PU_S = 5
const I2S_DMA_RAM_FORCE_PD_V = 0x1
const I2S_DMA_RAM_FORCE_PD_S = 4
const I2S_PLC_MEM_FORCE_PU_V = 0x1
const I2S_PLC_MEM_FORCE_PU_S = 3
const I2S_PLC_MEM_FORCE_PD_V = 0x1
const I2S_PLC_MEM_FORCE_PD_S = 2
const I2S_FIFO_FORCE_PU_V = 0x1
const I2S_FIFO_FORCE_PU_S = 1
const I2S_FIFO_FORCE_PD_V = 0x1
const I2S_FIFO_FORCE_PD_S = 0
const I2S_I2SI_V_SYNC_FILTER_THRES = 0x00000007
const I2S_I2SI_V_SYNC_FILTER_THRES_V = 0x7
const I2S_I2SI_V_SYNC_FILTER_THRES_S = 11
const I2S_I2SI_V_SYNC_FILTER_EN_V = 0x1
const I2S_I2SI_V_SYNC_FILTER_EN_S = 10
const I2S_CAM_CLK_LOOPBACK_V = 0x1
const I2S_CAM_CLK_LOOPBACK_S = 9
const I2S_CAM_SYNC_FIFO_RESET_V = 0x1
const I2S_CAM_SYNC_FIFO_RESET_S = 8
const I2S_INTER_VALID_EN_V = 0x1
const I2S_INTER_VALID_EN_S = 7
const I2S_EXT_ADC_START_EN_V = 0x1
const I2S_EXT_ADC_START_EN_S = 6
const I2S_LCD_EN_V = 0x1
const I2S_LCD_EN_S = 5
const I2S_DATA_ENABLE_V = 0x1
const I2S_DATA_ENABLE_S = 4
const I2S_DATA_ENABLE_TEST_EN_V = 0x1
const I2S_DATA_ENABLE_TEST_EN_S = 3
const I2S_LCD_TX_SDX2_EN_V = 0x1
const I2S_LCD_TX_SDX2_EN_S = 2
const I2S_LCD_TX_WRX2_EN_V = 0x1
const I2S_LCD_TX_WRX2_EN_S = 1
const I2S_CAMERA_EN_V = 0x1
const I2S_CAMERA_EN_S = 0
const I2S_CLK_SEL = 0x00000003
const I2S_CLK_SEL_V = 0x3
const I2S_CLK_SEL_S = 21
const I2S_CLK_AUDIO_PLL = 1
const I2S_CLK_160M_PLL = 2
const I2S_CLK_EN_V = 0x1
const I2S_CLK_EN_S = 20
const I2S_CLKM_DIV_A = 0x0000003F
const I2S_CLKM_DIV_A_V = 0x3F
const I2S_CLKM_DIV_A_S = 14
const I2S_CLKM_DIV_B = 0x0000003F
const I2S_CLKM_DIV_B_V = 0x3F
const I2S_CLKM_DIV_B_S = 8
const I2S_CLKM_DIV_NUM = 0x000000FF
const I2S_CLKM_DIV_NUM_V = 0xFF
const I2S_CLKM_DIV_NUM_S = 0
const I2S_RX_BITS_MOD = 0x0000003F
const I2S_RX_BITS_MOD_V = 0x3F
const I2S_RX_BITS_MOD_S = 18
const I2S_TX_BITS_MOD = 0x0000003F
const I2S_TX_BITS_MOD_V = 0x3F
const I2S_TX_BITS_MOD_S = 12
const I2S_RX_BCK_DIV_NUM = 0x0000003F
const I2S_RX_BCK_DIV_NUM_V = 0x3F
const I2S_RX_BCK_DIV_NUM_S = 6
const I2S_TX_BCK_DIV_NUM = 0x0000003F
const I2S_TX_BCK_DIV_NUM_V = 0x3F
const I2S_TX_BCK_DIV_NUM_S = 0
const I2S_TX_IDLE_V = 0x1
const I2S_TX_IDLE_S = 0
const I2S_I2SDATE = 0xFFFFFFFF
const I2S_I2SDATE_V = 0xFFFFFFFF
const I2S_I2SDATE_S = 0
const UART_RXFIFO_RD_BYTE = 0x000000FF
const UART_RXFIFO_RD_BYTE_V = 0xFF
const UART_RXFIFO_RD_BYTE_S = 0
const UART_WAKEUP_INT_RAW_V = 0x1
const UART_WAKEUP_INT_RAW_S = 19
const UART_AT_CMD_CHAR_DET_INT_RAW_V = 0x1
const UART_AT_CMD_CHAR_DET_INT_RAW_S = 18
const UART_RS485_CLASH_INT_RAW_V = 0x1
const UART_RS485_CLASH_INT_RAW_S = 17
const UART_RS485_FRM_ERR_INT_RAW_V = 0x1
const UART_RS485_FRM_ERR_INT_RAW_S = 16
const UART_RS485_PARITY_ERR_INT_RAW_V = 0x1
const UART_RS485_PARITY_ERR_INT_RAW_S = 15
const UART_TX_DONE_INT_RAW_V = 0x1
const UART_TX_DONE_INT_RAW_S = 14
const UART_TX_BRK_IDLE_DONE_INT_RAW_V = 0x1
const UART_TX_BRK_IDLE_DONE_INT_RAW_S = 13
const UART_TX_BRK_DONE_INT_RAW_V = 0x1
const UART_TX_BRK_DONE_INT_RAW_S = 12
const UART_GLITCH_DET_INT_RAW_V = 0x1
const UART_GLITCH_DET_INT_RAW_S = 11
const UART_SW_XOFF_INT_RAW_V = 0x1
const UART_SW_XOFF_INT_RAW_S = 10
const UART_SW_XON_INT_RAW_V = 0x1
const UART_SW_XON_INT_RAW_S = 9
const UART_RXFIFO_TOUT_INT_RAW_V = 0x1
const UART_RXFIFO_TOUT_INT_RAW_S = 8
const UART_BRK_DET_INT_RAW_V = 0x1
const UART_BRK_DET_INT_RAW_S = 7
const UART_CTS_CHG_INT_RAW_V = 0x1
const UART_CTS_CHG_INT_RAW_S = 6
const UART_DSR_CHG_INT_RAW_V = 0x1
const UART_DSR_CHG_INT_RAW_S = 5
const UART_RXFIFO_OVF_INT_RAW_V = 0x1
const UART_RXFIFO_OVF_INT_RAW_S = 4
const UART_FRM_ERR_INT_RAW_V = 0x1
const UART_FRM_ERR_INT_RAW_S = 3
const UART_PARITY_ERR_INT_RAW_V = 0x1
const UART_PARITY_ERR_INT_RAW_S = 2
const UART_TXFIFO_EMPTY_INT_RAW_V = 0x1
const UART_TXFIFO_EMPTY_INT_RAW_S = 1
const UART_RXFIFO_FULL_INT_RAW_V = 0x1
const UART_RXFIFO_FULL_INT_RAW_S = 0
const UART_WAKEUP_INT_ST_V = 0x1
const UART_WAKEUP_INT_ST_S = 19
const UART_AT_CMD_CHAR_DET_INT_ST_V = 0x1
const UART_AT_CMD_CHAR_DET_INT_ST_S = 18
const UART_RS485_CLASH_INT_ST_V = 0x1
const UART_RS485_CLASH_INT_ST_S = 17
const UART_RS485_FRM_ERR_INT_ST_V = 0x1
const UART_RS485_FRM_ERR_INT_ST_S = 16
const UART_RS485_PARITY_ERR_INT_ST_V = 0x1
const UART_RS485_PARITY_ERR_INT_ST_S = 15
const UART_TX_DONE_INT_ST_V = 0x1
const UART_TX_DONE_INT_ST_S = 14
const UART_TX_BRK_IDLE_DONE_INT_ST_V = 0x1
const UART_TX_BRK_IDLE_DONE_INT_ST_S = 13
const UART_TX_BRK_DONE_INT_ST_V = 0x1
const UART_TX_BRK_DONE_INT_ST_S = 12
const UART_GLITCH_DET_INT_ST_V = 0x1
const UART_GLITCH_DET_INT_ST_S = 11
const UART_SW_XOFF_INT_ST_V = 0x1
const UART_SW_XOFF_INT_ST_S = 10
const UART_SW_XON_INT_ST_V = 0x1
const UART_SW_XON_INT_ST_S = 9
const UART_RXFIFO_TOUT_INT_ST_V = 0x1
const UART_RXFIFO_TOUT_INT_ST_S = 8
const UART_BRK_DET_INT_ST_V = 0x1
const UART_BRK_DET_INT_ST_S = 7
const UART_CTS_CHG_INT_ST_V = 0x1
const UART_CTS_CHG_INT_ST_S = 6
const UART_DSR_CHG_INT_ST_V = 0x1
const UART_DSR_CHG_INT_ST_S = 5
const UART_RXFIFO_OVF_INT_ST_V = 0x1
const UART_RXFIFO_OVF_INT_ST_S = 4
const UART_FRM_ERR_INT_ST_V = 0x1
const UART_FRM_ERR_INT_ST_S = 3
const UART_PARITY_ERR_INT_ST_V = 0x1
const UART_PARITY_ERR_INT_ST_S = 2
const UART_TXFIFO_EMPTY_INT_ST_V = 0x1
const UART_TXFIFO_EMPTY_INT_ST_S = 1
const UART_RXFIFO_FULL_INT_ST_V = 0x1
const UART_RXFIFO_FULL_INT_ST_S = 0
const UART_WAKEUP_INT_ENA_V = 0x1
const UART_WAKEUP_INT_ENA_S = 19
const UART_AT_CMD_CHAR_DET_INT_ENA_V = 0x1
const UART_AT_CMD_CHAR_DET_INT_ENA_S = 18
const UART_RS485_CLASH_INT_ENA_V = 0x1
const UART_RS485_CLASH_INT_ENA_S = 17
const UART_RS485_FRM_ERR_INT_ENA_V = 0x1
const UART_RS485_FRM_ERR_INT_ENA_S = 16
const UART_RS485_PARITY_ERR_INT_ENA_V = 0x1
const UART_RS485_PARITY_ERR_INT_ENA_S = 15
const UART_TX_DONE_INT_ENA_V = 0x1
const UART_TX_DONE_INT_ENA_S = 14
const UART_TX_BRK_IDLE_DONE_INT_ENA_V = 0x1
const UART_TX_BRK_IDLE_DONE_INT_ENA_S = 13
const UART_TX_BRK_DONE_INT_ENA_V = 0x1
const UART_TX_BRK_DONE_INT_ENA_S = 12
const UART_GLITCH_DET_INT_ENA_V = 0x1
const UART_GLITCH_DET_INT_ENA_S = 11
const UART_SW_XOFF_INT_ENA_V = 0x1
const UART_SW_XOFF_INT_ENA_S = 10
const UART_SW_XON_INT_ENA_V = 0x1
const UART_SW_XON_INT_ENA_S = 9
const UART_RXFIFO_TOUT_INT_ENA_V = 0x1
const UART_RXFIFO_TOUT_INT_ENA_S = 8
const UART_BRK_DET_INT_ENA_V = 0x1
const UART_BRK_DET_INT_ENA_S = 7
const UART_CTS_CHG_INT_ENA_V = 0x1
const UART_CTS_CHG_INT_ENA_S = 6
const UART_DSR_CHG_INT_ENA_V = 0x1
const UART_DSR_CHG_INT_ENA_S = 5
const UART_RXFIFO_OVF_INT_ENA_V = 0x1
const UART_RXFIFO_OVF_INT_ENA_S = 4
const UART_FRM_ERR_INT_ENA_V = 0x1
const UART_FRM_ERR_INT_ENA_S = 3
const UART_PARITY_ERR_INT_ENA_V = 0x1
const UART_PARITY_ERR_INT_ENA_S = 2
const UART_TXFIFO_EMPTY_INT_ENA_V = 0x1
const UART_TXFIFO_EMPTY_INT_ENA_S = 1
const UART_RXFIFO_FULL_INT_ENA_V = 0x1
const UART_RXFIFO_FULL_INT_ENA_S = 0
const UART_WAKEUP_INT_CLR_V = 0x1
const UART_WAKEUP_INT_CLR_S = 19
const UART_AT_CMD_CHAR_DET_INT_CLR_V = 0x1
const UART_AT_CMD_CHAR_DET_INT_CLR_S = 18
const UART_RS485_CLASH_INT_CLR_V = 0x1
const UART_RS485_CLASH_INT_CLR_S = 17
const UART_RS485_FRM_ERR_INT_CLR_V = 0x1
const UART_RS485_FRM_ERR_INT_CLR_S = 16
const UART_RS485_PARITY_ERR_INT_CLR_V = 0x1
const UART_RS485_PARITY_ERR_INT_CLR_S = 15
const UART_TX_DONE_INT_CLR_V = 0x1
const UART_TX_DONE_INT_CLR_S = 14
const UART_TX_BRK_IDLE_DONE_INT_CLR_V = 0x1
const UART_TX_BRK_IDLE_DONE_INT_CLR_S = 13
const UART_TX_BRK_DONE_INT_CLR_V = 0x1
const UART_TX_BRK_DONE_INT_CLR_S = 12
const UART_GLITCH_DET_INT_CLR_V = 0x1
const UART_GLITCH_DET_INT_CLR_S = 11
const UART_SW_XOFF_INT_CLR_V = 0x1
const UART_SW_XOFF_INT_CLR_S = 10
const UART_SW_XON_INT_CLR_V = 0x1
const UART_SW_XON_INT_CLR_S = 9
const UART_RXFIFO_TOUT_INT_CLR_V = 0x1
const UART_RXFIFO_TOUT_INT_CLR_S = 8
const UART_BRK_DET_INT_CLR_V = 0x1
const UART_BRK_DET_INT_CLR_S = 7
const UART_CTS_CHG_INT_CLR_V = 0x1
const UART_CTS_CHG_INT_CLR_S = 6
const UART_DSR_CHG_INT_CLR_V = 0x1
const UART_DSR_CHG_INT_CLR_S = 5
const UART_RXFIFO_OVF_INT_CLR_V = 0x1
const UART_RXFIFO_OVF_INT_CLR_S = 4
const UART_FRM_ERR_INT_CLR_V = 0x1
const UART_FRM_ERR_INT_CLR_S = 3
const UART_PARITY_ERR_INT_CLR_V = 0x1
const UART_PARITY_ERR_INT_CLR_S = 2
const UART_TXFIFO_EMPTY_INT_CLR_V = 0x1
const UART_TXFIFO_EMPTY_INT_CLR_S = 1
const UART_RXFIFO_FULL_INT_CLR_V = 0x1
const UART_RXFIFO_FULL_INT_CLR_S = 0
const UART_CLKDIV_FRAG = 0x0000000F
const UART_CLKDIV_FRAG_V = 0xF
const UART_CLKDIV_FRAG_S = 20
const UART_CLKDIV = 0x000FFFFF
const UART_CLKDIV_V = 0xFFFFF
const UART_CLKDIV_S = 0
const UART_GLITCH_FILT = 0x000000FF
const UART_GLITCH_FILT_V = 0xFF
const UART_GLITCH_FILT_S = 8
const UART_AUTOBAUD_EN_V = 0x1
const UART_AUTOBAUD_EN_S = 0
const UART_TXD_V = 0x1
const UART_TXD_S = 31
const UART_RTSN_V = 0x1
const UART_RTSN_S = 30
const UART_DTRN_V = 0x1
const UART_DTRN_S = 29
const UART_TXFIFO_CNT = 0x000003FF
const UART_TXFIFO_CNT_V = 0x3FF
const UART_TXFIFO_CNT_S = 16
const UART_RXD_V = 0x1
const UART_RXD_S = 15
const UART_CTSN_V = 0x1
const UART_CTSN_S = 14
const UART_DSRN_V = 0x1
const UART_DSRN_S = 13
const UART_RXFIFO_CNT = 0x000003FF
const UART_RXFIFO_CNT_V = 0x3FF
const UART_RXFIFO_CNT_S = 0
const UART_MEM_CLK_EN_V = 0x1
const UART_MEM_CLK_EN_S = 28
const UART_TICK_REF_ALWAYS_ON_V = 0x1
const UART_TICK_REF_ALWAYS_ON_S = 27
const UART_ERR_WR_MASK_V = 0x1
const UART_ERR_WR_MASK_S = 26
const UART_CLK_EN_V = 0x1
const UART_CLK_EN_S = 25
const UART_DTR_INV_V = 0x1
const UART_DTR_INV_S = 24
const UART_RTS_INV_V = 0x1
const UART_RTS_INV_S = 23
const UART_TXD_INV_V = 0x1
const UART_TXD_INV_S = 22
const UART_DSR_INV_V = 0x1
const UART_DSR_INV_S = 21
const UART_CTS_INV_V = 0x1
const UART_CTS_INV_S = 20
const UART_RXD_INV_V = 0x1
const UART_RXD_INV_S = 19
const UART_TXFIFO_RST_V = 0x1
const UART_TXFIFO_RST_S = 18
const UART_RXFIFO_RST_V = 0x1
const UART_RXFIFO_RST_S = 17
const UART_IRDA_EN_V = 0x1
const UART_IRDA_EN_S = 16
const UART_TX_FLOW_EN_V = 0x1
const UART_TX_FLOW_EN_S = 15
const UART_LOOPBACK_V = 0x1
const UART_LOOPBACK_S = 14
const UART_IRDA_RX_INV_V = 0x1
const UART_IRDA_RX_INV_S = 13
const UART_IRDA_TX_INV_V = 0x1
const UART_IRDA_TX_INV_S = 12
const UART_IRDA_WCTL_V = 0x1
const UART_IRDA_WCTL_S = 11
const UART_IRDA_TX_EN_V = 0x1
const UART_IRDA_TX_EN_S = 10
const UART_IRDA_DPLX_V = 0x1
const UART_IRDA_DPLX_S = 9
const UART_TXD_BRK_V = 0x1
const UART_TXD_BRK_S = 8
const UART_SW_DTR_V = 0x1
const UART_SW_DTR_S = 7
const UART_SW_RTS_V = 0x1
const UART_SW_RTS_S = 6
const UART_STOP_BIT_NUM = 0x00000003
const UART_STOP_BIT_NUM_V = 0x3
const UART_STOP_BIT_NUM_S = 4
const UART_BIT_NUM = 0x00000003
const UART_BIT_NUM_V = 0x3
const UART_BIT_NUM_S = 2
const UART_PARITY_EN_V = 0x1
const UART_PARITY_EN_S = 1
const UART_PARITY_V = 0x1
const UART_PARITY_S = 0
const UART_RX_TOUT_EN_V = 0x1
const UART_RX_TOUT_EN_S = 31
const UART_RX_FLOW_EN_V = 0x1
const UART_RX_FLOW_EN_S = 30
const UART_RX_TOUT_FLOW_DIS_V = 0x1
const UART_RX_TOUT_FLOW_DIS_S = 29
const UART_TXFIFO_EMPTY_THRHD = 0x000001FF
const UART_TXFIFO_EMPTY_THRHD_V = 0x1FF
const UART_TXFIFO_EMPTY_THRHD_S = 9
const UART_RXFIFO_FULL_THRHD = 0x000001FF
const UART_RXFIFO_FULL_THRHD_V = 0x1FF
const UART_RXFIFO_FULL_THRHD_S = 0
const UART_LOWPULSE_MIN_CNT = 0x000FFFFF
const UART_LOWPULSE_MIN_CNT_V = 0xFFFFF
const UART_LOWPULSE_MIN_CNT_S = 0
const UART_HIGHPULSE_MIN_CNT = 0x000FFFFF
const UART_HIGHPULSE_MIN_CNT_V = 0xFFFFF
const UART_HIGHPULSE_MIN_CNT_S = 0
const UART_RXD_EDGE_CNT = 0x000003FF
const UART_RXD_EDGE_CNT_V = 0x3FF
const UART_RXD_EDGE_CNT_S = 0
const UART_SEND_XOFF_V = 0x1
const UART_SEND_XOFF_S = 5
const UART_SEND_XON_V = 0x1
const UART_SEND_XON_S = 4
const UART_FORCE_XOFF_V = 0x1
const UART_FORCE_XOFF_S = 3
const UART_FORCE_XON_V = 0x1
const UART_FORCE_XON_S = 2
const UART_XONOFF_DEL_V = 0x1
const UART_XONOFF_DEL_S = 1
const UART_SW_FLOW_CON_EN_V = 0x1
const UART_SW_FLOW_CON_EN_S = 0
const UART_ACTIVE_THRESHOLD = 0x000003FF
const UART_ACTIVE_THRESHOLD_V = 0x3FF
const UART_ACTIVE_THRESHOLD_S = 0
const UART_XOFF_CHAR = 0x000000FF
const UART_XOFF_CHAR_V = 0xFF
const UART_XOFF_CHAR_S = 9
const UART_XOFF_THRESHOLD = 0x000001FF
const UART_XOFF_THRESHOLD_V = 0x1FF
const UART_XOFF_THRESHOLD_S = 0
const UART_XON_CHAR = 0x000000FF
const UART_XON_CHAR_V = 0xFF
const UART_XON_CHAR_S = 9
const UART_XON_THRESHOLD = 0x000001FF
const UART_XON_THRESHOLD_V = 0x1FF
const UART_XON_THRESHOLD_S = 0
const UART_TX_BRK_NUM = 0x000000FF
const UART_TX_BRK_NUM_V = 0xFF
const UART_TX_BRK_NUM_S = 20
const UART_TX_IDLE_NUM = 0x000003FF
const UART_TX_IDLE_NUM_V = 0x3FF
const UART_TX_IDLE_NUM_S = 10
const UART_RX_IDLE_THRHD = 0x000003FF
const UART_RX_IDLE_THRHD_V = 0x3FF
const UART_RX_IDLE_THRHD_S = 0
const UART_RS485_TX_DLY_NUM = 0x0000000F
const UART_RS485_TX_DLY_NUM_V = 0xF
const UART_RS485_TX_DLY_NUM_S = 6
const UART_RS485_RX_DLY_NUM_V = 0x1
const UART_RS485_RX_DLY_NUM_S = 5
const UART_RS485RXBY_TX_EN_V = 0x1
const UART_RS485RXBY_TX_EN_S = 4
const UART_RS485TX_RX_EN_V = 0x1
const UART_RS485TX_RX_EN_S = 3
const UART_DL1_EN_V = 0x1
const UART_DL1_EN_S = 2
const UART_DL0_EN_V = 0x1
const UART_DL0_EN_S = 1
const UART_RS485_EN_V = 0x1
const UART_RS485_EN_S = 0
const UART_PRE_IDLE_NUM = 0x0000FFFF
const UART_PRE_IDLE_NUM_V = 0xFFFF
const UART_PRE_IDLE_NUM_S = 0
const UART_POST_IDLE_NUM = 0x0000FFFF
const UART_POST_IDLE_NUM_V = 0xFFFF
const UART_POST_IDLE_NUM_S = 0
const UART_RX_GAP_TOUT = 0x0000FFFF
const UART_RX_GAP_TOUT_V = 0xFFFF
const UART_RX_GAP_TOUT_S = 0
const UART_CHAR_NUM = 0x000000FF
const UART_CHAR_NUM_V = 0xFF
const UART_CHAR_NUM_S = 8
const UART_AT_CMD_CHAR = 0x000000FF
const UART_AT_CMD_CHAR_V = 0xFF
const UART_AT_CMD_CHAR_S = 0
const UART_MEM_FORCE_PU_V = 0x1
const UART_MEM_FORCE_PU_S = 27
const UART_MEM_FORCE_PD_V = 0x1
const UART_MEM_FORCE_PD_S = 26
const UART_RX_TOUT_THRHD = 0x000003FF
const UART_RX_TOUT_THRHD_V = 0x3FF
const UART_RX_TOUT_THRHD_S = 16
const UART_RX_FLOW_THRHD = 0x000001FF
const UART_RX_FLOW_THRHD_V = 0x1FF
const UART_RX_FLOW_THRHD_S = 7
const UART_TX_SIZE = 0x00000007
const UART_TX_SIZE_V = 0x7
const UART_TX_SIZE_S = 4
const UART_RX_SIZE = 0x00000007
const UART_RX_SIZE_V = 0x7
const UART_RX_SIZE_S = 1
const UART_TX_RADDR = 0x000003FF
const UART_TX_RADDR_V = 0x3FF
const UART_TX_RADDR_S = 11
const UART_APB_TX_WADDR = 0x000003FF
const UART_APB_TX_WADDR_V = 0x3FF
const UART_APB_TX_WADDR_S = 0
const UART_RX_WADDR = 0x000003FF
const UART_RX_WADDR_V = 0x3FF
const UART_RX_WADDR_S = 11
const UART_APB_RX_RADDR = 0x000003FF
const UART_APB_RX_RADDR_V = 0x3FF
const UART_APB_RX_RADDR_S = 0
const UART_ST_UTX_OUT = 0x0000000F
const UART_ST_UTX_OUT_V = 0xF
const UART_ST_UTX_OUT_S = 4
const UART_ST_URX_OUT = 0x0000000F
const UART_ST_URX_OUT_V = 0xF
const UART_ST_URX_OUT_S = 0
const UART_POSEDGE_MIN_CNT = 0x000FFFFF
const UART_POSEDGE_MIN_CNT_V = 0xFFFFF
const UART_POSEDGE_MIN_CNT_S = 0
const UART_NEGEDGE_MIN_CNT = 0x000FFFFF
const UART_NEGEDGE_MIN_CNT_V = 0xFFFFF
const UART_NEGEDGE_MIN_CNT_S = 0
const UART_DATE = 0xFFFFFFFF
const UART_DATE_V = 0xFFFFFFFF
const UART_DATE_S = 0
const UART_ID = 0xFFFFFFFF
const UART_ID_V = 0xFFFFFFFF
const UART_ID_S = 0
const TIMG_T0_USE_XTAL_S = 9
const TIMG_T0_ALARM_EN_S = 10
const TIMG_T0_LEVEL_INT_EN_S = 11
const TIMG_T0_EDGE_INT_EN_S = 12
const TIMG_T0_DIVIDER_S = 13
const TIMG_T0_AUTORELOAD_S = 29
const TIMG_T0_INCREASE_S = 30
const TIMG_T0_EN_S = 31
const TIMG_T0_LO_S = 0
const TIMG_T0_HI_S = 0
const TIMG_T0_UPDATE_S = 31
const TIMG_T0_ALARM_LO_S = 0
const TIMG_T0_ALARM_HI_S = 0
const TIMG_T0_LOAD_LO_S = 0
const TIMG_T0_LOAD_HI_S = 0
const TIMG_T0_LOAD_S = 0
const TIMG_WDT_APPCPU_RESET_EN_S = 12
const TIMG_WDT_PROCPU_RESET_EN_S = 13
const TIMG_WDT_FLASHBOOT_MOD_EN_S = 14
const TIMG_WDT_SYS_RESET_LENGTH_S = 15
const TIMG_WDT_CPU_RESET_LENGTH_S = 18
const TIMG_WDT_LEVEL_INT_EN_S = 21
const TIMG_WDT_EDGE_INT_EN_S = 22
const TIMG_WDT_STG3_S = 23
const TIMG_WDT_STG2_S = 25
const TIMG_WDT_STG1_S = 27
const TIMG_WDT_STG0_S = 29
const TIMG_WDT_EN_S = 31
const TIMG_WDT_CLK_PRESCALER_S = 16
const TIMG_WDT_STG0_HOLD_S = 0
const TIMG_WDT_STG1_HOLD_S = 0
const TIMG_WDT_STG2_HOLD_S = 0
const TIMG_WDT_STG3_HOLD_S = 0
const TIMG_WDT_FEED_S = 0
const TIMG_WDT_WKEY_S = 0
const TIMG_RTC_CALI_START_CYCLING_S = 12
const TIMG_RTC_CALI_CLK_SEL_S = 13
const TIMG_RTC_CALI_RDY_S = 15
const TIMG_RTC_CALI_MAX_S = 16
const TIMG_RTC_CALI_START_S = 31
const TIMG_RTC_CALI_CYCLING_DATA_VLD_S = 0
const TIMG_RTC_CALI_VALUE_S = 7
const TIMG_LACT_USE_REFTICK_S = 6
const TIMG_LACT_RTC_ONLY_S = 7
const TIMG_LACT_CPST_EN_S = 8
const TIMG_LACT_LAC_EN_S = 9
const TIMG_LACT_ALARM_EN_S = 10
const TIMG_LACT_LEVEL_INT_EN_S = 11
const TIMG_LACT_EDGE_INT_EN_S = 12
const TIMG_LACT_DIVIDER_S = 13
const TIMG_LACT_AUTORELOAD_S = 29
const TIMG_LACT_INCREASE_S = 30
const TIMG_LACT_EN_S = 31
const TIMG_LACT_RTC_STEP_LEN_S = 6
const TIMG_LACT_LO_S = 0
const TIMG_LACT_HI_S = 0
const TIMG_LACT_UPDATE_S = 0
const TIMG_LACT_ALARM_LO_S = 0
const TIMG_LACT_ALARM_HI_S = 0
const TIMG_LACT_LOAD_LO_S = 0
const TIMG_LACT_LOAD_HI_S = 0
const TIMG_LACT_LOAD_S = 0
const TIMG_T0_INT_ENA_S = 0
const TIMG_T1_INT_ENA_S = 1
const TIMG_WDT_INT_ENA_S = 2
const TIMG_LACT_INT_ENA_S = 3
const TIMG_T0_INT_RAW_S = 0
const TIMG_T1_INT_RAW_S = 1
const TIMG_WDT_INT_RAW_S = 2
const TIMG_LACT_INT_RAW_S = 3
const TIMG_T0_INT_ST_S = 0
const TIMG_T1_INT_ST_S = 1
const TIMG_WDT_INT_ST_S = 2
const TIMG_LACT_INT_ST_S = 3
const TIMG_T0_INT_CLR_S = 0
const TIMG_T1_INT_CLR_S = 1
const TIMG_WDT_INT_CLR_S = 2
const TIMG_LACT_INT_CLR_S = 3
const TIMG_RTC_CALI_TIMEOUT_S = 0
const TIMG_RTC_CALI_TIMEOUT_RST_CNT_S = 3
const TIMG_RTC_CALI_TIMEOUT_THRES_S = 7
const TIMG_TIMERS_DATE_S = 0
const TIMG_CLK_EN_S = 31
const TIMG_WDT_WKEY_VALUE = 0x50D83AA1
const I2C_SAR_ADC = 0x69
const I2C_SAR_ADC_HOSTID = 1
const ADC_SAR1_ENCAL_GND_ADDR = 0x7
const ADC_SAR1_ENCAL_GND_ADDR_MSB = 5
const ADC_SAR1_ENCAL_GND_ADDR_LSB = 5
const ADC_SAR2_ENCAL_GND_ADDR = 0x7
const ADC_SAR2_ENCAL_GND_ADDR_MSB = 7
const ADC_SAR2_ENCAL_GND_ADDR_LSB = 7
const ADC_SAR1_INITIAL_CODE_HIGH_ADDR = 0x1
const ADC_SAR1_INITIAL_CODE_HIGH_ADDR_MSB = 0x3
const ADC_SAR1_INITIAL_CODE_HIGH_ADDR_LSB = 0x0
const ADC_SAR1_INITIAL_CODE_LOW_ADDR = 0x0
const ADC_SAR1_INITIAL_CODE_LOW_ADDR_MSB = 0x7
const ADC_SAR1_INITIAL_CODE_LOW_ADDR_LSB = 0x0
const ADC_SAR2_INITIAL_CODE_HIGH_ADDR = 0x4
const ADC_SAR2_INITIAL_CODE_HIGH_ADDR_MSB = 0x3
const ADC_SAR2_INITIAL_CODE_HIGH_ADDR_LSB = 0x0
const ADC_SAR2_INITIAL_CODE_LOW_ADDR = 0x3
const ADC_SAR2_INITIAL_CODE_LOW_ADDR_MSB = 0x7
const ADC_SAR2_INITIAL_CODE_LOW_ADDR_LSB = 0x0
const ADC_SAR1_DREF_ADDR = 0x2
const ADC_SAR1_DREF_ADDR_MSB = 0x6
const ADC_SAR1_DREF_ADDR_LSB = 0x4
const ADC_SAR2_DREF_ADDR = 0x5
const ADC_SAR2_DREF_ADDR_MSB = 0x6
const ADC_SAR2_DREF_ADDR_LSB = 0x4
const ADC_SAR1_SAMPLE_CYCLE_ADDR = 0x2
const ADC_SAR1_SAMPLE_CYCLE_ADDR_MSB = 0x2
const ADC_SAR1_SAMPLE_CYCLE_ADDR_LSB = 0x0
const ADC_SARADC_DTEST_RTC_ADDR = 0x7
const ADC_SARADC_DTEST_RTC_ADDR_MSB = 1
const ADC_SARADC_DTEST_RTC_ADDR_LSB = 0
const ADC_SARADC_ENT_TSENS_ADDR = 0x7
const ADC_SARADC_ENT_TSENS_ADDR_MSB = 2
const ADC_SARADC_ENT_TSENS_ADDR_LSB = 2
const ADC_SARADC_ENT_RTC_ADDR = 0x7
const ADC_SARADC_ENT_RTC_ADDR_MSB = 3
const ADC_SARADC_ENT_RTC_ADDR_LSB = 3
const ADC_SARADC_ENCAL_REF_ADDR = 0x7
const ADC_SARADC_ENCAL_REF_ADDR_MSB = 4
const ADC_SARADC_ENCAL_REF_ADDR_LSB = 4
const I2C_SARADC_TSENS_DAC = 0x6
const I2C_SARADC_TSENS_DAC_MSB = 3
const I2C_SARADC_TSENS_DAC_LSB = 0
const LEDC_OVF_CNT_RESET_ST_LSCH0_V = 0x1
const LEDC_OVF_CNT_RESET_ST_LSCH0_S = 17
const LEDC_OVF_CNT_RESET_LSCH0_V = 0x1
const LEDC_OVF_CNT_RESET_LSCH0_S = 16
const LEDC_OVF_CNT_EN_LSCH0_V = 0x1
const LEDC_OVF_CNT_EN_LSCH0_S = 15
const LEDC_OVF_NUM_LSCH0 = 0x000003FF
const LEDC_OVF_NUM_LSCH0_V = 0x3FF
const LEDC_OVF_NUM_LSCH0_S = 5
const LEDC_PARA_UP_LSCH0_V = 0x1
const LEDC_PARA_UP_LSCH0_S = 4
const LEDC_IDLE_LV_LSCH0_V = 0x1
const LEDC_IDLE_LV_LSCH0_S = 3
const LEDC_SIG_OUT_EN_LSCH0_V = 0x1
const LEDC_SIG_OUT_EN_LSCH0_S = 2
const LEDC_TIMER_SEL_LSCH0 = 0x00000003
const LEDC_TIMER_SEL_LSCH0_V = 0x3
const LEDC_TIMER_SEL_LSCH0_S = 0
const LEDC_HPOINT_LSCH0 = 0x00003FFF
const LEDC_HPOINT_LSCH0_V = 0x3FFF
const LEDC_HPOINT_LSCH0_S = 0
const LEDC_DUTY_LSCH0 = 0x0007FFFF
const LEDC_DUTY_LSCH0_V = 0x7FFFF
const LEDC_DUTY_LSCH0_S = 0
const LEDC_DUTY_START_LSCH0_V = 0x1
const LEDC_DUTY_START_LSCH0_S = 31
const LEDC_DUTY_INC_LSCH0_V = 0x1
const LEDC_DUTY_INC_LSCH0_S = 30
const LEDC_DUTY_NUM_LSCH0 = 0x000003FF
const LEDC_DUTY_NUM_LSCH0_V = 0x3FF
const LEDC_DUTY_NUM_LSCH0_S = 20
const LEDC_DUTY_CYCLE_LSCH0 = 0x000003FF
const LEDC_DUTY_CYCLE_LSCH0_V = 0x3FF
const LEDC_DUTY_CYCLE_LSCH0_S = 10
const LEDC_DUTY_SCALE_LSCH0 = 0x000003FF
const LEDC_DUTY_SCALE_LSCH0_V = 0x3FF
const LEDC_DUTY_SCALE_LSCH0_S = 0
const LEDC_OVF_CNT_RESET_ST_LSCH1_V = 0x1
const LEDC_OVF_CNT_RESET_ST_LSCH1_S = 17
const LEDC_OVF_CNT_RESET_LSCH1_V = 0x1
const LEDC_OVF_CNT_RESET_LSCH1_S = 16
const LEDC_OVF_CNT_EN_LSCH1_V = 0x1
const LEDC_OVF_CNT_EN_LSCH1_S = 15
const LEDC_OVF_NUM_LSCH1 = 0x000003FF
const LEDC_OVF_NUM_LSCH1_V = 0x3FF
const LEDC_OVF_NUM_LSCH1_S = 5
const LEDC_PARA_UP_LSCH1_V = 0x1
const LEDC_PARA_UP_LSCH1_S = 4
const LEDC_IDLE_LV_LSCH1_V = 0x1
const LEDC_IDLE_LV_LSCH1_S = 3
const LEDC_SIG_OUT_EN_LSCH1_V = 0x1
const LEDC_SIG_OUT_EN_LSCH1_S = 2
const LEDC_TIMER_SEL_LSCH1 = 0x00000003
const LEDC_TIMER_SEL_LSCH1_V = 0x3
const LEDC_TIMER_SEL_LSCH1_S = 0
const LEDC_HPOINT_LSCH1 = 0x00003FFF
const LEDC_HPOINT_LSCH1_V = 0x3FFF
const LEDC_HPOINT_LSCH1_S = 0
const LEDC_DUTY_LSCH1 = 0x0007FFFF
const LEDC_DUTY_LSCH1_V = 0x7FFFF
const LEDC_DUTY_LSCH1_S = 0
const LEDC_DUTY_START_LSCH1_V = 0x1
const LEDC_DUTY_START_LSCH1_S = 31
const LEDC_DUTY_INC_LSCH1_V = 0x1
const LEDC_DUTY_INC_LSCH1_S = 30
const LEDC_DUTY_NUM_LSCH1 = 0x000003FF
const LEDC_DUTY_NUM_LSCH1_V = 0x3FF
const LEDC_DUTY_NUM_LSCH1_S = 20
const LEDC_DUTY_CYCLE_LSCH1 = 0x000003FF
const LEDC_DUTY_CYCLE_LSCH1_V = 0x3FF
const LEDC_DUTY_CYCLE_LSCH1_S = 10
const LEDC_DUTY_SCALE_LSCH1 = 0x000003FF
const LEDC_DUTY_SCALE_LSCH1_V = 0x3FF
const LEDC_DUTY_SCALE_LSCH1_S = 0
const LEDC_OVF_CNT_RESET_ST_LSCH2_V = 0x1
const LEDC_OVF_CNT_RESET_ST_LSCH2_S = 17
const LEDC_OVF_CNT_RESET_LSCH2_V = 0x1
const LEDC_OVF_CNT_RESET_LSCH2_S = 16
const LEDC_OVF_CNT_EN_LSCH2_V = 0x1
const LEDC_OVF_CNT_EN_LSCH2_S = 15
const LEDC_OVF_NUM_LSCH2 = 0x000003FF
const LEDC_OVF_NUM_LSCH2_V = 0x3FF
const LEDC_OVF_NUM_LSCH2_S = 5
const LEDC_PARA_UP_LSCH2_V = 0x1
const LEDC_PARA_UP_LSCH2_S = 4
const LEDC_IDLE_LV_LSCH2_V = 0x1
const LEDC_IDLE_LV_LSCH2_S = 3
const LEDC_SIG_OUT_EN_LSCH2_V = 0x1
const LEDC_SIG_OUT_EN_LSCH2_S = 2
const LEDC_TIMER_SEL_LSCH2 = 0x00000003
const LEDC_TIMER_SEL_LSCH2_V = 0x3
const LEDC_TIMER_SEL_LSCH2_S = 0
const LEDC_HPOINT_LSCH2 = 0x00003FFF
const LEDC_HPOINT_LSCH2_V = 0x3FFF
const LEDC_HPOINT_LSCH2_S = 0
const LEDC_DUTY_LSCH2 = 0x0007FFFF
const LEDC_DUTY_LSCH2_V = 0x7FFFF
const LEDC_DUTY_LSCH2_S = 0
const LEDC_DUTY_START_LSCH2_V = 0x1
const LEDC_DUTY_START_LSCH2_S = 31
const LEDC_DUTY_INC_LSCH2_V = 0x1
const LEDC_DUTY_INC_LSCH2_S = 30
const LEDC_DUTY_NUM_LSCH2 = 0x000003FF
const LEDC_DUTY_NUM_LSCH2_V = 0x3FF
const LEDC_DUTY_NUM_LSCH2_S = 20
const LEDC_DUTY_CYCLE_LSCH2 = 0x000003FF
const LEDC_DUTY_CYCLE_LSCH2_V = 0x3FF
const LEDC_DUTY_CYCLE_LSCH2_S = 10
const LEDC_DUTY_SCALE_LSCH2 = 0x000003FF
const LEDC_DUTY_SCALE_LSCH2_V = 0x3FF
const LEDC_DUTY_SCALE_LSCH2_S = 0
const LEDC_OVF_CNT_RESET_ST_LSCH3_V = 0x1
const LEDC_OVF_CNT_RESET_ST_LSCH3_S = 17
const LEDC_OVF_CNT_RESET_LSCH3_V = 0x1
const LEDC_OVF_CNT_RESET_LSCH3_S = 16
const LEDC_OVF_CNT_EN_LSCH3_V = 0x1
const LEDC_OVF_CNT_EN_LSCH3_S = 15
const LEDC_OVF_NUM_LSCH3 = 0x000003FF
const LEDC_OVF_NUM_LSCH3_V = 0x3FF
const LEDC_OVF_NUM_LSCH3_S = 5
const LEDC_PARA_UP_LSCH3_V = 0x1
const LEDC_PARA_UP_LSCH3_S = 4
const LEDC_IDLE_LV_LSCH3_V = 0x1
const LEDC_IDLE_LV_LSCH3_S = 3
const LEDC_SIG_OUT_EN_LSCH3_V = 0x1
const LEDC_SIG_OUT_EN_LSCH3_S = 2
const LEDC_TIMER_SEL_LSCH3 = 0x00000003
const LEDC_TIMER_SEL_LSCH3_V = 0x3
const LEDC_TIMER_SEL_LSCH3_S = 0
const LEDC_HPOINT_LSCH3 = 0x00003FFF
const LEDC_HPOINT_LSCH3_V = 0x3FFF
const LEDC_HPOINT_LSCH3_S = 0
const LEDC_DUTY_LSCH3 = 0x0007FFFF
const LEDC_DUTY_LSCH3_V = 0x7FFFF
const LEDC_DUTY_LSCH3_S = 0
const LEDC_DUTY_START_LSCH3_V = 0x1
const LEDC_DUTY_START_LSCH3_S = 31
const LEDC_DUTY_INC_LSCH3_V = 0x1
const LEDC_DUTY_INC_LSCH3_S = 30
const LEDC_DUTY_NUM_LSCH3 = 0x000003FF
const LEDC_DUTY_NUM_LSCH3_V = 0x3FF
const LEDC_DUTY_NUM_LSCH3_S = 20
const LEDC_DUTY_CYCLE_LSCH3 = 0x000003FF
const LEDC_DUTY_CYCLE_LSCH3_V = 0x3FF
const LEDC_DUTY_CYCLE_LSCH3_S = 10
const LEDC_DUTY_SCALE_LSCH3 = 0x000003FF
const LEDC_DUTY_SCALE_LSCH3_V = 0x3FF
const LEDC_DUTY_SCALE_LSCH3_S = 0
const LEDC_OVF_CNT_RESET_ST_LSCH4_V = 0x1
const LEDC_OVF_CNT_RESET_ST_LSCH4_S = 17
const LEDC_OVF_CNT_RESET_LSCH4_V = 0x1
const LEDC_OVF_CNT_RESET_LSCH4_S = 16
const LEDC_OVF_CNT_EN_LSCH4_V = 0x1
const LEDC_OVF_CNT_EN_LSCH4_S = 15
const LEDC_OVF_NUM_LSCH4 = 0x000003FF
const LEDC_OVF_NUM_LSCH4_V = 0x3FF
const LEDC_OVF_NUM_LSCH4_S = 5
const LEDC_PARA_UP_LSCH4_V = 0x1
const LEDC_PARA_UP_LSCH4_S = 4
const LEDC_IDLE_LV_LSCH4_V = 0x1
const LEDC_IDLE_LV_LSCH4_S = 3
const LEDC_SIG_OUT_EN_LSCH4_V = 0x1
const LEDC_SIG_OUT_EN_LSCH4_S = 2
const LEDC_TIMER_SEL_LSCH4 = 0x00000003
const LEDC_TIMER_SEL_LSCH4_V = 0x3
const LEDC_TIMER_SEL_LSCH4_S = 0
const LEDC_HPOINT_LSCH4 = 0x00003FFF
const LEDC_HPOINT_LSCH4_V = 0x3FFF
const LEDC_HPOINT_LSCH4_S = 0
const LEDC_DUTY_LSCH4 = 0x0007FFFF
const LEDC_DUTY_LSCH4_V = 0x7FFFF
const LEDC_DUTY_LSCH4_S = 0
const LEDC_DUTY_START_LSCH4_V = 0x1
const LEDC_DUTY_START_LSCH4_S = 31
const LEDC_DUTY_INC_LSCH4_V = 0x1
const LEDC_DUTY_INC_LSCH4_S = 30
const LEDC_DUTY_NUM_LSCH4 = 0x000003FF
const LEDC_DUTY_NUM_LSCH4_V = 0x3FF
const LEDC_DUTY_NUM_LSCH4_S = 20
const LEDC_DUTY_CYCLE_LSCH4 = 0x000003FF
const LEDC_DUTY_CYCLE_LSCH4_V = 0x3FF
const LEDC_DUTY_CYCLE_LSCH4_S = 10
const LEDC_DUTY_SCALE_LSCH4 = 0x000003FF
const LEDC_DUTY_SCALE_LSCH4_V = 0x3FF
const LEDC_DUTY_SCALE_LSCH4_S = 0
const LEDC_OVF_CNT_RESET_ST_LSCH5_V = 0x1
const LEDC_OVF_CNT_RESET_ST_LSCH5_S = 17
const LEDC_OVF_CNT_RESET_LSCH5_V = 0x1
const LEDC_OVF_CNT_RESET_LSCH5_S = 16
const LEDC_OVF_CNT_EN_LSCH5_V = 0x1
const LEDC_OVF_CNT_EN_LSCH5_S = 15
const LEDC_OVF_NUM_LSCH5 = 0x000003FF
const LEDC_OVF_NUM_LSCH5_V = 0x3FF
const LEDC_OVF_NUM_LSCH5_S = 5
const LEDC_PARA_UP_LSCH5_V = 0x1
const LEDC_PARA_UP_LSCH5_S = 4
const LEDC_IDLE_LV_LSCH5_V = 0x1
const LEDC_IDLE_LV_LSCH5_S = 3
const LEDC_SIG_OUT_EN_LSCH5_V = 0x1
const LEDC_SIG_OUT_EN_LSCH5_S = 2
const LEDC_TIMER_SEL_LSCH5 = 0x00000003
const LEDC_TIMER_SEL_LSCH5_V = 0x3
const LEDC_TIMER_SEL_LSCH5_S = 0
const LEDC_HPOINT_LSCH5 = 0x00003FFF
const LEDC_HPOINT_LSCH5_V = 0x3FFF
const LEDC_HPOINT_LSCH5_S = 0
const LEDC_DUTY_LSCH5 = 0x0007FFFF
const LEDC_DUTY_LSCH5_V = 0x7FFFF
const LEDC_DUTY_LSCH5_S = 0
const LEDC_DUTY_START_LSCH5_V = 0x1
const LEDC_DUTY_START_LSCH5_S = 31
const LEDC_DUTY_INC_LSCH5_V = 0x1
const LEDC_DUTY_INC_LSCH5_S = 30
const LEDC_DUTY_NUM_LSCH5 = 0x000003FF
const LEDC_DUTY_NUM_LSCH5_V = 0x3FF
const LEDC_DUTY_NUM_LSCH5_S = 20
const LEDC_DUTY_CYCLE_LSCH5 = 0x000003FF
const LEDC_DUTY_CYCLE_LSCH5_V = 0x3FF
const LEDC_DUTY_CYCLE_LSCH5_S = 10
const LEDC_DUTY_SCALE_LSCH5 = 0x000003FF
const LEDC_DUTY_SCALE_LSCH5_V = 0x3FF
const LEDC_DUTY_SCALE_LSCH5_S = 0
const LEDC_OVF_CNT_RESET_ST_LSCH6_V = 0x1
const LEDC_OVF_CNT_RESET_ST_LSCH6_S = 17
const LEDC_OVF_CNT_RESET_LSCH6_V = 0x1
const LEDC_OVF_CNT_RESET_LSCH6_S = 16
const LEDC_OVF_CNT_EN_LSCH6_V = 0x1
const LEDC_OVF_CNT_EN_LSCH6_S = 15
const LEDC_OVF_NUM_LSCH6 = 0x000003FF
const LEDC_OVF_NUM_LSCH6_V = 0x3FF
const LEDC_OVF_NUM_LSCH6_S = 5
const LEDC_PARA_UP_LSCH6_V = 0x1
const LEDC_PARA_UP_LSCH6_S = 4
const LEDC_IDLE_LV_LSCH6_V = 0x1
const LEDC_IDLE_LV_LSCH6_S = 3
const LEDC_SIG_OUT_EN_LSCH6_V = 0x1
const LEDC_SIG_OUT_EN_LSCH6_S = 2
const LEDC_TIMER_SEL_LSCH6 = 0x00000003
const LEDC_TIMER_SEL_LSCH6_V = 0x3
const LEDC_TIMER_SEL_LSCH6_S = 0
const LEDC_HPOINT_LSCH6 = 0x00003FFF
const LEDC_HPOINT_LSCH6_V = 0x3FFF
const LEDC_HPOINT_LSCH6_S = 0
const LEDC_DUTY_LSCH6 = 0x0007FFFF
const LEDC_DUTY_LSCH6_V = 0x7FFFF
const LEDC_DUTY_LSCH6_S = 0
const LEDC_DUTY_START_LSCH6_V = 0x1
const LEDC_DUTY_START_LSCH6_S = 31
const LEDC_DUTY_INC_LSCH6_V = 0x1
const LEDC_DUTY_INC_LSCH6_S = 30
const LEDC_DUTY_NUM_LSCH6 = 0x000003FF
const LEDC_DUTY_NUM_LSCH6_V = 0x3FF
const LEDC_DUTY_NUM_LSCH6_S = 20
const LEDC_DUTY_CYCLE_LSCH6 = 0x000003FF
const LEDC_DUTY_CYCLE_LSCH6_V = 0x3FF
const LEDC_DUTY_CYCLE_LSCH6_S = 10
const LEDC_DUTY_SCALE_LSCH6 = 0x000003FF
const LEDC_DUTY_SCALE_LSCH6_V = 0x3FF
const LEDC_DUTY_SCALE_LSCH6_S = 0
const LEDC_OVF_CNT_RESET_ST_LSCH7_V = 0x1
const LEDC_OVF_CNT_RESET_ST_LSCH7_S = 17
const LEDC_OVF_CNT_RESET_LSCH7_V = 0x1
const LEDC_OVF_CNT_RESET_LSCH7_S = 16
const LEDC_OVF_CNT_EN_LSCH7_V = 0x1
const LEDC_OVF_CNT_EN_LSCH7_S = 15
const LEDC_OVF_NUM_LSCH7 = 0x000003FF
const LEDC_OVF_NUM_LSCH7_V = 0x3FF
const LEDC_OVF_NUM_LSCH7_S = 5
const LEDC_PARA_UP_LSCH7_V = 0x1
const LEDC_PARA_UP_LSCH7_S = 4
const LEDC_IDLE_LV_LSCH7_V = 0x1
const LEDC_IDLE_LV_LSCH7_S = 3
const LEDC_SIG_OUT_EN_LSCH7_V = 0x1
const LEDC_SIG_OUT_EN_LSCH7_S = 2
const LEDC_TIMER_SEL_LSCH7 = 0x00000003
const LEDC_TIMER_SEL_LSCH7_V = 0x3
const LEDC_TIMER_SEL_LSCH7_S = 0
const LEDC_HPOINT_LSCH7 = 0x00003FFF
const LEDC_HPOINT_LSCH7_V = 0x3FFF
const LEDC_HPOINT_LSCH7_S = 0
const LEDC_DUTY_LSCH7 = 0x0007FFFF
const LEDC_DUTY_LSCH7_V = 0x7FFFF
const LEDC_DUTY_LSCH7_S = 0
const LEDC_DUTY_START_LSCH7_V = 0x1
const LEDC_DUTY_START_LSCH7_S = 31
const LEDC_DUTY_INC_LSCH7_V = 0x1
const LEDC_DUTY_INC_LSCH7_S = 30
const LEDC_DUTY_NUM_LSCH7 = 0x000003FF
const LEDC_DUTY_NUM_LSCH7_V = 0x3FF
const LEDC_DUTY_NUM_LSCH7_S = 20
const LEDC_DUTY_CYCLE_LSCH7 = 0x000003FF
const LEDC_DUTY_CYCLE_LSCH7_V = 0x3FF
const LEDC_DUTY_CYCLE_LSCH7_S = 10
const LEDC_DUTY_SCALE_LSCH7 = 0x000003FF
const LEDC_DUTY_SCALE_LSCH7_V = 0x3FF
const LEDC_DUTY_SCALE_LSCH7_S = 0
const LEDC_LSTIMER0_PARA_UP_V = 0x1
const LEDC_LSTIMER0_PARA_UP_S = 25
const LEDC_TICK_SEL_LSTIMER0_V = 0x1
const LEDC_TICK_SEL_LSTIMER0_S = 24
const LEDC_LSTIMER0_RST_V = 0x1
const LEDC_LSTIMER0_RST_S = 23
const LEDC_LSTIMER0_PAUSE_V = 0x1
const LEDC_LSTIMER0_PAUSE_S = 22
const LEDC_CLK_DIV_LSTIMER0 = 0x0003FFFF
const LEDC_CLK_DIV_LSTIMER0_V = 0x3FFFF
const LEDC_CLK_DIV_LSTIMER0_S = 4
const LEDC_LSTIMER0_DUTY_RES = 0x0000000F
const LEDC_LSTIMER0_DUTY_RES_V = 0xF
const LEDC_LSTIMER0_DUTY_RES_S = 0
const LEDC_LSTIMER0_CNT = 0x00003FFF
const LEDC_LSTIMER0_CNT_V = 0x3FFF
const LEDC_LSTIMER0_CNT_S = 0
const LEDC_LSTIMER1_PARA_UP_V = 0x1
const LEDC_LSTIMER1_PARA_UP_S = 25
const LEDC_TICK_SEL_LSTIMER1_V = 0x1
const LEDC_TICK_SEL_LSTIMER1_S = 24
const LEDC_LSTIMER1_RST_V = 0x1
const LEDC_LSTIMER1_RST_S = 23
const LEDC_LSTIMER1_PAUSE_V = 0x1
const LEDC_LSTIMER1_PAUSE_S = 22
const LEDC_CLK_DIV_LSTIMER1 = 0x0003FFFF
const LEDC_CLK_DIV_LSTIMER1_V = 0x3FFFF
const LEDC_CLK_DIV_LSTIMER1_S = 4
const LEDC_LSTIMER1_DUTY_RES = 0x0000000F
const LEDC_LSTIMER1_DUTY_RES_V = 0xF
const LEDC_LSTIMER1_DUTY_RES_S = 0
const LEDC_LSTIMER1_CNT = 0x00003FFF
const LEDC_LSTIMER1_CNT_V = 0x3FFF
const LEDC_LSTIMER1_CNT_S = 0
const LEDC_LSTIMER2_PARA_UP_V = 0x1
const LEDC_LSTIMER2_PARA_UP_S = 25
const LEDC_TICK_SEL_LSTIMER2_V = 0x1
const LEDC_TICK_SEL_LSTIMER2_S = 24
const LEDC_LSTIMER2_RST_V = 0x1
const LEDC_LSTIMER2_RST_S = 23
const LEDC_LSTIMER2_PAUSE_V = 0x1
const LEDC_LSTIMER2_PAUSE_S = 22
const LEDC_CLK_DIV_LSTIMER2 = 0x0003FFFF
const LEDC_CLK_DIV_LSTIMER2_V = 0x3FFFF
const LEDC_CLK_DIV_LSTIMER2_S = 4
const LEDC_LSTIMER2_DUTY_RES = 0x0000000F
const LEDC_LSTIMER2_DUTY_RES_V = 0xF
const LEDC_LSTIMER2_DUTY_RES_S = 0
const LEDC_LSTIMER2_CNT = 0x00003FFF
const LEDC_LSTIMER2_CNT_V = 0x3FFF
const LEDC_LSTIMER2_CNT_S = 0
const LEDC_LSTIMER3_PARA_UP_V = 0x1
const LEDC_LSTIMER3_PARA_UP_S = 25
const LEDC_TICK_SEL_LSTIMER3_V = 0x1
const LEDC_TICK_SEL_LSTIMER3_S = 24
const LEDC_LSTIMER3_RST_V = 0x1
const LEDC_LSTIMER3_RST_S = 23
const LEDC_LSTIMER3_PAUSE_V = 0x1
const LEDC_LSTIMER3_PAUSE_S = 22
const LEDC_CLK_DIV_LSTIMER3 = 0x0003FFFF
const LEDC_CLK_DIV_LSTIMER3_V = 0x3FFFF
const LEDC_CLK_DIV_LSTIMER3_S = 4
const LEDC_LSTIMER3_DUTY_RES = 0x0000000F
const LEDC_LSTIMER3_DUTY_RES_V = 0xF
const LEDC_LSTIMER3_DUTY_RES_S = 0
const LEDC_LSTIMER3_CNT = 0x00003FFF
const LEDC_LSTIMER3_CNT_V = 0x3FFF
const LEDC_LSTIMER3_CNT_S = 0
const LEDC_OVF_CNT_LSCH7_INT_RAW_V = 0x1
const LEDC_OVF_CNT_LSCH7_INT_RAW_S = 19
const LEDC_OVF_CNT_LSCH6_INT_RAW_V = 0x1
const LEDC_OVF_CNT_LSCH6_INT_RAW_S = 18
const LEDC_OVF_CNT_LSCH5_INT_RAW_V = 0x1
const LEDC_OVF_CNT_LSCH5_INT_RAW_S = 17
const LEDC_OVF_CNT_LSCH4_INT_RAW_V = 0x1
const LEDC_OVF_CNT_LSCH4_INT_RAW_S = 16
const LEDC_OVF_CNT_LSCH3_INT_RAW_V = 0x1
const LEDC_OVF_CNT_LSCH3_INT_RAW_S = 15
const LEDC_OVF_CNT_LSCH2_INT_RAW_V = 0x1
const LEDC_OVF_CNT_LSCH2_INT_RAW_S = 14
const LEDC_OVF_CNT_LSCH1_INT_RAW_V = 0x1
const LEDC_OVF_CNT_LSCH1_INT_RAW_S = 13
const LEDC_OVF_CNT_LSCH0_INT_RAW_V = 0x1
const LEDC_OVF_CNT_LSCH0_INT_RAW_S = 12
const LEDC_DUTY_CHNG_END_LSCH7_INT_RAW_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH7_INT_RAW_S = 11
const LEDC_DUTY_CHNG_END_LSCH6_INT_RAW_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH6_INT_RAW_S = 10
const LEDC_DUTY_CHNG_END_LSCH5_INT_RAW_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH5_INT_RAW_S = 9
const LEDC_DUTY_CHNG_END_LSCH4_INT_RAW_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH4_INT_RAW_S = 8
const LEDC_DUTY_CHNG_END_LSCH3_INT_RAW_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH3_INT_RAW_S = 7
const LEDC_DUTY_CHNG_END_LSCH2_INT_RAW_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH2_INT_RAW_S = 6
const LEDC_DUTY_CHNG_END_LSCH1_INT_RAW_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH1_INT_RAW_S = 5
const LEDC_DUTY_CHNG_END_LSCH0_INT_RAW_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH0_INT_RAW_S = 4
const LEDC_LSTIMER3_OVF_INT_RAW_V = 0x1
const LEDC_LSTIMER3_OVF_INT_RAW_S = 3
const LEDC_LSTIMER2_OVF_INT_RAW_V = 0x1
const LEDC_LSTIMER2_OVF_INT_RAW_S = 2
const LEDC_LSTIMER1_OVF_INT_RAW_V = 0x1
const LEDC_LSTIMER1_OVF_INT_RAW_S = 1
const LEDC_LSTIMER0_OVF_INT_RAW_V = 0x1
const LEDC_LSTIMER0_OVF_INT_RAW_S = 0
const LEDC_OVF_CNT_LSCH7_INT_ST_V = 0x1
const LEDC_OVF_CNT_LSCH7_INT_ST_S = 19
const LEDC_OVF_CNT_LSCH6_INT_ST_V = 0x1
const LEDC_OVF_CNT_LSCH6_INT_ST_S = 18
const LEDC_OVF_CNT_LSCH5_INT_ST_V = 0x1
const LEDC_OVF_CNT_LSCH5_INT_ST_S = 17
const LEDC_OVF_CNT_LSCH4_INT_ST_V = 0x1
const LEDC_OVF_CNT_LSCH4_INT_ST_S = 16
const LEDC_OVF_CNT_LSCH3_INT_ST_V = 0x1
const LEDC_OVF_CNT_LSCH3_INT_ST_S = 15
const LEDC_OVF_CNT_LSCH2_INT_ST_V = 0x1
const LEDC_OVF_CNT_LSCH2_INT_ST_S = 14
const LEDC_OVF_CNT_LSCH1_INT_ST_V = 0x1
const LEDC_OVF_CNT_LSCH1_INT_ST_S = 13
const LEDC_OVF_CNT_LSCH0_INT_ST_V = 0x1
const LEDC_OVF_CNT_LSCH0_INT_ST_S = 12
const LEDC_DUTY_CHNG_END_LSCH7_INT_ST_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH7_INT_ST_S = 11
const LEDC_DUTY_CHNG_END_LSCH6_INT_ST_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH6_INT_ST_S = 10
const LEDC_DUTY_CHNG_END_LSCH5_INT_ST_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH5_INT_ST_S = 9
const LEDC_DUTY_CHNG_END_LSCH4_INT_ST_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH4_INT_ST_S = 8
const LEDC_DUTY_CHNG_END_LSCH3_INT_ST_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH3_INT_ST_S = 7
const LEDC_DUTY_CHNG_END_LSCH2_INT_ST_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH2_INT_ST_S = 6
const LEDC_DUTY_CHNG_END_LSCH1_INT_ST_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH1_INT_ST_S = 5
const LEDC_DUTY_CHNG_END_LSCH0_INT_ST_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH0_INT_ST_S = 4
const LEDC_LSTIMER3_OVF_INT_ST_V = 0x1
const LEDC_LSTIMER3_OVF_INT_ST_S = 3
const LEDC_LSTIMER2_OVF_INT_ST_V = 0x1
const LEDC_LSTIMER2_OVF_INT_ST_S = 2
const LEDC_LSTIMER1_OVF_INT_ST_V = 0x1
const LEDC_LSTIMER1_OVF_INT_ST_S = 1
const LEDC_LSTIMER0_OVF_INT_ST_V = 0x1
const LEDC_LSTIMER0_OVF_INT_ST_S = 0
const LEDC_OVF_CNT_LSCH7_INT_ENA_V = 0x1
const LEDC_OVF_CNT_LSCH7_INT_ENA_S = 19
const LEDC_OVF_CNT_LSCH6_INT_ENA_V = 0x1
const LEDC_OVF_CNT_LSCH6_INT_ENA_S = 18
const LEDC_OVF_CNT_LSCH5_INT_ENA_V = 0x1
const LEDC_OVF_CNT_LSCH5_INT_ENA_S = 17
const LEDC_OVF_CNT_LSCH4_INT_ENA_V = 0x1
const LEDC_OVF_CNT_LSCH4_INT_ENA_S = 16
const LEDC_OVF_CNT_LSCH3_INT_ENA_V = 0x1
const LEDC_OVF_CNT_LSCH3_INT_ENA_S = 15
const LEDC_OVF_CNT_LSCH2_INT_ENA_V = 0x1
const LEDC_OVF_CNT_LSCH2_INT_ENA_S = 14
const LEDC_OVF_CNT_LSCH1_INT_ENA_V = 0x1
const LEDC_OVF_CNT_LSCH1_INT_ENA_S = 13
const LEDC_OVF_CNT_LSCH0_INT_ENA_V = 0x1
const LEDC_OVF_CNT_LSCH0_INT_ENA_S = 12
const LEDC_DUTY_CHNG_END_LSCH7_INT_ENA_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH7_INT_ENA_S = 11
const LEDC_DUTY_CHNG_END_LSCH6_INT_ENA_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH6_INT_ENA_S = 10
const LEDC_DUTY_CHNG_END_LSCH5_INT_ENA_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH5_INT_ENA_S = 9
const LEDC_DUTY_CHNG_END_LSCH4_INT_ENA_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH4_INT_ENA_S = 8
const LEDC_DUTY_CHNG_END_LSCH3_INT_ENA_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH3_INT_ENA_S = 7
const LEDC_DUTY_CHNG_END_LSCH2_INT_ENA_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH2_INT_ENA_S = 6
const LEDC_DUTY_CHNG_END_LSCH1_INT_ENA_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH1_INT_ENA_S = 5
const LEDC_DUTY_CHNG_END_LSCH0_INT_ENA_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH0_INT_ENA_S = 4
const LEDC_LSTIMER3_OVF_INT_ENA_V = 0x1
const LEDC_LSTIMER3_OVF_INT_ENA_S = 3
const LEDC_LSTIMER2_OVF_INT_ENA_V = 0x1
const LEDC_LSTIMER2_OVF_INT_ENA_S = 2
const LEDC_LSTIMER1_OVF_INT_ENA_V = 0x1
const LEDC_LSTIMER1_OVF_INT_ENA_S = 1
const LEDC_LSTIMER0_OVF_INT_ENA_V = 0x1
const LEDC_LSTIMER0_OVF_INT_ENA_S = 0
const LEDC_OVF_CNT_LSCH7_INT_CLR_V = 0x1
const LEDC_OVF_CNT_LSCH7_INT_CLR_S = 19
const LEDC_OVF_CNT_LSCH6_INT_CLR_V = 0x1
const LEDC_OVF_CNT_LSCH6_INT_CLR_S = 18
const LEDC_OVF_CNT_LSCH5_INT_CLR_V = 0x1
const LEDC_OVF_CNT_LSCH5_INT_CLR_S = 17
const LEDC_OVF_CNT_LSCH4_INT_CLR_V = 0x1
const LEDC_OVF_CNT_LSCH4_INT_CLR_S = 16
const LEDC_OVF_CNT_LSCH3_INT_CLR_V = 0x1
const LEDC_OVF_CNT_LSCH3_INT_CLR_S = 15
const LEDC_OVF_CNT_LSCH2_INT_CLR_V = 0x1
const LEDC_OVF_CNT_LSCH2_INT_CLR_S = 14
const LEDC_OVF_CNT_LSCH1_INT_CLR_V = 0x1
const LEDC_OVF_CNT_LSCH1_INT_CLR_S = 13
const LEDC_OVF_CNT_LSCH0_INT_CLR_V = 0x1
const LEDC_OVF_CNT_LSCH0_INT_CLR_S = 12
const LEDC_DUTY_CHNG_END_LSCH7_INT_CLR_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH7_INT_CLR_S = 11
const LEDC_DUTY_CHNG_END_LSCH6_INT_CLR_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH6_INT_CLR_S = 10
const LEDC_DUTY_CHNG_END_LSCH5_INT_CLR_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH5_INT_CLR_S = 9
const LEDC_DUTY_CHNG_END_LSCH4_INT_CLR_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH4_INT_CLR_S = 8
const LEDC_DUTY_CHNG_END_LSCH3_INT_CLR_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH3_INT_CLR_S = 7
const LEDC_DUTY_CHNG_END_LSCH2_INT_CLR_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH2_INT_CLR_S = 6
const LEDC_DUTY_CHNG_END_LSCH1_INT_CLR_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH1_INT_CLR_S = 5
const LEDC_DUTY_CHNG_END_LSCH0_INT_CLR_V = 0x1
const LEDC_DUTY_CHNG_END_LSCH0_INT_CLR_S = 4
const LEDC_LSTIMER3_OVF_INT_CLR_V = 0x1
const LEDC_LSTIMER3_OVF_INT_CLR_S = 3
const LEDC_LSTIMER2_OVF_INT_CLR_V = 0x1
const LEDC_LSTIMER2_OVF_INT_CLR_S = 2
const LEDC_LSTIMER1_OVF_INT_CLR_V = 0x1
const LEDC_LSTIMER1_OVF_INT_CLR_S = 1
const LEDC_LSTIMER0_OVF_INT_CLR_V = 0x1
const LEDC_LSTIMER0_OVF_INT_CLR_S = 0
const LEDC_CLK_EN_V = 0x1
const LEDC_CLK_EN_S = 31
const LEDC_APB_CLK_SEL = 0x00000003
const LEDC_APB_CLK_SEL_V = 0x3
const LEDC_APB_CLK_SEL_S = 0
const LEDC_DATE = 0xFFFFFFFF
const LEDC_DATE_V = 0xFFFFFFFF
const LEDC_DATE_S = 0
const I2C_SCL_LOW_PERIOD = 0x00003FFF
const I2C_SCL_LOW_PERIOD_V = 0x3FFF
const I2C_SCL_LOW_PERIOD_S = 0
const I2C_REF_ALWAYS_ON_V = 0x1
const I2C_REF_ALWAYS_ON_S = 11
const I2C_FSM_RST_V = 0x1
const I2C_FSM_RST_S = 10
const I2C_ARBITRATION_EN_V = 0x1
const I2C_ARBITRATION_EN_S = 9
const I2C_CLK_EN_V = 0x1
const I2C_CLK_EN_S = 8
const I2C_RX_LSB_FIRST_V = 0x1
const I2C_RX_LSB_FIRST_S = 7
const I2C_TX_LSB_FIRST_V = 0x1
const I2C_TX_LSB_FIRST_S = 6
const I2C_TRANS_START_V = 0x1
const I2C_TRANS_START_S = 5
const I2C_MS_MODE_V = 0x1
const I2C_MS_MODE_S = 4
const I2C_RX_FULL_ACK_LEVEL_V = 0x1
const I2C_RX_FULL_ACK_LEVEL_S = 3
const I2C_SAMPLE_SCL_LEVEL_V = 0x1
const I2C_SAMPLE_SCL_LEVEL_S = 2
const I2C_SCL_FORCE_OUT_V = 0x1
const I2C_SCL_FORCE_OUT_S = 1
const I2C_SDA_FORCE_OUT_V = 0x1
const I2C_SDA_FORCE_OUT_S = 0
const I2C_SCL_STATE_LAST = 0x00000007
const I2C_SCL_STATE_LAST_V = 0x7
const I2C_SCL_STATE_LAST_S = 28
const I2C_SCL_MAIN_STATE_LAST = 0x00000007
const I2C_SCL_MAIN_STATE_LAST_V = 0x7
const I2C_SCL_MAIN_STATE_LAST_S = 24
const I2C_TXFIFO_CNT = 0x0000003F
const I2C_TXFIFO_CNT_V = 0x3F
const I2C_TXFIFO_CNT_S = 18
const I2C_STRETCH_CAUSE = 0x00000003
const I2C_STRETCH_CAUSE_V = 0x3
const I2C_STRETCH_CAUSE_S = 14
const I2C_RXFIFO_CNT = 0x0000003F
const I2C_RXFIFO_CNT_V = 0x3F
const I2C_RXFIFO_CNT_S = 8
const I2C_BYTE_TRANS_V = 0x1
const I2C_BYTE_TRANS_S = 6
const I2C_SLAVE_ADDRESSED_V = 0x1
const I2C_SLAVE_ADDRESSED_S = 5
const I2C_BUS_BUSY_V = 0x1
const I2C_BUS_BUSY_S = 4
const I2C_ARB_LOST_V = 0x1
const I2C_ARB_LOST_S = 3
const I2C_TIME_OUT_V = 0x1
const I2C_TIME_OUT_S = 2
const I2C_SLAVE_RW_V = 0x1
const I2C_SLAVE_RW_S = 1
const I2C_RESP_REC_V = 0x1
const I2C_RESP_REC_S = 0
const I2C_TIME_OUT_EN_V = 0x1
const I2C_TIME_OUT_EN_S = 24
const I2C_TIME_OUT_REG = 0x00FFFFFF
const I2C_TIME_OUT_REG_V = 0xFFFFFF
const I2C_TIME_OUT_REG_S = 0
const I2C_ADDR_10BIT_EN_V = 0x1
const I2C_ADDR_10BIT_EN_S = 31
const I2C_SLAVE_ADDR = 0x00007FFF
const I2C_SLAVE_ADDR_V = 0x7FFF
const I2C_SLAVE_ADDR_S = 0
const I2C_SLAVE_RW_POINT = 0x000000FF
const I2C_SLAVE_RW_POINT_V = 0xFF
const I2C_SLAVE_RW_POINT_S = 22
const I2C_TX_UPDATE_V = 0x1
const I2C_TX_UPDATE_S = 21
const I2C_RX_UPDATE_V = 0x1
const I2C_RX_UPDATE_S = 20
const I2C_TXFIFO_END_ADDR = 0x0000001F
const I2C_TXFIFO_END_ADDR_V = 0x1F
const I2C_TXFIFO_END_ADDR_S = 15
const I2C_TXFIFO_START_ADDR = 0x0000001F
const I2C_TXFIFO_START_ADDR_V = 0x1F
const I2C_TXFIFO_START_ADDR_S = 10
const I2C_RXFIFO_END_ADDR = 0x0000001F
const I2C_RXFIFO_END_ADDR_V = 0x1F
const I2C_RXFIFO_END_ADDR_S = 5
const I2C_RXFIFO_START_ADDR = 0x0000001F
const I2C_RXFIFO_START_ADDR_V = 0x1F
const I2C_RXFIFO_START_ADDR_S = 0
const I2C_FIFO_PRT_EN_V = 0x1
const I2C_FIFO_PRT_EN_S = 26
const I2C_NONFIFO_TX_THRES = 0x0000003F
const I2C_NONFIFO_TX_THRES_V = 0x3F
const I2C_NONFIFO_TX_THRES_S = 20
const I2C_NONFIFO_RX_THRES = 0x0000003F
const I2C_NONFIFO_RX_THRES_V = 0x3F
const I2C_NONFIFO_RX_THRES_S = 14
const I2C_TX_FIFO_RST_V = 0x1
const I2C_TX_FIFO_RST_S = 13
const I2C_RX_FIFO_RST_V = 0x1
const I2C_RX_FIFO_RST_S = 12
const I2C_FIFO_ADDR_CFG_EN_V = 0x1
const I2C_FIFO_ADDR_CFG_EN_S = 11
const I2C_NONFIFO_EN_V = 0x1
const I2C_NONFIFO_EN_S = 10
const I2C_TXFIFO_WM_THRHD = 0x0000001F
const I2C_TXFIFO_WM_THRHD_V = 0x1F
const I2C_TXFIFO_WM_THRHD_S = 5
const I2C_RXFIFO_WM_THRHD = 0x0000001F
const I2C_RXFIFO_WM_THRHD_V = 0x1F
const I2C_RXFIFO_WM_THRHD_S = 0
const I2C_FIFO_RDATA = 0x000000FF
const I2C_FIFO_RDATA_V = 0xFF
const I2C_FIFO_RDATA_S = 0
const I2C_SLAVE_STRETCH_INT_RAW_V = 0x1
const I2C_SLAVE_STRETCH_INT_RAW_S = 16
const I2C_DET_START_INT_RAW_V = 0x1
const I2C_DET_START_INT_RAW_S = 15
const I2C_SCL_MAIN_ST_TO_INT_RAW_V = 0x1
const I2C_SCL_MAIN_ST_TO_INT_RAW_S = 14
const I2C_SCL_ST_TO_INT_RAW_V = 0x1
const I2C_SCL_ST_TO_INT_RAW_S = 13
const I2C_RXFIFO_UDF_INT_RAW_V = 0x1
const I2C_RXFIFO_UDF_INT_RAW_S = 12
const I2C_TXFIFO_OVF_INT_RAW_V = 0x1
const I2C_TXFIFO_OVF_INT_RAW_S = 11
const I2C_NACK_INT_RAW_V = 0x1
const I2C_NACK_INT_RAW_S = 10
const I2C_TRANS_START_INT_RAW_V = 0x1
const I2C_TRANS_START_INT_RAW_S = 9
const I2C_TIME_OUT_INT_RAW_V = 0x1
const I2C_TIME_OUT_INT_RAW_S = 8
const I2C_TRANS_COMPLETE_INT_RAW_V = 0x1
const I2C_TRANS_COMPLETE_INT_RAW_S = 7
const I2C_MST_TXFIFO_UDF_INT_RAW_V = 0x1
const I2C_MST_TXFIFO_UDF_INT_RAW_S = 6
const I2C_ARBITRATION_LOST_INT_RAW_V = 0x1
const I2C_ARBITRATION_LOST_INT_RAW_S = 5
const I2C_BYTE_TRANS_DONE_INT_RAW_V = 0x1
const I2C_BYTE_TRANS_DONE_INT_RAW_S = 4
const I2C_END_DETECT_INT_RAW_V = 0x1
const I2C_END_DETECT_INT_RAW_S = 3
const I2C_RXFIFO_OVF_INT_RAW_V = 0x1
const I2C_RXFIFO_OVF_INT_RAW_S = 2
const I2C_TXFIFO_WM_INT_RAW_V = 0x1
const I2C_TXFIFO_WM_INT_RAW_S = 1
const I2C_RXFIFO_WM_INT_RAW_V = 0x1
const I2C_RXFIFO_WM_INT_RAW_S = 0
const I2C_SLAVE_STRETCH_INT_CLR_V = 0x1
const I2C_SLAVE_STRETCH_INT_CLR_S = 16
const I2C_DET_START_INT_CLR_V = 0x1
const I2C_DET_START_INT_CLR_S = 15
const I2C_SCL_MAIN_ST_TO_INT_CLR_V = 0x1
const I2C_SCL_MAIN_ST_TO_INT_CLR_S = 14
const I2C_SCL_ST_TO_INT_CLR_V = 0x1
const I2C_SCL_ST_TO_INT_CLR_S = 13
const I2C_RXFIFO_UDF_INT_CLR_V = 0x1
const I2C_RXFIFO_UDF_INT_CLR_S = 12
const I2C_TXFIFO_OVF_INT_CLR_V = 0x1
const I2C_TXFIFO_OVF_INT_CLR_S = 11
const I2C_NACK_INT_CLR_V = 0x1
const I2C_NACK_INT_CLR_S = 10
const I2C_TRANS_START_INT_CLR_V = 0x1
const I2C_TRANS_START_INT_CLR_S = 9
const I2C_TIME_OUT_INT_CLR_V = 0x1
const I2C_TIME_OUT_INT_CLR_S = 8
const I2C_TRANS_COMPLETE_INT_CLR_V = 0x1
const I2C_TRANS_COMPLETE_INT_CLR_S = 7
const I2C_MST_TXFIFO_UDF_INT_CLR_V = 0x1
const I2C_MST_TXFIFO_UDF_INT_CLR_S = 6
const I2C_ARBITRATION_LOST_INT_CLR_V = 0x1
const I2C_ARBITRATION_LOST_INT_CLR_S = 5
const I2C_BYTE_TRANS_DONE_INT_CLR_V = 0x1
const I2C_BYTE_TRANS_DONE_INT_CLR_S = 4
const I2C_END_DETECT_INT_CLR_V = 0x1
const I2C_END_DETECT_INT_CLR_S = 3
const I2C_RXFIFO_OVF_INT_CLR_V = 0x1
const I2C_RXFIFO_OVF_INT_CLR_S = 2
const I2C_TXFIFO_WM_INT_CLR_V = 0x1
const I2C_TXFIFO_WM_INT_CLR_S = 1
const I2C_RXFIFO_WM_INT_CLR_V = 0x1
const I2C_RXFIFO_WM_INT_CLR_S = 0
const I2C_SLAVE_STRETCH_INT_ENA_V = 0x1
const I2C_SLAVE_STRETCH_INT_ENA_S = 16
const I2C_DET_START_INT_ENA_V = 0x1
const I2C_DET_START_INT_ENA_S = 15
const I2C_SCL_MAIN_ST_TO_INT_ENA_V = 0x1
const I2C_SCL_MAIN_ST_TO_INT_ENA_S = 14
const I2C_SCL_ST_TO_INT_ENA_V = 0x1
const I2C_SCL_ST_TO_INT_ENA_S = 13
const I2C_RXFIFO_UDF_INT_ENA_V = 0x1
const I2C_RXFIFO_UDF_INT_ENA_S = 12
const I2C_TXFIFO_OVF_INT_ENA_V = 0x1
const I2C_TXFIFO_OVF_INT_ENA_S = 11
const I2C_NACK_INT_ENA_V = 0x1
const I2C_NACK_INT_ENA_S = 10
const I2C_TRANS_START_INT_ENA_V = 0x1
const I2C_TRANS_START_INT_ENA_S = 9
const I2C_TIME_OUT_INT_ENA_V = 0x1
const I2C_TIME_OUT_INT_ENA_S = 8
const I2C_TRANS_COMPLETE_INT_ENA_V = 0x1
const I2C_TRANS_COMPLETE_INT_ENA_S = 7
const I2C_MST_TXFIFO_UDF_INT_ENA_V = 0x1
const I2C_MST_TXFIFO_UDF_INT_ENA_S = 6
const I2C_ARBITRATION_LOST_INT_ENA_V = 0x1
const I2C_ARBITRATION_LOST_INT_ENA_S = 5
const I2C_BYTE_TRANS_DONE_INT_ENA_V = 0x1
const I2C_BYTE_TRANS_DONE_INT_ENA_S = 4
const I2C_END_DETECT_INT_ENA_V = 0x1
const I2C_END_DETECT_INT_ENA_S = 3
const I2C_RXFIFO_OVF_INT_ENA_V = 0x1
const I2C_RXFIFO_OVF_INT_ENA_S = 2
const I2C_TXFIFO_WM_INT_ENA_V = 0x1
const I2C_TXFIFO_WM_INT_ENA_S = 1
const I2C_RXFIFO_WM_INT_ENA_V = 0x1
const I2C_RXFIFO_WM_INT_ENA_S = 0
const I2C_SLAVE_STRETCH_INT_ST_V = 0x1
const I2C_SLAVE_STRETCH_INT_ST_S = 16
const I2C_DET_START_INT_ST_V = 0x1
const I2C_DET_START_INT_ST_S = 15
const I2C_SCL_MAIN_ST_TO_INT_ST_V = 0x1
const I2C_SCL_MAIN_ST_TO_INT_ST_S = 14
const I2C_SCL_ST_TO_INT_ST_V = 0x1
const I2C_SCL_ST_TO_INT_ST_S = 13
const I2C_RXFIFO_UDF_INT_ST_V = 0x1
const I2C_RXFIFO_UDF_INT_ST_S = 12
const I2C_TXFIFO_OVF_INT_ST_V = 0x1
const I2C_TXFIFO_OVF_INT_ST_S = 11
const I2C_NACK_INT_ST_V = 0x1
const I2C_NACK_INT_ST_S = 10
const I2C_TRANS_START_INT_ST_V = 0x1
const I2C_TRANS_START_INT_ST_S = 9
const I2C_TIME_OUT_INT_ST_V = 0x1
const I2C_TIME_OUT_INT_ST_S = 8
const I2C_TRANS_COMPLETE_INT_ST_V = 0x1
const I2C_TRANS_COMPLETE_INT_ST_S = 7
const I2C_MST_TXFIFO_UDF_INT_ST_V = 0x1
const I2C_MST_TXFIFO_UDF_INT_ST_S = 6
const I2C_ARBITRATION_LOST_INT_ST_V = 0x1
const I2C_ARBITRATION_LOST_INT_ST_S = 5
const I2C_BYTE_TRANS_DONE_INT_ST_V = 0x1
const I2C_BYTE_TRANS_DONE_INT_ST_S = 4
const I2C_END_DETECT_INT_ST_V = 0x1
const I2C_END_DETECT_INT_ST_S = 3
const I2C_RXFIFO_OVF_INT_ST_V = 0x1
const I2C_RXFIFO_OVF_INT_ST_S = 2
const I2C_TXFIFO_WM_INT_ST_V = 0x1
const I2C_TXFIFO_WM_INT_ST_S = 1
const I2C_RXFIFO_WM_INT_ST_V = 0x1
const I2C_RXFIFO_WM_INT_ST_S = 0
const I2C_SDA_HOLD_TIME = 0x000003FF
const I2C_SDA_HOLD_TIME_V = 0x3FF
const I2C_SDA_HOLD_TIME_S = 0
const I2C_SDA_SAMPLE_TIME = 0x000003FF
const I2C_SDA_SAMPLE_TIME_V = 0x3FF
const I2C_SDA_SAMPLE_TIME_S = 0
const I2C_SCL_WAIT_HIGH_PERIOD = 0x00003FFF
const I2C_SCL_WAIT_HIGH_PERIOD_V = 0x3FFF
const I2C_SCL_WAIT_HIGH_PERIOD_S = 14
const I2C_SCL_HIGH_PERIOD = 0x00003FFF
const I2C_SCL_HIGH_PERIOD_V = 0x3FFF
const I2C_SCL_HIGH_PERIOD_S = 0
const I2C_SCL_START_HOLD_TIME = 0x000003FF
const I2C_SCL_START_HOLD_TIME_V = 0x3FF
const I2C_SCL_START_HOLD_TIME_S = 0
const I2C_SCL_RSTART_SETUP_TIME = 0x000003FF
const I2C_SCL_RSTART_SETUP_TIME_V = 0x3FF
const I2C_SCL_RSTART_SETUP_TIME_S = 0
const I2C_SCL_STOP_HOLD_TIME = 0x00003FFF
const I2C_SCL_STOP_HOLD_TIME_V = 0x3FFF
const I2C_SCL_STOP_HOLD_TIME_S = 0
const I2C_SCL_STOP_SETUP_TIME = 0x000003FF
const I2C_SCL_STOP_SETUP_TIME_V = 0x3FF
const I2C_SCL_STOP_SETUP_TIME_S = 0
const I2C_SCL_FILTER_EN_V = 0x1
const I2C_SCL_FILTER_EN_S = 4
const I2C_SCL_FILTER_THRES = 0x0000000F
const I2C_SCL_FILTER_THRES_V = 0xF
const I2C_SCL_FILTER_THRES_S = 0
const I2C_SDA_FILTER_EN_V = 0x1
const I2C_SDA_FILTER_EN_S = 4
const I2C_SDA_FILTER_THRES = 0x0000000F
const I2C_SDA_FILTER_THRES_V = 0xF
const I2C_SDA_FILTER_THRES_S = 0
const I2C_COMMAND0_DONE_V = 0x1
const I2C_COMMAND0_DONE_S = 31
const I2C_COMMAND0 = 0x00003FFF
const I2C_COMMAND0_V = 0x3FFF
const I2C_COMMAND0_S = 0
const I2C_COMMAND1_DONE_V = 0x1
const I2C_COMMAND1_DONE_S = 31
const I2C_COMMAND1 = 0x00003FFF
const I2C_COMMAND1_V = 0x3FFF
const I2C_COMMAND1_S = 0
const I2C_COMMAND2_DONE_V = 0x1
const I2C_COMMAND2_DONE_S = 31
const I2C_COMMAND2 = 0x00003FFF
const I2C_COMMAND2_V = 0x3FFF
const I2C_COMMAND2_S = 0
const I2C_COMMAND3_DONE_V = 0x1
const I2C_COMMAND3_DONE_S = 31
const I2C_COMMAND3 = 0x00003FFF
const I2C_COMMAND3_V = 0x3FFF
const I2C_COMMAND3_S = 0
const I2C_COMMAND4_DONE_V = 0x1
const I2C_COMMAND4_DONE_S = 31
const I2C_COMMAND4 = 0x00003FFF
const I2C_COMMAND4_V = 0x3FFF
const I2C_COMMAND4_S = 0
const I2C_COMMAND5_DONE_V = 0x1
const I2C_COMMAND5_DONE_S = 31
const I2C_COMMAND5 = 0x00003FFF
const I2C_COMMAND5_V = 0x3FFF
const I2C_COMMAND5_S = 0
const I2C_COMMAND6_DONE_V = 0x1
const I2C_COMMAND6_DONE_S = 31
const I2C_COMMAND6 = 0x00003FFF
const I2C_COMMAND6_V = 0x3FFF
const I2C_COMMAND6_S = 0
const I2C_COMMAND7_DONE_V = 0x1
const I2C_COMMAND7_DONE_S = 31
const I2C_COMMAND7 = 0x00003FFF
const I2C_COMMAND7_V = 0x3FFF
const I2C_COMMAND7_S = 0
const I2C_COMMAND8_DONE_V = 0x1
const I2C_COMMAND8_DONE_S = 31
const I2C_COMMAND8 = 0x00003FFF
const I2C_COMMAND8_V = 0x3FFF
const I2C_COMMAND8_S = 0
const I2C_COMMAND9_DONE_V = 0x1
const I2C_COMMAND9_DONE_S = 31
const I2C_COMMAND9 = 0x00003FFF
const I2C_COMMAND9_V = 0x3FFF
const I2C_COMMAND9_S = 0
const I2C_COMMAND10_DONE_V = 0x1
const I2C_COMMAND10_DONE_S = 31
const I2C_COMMAND10 = 0x00003FFF
const I2C_COMMAND10_V = 0x3FFF
const I2C_COMMAND10_S = 0
const I2C_COMMAND11_DONE_V = 0x1
const I2C_COMMAND11_DONE_S = 31
const I2C_COMMAND11 = 0x00003FFF
const I2C_COMMAND11_V = 0x3FFF
const I2C_COMMAND11_S = 0
const I2C_COMMAND12_DONE_V = 0x1
const I2C_COMMAND12_DONE_S = 31
const I2C_COMMAND12 = 0x00003FFF
const I2C_COMMAND12_V = 0x3FFF
const I2C_COMMAND12_S = 0
const I2C_COMMAND13_DONE_V = 0x1
const I2C_COMMAND13_DONE_S = 31
const I2C_COMMAND13 = 0x00003FFF
const I2C_COMMAND13_V = 0x3FFF
const I2C_COMMAND13_S = 0
const I2C_COMMAND14_DONE_V = 0x1
const I2C_COMMAND14_DONE_S = 31
const I2C_COMMAND14 = 0x00003FFF
const I2C_COMMAND14_V = 0x3FFF
const I2C_COMMAND14_S = 0
const I2C_COMMAND15_DONE_V = 0x1
const I2C_COMMAND15_DONE_S = 31
const I2C_COMMAND15 = 0x00003FFF
const I2C_COMMAND15_V = 0x3FFF
const I2C_COMMAND15_S = 0
const I2C_SCL_ST_TO_REG = 0x00FFFFFF
const I2C_SCL_ST_TO_REG_V = 0xFFFFFF
const I2C_SCL_ST_TO_REG_S = 0
const I2C_SCL_MAIN_ST_TO_REG = 0x00FFFFFF
const I2C_SCL_MAIN_ST_TO_REG_V = 0xFFFFFF
const I2C_SCL_MAIN_ST_TO_REG_S = 0
const I2C_SDA_PD_EN_V = 0x1
const I2C_SDA_PD_EN_S = 7
const I2C_SCL_PD_EN_V = 0x1
const I2C_SCL_PD_EN_S = 6
const I2C_SCL_RST_SLV_NUM = 0x0000001F
const I2C_SCL_RST_SLV_NUM_V = 0x1F
const I2C_SCL_RST_SLV_NUM_S = 1
const I2C_SCL_RST_SLV_EN_V = 0x1
const I2C_SCL_RST_SLV_EN_S = 0
const I2C_SLAVE_SCL_STRETCH_CLR_V = 0x1
const I2C_SLAVE_SCL_STRETCH_CLR_S = 11
const I2C_SLAVE_SCL_STRETCH_EN_V = 0x1
const I2C_SLAVE_SCL_STRETCH_EN_S = 10
const I2C_STRETCH_PROTECT_NUM = 0x000003FF
const I2C_STRETCH_PROTECT_NUM_V = 0x3FF
const I2C_STRETCH_PROTECT_NUM_S = 0
const I2C_DATE = 0xFFFFFFFF
const I2C_DATE_V = 0xFFFFFFFF
const I2C_DATE_S = 0
const I2C_BBPLL = 0x66
const I2C_BBPLL_HOSTID = 1
const I2C_BBPLL_IR_CAL_DELAY = 0
const I2C_BBPLL_IR_CAL_DELAY_MSB = 3
const I2C_BBPLL_IR_CAL_DELAY_LSB = 0
const I2C_BBPLL_IR_CAL_CK_DIV = 0
const I2C_BBPLL_IR_CAL_CK_DIV_MSB = 7
const I2C_BBPLL_IR_CAL_CK_DIV_LSB = 4
const I2C_BBPLL_IR_CAL_EXT_CAP = 1
const I2C_BBPLL_IR_CAL_EXT_CAP_MSB = 3
const I2C_BBPLL_IR_CAL_EXT_CAP_LSB = 0
const I2C_BBPLL_IR_CAL_ENX_CAP = 1
const I2C_BBPLL_IR_CAL_ENX_CAP_MSB = 4
const I2C_BBPLL_IR_CAL_ENX_CAP_LSB = 4
const I2C_BBPLL_IR_CAL_RSTB = 1
const I2C_BBPLL_IR_CAL_RSTB_MSB = 5
const I2C_BBPLL_IR_CAL_RSTB_LSB = 5
const I2C_BBPLL_IR_CAL_START = 1
const I2C_BBPLL_IR_CAL_START_MSB = 6
const I2C_BBPLL_IR_CAL_START_LSB = 6
const I2C_BBPLL_IR_CAL_UNSTOP = 1
const I2C_BBPLL_IR_CAL_UNSTOP_MSB = 7
const I2C_BBPLL_IR_CAL_UNSTOP_LSB = 7
const I2C_BBPLL_OC_REF_DIV = 2
const I2C_BBPLL_OC_REF_DIV_MSB = 3
const I2C_BBPLL_OC_REF_DIV_LSB = 0
const I2C_BBPLL_OC_DCHGP = 2
const I2C_BBPLL_OC_DCHGP_MSB = 6
const I2C_BBPLL_OC_DCHGP_LSB = 4
const I2C_BBPLL_OC_ENB_FCAL = 2
const I2C_BBPLL_OC_ENB_FCAL_MSB = 7
const I2C_BBPLL_OC_ENB_FCAL_LSB = 7
const I2C_BBPLL_OC_DIV_7_0 = 3
const I2C_BBPLL_OC_DIV_7_0_MSB = 7
const I2C_BBPLL_OC_DIV_7_0_LSB = 0
const I2C_BBPLL_RSTB_DIV_ADC = 4
const I2C_BBPLL_RSTB_DIV_ADC_MSB = 0
const I2C_BBPLL_RSTB_DIV_ADC_LSB = 0
const I2C_BBPLL_MODE_HF = 4
const I2C_BBPLL_MODE_HF_MSB = 1
const I2C_BBPLL_MODE_HF_LSB = 1
const I2C_BBPLL_DIV_ADC = 4
const I2C_BBPLL_DIV_ADC_MSB = 3
const I2C_BBPLL_DIV_ADC_LSB = 2
const I2C_BBPLL_DIV_DAC = 4
const I2C_BBPLL_DIV_DAC_MSB = 4
const I2C_BBPLL_DIV_DAC_LSB = 4
const I2C_BBPLL_DIV_CPU = 4
const I2C_BBPLL_DIV_CPU_MSB = 5
const I2C_BBPLL_DIV_CPU_LSB = 5
const I2C_BBPLL_OC_ENB_VCON = 4
const I2C_BBPLL_OC_ENB_VCON_MSB = 6
const I2C_BBPLL_OC_ENB_VCON_LSB = 6
const I2C_BBPLL_OC_TSCHGP = 4
const I2C_BBPLL_OC_TSCHGP_MSB = 7
const I2C_BBPLL_OC_TSCHGP_LSB = 7
const I2C_BBPLL_OC_DR1 = 5
const I2C_BBPLL_OC_DR1_MSB = 2
const I2C_BBPLL_OC_DR1_LSB = 0
const I2C_BBPLL_OC_DR3 = 5
const I2C_BBPLL_OC_DR3_MSB = 6
const I2C_BBPLL_OC_DR3_LSB = 4
const I2C_BBPLL_EN_USB = 5
const I2C_BBPLL_EN_USB_MSB = 7
const I2C_BBPLL_EN_USB_LSB = 7
const I2C_BBPLL_OC_DCUR = 6
const I2C_BBPLL_OC_DCUR_MSB = 2
const I2C_BBPLL_OC_DCUR_LSB = 0
const I2C_BBPLL_INC_CUR = 6
const I2C_BBPLL_INC_CUR_MSB = 3
const I2C_BBPLL_INC_CUR_LSB = 3
const I2C_BBPLL_OC_DHREF_SEL = 6
const I2C_BBPLL_OC_DHREF_SEL_MSB = 5
const I2C_BBPLL_OC_DHREF_SEL_LSB = 4
const I2C_BBPLL_OC_DLREF_SEL = 6
const I2C_BBPLL_OC_DLREF_SEL_MSB = 7
const I2C_BBPLL_OC_DLREF_SEL_LSB = 6
const I2C_BBPLL_OR_CAL_CAP = 8
const I2C_BBPLL_OR_CAL_CAP_MSB = 3
const I2C_BBPLL_OR_CAL_CAP_LSB = 0
const I2C_BBPLL_OR_CAL_UDF = 8
const I2C_BBPLL_OR_CAL_UDF_MSB = 4
const I2C_BBPLL_OR_CAL_UDF_LSB = 4
const I2C_BBPLL_OR_CAL_OVF = 8
const I2C_BBPLL_OR_CAL_OVF_MSB = 5
const I2C_BBPLL_OR_CAL_OVF_LSB = 5
const I2C_BBPLL_OR_CAL_END = 8
const I2C_BBPLL_OR_CAL_END_MSB = 6
const I2C_BBPLL_OR_CAL_END_LSB = 6
const I2C_BBPLL_OR_LOCK = 8
const I2C_BBPLL_OR_LOCK_MSB = 7
const I2C_BBPLL_OR_LOCK_LSB = 7
const I2C_BBPLL_BBADC_DELAY1 = 9
const I2C_BBPLL_BBADC_DELAY1_MSB = 1
const I2C_BBPLL_BBADC_DELAY1_LSB = 0
const I2C_BBPLL_BBADC_DELAY2 = 9
const I2C_BBPLL_BBADC_DELAY2_MSB = 3
const I2C_BBPLL_BBADC_DELAY2_LSB = 2
const I2C_BBPLL_BBADC_DVDD = 9
const I2C_BBPLL_BBADC_DVDD_MSB = 5
const I2C_BBPLL_BBADC_DVDD_LSB = 4
const I2C_BBPLL_BBADC_DREF = 9
const I2C_BBPLL_BBADC_DREF_MSB = 7
const I2C_BBPLL_BBADC_DREF_LSB = 6
const I2C_BBPLL_BBADC_DCUR = 10
const I2C_BBPLL_BBADC_DCUR_MSB = 1
const I2C_BBPLL_BBADC_DCUR_LSB = 0
const I2C_BBPLL_BBADC_INPUT_SHORT = 10
const I2C_BBPLL_BBADC_INPUT_SHORT_MSB = 2
const I2C_BBPLL_BBADC_INPUT_SHORT_LSB = 2
const I2C_BBPLL_ENT_PLL = 10
const I2C_BBPLL_ENT_PLL_MSB = 3
const I2C_BBPLL_ENT_PLL_LSB = 3
const I2C_BBPLL_DTEST = 10
const I2C_BBPLL_DTEST_MSB = 5
const I2C_BBPLL_DTEST_LSB = 4
const I2C_BBPLL_ENT_ADC = 10
const I2C_BBPLL_ENT_ADC_MSB = 7
const I2C_BBPLL_ENT_ADC_LSB = 6
const I2C_APLL = 0x6D
const I2C_APLL_HOSTID = 1
const I2C_APLL_IR_CAL_DELAY = 0
const I2C_APLL_IR_CAL_DELAY_MSB = 3
const I2C_APLL_IR_CAL_DELAY_LSB = 0
const I2C_APLL_IR_CAL_RSTB = 0
const I2C_APLL_IR_CAL_RSTB_MSB = 4
const I2C_APLL_IR_CAL_RSTB_LSB = 4
const I2C_APLL_IR_CAL_START = 0
const I2C_APLL_IR_CAL_START_MSB = 5
const I2C_APLL_IR_CAL_START_LSB = 5
const I2C_APLL_IR_CAL_UNSTOP = 0
const I2C_APLL_IR_CAL_UNSTOP_MSB = 6
const I2C_APLL_IR_CAL_UNSTOP_LSB = 6
const I2C_APLL_OC_ENB_FCAL = 0
const I2C_APLL_OC_ENB_FCAL_MSB = 7
const I2C_APLL_OC_ENB_FCAL_LSB = 7
const I2C_APLL_IR_CAL_EXT_CAP = 1
const I2C_APLL_IR_CAL_EXT_CAP_MSB = 4
const I2C_APLL_IR_CAL_EXT_CAP_LSB = 0
const I2C_APLL_IR_CAL_ENX_CAP = 1
const I2C_APLL_IR_CAL_ENX_CAP_MSB = 5
const I2C_APLL_IR_CAL_ENX_CAP_LSB = 5
const I2C_APLL_OC_LBW = 1
const I2C_APLL_OC_LBW_MSB = 6
const I2C_APLL_OC_LBW_LSB = 6
const I2C_APLL_IR_CAL_CK_DIV = 2
const I2C_APLL_IR_CAL_CK_DIV_MSB = 3
const I2C_APLL_IR_CAL_CK_DIV_LSB = 0
const I2C_APLL_OC_DCHGP = 2
const I2C_APLL_OC_DCHGP_MSB = 6
const I2C_APLL_OC_DCHGP_LSB = 4
const I2C_APLL_OC_ENB_VCON = 2
const I2C_APLL_OC_ENB_VCON_MSB = 7
const I2C_APLL_OC_ENB_VCON_LSB = 7
const I2C_APLL_OR_CAL_CAP = 3
const I2C_APLL_OR_CAL_CAP_MSB = 4
const I2C_APLL_OR_CAL_CAP_LSB = 0
const I2C_APLL_OR_CAL_UDF = 3
const I2C_APLL_OR_CAL_UDF_MSB = 5
const I2C_APLL_OR_CAL_UDF_LSB = 5
const I2C_APLL_OR_CAL_OVF = 3
const I2C_APLL_OR_CAL_OVF_MSB = 6
const I2C_APLL_OR_CAL_OVF_LSB = 6
const I2C_APLL_OR_CAL_END = 3
const I2C_APLL_OR_CAL_END_MSB = 7
const I2C_APLL_OR_CAL_END_LSB = 7
const I2C_APLL_OR_OUTPUT_DIV = 4
const I2C_APLL_OR_OUTPUT_DIV_MSB = 4
const I2C_APLL_OR_OUTPUT_DIV_LSB = 0
const I2C_APLL_OC_TSCHGP = 4
const I2C_APLL_OC_TSCHGP_MSB = 6
const I2C_APLL_OC_TSCHGP_LSB = 6
const I2C_APLL_EN_FAST_CAL = 4
const I2C_APLL_EN_FAST_CAL_MSB = 7
const I2C_APLL_EN_FAST_CAL_LSB = 7
const I2C_APLL_OC_DHREF_SEL = 5
const I2C_APLL_OC_DHREF_SEL_MSB = 1
const I2C_APLL_OC_DHREF_SEL_LSB = 0
const I2C_APLL_OC_DLREF_SEL = 5
const I2C_APLL_OC_DLREF_SEL_MSB = 3
const I2C_APLL_OC_DLREF_SEL_LSB = 2
const I2C_APLL_SDM_DITHER = 5
const I2C_APLL_SDM_DITHER_MSB = 4
const I2C_APLL_SDM_DITHER_LSB = 4
const I2C_APLL_SDM_STOP = 5
const I2C_APLL_SDM_STOP_MSB = 5
const I2C_APLL_SDM_STOP_LSB = 5
const I2C_APLL_SDM_RSTB = 5
const I2C_APLL_SDM_RSTB_MSB = 6
const I2C_APLL_SDM_RSTB_LSB = 6
const I2C_APLL_OC_DVDD = 6
const I2C_APLL_OC_DVDD_MSB = 4
const I2C_APLL_OC_DVDD_LSB = 0
const I2C_APLL_DSDM2 = 7
const I2C_APLL_DSDM2_MSB = 5
const I2C_APLL_DSDM2_LSB = 0
const I2C_APLL_DSDM1 = 8
const I2C_APLL_DSDM1_MSB = 7
const I2C_APLL_DSDM1_LSB = 0
const I2C_APLL_DSDM0 = 9
const I2C_APLL_DSDM0_MSB = 7
const I2C_APLL_DSDM0_LSB = 0
const MSPI_FUNC_NUM = 0
const MSPI_IOMUX_PIN_NUM_CS1 = 26
const MSPI_IOMUX_PIN_NUM_HD = 27
const MSPI_IOMUX_PIN_NUM_WP = 28
const MSPI_IOMUX_PIN_NUM_CS0 = 29
const MSPI_IOMUX_PIN_NUM_CLK = 30
const MSPI_IOMUX_PIN_NUM_MISO = 31
const MSPI_IOMUX_PIN_NUM_MOSI = 32
const MSPI_IOMUX_PIN_NUM_D4 = 33
const MSPI_IOMUX_PIN_NUM_D5 = 34
const MSPI_IOMUX_PIN_NUM_D6 = 35
const MSPI_IOMUX_PIN_NUM_D7 = 36
const MSPI_IOMUX_PIN_NUM_DQS = 37
const SPI2_FUNC_NUM = 4
const SPI2_IOMUX_PIN_NUM_HD = 9
const SPI2_IOMUX_PIN_NUM_CS = 10
const SPI2_IOMUX_PIN_NUM_MOSI = 11
const SPI2_IOMUX_PIN_NUM_CLK = 12
const SPI2_IOMUX_PIN_NUM_MISO = 13
const SPI2_IOMUX_PIN_NUM_WP = 14
const SPI2_FUNC_NUM_OCT = 2
const SPI2_IOMUX_PIN_NUM_HD_OCT = 33
const SPI2_IOMUX_PIN_NUM_CS_OCT = 34
const SPI2_IOMUX_PIN_NUM_MOSI_OCT = 35
const SPI2_IOMUX_PIN_NUM_CLK_OCT = 36
const SPI2_IOMUX_PIN_NUM_MISO_OCT = 37
const SPI2_IOMUX_PIN_NUM_WP_OCT = 38
const SPI2_IOMUX_PIN_NUM_IO4_OCT = 10
const SPI2_IOMUX_PIN_NUM_IO5_OCT = 11
const SPI2_IOMUX_PIN_NUM_IO6_OCT = 12
const SPI2_IOMUX_PIN_NUM_IO7_OCT = 13
const SPI_USR_V = 0x1
const SPI_USR_S = 24
const SPI_CONF_BITLEN = 0x007FFFFF
const SPI_CONF_BITLEN_V = 0x7FFFFF
const SPI_CONF_BITLEN_S = 0
const SPI_USR_ADDR_VALUE = 0xFFFFFFFF
const SPI_USR_ADDR_VALUE_V = 0xFFFFFFFF
const SPI_USR_ADDR_VALUE_S = 0
const SPI_WR_BIT_ORDER_V = 0x1
const SPI_WR_BIT_ORDER_S = 26
const SPI_RD_BIT_ORDER_V = 0x1
const SPI_RD_BIT_ORDER_S = 25
const SPI_WP_REG_V = 0x1
const SPI_WP_REG_S = 21
const SPI_D_POL_V = 0x1
const SPI_D_POL_S = 19
const SPI_Q_POL_V = 0x1
const SPI_Q_POL_S = 18
const SPI_FREAD_OCT_V = 0x1
const SPI_FREAD_OCT_S = 16
const SPI_FREAD_QUAD_V = 0x1
const SPI_FREAD_QUAD_S = 15
const SPI_FREAD_DUAL_V = 0x1
const SPI_FREAD_DUAL_S = 14
const SPI_FCMD_OCT_V = 0x1
const SPI_FCMD_OCT_S = 10
const SPI_FCMD_QUAD_V = 0x1
const SPI_FCMD_QUAD_S = 9
const SPI_FCMD_DUAL_V = 0x1
const SPI_FCMD_DUAL_S = 8
const SPI_FADDR_OCT_V = 0x1
const SPI_FADDR_OCT_S = 7
const SPI_FADDR_QUAD_V = 0x1
const SPI_FADDR_QUAD_S = 6
const SPI_FADDR_DUAL_V = 0x1
const SPI_FADDR_DUAL_S = 5
const SPI_DUMMY_OUT_V = 0x1
const SPI_DUMMY_OUT_S = 3
const SPI_EXT_HOLD_EN_V = 0x1
const SPI_EXT_HOLD_EN_S = 2
const SPI_CS_HOLD_DELAY = 0x0000003F
const SPI_CS_HOLD_DELAY_V = 0x3F
const SPI_CS_HOLD_DELAY_S = 14
const SPI_W16_17_WR_ENA_V = 0x1
const SPI_W16_17_WR_ENA_S = 4
const SPI_RSCK_DATA_OUT_V = 0x1
const SPI_RSCK_DATA_OUT_S = 3
const SPI_CLK_MODE_13_V = 0x1
const SPI_CLK_MODE_13_S = 2
const SPI_CLK_MODE = 0x00000003
const SPI_CLK_MODE_V = 0x3
const SPI_CLK_MODE_S = 0
const SPI_CS_DELAY_NUM = 0x00000003
const SPI_CS_DELAY_NUM_V = 0x3
const SPI_CS_DELAY_NUM_S = 29
const SPI_CS_DELAY_MODE = 0x00000007
const SPI_CS_DELAY_MODE_V = 0x7
const SPI_CS_DELAY_MODE_S = 26
const SPI_CS_HOLD_TIME = 0x00001FFF
const SPI_CS_HOLD_TIME_V = 0x1FFF
const SPI_CS_HOLD_TIME_S = 13
const SPI_CS_SETUP_TIME = 0x00001FFF
const SPI_CS_SETUP_TIME_V = 0x1FFF
const SPI_CS_SETUP_TIME_S = 0
const SPI_CLK_EQU_SYSCLK_V = 0x1
const SPI_CLK_EQU_SYSCLK_S = 31
const SPI_CLKDIV_PRE = 0x00001FFF
const SPI_CLKDIV_PRE_V = 0x1FFF
const SPI_CLKDIV_PRE_S = 18
const SPI_CLKCNT_N = 0x0000003F
const SPI_CLKCNT_N_V = 0x3F
const SPI_CLKCNT_N_S = 12
const SPI_CLKCNT_H = 0x0000003F
const SPI_CLKCNT_H_V = 0x3F
const SPI_CLKCNT_H_S = 6
const SPI_CLKCNT_L = 0x0000003F
const SPI_CLKCNT_L_V = 0x3F
const SPI_CLKCNT_L_S = 0
const SPI_USR_COMMAND_V = 0x1
const SPI_USR_COMMAND_S = 31
const SPI_USR_ADDR_V = 0x1
const SPI_USR_ADDR_S = 30
const SPI_USR_DUMMY_V = 0x1
const SPI_USR_DUMMY_S = 29
const SPI_USR_MISO_V = 0x1
const SPI_USR_MISO_S = 28
const SPI_USR_MOSI_V = 0x1
const SPI_USR_MOSI_S = 27
const SPI_USR_DUMMY_IDLE_V = 0x1
const SPI_USR_DUMMY_IDLE_S = 26
const SPI_USR_MOSI_HIGHPART_V = 0x1
const SPI_USR_MOSI_HIGHPART_S = 25
const SPI_USR_MISO_HIGHPART_V = 0x1
const SPI_USR_MISO_HIGHPART_S = 24
const SPI_USR_PREP_HOLD_V = 0x1
const SPI_USR_PREP_HOLD_S = 23
const SPI_USR_CMD_HOLD_V = 0x1
const SPI_USR_CMD_HOLD_S = 22
const SPI_USR_ADDR_HOLD_V = 0x1
const SPI_USR_ADDR_HOLD_S = 21
const SPI_USR_DUMMY_HOLD_V = 0x1
const SPI_USR_DUMMY_HOLD_S = 20
const SPI_USR_DIN_HOLD_V = 0x1
const SPI_USR_DIN_HOLD_S = 19
const SPI_USR_DOUT_HOLD_V = 0x1
const SPI_USR_DOUT_HOLD_S = 18
const SPI_USR_HOLD_POL_V = 0x1
const SPI_USR_HOLD_POL_S = 17
const SPI_SIO_V = 0x1
const SPI_SIO_S = 16
const SPI_USR_CONF_NXT_V = 0x1
const SPI_USR_CONF_NXT_S = 15
const SPI_FWRITE_OCT_V = 0x1
const SPI_FWRITE_OCT_S = 14
const SPI_FWRITE_QUAD_V = 0x1
const SPI_FWRITE_QUAD_S = 13
const SPI_FWRITE_DUAL_V = 0x1
const SPI_FWRITE_DUAL_S = 12
const SPI_WR_BYTE_ORDER_V = 0x1
const SPI_WR_BYTE_ORDER_S = 11
const SPI_RD_BYTE_ORDER_V = 0x1
const SPI_RD_BYTE_ORDER_S = 10
const SPI_CK_OUT_EDGE_V = 0x1
const SPI_CK_OUT_EDGE_S = 9
const SPI_RSCK_I_EDGE_V = 0x1
const SPI_RSCK_I_EDGE_S = 8
const SPI_CS_SETUP_V = 0x1
const SPI_CS_SETUP_S = 7
const SPI_CS_HOLD_V = 0x1
const SPI_CS_HOLD_S = 6
const SPI_TSCK_I_EDGE_V = 0x1
const SPI_TSCK_I_EDGE_S = 5
const SPI_OPI_MODE_V = 0x1
const SPI_OPI_MODE_S = 4
const SPI_QPI_MODE_V = 0x1
const SPI_QPI_MODE_S = 3
const SPI_DOUTDIN_V = 0x1
const SPI_DOUTDIN_S = 0
const SPI_USR_ADDR_BITLEN = 0x0000001F
const SPI_USR_ADDR_BITLEN_V = 0x1F
const SPI_USR_ADDR_BITLEN_S = 27
const SPI_USR_DUMMY_CYCLELEN = 0x000000FF
const SPI_USR_DUMMY_CYCLELEN_V = 0xFF
const SPI_USR_DUMMY_CYCLELEN_S = 0
const SPI_USR_COMMAND_BITLEN = 0x0000000F
const SPI_USR_COMMAND_BITLEN_V = 0xF
const SPI_USR_COMMAND_BITLEN_S = 28
const SPI_USR_COMMAND_VALUE = 0x0000FFFF
const SPI_USR_COMMAND_VALUE_V = 0xFFFF
const SPI_USR_COMMAND_VALUE_S = 0
const SPI_USR_MOSI_DBITLEN = 0x007FFFFF
const SPI_USR_MOSI_DBITLEN_V = 0x7FFFFF
const SPI_USR_MOSI_DBITLEN_S = 0
const SPI_USR_MISO_DBITLEN = 0x007FFFFF
const SPI_USR_MISO_DBITLEN_V = 0x7FFFFF
const SPI_USR_MISO_DBITLEN_S = 0
const SPI_QUAD_DIN_PIN_SWAP_V = 0x1
const SPI_QUAD_DIN_PIN_SWAP_S = 31
const SPI_CS_KEEP_ACTIVE_V = 0x1
const SPI_CS_KEEP_ACTIVE_S = 30
const SPI_CK_IDLE_EDGE_V = 0x1
const SPI_CK_IDLE_EDGE_S = 29
const SPI_CD_IDLE_EDGE_V = 0x1
const SPI_CD_IDLE_EDGE_S = 26
const SPI_CD_CMD_SET_V = 0x1
const SPI_CD_CMD_SET_S = 25
const SPI_DQS_IDLE_EDGE_V = 0x1
const SPI_DQS_IDLE_EDGE_S = 24
const SPI_SLAVE_CS_POL_V = 0x1
const SPI_SLAVE_CS_POL_S = 23
const SPI_CD_ADDR_SET_V = 0x1
const SPI_CD_ADDR_SET_S = 22
const SPI_CD_DUMMY_SET_V = 0x1
const SPI_CD_DUMMY_SET_S = 21
const SPI_CD_DATA_SET_V = 0x1
const SPI_CD_DATA_SET_S = 20
const SPI_CMD_DTR_EN_V = 0x1
const SPI_CMD_DTR_EN_S = 19
const SPI_ADDR_DTR_EN_V = 0x1
const SPI_ADDR_DTR_EN_S = 18
const SPI_DATA_DTR_EN_V = 0x1
const SPI_DATA_DTR_EN_S = 17
const SPI_CLK_DATA_DTR_EN_V = 0x1
const SPI_CLK_DATA_DTR_EN_S = 16
const SPI_MASTER_CS_POL = 0x0000003F
const SPI_MASTER_CS_POL_V = 0x3F
const SPI_MASTER_CS_POL_S = 7
const SPI_CK_DIS_V = 0x1
const SPI_CK_DIS_S = 6
const SPI_CS5_DIS_V = 0x1
const SPI_CS5_DIS_S = 5
const SPI_CS4_DIS_V = 0x1
const SPI_CS4_DIS_S = 4
const SPI_CS3_DIS_V = 0x1
const SPI_CS3_DIS_S = 3
const SPI_CS2_DIS_V = 0x1
const SPI_CS2_DIS_S = 2
const SPI_CS1_DIS_V = 0x1
const SPI_CS1_DIS_S = 1
const SPI_CS0_DIS_V = 0x1
const SPI_CS0_DIS_S = 0
const SPI_SOFT_RESET_V = 0x1
const SPI_SOFT_RESET_S = 31
const SPI_SLAVE_MODE_V = 0x1
const SPI_SLAVE_MODE_S = 30
const SPI_TRANS_DONE_AUTO_CLR_EN_V = 0x1
const SPI_TRANS_DONE_AUTO_CLR_EN_S = 29
const SPI_TRANS_CNT = 0x0000000F
const SPI_TRANS_CNT_V = 0xF
const SPI_TRANS_CNT_S = 23
const SPI_SEG_MAGIC_ERR_INT_EN_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_EN_S = 11
const SPI_INT_DMA_SEG_TRANS_EN_V = 0x1
const SPI_INT_DMA_SEG_TRANS_EN_S = 10
const SPI_INT_TRANS_DONE_EN_V = 0x1
const SPI_INT_TRANS_DONE_EN_S = 9
const SPI_INT_WR_DMA_DONE_EN_V = 0x1
const SPI_INT_WR_DMA_DONE_EN_S = 8
const SPI_INT_RD_DMA_DONE_EN_V = 0x1
const SPI_INT_RD_DMA_DONE_EN_S = 7
const SPI_INT_WR_BUF_DONE_EN_V = 0x1
const SPI_INT_WR_BUF_DONE_EN_S = 6
const SPI_INT_RD_BUF_DONE_EN_V = 0x1
const SPI_INT_RD_BUF_DONE_EN_S = 5
const SPI_TRANS_DONE_V = 0x1
const SPI_TRANS_DONE_S = 4
const SPI_SLV_LAST_ADDR = 0x000000FF
const SPI_SLV_LAST_ADDR_V = 0xFF
const SPI_SLV_LAST_ADDR_S = 24
const SPI_SLV_LAST_COMMAND = 0x000000FF
const SPI_SLV_LAST_COMMAND_V = 0xFF
const SPI_SLV_LAST_COMMAND_S = 16
const SPI_SLV_WR_DMA_DONE_V = 0x1
const SPI_SLV_WR_DMA_DONE_S = 15
const SPI_SLV_CMD_ERR_V = 0x1
const SPI_SLV_CMD_ERR_S = 14
const SPI_SLV_ADDR_ERR_V = 0x1
const SPI_SLV_ADDR_ERR_S = 13
const SPI_SLV_NO_QPI_EN_V = 0x1
const SPI_SLV_NO_QPI_EN_S = 12
const SPI_SLV_CMD_ERR_CLR_V = 0x1
const SPI_SLV_CMD_ERR_CLR_S = 11
const SPI_SLV_ADDR_ERR_CLR_V = 0x1
const SPI_SLV_ADDR_ERR_CLR_S = 10
const SPI_CONF_BASE_BITLEN = 0x0000007F
const SPI_CONF_BASE_BITLEN_V = 0x7F
const SPI_CONF_BASE_BITLEN_S = 25
const SPI_SLV_WR_BUF_DONE_V = 0x1
const SPI_SLV_WR_BUF_DONE_S = 24
const SPI_SEG_MAGIC_ERR_V = 0x1
const SPI_SEG_MAGIC_ERR_S = 25
const SPI_SLV_RD_BUF_DONE_V = 0x1
const SPI_SLV_RD_BUF_DONE_S = 24
const SPI_SLV_DMA_RD_BYTELEN = 0x000FFFFF
const SPI_SLV_DMA_RD_BYTELEN_V = 0xFFFFF
const SPI_SLV_DMA_RD_BYTELEN_S = 0
const SPI_USR_CONF_V = 0x1
const SPI_USR_CONF_S = 31
const SPI_SLV_RD_DMA_DONE_V = 0x1
const SPI_SLV_RD_DMA_DONE_S = 30
const SPI_DMA_SEG_MAGIC_VALUE = 0x0000000F
const SPI_DMA_SEG_MAGIC_VALUE_V = 0xF
const SPI_DMA_SEG_MAGIC_VALUE_S = 24
const SPI_SLV_WRBUF_BYTELEN_EN_V = 0x1
const SPI_SLV_WRBUF_BYTELEN_EN_S = 23
const SPI_SLV_RDBUF_BYTELEN_EN_V = 0x1
const SPI_SLV_RDBUF_BYTELEN_EN_S = 22
const SPI_SLV_WRDMA_BYTELEN_EN_V = 0x1
const SPI_SLV_WRDMA_BYTELEN_EN_S = 21
const SPI_SLV_RDDMA_BYTELEN_EN_V = 0x1
const SPI_SLV_RDDMA_BYTELEN_EN_S = 20
const SPI_SLV_DATA_BYTELEN = 0x000FFFFF
const SPI_SLV_DATA_BYTELEN_V = 0xFFFFF
const SPI_SLV_DATA_BYTELEN_S = 0
const SPI_MST_DMA_RD_BYTELEN = 0x000FFFFF
const SPI_MST_DMA_RD_BYTELEN_V = 0xFFFFF
const SPI_MST_DMA_RD_BYTELEN_S = 12
const SPI_ST = 0x0000000F
const SPI_ST_V = 0xF
const SPI_ST_S = 0
const SPI_DMA_SEG_TRANS_DONE_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_S = 7
const SPI_HOLD_OUT_TIME = 0x00000007
const SPI_HOLD_OUT_TIME_V = 0x7
const SPI_HOLD_OUT_TIME_S = 4
const SPI_HOLD_OUT_EN_V = 0x1
const SPI_HOLD_OUT_EN_S = 3
const SPI_HOLD_VAL_REG_V = 0x1
const SPI_HOLD_VAL_REG_S = 2
const SPI_INT_HOLD_ENA = 0x00000003
const SPI_INT_HOLD_ENA_V = 0x3
const SPI_INT_HOLD_ENA_S = 0
const SPI_DMA_SEG_TRANS_CLR_V = 0x1
const SPI_DMA_SEG_TRANS_CLR_S = 28
const SPI_EXT_MEM_BK_SIZE = 0x00000003
const SPI_EXT_MEM_BK_SIZE_V = 0x3
const SPI_EXT_MEM_BK_SIZE_S = 26
const SPI_DMA_OUTFIFO_EMPTY_CLR_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_CLR_S = 23
const SPI_DMA_INFIFO_FULL_CLR_V = 0x1
const SPI_DMA_INFIFO_FULL_CLR_S = 22
const SPI_RX_EOF_EN_V = 0x1
const SPI_RX_EOF_EN_S = 21
const SPI_SLV_TX_SEG_TRANS_CLR_EN_V = 0x1
const SPI_SLV_TX_SEG_TRANS_CLR_EN_S = 20
const SPI_SLV_RX_SEG_TRANS_CLR_EN_V = 0x1
const SPI_SLV_RX_SEG_TRANS_CLR_EN_S = 19
const SPI_DMA_SLV_SEG_TRANS_EN_V = 0x1
const SPI_DMA_SLV_SEG_TRANS_EN_S = 18
const SPI_SLV_LAST_SEG_POP_CLR_V = 0x1
const SPI_SLV_LAST_SEG_POP_CLR_S = 17
const SPI_DMA_CONTINUE_V = 0x1
const SPI_DMA_CONTINUE_S = 16
const SPI_DMA_TX_STOP_V = 0x1
const SPI_DMA_TX_STOP_S = 15
const SPI_DMA_RX_STOP_V = 0x1
const SPI_DMA_RX_STOP_S = 14
const SPI_MEM_TRANS_EN_V = 0x1
const SPI_MEM_TRANS_EN_S = 13
const SPI_OUT_DATA_BURST_EN_V = 0x1
const SPI_OUT_DATA_BURST_EN_S = 12
const SPI_INDSCR_BURST_EN_V = 0x1
const SPI_INDSCR_BURST_EN_S = 11
const SPI_OUTDSCR_BURST_EN_V = 0x1
const SPI_OUTDSCR_BURST_EN_S = 10
const SPI_OUT_EOF_MODE_V = 0x1
const SPI_OUT_EOF_MODE_S = 9
const SPI_OUT_AUTO_WRBACK_V = 0x1
const SPI_OUT_AUTO_WRBACK_S = 8
const SPI_OUT_LOOP_TEST_V = 0x1
const SPI_OUT_LOOP_TEST_S = 7
const SPI_IN_LOOP_TEST_V = 0x1
const SPI_IN_LOOP_TEST_S = 6
const SPI_AHBM_RST_V = 0x1
const SPI_AHBM_RST_S = 5
const SPI_AHBM_FIFO_RST_V = 0x1
const SPI_AHBM_FIFO_RST_S = 4
const SPI_OUT_RST_V = 0x1
const SPI_OUT_RST_S = 3
const SPI_IN_RST_V = 0x1
const SPI_IN_RST_S = 2
const SPI_DMA_TX_ENA_V = 0x1
const SPI_DMA_TX_ENA_S = 31
const SPI_OUTLINK_RESTART_V = 0x1
const SPI_OUTLINK_RESTART_S = 30
const SPI_OUTLINK_START_V = 0x1
const SPI_OUTLINK_START_S = 29
const SPI_OUTLINK_STOP_V = 0x1
const SPI_OUTLINK_STOP_S = 28
const SPI_OUTLINK_ADDR = 0x000FFFFF
const SPI_OUTLINK_ADDR_V = 0xFFFFF
const SPI_OUTLINK_ADDR_S = 0
const SPI_DMA_RX_ENA_V = 0x1
const SPI_DMA_RX_ENA_S = 31
const SPI_INLINK_RESTART_V = 0x1
const SPI_INLINK_RESTART_S = 30
const SPI_INLINK_START_V = 0x1
const SPI_INLINK_START_S = 29
const SPI_INLINK_STOP_V = 0x1
const SPI_INLINK_STOP_S = 28
const SPI_INLINK_AUTO_RET_V = 0x1
const SPI_INLINK_AUTO_RET_S = 20
const SPI_INLINK_ADDR = 0x000FFFFF
const SPI_INLINK_ADDR_V = 0xFFFFF
const SPI_INLINK_ADDR_S = 0
const SPI_SLV_CMDA_INT_ENA_V = 0x1
const SPI_SLV_CMDA_INT_ENA_S = 15
const SPI_SLV_CMD9_INT_ENA_V = 0x1
const SPI_SLV_CMD9_INT_ENA_S = 14
const SPI_SLV_CMD8_INT_ENA_V = 0x1
const SPI_SLV_CMD8_INT_ENA_S = 13
const SPI_SLV_CMD7_INT_ENA_V = 0x1
const SPI_SLV_CMD7_INT_ENA_S = 12
const SPI_SLV_CMD6_INT_ENA_V = 0x1
const SPI_SLV_CMD6_INT_ENA_S = 11
const SPI_OUTFIFO_EMPTY_ERR_INT_ENA_V = 0x1
const SPI_OUTFIFO_EMPTY_ERR_INT_ENA_S = 10
const SPI_INFIFO_FULL_ERR_INT_ENA_V = 0x1
const SPI_INFIFO_FULL_ERR_INT_ENA_S = 9
const SPI_OUT_TOTAL_EOF_INT_ENA_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_ENA_S = 8
const SPI_OUT_EOF_INT_ENA_V = 0x1
const SPI_OUT_EOF_INT_ENA_S = 7
const SPI_OUT_DONE_INT_ENA_V = 0x1
const SPI_OUT_DONE_INT_ENA_S = 6
const SPI_IN_SUC_EOF_INT_ENA_V = 0x1
const SPI_IN_SUC_EOF_INT_ENA_S = 5
const SPI_IN_ERR_EOF_INT_ENA_V = 0x1
const SPI_IN_ERR_EOF_INT_ENA_S = 4
const SPI_IN_DONE_INT_ENA_V = 0x1
const SPI_IN_DONE_INT_ENA_S = 3
const SPI_INLINK_DSCR_ERROR_INT_ENA_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_ENA_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_ENA_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_ENA_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_ENA_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_ENA_S = 0
const SPI_SLV_CMDA_INT_RAW_V = 0x1
const SPI_SLV_CMDA_INT_RAW_S = 15
const SPI_SLV_CMD9_INT_RAW_V = 0x1
const SPI_SLV_CMD9_INT_RAW_S = 14
const SPI_SLV_CMD8_INT_RAW_V = 0x1
const SPI_SLV_CMD8_INT_RAW_S = 13
const SPI_SLV_CMD7_INT_RAW_V = 0x1
const SPI_SLV_CMD7_INT_RAW_S = 12
const SPI_SLV_CMD6_INT_RAW_V = 0x1
const SPI_SLV_CMD6_INT_RAW_S = 11
const SPI_OUTFIFO_EMPTY_ERR_INT_RAW_V = 0x1
const SPI_OUTFIFO_EMPTY_ERR_INT_RAW_S = 10
const SPI_INFIFO_FULL_ERR_INT_RAW_V = 0x1
const SPI_INFIFO_FULL_ERR_INT_RAW_S = 9
const SPI_OUT_TOTAL_EOF_INT_RAW_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_RAW_S = 8
const SPI_OUT_EOF_INT_RAW_V = 0x1
const SPI_OUT_EOF_INT_RAW_S = 7
const SPI_OUT_DONE_INT_RAW_V = 0x1
const SPI_OUT_DONE_INT_RAW_S = 6
const SPI_IN_SUC_EOF_INT_RAW_V = 0x1
const SPI_IN_SUC_EOF_INT_RAW_S = 5
const SPI_IN_ERR_EOF_INT_RAW_V = 0x1
const SPI_IN_ERR_EOF_INT_RAW_S = 4
const SPI_IN_DONE_INT_RAW_V = 0x1
const SPI_IN_DONE_INT_RAW_S = 3
const SPI_INLINK_DSCR_ERROR_INT_RAW_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_RAW_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_RAW_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_RAW_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_RAW_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_RAW_S = 0
const SPI_SLV_CMDA_INT_ST_V = 0x1
const SPI_SLV_CMDA_INT_ST_S = 15
const SPI_SLV_CMD9_INT_ST_V = 0x1
const SPI_SLV_CMD9_INT_ST_S = 14
const SPI_SLV_CMD8_INT_ST_V = 0x1
const SPI_SLV_CMD8_INT_ST_S = 13
const SPI_SLV_CMD7_INT_ST_V = 0x1
const SPI_SLV_CMD7_INT_ST_S = 12
const SPI_SLV_CMD6_INT_ST_V = 0x1
const SPI_SLV_CMD6_INT_ST_S = 11
const SPI_OUTFIFO_EMPTY_ERR_INT_ST_V = 0x1
const SPI_OUTFIFO_EMPTY_ERR_INT_ST_S = 10
const SPI_INFIFO_FULL_ERR_INT_ST_V = 0x1
const SPI_INFIFO_FULL_ERR_INT_ST_S = 9
const SPI_OUT_TOTAL_EOF_INT_ST_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_ST_S = 8
const SPI_OUT_EOF_INT_ST_V = 0x1
const SPI_OUT_EOF_INT_ST_S = 7
const SPI_OUT_DONE_INT_ST_V = 0x1
const SPI_OUT_DONE_INT_ST_S = 6
const SPI_IN_SUC_EOF_INT_ST_V = 0x1
const SPI_IN_SUC_EOF_INT_ST_S = 5
const SPI_IN_ERR_EOF_INT_ST_V = 0x1
const SPI_IN_ERR_EOF_INT_ST_S = 4
const SPI_IN_DONE_INT_ST_V = 0x1
const SPI_IN_DONE_INT_ST_S = 3
const SPI_INLINK_DSCR_ERROR_INT_ST_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_ST_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_ST_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_ST_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_ST_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_ST_S = 0
const SPI_SLV_CMDA_INT_CLR_V = 0x1
const SPI_SLV_CMDA_INT_CLR_S = 15
const SPI_SLV_CMD9_INT_CLR_V = 0x1
const SPI_SLV_CMD9_INT_CLR_S = 14
const SPI_SLV_CMD8_INT_CLR_V = 0x1
const SPI_SLV_CMD8_INT_CLR_S = 13
const SPI_SLV_CMD7_INT_CLR_V = 0x1
const SPI_SLV_CMD7_INT_CLR_S = 12
const SPI_SLV_CMD6_INT_CLR_V = 0x1
const SPI_SLV_CMD6_INT_CLR_S = 11
const SPI_OUTFIFO_EMPTY_ERR_INT_CLR_V = 0x1
const SPI_OUTFIFO_EMPTY_ERR_INT_CLR_S = 10
const SPI_INFIFO_FULL_ERR_INT_CLR_V = 0x1
const SPI_INFIFO_FULL_ERR_INT_CLR_S = 9
const SPI_OUT_TOTAL_EOF_INT_CLR_V = 0x1
const SPI_OUT_TOTAL_EOF_INT_CLR_S = 8
const SPI_OUT_EOF_INT_CLR_V = 0x1
const SPI_OUT_EOF_INT_CLR_S = 7
const SPI_OUT_DONE_INT_CLR_V = 0x1
const SPI_OUT_DONE_INT_CLR_S = 6
const SPI_IN_SUC_EOF_INT_CLR_V = 0x1
const SPI_IN_SUC_EOF_INT_CLR_S = 5
const SPI_IN_ERR_EOF_INT_CLR_V = 0x1
const SPI_IN_ERR_EOF_INT_CLR_S = 4
const SPI_IN_DONE_INT_CLR_V = 0x1
const SPI_IN_DONE_INT_CLR_S = 3
const SPI_INLINK_DSCR_ERROR_INT_CLR_V = 0x1
const SPI_INLINK_DSCR_ERROR_INT_CLR_S = 2
const SPI_OUTLINK_DSCR_ERROR_INT_CLR_V = 0x1
const SPI_OUTLINK_DSCR_ERROR_INT_CLR_S = 1
const SPI_INLINK_DSCR_EMPTY_INT_CLR_V = 0x1
const SPI_INLINK_DSCR_EMPTY_INT_CLR_S = 0
const SPI_DMA_IN_ERR_EOF_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_IN_ERR_EOF_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_IN_ERR_EOF_DES_ADDR_S = 0
const SPI_DMA_IN_SUC_EOF_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_IN_SUC_EOF_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_IN_SUC_EOF_DES_ADDR_S = 0
const SPI_DMA_INLINK_DSCR = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_V = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_S = 0
const SPI_DMA_INLINK_DSCR_BF0 = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF0_V = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF0_S = 0
const SPI_DMA_INLINK_DSCR_BF1 = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF1_V = 0xFFFFFFFF
const SPI_DMA_INLINK_DSCR_BF1_S = 0
const SPI_DMA_OUT_EOF_BFR_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_BFR_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_BFR_DES_ADDR_S = 0
const SPI_DMA_OUT_EOF_DES_ADDR = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_DES_ADDR_V = 0xFFFFFFFF
const SPI_DMA_OUT_EOF_DES_ADDR_S = 0
const SPI_DMA_OUTLINK_DSCR = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_V = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_S = 0
const SPI_DMA_OUTLINK_DSCR_BF0 = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF0_V = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF0_S = 0
const SPI_DMA_OUTLINK_DSCR_BF1 = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF1_V = 0xFFFFFFFF
const SPI_DMA_OUTLINK_DSCR_BF1_S = 0
const SPI_DMA_OUTFIFO_EMPTY_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_S = 31
const SPI_DMA_OUTFIFO_FULL_V = 0x1
const SPI_DMA_OUTFIFO_FULL_S = 30
const SPI_DMA_OUTFIFO_CNT = 0x0000007F
const SPI_DMA_OUTFIFO_CNT_V = 0x7F
const SPI_DMA_OUTFIFO_CNT_S = 23
const SPI_DMA_OUT_STATE = 0x00000007
const SPI_DMA_OUT_STATE_V = 0x7
const SPI_DMA_OUT_STATE_S = 20
const SPI_DMA_OUTDSCR_STATE = 0x00000003
const SPI_DMA_OUTDSCR_STATE_V = 0x3
const SPI_DMA_OUTDSCR_STATE_S = 18
const SPI_DMA_OUTDSCR_ADDR = 0x0003FFFF
const SPI_DMA_OUTDSCR_ADDR_V = 0x3FFFF
const SPI_DMA_OUTDSCR_ADDR_S = 0
const SPI_DMA_INFIFO_EMPTY_V = 0x1
const SPI_DMA_INFIFO_EMPTY_S = 31
const SPI_DMA_INFIFO_FULL_V = 0x1
const SPI_DMA_INFIFO_FULL_S = 30
const SPI_DMA_INFIFO_CNT = 0x0000007F
const SPI_DMA_INFIFO_CNT_V = 0x7F
const SPI_DMA_INFIFO_CNT_S = 23
const SPI_DMA_IN_STATE = 0x00000007
const SPI_DMA_IN_STATE_V = 0x7
const SPI_DMA_IN_STATE_S = 20
const SPI_DMA_INDSCR_STATE = 0x00000003
const SPI_DMA_INDSCR_STATE_V = 0x3
const SPI_DMA_INDSCR_STATE_S = 18
const SPI_DMA_INDSCR_ADDR = 0x0003FFFF
const SPI_DMA_INDSCR_ADDR_V = 0x3FFFF
const SPI_DMA_INDSCR_ADDR_S = 0
const SPI_BUF0 = 0xFFFFFFFF
const SPI_BUF0_V = 0xFFFFFFFF
const SPI_BUF0_S = 0
const SPI_BUF1 = 0xFFFFFFFF
const SPI_BUF1_V = 0xFFFFFFFF
const SPI_BUF1_S = 0
const SPI_BUF2 = 0xFFFFFFFF
const SPI_BUF2_V = 0xFFFFFFFF
const SPI_BUF2_S = 0
const SPI_BUF3 = 0xFFFFFFFF
const SPI_BUF3_V = 0xFFFFFFFF
const SPI_BUF3_S = 0
const SPI_BUF4 = 0xFFFFFFFF
const SPI_BUF4_V = 0xFFFFFFFF
const SPI_BUF4_S = 0
const SPI_BUF5 = 0xFFFFFFFF
const SPI_BUF5_V = 0xFFFFFFFF
const SPI_BUF5_S = 0
const SPI_BUF6 = 0xFFFFFFFF
const SPI_BUF6_V = 0xFFFFFFFF
const SPI_BUF6_S = 0
const SPI_BUF7 = 0xFFFFFFFF
const SPI_BUF7_V = 0xFFFFFFFF
const SPI_BUF7_S = 0
const SPI_BUF8 = 0xFFFFFFFF
const SPI_BUF8_V = 0xFFFFFFFF
const SPI_BUF8_S = 0
const SPI_BUF9 = 0xFFFFFFFF
const SPI_BUF9_V = 0xFFFFFFFF
const SPI_BUF9_S = 0
const SPI_BUF10 = 0xFFFFFFFF
const SPI_BUF10_V = 0xFFFFFFFF
const SPI_BUF10_S = 0
const SPI_BUF11 = 0xFFFFFFFF
const SPI_BUF11_V = 0xFFFFFFFF
const SPI_BUF11_S = 0
const SPI_BUF12 = 0xFFFFFFFF
const SPI_BUF12_V = 0xFFFFFFFF
const SPI_BUF12_S = 0
const SPI_BUF13 = 0xFFFFFFFF
const SPI_BUF13_V = 0xFFFFFFFF
const SPI_BUF13_S = 0
const SPI_BUF14 = 0xFFFFFFFF
const SPI_BUF14_V = 0xFFFFFFFF
const SPI_BUF14_S = 0
const SPI_BUF15 = 0xFFFFFFFF
const SPI_BUF15_V = 0xFFFFFFFF
const SPI_BUF15_S = 0
const SPI_BUF16 = 0xFFFFFFFF
const SPI_BUF16_V = 0xFFFFFFFF
const SPI_BUF16_S = 0
const SPI_BUF17 = 0xFFFFFFFF
const SPI_BUF17_V = 0xFFFFFFFF
const SPI_BUF17_S = 0
const SPI_TIMING_CLK_ENA_V = 0x1
const SPI_TIMING_CLK_ENA_S = 24
const SPI_DIN7_MODE = 0x00000007
const SPI_DIN7_MODE_V = 0x7
const SPI_DIN7_MODE_S = 21
const SPI_DIN6_MODE = 0x00000007
const SPI_DIN6_MODE_V = 0x7
const SPI_DIN6_MODE_S = 18
const SPI_DIN5_MODE = 0x00000007
const SPI_DIN5_MODE_V = 0x7
const SPI_DIN5_MODE_S = 15
const SPI_DIN4_MODE = 0x00000007
const SPI_DIN4_MODE_V = 0x7
const SPI_DIN4_MODE_S = 12
const SPI_DIN3_MODE = 0x00000007
const SPI_DIN3_MODE_V = 0x7
const SPI_DIN3_MODE_S = 9
const SPI_DIN2_MODE = 0x00000007
const SPI_DIN2_MODE_V = 0x7
const SPI_DIN2_MODE_S = 6
const SPI_DIN1_MODE = 0x00000007
const SPI_DIN1_MODE_V = 0x7
const SPI_DIN1_MODE_S = 3
const SPI_DIN0_MODE = 0x00000007
const SPI_DIN0_MODE_V = 0x7
const SPI_DIN0_MODE_S = 0
const SPI_DIN7_NUM = 0x00000003
const SPI_DIN7_NUM_V = 0x3
const SPI_DIN7_NUM_S = 14
const SPI_DIN6_NUM = 0x00000003
const SPI_DIN6_NUM_V = 0x3
const SPI_DIN6_NUM_S = 12
const SPI_DIN5_NUM = 0x00000003
const SPI_DIN5_NUM_V = 0x3
const SPI_DIN5_NUM_S = 10
const SPI_DIN4_NUM = 0x00000003
const SPI_DIN4_NUM_V = 0x3
const SPI_DIN4_NUM_S = 8
const SPI_DIN3_NUM = 0x00000003
const SPI_DIN3_NUM_V = 0x3
const SPI_DIN3_NUM_S = 6
const SPI_DIN2_NUM = 0x00000003
const SPI_DIN2_NUM_V = 0x3
const SPI_DIN2_NUM_S = 4
const SPI_DIN1_NUM = 0x00000003
const SPI_DIN1_NUM_V = 0x3
const SPI_DIN1_NUM_S = 2
const SPI_DIN0_NUM = 0x00000003
const SPI_DIN0_NUM_V = 0x3
const SPI_DIN0_NUM_S = 0
const SPI_DOUT7_MODE = 0x00000007
const SPI_DOUT7_MODE_V = 0x7
const SPI_DOUT7_MODE_S = 21
const SPI_DOUT6_MODE = 0x00000007
const SPI_DOUT6_MODE_V = 0x7
const SPI_DOUT6_MODE_S = 18
const SPI_DOUT5_MODE = 0x00000007
const SPI_DOUT5_MODE_V = 0x7
const SPI_DOUT5_MODE_S = 15
const SPI_DOUT4_MODE = 0x00000007
const SPI_DOUT4_MODE_V = 0x7
const SPI_DOUT4_MODE_S = 12
const SPI_DOUT3_MODE = 0x00000007
const SPI_DOUT3_MODE_V = 0x7
const SPI_DOUT3_MODE_S = 9
const SPI_DOUT2_MODE = 0x00000007
const SPI_DOUT2_MODE_V = 0x7
const SPI_DOUT2_MODE_S = 6
const SPI_DOUT1_MODE = 0x00000007
const SPI_DOUT1_MODE_V = 0x7
const SPI_DOUT1_MODE_S = 3
const SPI_DOUT0_MODE = 0x00000007
const SPI_DOUT0_MODE_V = 0x7
const SPI_DOUT0_MODE_S = 0
const SPI_DOUT7_NUM = 0x00000003
const SPI_DOUT7_NUM_V = 0x3
const SPI_DOUT7_NUM_S = 14
const SPI_DOUT6_NUM = 0x00000003
const SPI_DOUT6_NUM_V = 0x3
const SPI_DOUT6_NUM_S = 12
const SPI_DOUT5_NUM = 0x00000003
const SPI_DOUT5_NUM_V = 0x3
const SPI_DOUT5_NUM_S = 10
const SPI_DOUT4_NUM = 0x00000003
const SPI_DOUT4_NUM_V = 0x3
const SPI_DOUT4_NUM_S = 8
const SPI_DOUT3_NUM = 0x00000003
const SPI_DOUT3_NUM_V = 0x3
const SPI_DOUT3_NUM_S = 6
const SPI_DOUT2_NUM = 0x00000003
const SPI_DOUT2_NUM_V = 0x3
const SPI_DOUT2_NUM_S = 4
const SPI_DOUT1_NUM = 0x00000003
const SPI_DOUT1_NUM_V = 0x3
const SPI_DOUT1_NUM_S = 2
const SPI_DOUT0_NUM = 0x00000003
const SPI_DOUT0_NUM_V = 0x3
const SPI_DOUT0_NUM_S = 0
const SPI_LCD_MODE_EN_V = 0x1
const SPI_LCD_MODE_EN_S = 31
const SPI_LCD_VT_HEIGHT = 0x000003FF
const SPI_LCD_VT_HEIGHT_V = 0x3FF
const SPI_LCD_VT_HEIGHT_S = 21
const SPI_LCD_VA_HEIGHT = 0x000003FF
const SPI_LCD_VA_HEIGHT_V = 0x3FF
const SPI_LCD_VA_HEIGHT_S = 11
const SPI_LCD_HB_FRONT = 0x000007FF
const SPI_LCD_HB_FRONT_V = 0x7FF
const SPI_LCD_HB_FRONT_S = 0
const SPI_LCD_HT_WIDTH = 0x00000FFF
const SPI_LCD_HT_WIDTH_V = 0xFFF
const SPI_LCD_HT_WIDTH_S = 20
const SPI_LCD_HA_WIDTH = 0x00000FFF
const SPI_LCD_HA_WIDTH_V = 0xFFF
const SPI_LCD_HA_WIDTH_S = 8
const SPI_LCD_VB_FRONT = 0x000000FF
const SPI_LCD_VB_FRONT_V = 0xFF
const SPI_LCD_VB_FRONT_S = 0
const SPI_LCD_HSYNC_POSITION = 0x000000FF
const SPI_LCD_HSYNC_POSITION_V = 0xFF
const SPI_LCD_HSYNC_POSITION_S = 24
const SPI_HSYNC_IDLE_POL_V = 0x1
const SPI_HSYNC_IDLE_POL_S = 23
const SPI_LCD_HSYNC_WIDTH = 0x0000007F
const SPI_LCD_HSYNC_WIDTH_V = 0x7F
const SPI_LCD_HSYNC_WIDTH_S = 16
const SPI_VSYNC_IDLE_POL_V = 0x1
const SPI_VSYNC_IDLE_POL_S = 7
const SPI_LCD_VSYNC_WIDTH = 0x0000007F
const SPI_LCD_VSYNC_WIDTH_V = 0x7F
const SPI_LCD_VSYNC_WIDTH_S = 0
const SPI_HS_BLANK_EN_V = 0x1
const SPI_HS_BLANK_EN_S = 16
const SPI_DE_IDLE_POL_V = 0x1
const SPI_DE_IDLE_POL_S = 15
const SPI_D_VSYNC_MODE = 0x00000007
const SPI_D_VSYNC_MODE_V = 0x7
const SPI_D_VSYNC_MODE_S = 12
const SPI_D_HSYNC_MODE = 0x00000007
const SPI_D_HSYNC_MODE_V = 0x7
const SPI_D_HSYNC_MODE_S = 9
const SPI_D_DE_MODE = 0x00000007
const SPI_D_DE_MODE_V = 0x7
const SPI_D_DE_MODE_S = 6
const SPI_D_CD_MODE = 0x00000007
const SPI_D_CD_MODE_V = 0x7
const SPI_D_CD_MODE_S = 3
const SPI_D_DQS_MODE = 0x00000007
const SPI_D_DQS_MODE_V = 0x7
const SPI_D_DQS_MODE_S = 0
const SPI_D_VSYNC_NUM = 0x00000003
const SPI_D_VSYNC_NUM_V = 0x3
const SPI_D_VSYNC_NUM_S = 8
const SPI_D_HSYNC_NUM = 0x00000003
const SPI_D_HSYNC_NUM_V = 0x3
const SPI_D_HSYNC_NUM_S = 6
const SPI_D_DE_NUM = 0x00000003
const SPI_D_DE_NUM_V = 0x3
const SPI_D_DE_NUM_S = 4
const SPI_D_CD_NUM = 0x00000003
const SPI_D_CD_NUM_V = 0x3
const SPI_D_CD_NUM_S = 2
const SPI_D_DQS_NUM = 0x00000003
const SPI_D_DQS_NUM_V = 0x3
const SPI_D_DQS_NUM_S = 0
const SPI_DATE = 0x0FFFFFFF
const SPI_DATE_V = 0xFFFFFFF
const SPI_DATE_S = 0
const SPI_MEM_FLASH_READ_V = 0x1
const SPI_MEM_FLASH_READ_S = 31
const SPI_MEM_FLASH_WREN_V = 0x1
const SPI_MEM_FLASH_WREN_S = 30
const SPI_MEM_FLASH_WRDI_V = 0x1
const SPI_MEM_FLASH_WRDI_S = 29
const SPI_MEM_FLASH_RDID_V = 0x1
const SPI_MEM_FLASH_RDID_S = 28
const SPI_MEM_FLASH_RDSR_V = 0x1
const SPI_MEM_FLASH_RDSR_S = 27
const SPI_MEM_FLASH_WRSR_V = 0x1
const SPI_MEM_FLASH_WRSR_S = 26
const SPI_MEM_FLASH_PP_V = 0x1
const SPI_MEM_FLASH_PP_S = 25
const SPI_MEM_FLASH_SE_V = 0x1
const SPI_MEM_FLASH_SE_S = 24
const SPI_MEM_FLASH_BE_V = 0x1
const SPI_MEM_FLASH_BE_S = 23
const SPI_MEM_FLASH_CE_V = 0x1
const SPI_MEM_FLASH_CE_S = 22
const SPI_MEM_FLASH_DP_V = 0x1
const SPI_MEM_FLASH_DP_S = 21
const SPI_MEM_FLASH_RES_V = 0x1
const SPI_MEM_FLASH_RES_S = 20
const SPI_MEM_FLASH_HPM_V = 0x1
const SPI_MEM_FLASH_HPM_S = 19
const SPI_MEM_USR_V = 0x1
const SPI_MEM_USR_S = 18
const SPI_MEM_FLASH_PE_V = 0x1
const SPI_MEM_FLASH_PE_S = 17
const SPI_MEM_USR_ADDR_VALUE = 0xFFFFFFFF
const SPI_MEM_USR_ADDR_VALUE_V = 0xFFFFFFFF
const SPI_MEM_USR_ADDR_VALUE_S = 0
const SPI_MEM_FREAD_QIO_V = 0x1
const SPI_MEM_FREAD_QIO_S = 24
const SPI_MEM_FREAD_DIO_V = 0x1
const SPI_MEM_FREAD_DIO_S = 23
const SPI_MEM_WRSR_2B_V = 0x1
const SPI_MEM_WRSR_2B_S = 22
const SPI_MEM_WP_REG_V = 0x1
const SPI_MEM_WP_REG_S = 21
const SPI_MEM_FREAD_QUAD_V = 0x1
const SPI_MEM_FREAD_QUAD_S = 20
const SPI_MEM_D_POL_V = 0x1
const SPI_MEM_D_POL_S = 19
const SPI_MEM_Q_POL_V = 0x1
const SPI_MEM_Q_POL_S = 18
const SPI_MEM_RESANDRES_V = 0x1
const SPI_MEM_RESANDRES_S = 15
const SPI_MEM_FREAD_DUAL_V = 0x1
const SPI_MEM_FREAD_DUAL_S = 14
const SPI_MEM_FASTRD_MODE_V = 0x1
const SPI_MEM_FASTRD_MODE_S = 13
const SPI_MEM_TX_CRC_EN_V = 0x1
const SPI_MEM_TX_CRC_EN_S = 11
const SPI_MEM_FCS_CRC_EN_V = 0x1
const SPI_MEM_FCS_CRC_EN_S = 10
const SPI_MEM_FCMD_OCT_V = 0x1
const SPI_MEM_FCMD_OCT_S = 9
const SPI_MEM_FCMD_QUAD_V = 0x1
const SPI_MEM_FCMD_QUAD_S = 8
const SPI_MEM_FCMD_DUAL_V = 0x1
const SPI_MEM_FCMD_DUAL_S = 7
const SPI_MEM_FADDR_OCT_V = 0x1
const SPI_MEM_FADDR_OCT_S = 6
const SPI_MEM_FDIN_OCT_V = 0x1
const SPI_MEM_FDIN_OCT_S = 5
const SPI_MEM_FDOUT_OCT_V = 0x1
const SPI_MEM_FDOUT_OCT_S = 4
const SPI_MEM_FDUMMY_OUT_V = 0x1
const SPI_MEM_FDUMMY_OUT_S = 3
const SPI_MEM_CS_DLY_EDGE_V = 0x1
const SPI_MEM_CS_DLY_EDGE_S = 31
const SPI_MEM_CS_DLY_MODE = 0x00000007
const SPI_MEM_CS_DLY_MODE_V = 0x7
const SPI_MEM_CS_DLY_MODE_S = 28
const SPI_MEM_CS_DLY_NUM = 0x00000003
const SPI_MEM_CS_DLY_NUM_V = 0x3
const SPI_MEM_CS_DLY_NUM_S = 26
const SPI_MEM_CS_HOLD_DLY = 0x00000FFF
const SPI_MEM_CS_HOLD_DLY_V = 0xFFF
const SPI_MEM_CS_HOLD_DLY_S = 14
const SPI_MEM_CS_HOLD_DLY_RES = 0x00000FFF
const SPI_MEM_CS_HOLD_DLY_RES_V = 0xFFF
const SPI_MEM_CS_HOLD_DLY_RES_S = 2
const SPI_MEM_CLK_MODE = 0x00000003
const SPI_MEM_CLK_MODE_V = 0x3
const SPI_MEM_CLK_MODE_S = 0
const SPI_MEM_SYNC_RESET_V = 0x1
const SPI_MEM_SYNC_RESET_S = 31
const SPI_MEM_CS_HOLD_TIME = 0x00001FFF
const SPI_MEM_CS_HOLD_TIME_V = 0x1FFF
const SPI_MEM_CS_HOLD_TIME_S = 13
const SPI_MEM_CS_SETUP_TIME = 0x00001FFF
const SPI_MEM_CS_SETUP_TIME_V = 0x1FFF
const SPI_MEM_CS_SETUP_TIME_S = 0
const SPI_MEM_CLK_EQU_SYSCLK_V = 0x1
const SPI_MEM_CLK_EQU_SYSCLK_S = 31
const SPI_MEM_CLKCNT_N = 0x000000FF
const SPI_MEM_CLKCNT_N_V = 0xFF
const SPI_MEM_CLKCNT_N_S = 16
const SPI_MEM_CLKCNT_H = 0x000000FF
const SPI_MEM_CLKCNT_H_V = 0xFF
const SPI_MEM_CLKCNT_H_S = 8
const SPI_MEM_CLKCNT_L = 0x000000FF
const SPI_MEM_CLKCNT_L_V = 0xFF
const SPI_MEM_CLKCNT_L_S = 0
const SPI_MEM_USR_COMMAND_V = 0x1
const SPI_MEM_USR_COMMAND_S = 31
const SPI_MEM_USR_ADDR_V = 0x1
const SPI_MEM_USR_ADDR_S = 30
const SPI_MEM_USR_DUMMY_V = 0x1
const SPI_MEM_USR_DUMMY_S = 29
const SPI_MEM_USR_MISO_V = 0x1
const SPI_MEM_USR_MISO_S = 28
const SPI_MEM_USR_MOSI_V = 0x1
const SPI_MEM_USR_MOSI_S = 27
const SPI_MEM_USR_DUMMY_IDLE_V = 0x1
const SPI_MEM_USR_DUMMY_IDLE_S = 26
const SPI_MEM_USR_MOSI_HIGHPART_V = 0x1
const SPI_MEM_USR_MOSI_HIGHPART_S = 25
const SPI_MEM_USR_MISO_HIGHPART_V = 0x1
const SPI_MEM_USR_MISO_HIGHPART_S = 24
const SPI_MEM_FWRITE_QIO_V = 0x1
const SPI_MEM_FWRITE_QIO_S = 15
const SPI_MEM_FWRITE_DIO_V = 0x1
const SPI_MEM_FWRITE_DIO_S = 14
const SPI_MEM_FWRITE_QUAD_V = 0x1
const SPI_MEM_FWRITE_QUAD_S = 13
const SPI_MEM_FWRITE_DUAL_V = 0x1
const SPI_MEM_FWRITE_DUAL_S = 12
const SPI_MEM_CK_OUT_EDGE_V = 0x1
const SPI_MEM_CK_OUT_EDGE_S = 9
const SPI_MEM_CS_SETUP_V = 0x1
const SPI_MEM_CS_SETUP_S = 7
const SPI_MEM_CS_HOLD_V = 0x1
const SPI_MEM_CS_HOLD_S = 6
const SPI_MEM_USR_ADDR_BITLEN = 0x0000003F
const SPI_MEM_USR_ADDR_BITLEN_V = 0x3F
const SPI_MEM_USR_ADDR_BITLEN_S = 26
const SPI_MEM_USR_DUMMY_CYCLELEN = 0x000000FF
const SPI_MEM_USR_DUMMY_CYCLELEN_V = 0xFF
const SPI_MEM_USR_DUMMY_CYCLELEN_S = 0
const SPI_MEM_USR_COMMAND_BITLEN = 0x0000000F
const SPI_MEM_USR_COMMAND_BITLEN_V = 0xF
const SPI_MEM_USR_COMMAND_BITLEN_S = 28
const SPI_MEM_USR_COMMAND_VALUE = 0x0000FFFF
const SPI_MEM_USR_COMMAND_VALUE_V = 0xFFFF
const SPI_MEM_USR_COMMAND_VALUE_S = 0
const SPI_MEM_USR_MOSI_DBITLEN = 0x000007FF
const SPI_MEM_USR_MOSI_DBITLEN_V = 0x7FF
const SPI_MEM_USR_MOSI_DBITLEN_S = 0
const SPI_MEM_USR_MISO_DBITLEN = 0x000007FF
const SPI_MEM_USR_MISO_DBITLEN_V = 0x7FF
const SPI_MEM_USR_MISO_DBITLEN_S = 0
const SPI_MEM_WB_MODE = 0x000000FF
const SPI_MEM_WB_MODE_V = 0xFF
const SPI_MEM_WB_MODE_S = 16
const SPI_MEM_STATUS = 0x0000FFFF
const SPI_MEM_STATUS_V = 0xFFFF
const SPI_MEM_STATUS_S = 0
const SPI_MEM_EXT_ADDR = 0xFFFFFFFF
const SPI_MEM_EXT_ADDR_V = 0xFFFFFFFF
const SPI_MEM_EXT_ADDR_S = 0
const SPI_MEM_AUTO_PER_V = 0x1
const SPI_MEM_AUTO_PER_S = 11
const SPI_MEM_CS_KEEP_ACTIVE_V = 0x1
const SPI_MEM_CS_KEEP_ACTIVE_S = 10
const SPI_MEM_CK_IDLE_EDGE_V = 0x1
const SPI_MEM_CK_IDLE_EDGE_S = 9
const SPI_MEM_SSUB_PIN_V = 0x1
const SPI_MEM_SSUB_PIN_S = 8
const SPI_MEM_FSUB_PIN_V = 0x1
const SPI_MEM_FSUB_PIN_S = 7
const SPI_MEM_CS_POL = 0x00000003
const SPI_MEM_CS_POL_V = 0x3
const SPI_MEM_CS_POL_S = 5
const SPI_MEM_TRANS_END_INT_ENA_V = 0x1
const SPI_MEM_TRANS_END_INT_ENA_S = 4
const SPI_MEM_TRANS_END_V = 0x1
const SPI_MEM_TRANS_END_S = 3
const SPI_MEM_CS1_DIS_V = 0x1
const SPI_MEM_CS1_DIS_S = 1
const SPI_MEM_CS0_DIS_V = 0x1
const SPI_MEM_CS0_DIS_S = 0
const SPI_MEM_TX_CRC_DATA = 0xFFFFFFFF
const SPI_MEM_TX_CRC_DATA_V = 0xFFFFFFFF
const SPI_MEM_TX_CRC_DATA_S = 0
const SPI_MEM_FADDR_QUAD_V = 0x1
const SPI_MEM_FADDR_QUAD_S = 8
const SPI_MEM_FDOUT_QUAD_V = 0x1
const SPI_MEM_FDOUT_QUAD_S = 7
const SPI_MEM_FDIN_QUAD_V = 0x1
const SPI_MEM_FDIN_QUAD_S = 6
const SPI_MEM_FADDR_DUAL_V = 0x1
const SPI_MEM_FADDR_DUAL_S = 5
const SPI_MEM_FDOUT_DUAL_V = 0x1
const SPI_MEM_FDOUT_DUAL_S = 4
const SPI_MEM_FDIN_DUAL_V = 0x1
const SPI_MEM_FDIN_DUAL_S = 3
const SPI_MEM_CACHE_FLASH_USR_CMD_V = 0x1
const SPI_MEM_CACHE_FLASH_USR_CMD_S = 2
const SPI_MEM_CACHE_USR_CMD_4BYTE_V = 0x1
const SPI_MEM_CACHE_USR_CMD_4BYTE_S = 1
const SPI_MEM_CACHE_REQ_EN_V = 0x1
const SPI_MEM_CACHE_REQ_EN_S = 0
const SPI_MEM_SRAM_WDUMMY_CYCLELEN = 0x000000FF
const SPI_MEM_SRAM_WDUMMY_CYCLELEN_V = 0xFF
const SPI_MEM_SRAM_WDUMMY_CYCLELEN_S = 22
const SPI_MEM_SRAM_OCT_V = 0x1
const SPI_MEM_SRAM_OCT_S = 21
const SPI_MEM_CACHE_SRAM_USR_WCMD_V = 0x1
const SPI_MEM_CACHE_SRAM_USR_WCMD_S = 20
const SPI_MEM_SRAM_ADDR_BITLEN = 0x0000003F
const SPI_MEM_SRAM_ADDR_BITLEN_V = 0x3F
const SPI_MEM_SRAM_ADDR_BITLEN_S = 14
const SPI_MEM_SRAM_RDUMMY_CYCLELEN = 0x000000FF
const SPI_MEM_SRAM_RDUMMY_CYCLELEN_V = 0xFF
const SPI_MEM_SRAM_RDUMMY_CYCLELEN_S = 6
const SPI_MEM_CACHE_SRAM_USR_RCMD_V = 0x1
const SPI_MEM_CACHE_SRAM_USR_RCMD_S = 5
const SPI_MEM_USR_RD_SRAM_DUMMY_V = 0x1
const SPI_MEM_USR_RD_SRAM_DUMMY_S = 4
const SPI_MEM_USR_WR_SRAM_DUMMY_V = 0x1
const SPI_MEM_USR_WR_SRAM_DUMMY_S = 3
const SPI_MEM_USR_SRAM_QIO_V = 0x1
const SPI_MEM_USR_SRAM_QIO_S = 2
const SPI_MEM_USR_SRAM_DIO_V = 0x1
const SPI_MEM_USR_SRAM_DIO_S = 1
const SPI_MEM_CACHE_USR_SCMD_4BYTE_V = 0x1
const SPI_MEM_CACHE_USR_SCMD_4BYTE_S = 0
const SPI_MEM_SDUMMY_OUT_V = 0x1
const SPI_MEM_SDUMMY_OUT_S = 22
const SPI_MEM_SCMD_OCT_V = 0x1
const SPI_MEM_SCMD_OCT_S = 21
const SPI_MEM_SADDR_OCT_V = 0x1
const SPI_MEM_SADDR_OCT_S = 20
const SPI_MEM_SDOUT_OCT_V = 0x1
const SPI_MEM_SDOUT_OCT_S = 19
const SPI_MEM_SDIN_OCT_V = 0x1
const SPI_MEM_SDIN_OCT_S = 18
const SPI_MEM_SCMD_QUAD_V = 0x1
const SPI_MEM_SCMD_QUAD_S = 17
const SPI_MEM_SADDR_QUAD_V = 0x1
const SPI_MEM_SADDR_QUAD_S = 16
const SPI_MEM_SDOUT_QUAD_V = 0x1
const SPI_MEM_SDOUT_QUAD_S = 15
const SPI_MEM_SDIN_QUAD_V = 0x1
const SPI_MEM_SDIN_QUAD_S = 14
const SPI_MEM_SCMD_DUAL_V = 0x1
const SPI_MEM_SCMD_DUAL_S = 13
const SPI_MEM_SADDR_DUAL_V = 0x1
const SPI_MEM_SADDR_DUAL_S = 12
const SPI_MEM_SDOUT_DUAL_V = 0x1
const SPI_MEM_SDOUT_DUAL_S = 11
const SPI_MEM_SDIN_DUAL_V = 0x1
const SPI_MEM_SDIN_DUAL_S = 10
const SPI_MEM_SWB_MODE = 0x000000FF
const SPI_MEM_SWB_MODE_V = 0xFF
const SPI_MEM_SWB_MODE_S = 2
const SPI_MEM_SCLK_MODE = 0x00000003
const SPI_MEM_SCLK_MODE_V = 0x3
const SPI_MEM_SCLK_MODE_S = 0
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_BITLEN = 0x0000000F
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_BITLEN_V = 0xF
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_BITLEN_S = 28
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE = 0x0000FFFF
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE_V = 0xFFFF
const SPI_MEM_CACHE_SRAM_USR_RD_CMD_VALUE_S = 0
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_BITLEN = 0x0000000F
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_BITLEN_V = 0xF
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_BITLEN_S = 28
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE = 0x0000FFFF
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE_V = 0xFFFF
const SPI_MEM_CACHE_SRAM_USR_WR_CMD_VALUE_S = 0
const SPI_MEM_SCLK_EQU_SYSCLK_V = 0x1
const SPI_MEM_SCLK_EQU_SYSCLK_S = 31
const SPI_MEM_SCLKCNT_N = 0x000000FF
const SPI_MEM_SCLKCNT_N_V = 0xFF
const SPI_MEM_SCLKCNT_N_S = 16
const SPI_MEM_SCLKCNT_H = 0x000000FF
const SPI_MEM_SCLKCNT_H_V = 0xFF
const SPI_MEM_SCLKCNT_H_S = 8
const SPI_MEM_SCLKCNT_L = 0x000000FF
const SPI_MEM_SCLKCNT_L_V = 0xFF
const SPI_MEM_SCLKCNT_L_S = 0
const SPI_MEM_ST = 0x00000007
const SPI_MEM_ST_V = 0x7
const SPI_MEM_ST_S = 0
const SPI_MEM_BUF0 = 0xFFFFFFFF
const SPI_MEM_BUF0_V = 0xFFFFFFFF
const SPI_MEM_BUF0_S = 0
const SPI_MEM_BUF1 = 0xFFFFFFFF
const SPI_MEM_BUF1_V = 0xFFFFFFFF
const SPI_MEM_BUF1_S = 0
const SPI_MEM_BUF2 = 0xFFFFFFFF
const SPI_MEM_BUF2_V = 0xFFFFFFFF
const SPI_MEM_BUF2_S = 0
const SPI_MEM_BUF3 = 0xFFFFFFFF
const SPI_MEM_BUF3_V = 0xFFFFFFFF
const SPI_MEM_BUF3_S = 0
const SPI_MEM_BUF4 = 0xFFFFFFFF
const SPI_MEM_BUF4_V = 0xFFFFFFFF
const SPI_MEM_BUF4_S = 0
const SPI_MEM_BUF5 = 0xFFFFFFFF
const SPI_MEM_BUF5_V = 0xFFFFFFFF
const SPI_MEM_BUF5_S = 0
const SPI_MEM_BUF6 = 0xFFFFFFFF
const SPI_MEM_BUF6_V = 0xFFFFFFFF
const SPI_MEM_BUF6_S = 0
const SPI_MEM_BUF7 = 0xFFFFFFFF
const SPI_MEM_BUF7_V = 0xFFFFFFFF
const SPI_MEM_BUF7_S = 0
const SPI_MEM_BUF8 = 0xFFFFFFFF
const SPI_MEM_BUF8_V = 0xFFFFFFFF
const SPI_MEM_BUF8_S = 0
const SPI_MEM_BUF9 = 0xFFFFFFFF
const SPI_MEM_BUF9_V = 0xFFFFFFFF
const SPI_MEM_BUF9_S = 0
const SPI_MEM_BUF10 = 0xFFFFFFFF
const SPI_MEM_BUF10_V = 0xFFFFFFFF
const SPI_MEM_BUF10_S = 0
const SPI_MEM_BUF11 = 0xFFFFFFFF
const SPI_MEM_BUF11_V = 0xFFFFFFFF
const SPI_MEM_BUF11_S = 0
const SPI_MEM_BUF12 = 0xFFFFFFFF
const SPI_MEM_BUF12_V = 0xFFFFFFFF
const SPI_MEM_BUF12_S = 0
const SPI_MEM_BUF13 = 0xFFFFFFFF
const SPI_MEM_BUF13_V = 0xFFFFFFFF
const SPI_MEM_BUF13_S = 0
const SPI_MEM_BUF14 = 0xFFFFFFFF
const SPI_MEM_BUF14_V = 0xFFFFFFFF
const SPI_MEM_BUF14_S = 0
const SPI_MEM_BUF15 = 0xFFFFFFFF
const SPI_MEM_BUF15_V = 0xFFFFFFFF
const SPI_MEM_BUF15_S = 0
const SPI_MEM_WAITI_DUMMY_CYCLELEN = 0x000000FF
const SPI_MEM_WAITI_DUMMY_CYCLELEN_V = 0xFF
const SPI_MEM_WAITI_DUMMY_CYCLELEN_S = 10
const SPI_MEM_WAITI_CMD = 0x000000FF
const SPI_MEM_WAITI_CMD_V = 0xFF
const SPI_MEM_WAITI_CMD_S = 2
const SPI_MEM_WAITI_DUMMY_V = 0x1
const SPI_MEM_WAITI_DUMMY_S = 1
const SPI_MEM_WAITI_EN_V = 0x1
const SPI_MEM_WAITI_EN_S = 0
const SPI_MEM_FLASH_PES_V = 0x1
const SPI_MEM_FLASH_PES_S = 1
const SPI_MEM_FLASH_PER_V = 0x1
const SPI_MEM_FLASH_PER_S = 0
const SPI_MEM_FLASH_PES_COMMAND = 0x000000FF
const SPI_MEM_FLASH_PES_COMMAND_V = 0xFF
const SPI_MEM_FLASH_PES_COMMAND_S = 9
const SPI_MEM_FLASH_PER_COMMAND = 0x000000FF
const SPI_MEM_FLASH_PER_COMMAND_V = 0xFF
const SPI_MEM_FLASH_PER_COMMAND_S = 1
const SPI_MEM_FLASH_PES_EN_V = 0x1
const SPI_MEM_FLASH_PES_EN_S = 0
const SPI_MEM_FLASH_SUS_V = 0x1
const SPI_MEM_FLASH_SUS_S = 0
const SPI_MEM_EXTRA_DUMMY_CYCLELEN = 0x00000003
const SPI_MEM_EXTRA_DUMMY_CYCLELEN_V = 0x3
const SPI_MEM_EXTRA_DUMMY_CYCLELEN_S = 2
const SPI_MEM_TIMING_CALI_V = 0x1
const SPI_MEM_TIMING_CALI_S = 1
const SPI_MEM_TIMING_CLK_ENA_V = 0x1
const SPI_MEM_TIMING_CLK_ENA_S = 0
const SPI_MEM_DINS_MODE = 0x00000007
const SPI_MEM_DINS_MODE_V = 0x7
const SPI_MEM_DINS_MODE_S = 24
const SPI_MEM_DIN7_MODE = 0x00000007
const SPI_MEM_DIN7_MODE_V = 0x7
const SPI_MEM_DIN7_MODE_S = 21
const SPI_MEM_DIN6_MODE = 0x00000007
const SPI_MEM_DIN6_MODE_V = 0x7
const SPI_MEM_DIN6_MODE_S = 18
const SPI_MEM_DIN5_MODE = 0x00000007
const SPI_MEM_DIN5_MODE_V = 0x7
const SPI_MEM_DIN5_MODE_S = 15
const SPI_MEM_DIN4_MODE = 0x00000007
const SPI_MEM_DIN4_MODE_V = 0x7
const SPI_MEM_DIN4_MODE_S = 12
const SPI_MEM_DIN3_MODE = 0x00000007
const SPI_MEM_DIN3_MODE_V = 0x7
const SPI_MEM_DIN3_MODE_S = 9
const SPI_MEM_DIN2_MODE = 0x00000007
const SPI_MEM_DIN2_MODE_V = 0x7
const SPI_MEM_DIN2_MODE_S = 6
const SPI_MEM_DIN1_MODE = 0x00000007
const SPI_MEM_DIN1_MODE_V = 0x7
const SPI_MEM_DIN1_MODE_S = 3
const SPI_MEM_DIN0_MODE = 0x00000007
const SPI_MEM_DIN0_MODE_V = 0x7
const SPI_MEM_DIN0_MODE_S = 0
const SPI_MEM_DINS_NUM = 0x00000003
const SPI_MEM_DINS_NUM_V = 0x3
const SPI_MEM_DINS_NUM_S = 16
const SPI_MEM_DIN7_NUM = 0x00000003
const SPI_MEM_DIN7_NUM_V = 0x3
const SPI_MEM_DIN7_NUM_S = 14
const SPI_MEM_DIN6_NUM = 0x00000003
const SPI_MEM_DIN6_NUM_V = 0x3
const SPI_MEM_DIN6_NUM_S = 12
const SPI_MEM_DIN5_NUM = 0x00000003
const SPI_MEM_DIN5_NUM_V = 0x3
const SPI_MEM_DIN5_NUM_S = 10
const SPI_MEM_DIN4_NUM = 0x00000003
const SPI_MEM_DIN4_NUM_V = 0x3
const SPI_MEM_DIN4_NUM_S = 8
const SPI_MEM_DIN3_NUM = 0x00000003
const SPI_MEM_DIN3_NUM_V = 0x3
const SPI_MEM_DIN3_NUM_S = 6
const SPI_MEM_DIN2_NUM = 0x00000003
const SPI_MEM_DIN2_NUM_V = 0x3
const SPI_MEM_DIN2_NUM_S = 4
const SPI_MEM_DIN1_NUM = 0x00000003
const SPI_MEM_DIN1_NUM_V = 0x3
const SPI_MEM_DIN1_NUM_S = 2
const SPI_MEM_DIN0_NUM = 0x00000003
const SPI_MEM_DIN0_NUM_V = 0x3
const SPI_MEM_DIN0_NUM_S = 0
const SPI_MEM_DOUTS_MODE = 0x00000007
const SPI_MEM_DOUTS_MODE_V = 0x7
const SPI_MEM_DOUTS_MODE_S = 24
const SPI_MEM_DOUT7_MODE = 0x00000007
const SPI_MEM_DOUT7_MODE_V = 0x7
const SPI_MEM_DOUT7_MODE_S = 21
const SPI_MEM_DOUT6_MODE = 0x00000007
const SPI_MEM_DOUT6_MODE_V = 0x7
const SPI_MEM_DOUT6_MODE_S = 18
const SPI_MEM_DOUT5_MODE = 0x00000007
const SPI_MEM_DOUT5_MODE_V = 0x7
const SPI_MEM_DOUT5_MODE_S = 15
const SPI_MEM_DOUT4_MODE = 0x00000007
const SPI_MEM_DOUT4_MODE_V = 0x7
const SPI_MEM_DOUT4_MODE_S = 12
const SPI_MEM_DOUT3_MODE = 0x00000007
const SPI_MEM_DOUT3_MODE_V = 0x7
const SPI_MEM_DOUT3_MODE_S = 9
const SPI_MEM_DOUT2_MODE = 0x00000007
const SPI_MEM_DOUT2_MODE_V = 0x7
const SPI_MEM_DOUT2_MODE_S = 6
const SPI_MEM_DOUT1_MODE = 0x00000007
const SPI_MEM_DOUT1_MODE_V = 0x7
const SPI_MEM_DOUT1_MODE_S = 3
const SPI_MEM_DOUT0_MODE = 0x00000007
const SPI_MEM_DOUT0_MODE_V = 0x7
const SPI_MEM_DOUT0_MODE_S = 0
const SPI_MEM_DOUTS_NUM = 0x00000003
const SPI_MEM_DOUTS_NUM_V = 0x3
const SPI_MEM_DOUTS_NUM_S = 16
const SPI_MEM_DOUT7_NUM = 0x00000003
const SPI_MEM_DOUT7_NUM_V = 0x3
const SPI_MEM_DOUT7_NUM_S = 14
const SPI_MEM_DOUT6_NUM = 0x00000003
const SPI_MEM_DOUT6_NUM_V = 0x3
const SPI_MEM_DOUT6_NUM_S = 12
const SPI_MEM_DOUT5_NUM = 0x00000003
const SPI_MEM_DOUT5_NUM_V = 0x3
const SPI_MEM_DOUT5_NUM_S = 10
const SPI_MEM_DOUT4_NUM = 0x00000003
const SPI_MEM_DOUT4_NUM_V = 0x3
const SPI_MEM_DOUT4_NUM_S = 8
const SPI_MEM_DOUT3_NUM = 0x00000003
const SPI_MEM_DOUT3_NUM_V = 0x3
const SPI_MEM_DOUT3_NUM_S = 6
const SPI_MEM_DOUT2_NUM = 0x00000003
const SPI_MEM_DOUT2_NUM_V = 0x3
const SPI_MEM_DOUT2_NUM_S = 4
const SPI_MEM_DOUT1_NUM = 0x00000003
const SPI_MEM_DOUT1_NUM_V = 0x3
const SPI_MEM_DOUT1_NUM_S = 2
const SPI_MEM_DOUT0_NUM = 0x00000003
const SPI_MEM_DOUT0_NUM_V = 0x3
const SPI_MEM_DOUT0_NUM_S = 0
const SPI_MEM_SPI_SMEM_EXTRA_DUMMY_CYCLELEN = 0x00000003
const SPI_MEM_SPI_SMEM_EXTRA_DUMMY_CYCLELEN_V = 0x3
const SPI_MEM_SPI_SMEM_EXTRA_DUMMY_CYCLELEN_S = 2
const SPI_MEM_SPI_SMEM_TIMING_CALI_V = 0x1
const SPI_MEM_SPI_SMEM_TIMING_CALI_S = 1
const SPI_MEM_SPI_SMEM_TIMING_CLK_ENA_V = 0x1
const SPI_MEM_SPI_SMEM_TIMING_CLK_ENA_S = 0
const SPI_MEM_SPI_SMEM_DINS_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DINS_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DINS_MODE_S = 24
const SPI_MEM_SPI_SMEM_DIN7_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN7_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN7_MODE_S = 21
const SPI_MEM_SPI_SMEM_DIN6_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN6_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN6_MODE_S = 18
const SPI_MEM_SPI_SMEM_DIN5_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN5_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN5_MODE_S = 15
const SPI_MEM_SPI_SMEM_DIN4_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN4_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN4_MODE_S = 12
const SPI_MEM_SPI_SMEM_DIN3_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN3_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN3_MODE_S = 9
const SPI_MEM_SPI_SMEM_DIN2_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN2_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN2_MODE_S = 6
const SPI_MEM_SPI_SMEM_DIN1_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN1_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN1_MODE_S = 3
const SPI_MEM_SPI_SMEM_DIN0_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DIN0_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DIN0_MODE_S = 0
const SPI_MEM_SPI_SMEM_DINS_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DINS_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DINS_NUM_S = 16
const SPI_MEM_SPI_SMEM_DIN7_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN7_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN7_NUM_S = 14
const SPI_MEM_SPI_SMEM_DIN6_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN6_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN6_NUM_S = 12
const SPI_MEM_SPI_SMEM_DIN5_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN5_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN5_NUM_S = 10
const SPI_MEM_SPI_SMEM_DIN4_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN4_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN4_NUM_S = 8
const SPI_MEM_SPI_SMEM_DIN3_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN3_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN3_NUM_S = 6
const SPI_MEM_SPI_SMEM_DIN2_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN2_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN2_NUM_S = 4
const SPI_MEM_SPI_SMEM_DIN1_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN1_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN1_NUM_S = 2
const SPI_MEM_SPI_SMEM_DIN0_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DIN0_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DIN0_NUM_S = 0
const SPI_MEM_SPI_SMEM_DOUTS_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUTS_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUTS_MODE_S = 24
const SPI_MEM_SPI_SMEM_DOUT7_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT7_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT7_MODE_S = 21
const SPI_MEM_SPI_SMEM_DOUT6_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT6_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT6_MODE_S = 18
const SPI_MEM_SPI_SMEM_DOUT5_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT5_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT5_MODE_S = 15
const SPI_MEM_SPI_SMEM_DOUT4_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT4_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT4_MODE_S = 12
const SPI_MEM_SPI_SMEM_DOUT3_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT3_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT3_MODE_S = 9
const SPI_MEM_SPI_SMEM_DOUT2_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT2_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT2_MODE_S = 6
const SPI_MEM_SPI_SMEM_DOUT1_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT1_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT1_MODE_S = 3
const SPI_MEM_SPI_SMEM_DOUT0_MODE = 0x00000007
const SPI_MEM_SPI_SMEM_DOUT0_MODE_V = 0x7
const SPI_MEM_SPI_SMEM_DOUT0_MODE_S = 0
const SPI_MEM_SPI_SMEM_DOUTS_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUTS_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUTS_NUM_S = 16
const SPI_MEM_SPI_SMEM_DOUT7_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT7_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT7_NUM_S = 14
const SPI_MEM_SPI_SMEM_DOUT6_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT6_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT6_NUM_S = 12
const SPI_MEM_SPI_SMEM_DOUT5_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT5_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT5_NUM_S = 10
const SPI_MEM_SPI_SMEM_DOUT4_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT4_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT4_NUM_S = 8
const SPI_MEM_SPI_SMEM_DOUT3_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT3_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT3_NUM_S = 6
const SPI_MEM_SPI_SMEM_DOUT2_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT2_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT2_NUM_S = 4
const SPI_MEM_SPI_SMEM_DOUT1_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT1_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT1_NUM_S = 2
const SPI_MEM_SPI_SMEM_DOUT0_NUM = 0x00000003
const SPI_MEM_SPI_SMEM_DOUT0_NUM_V = 0x3
const SPI_MEM_SPI_SMEM_DOUT0_NUM_S = 0
const SPI_MEM_SPI_SMEM_CS_HOLD_TIME = 0x00001FFF
const SPI_MEM_SPI_SMEM_CS_HOLD_TIME_V = 0x1FFF
const SPI_MEM_SPI_SMEM_CS_HOLD_TIME_S = 15
const SPI_MEM_SPI_SMEM_CS_SETUP_TIME = 0x00001FFF
const SPI_MEM_SPI_SMEM_CS_SETUP_TIME_V = 0x1FFF
const SPI_MEM_SPI_SMEM_CS_SETUP_TIME_S = 2
const SPI_MEM_SPI_SMEM_CS_HOLD_V = 0x1
const SPI_MEM_SPI_SMEM_CS_HOLD_S = 1
const SPI_MEM_SPI_SMEM_CS_SETUP_V = 0x1
const SPI_MEM_SPI_SMEM_CS_SETUP_S = 0
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_MODE = 0x00000003
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_MODE_V = 0x3
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_MODE_S = 22
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_DQS_LOOP_S = 21
const SPI_MEM_SPI_FMEM_USR_DDR_DQS_THD = 0x000000FF
const SPI_MEM_SPI_FMEM_USR_DDR_DQS_THD_V = 0xFF
const SPI_MEM_SPI_FMEM_USR_DDR_DQS_THD_S = 13
const SPI_MEM_SPI_FMEM_OUTMINBYTELEN = 0x000000FF
const SPI_MEM_SPI_FMEM_OUTMINBYTELEN_V = 0xFF
const SPI_MEM_SPI_FMEM_OUTMINBYTELEN_S = 5
const SPI_MEM_SPI_FMEM_DDR_CMD_DIS_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_CMD_DIS_S = 4
const SPI_MEM_SPI_FMEM_DDR_WDAT_SWP_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_WDAT_SWP_S = 3
const SPI_MEM_SPI_FMEM_DDR_RDAT_SWP_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_RDAT_SWP_S = 2
const SPI_MEM_SPI_FMEM_VAR_DUMMY_V = 0x1
const SPI_MEM_SPI_FMEM_VAR_DUMMY_S = 1
const SPI_MEM_SPI_FMEM_DDR_EN_V = 0x1
const SPI_MEM_SPI_FMEM_DDR_EN_S = 0
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_MODE = 0x00000003
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_MODE_V = 0x3
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_MODE_S = 22
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_DQS_LOOP_S = 21
const SPI_MEM_SPI_SMEM_USR_DDR_DQS_THD = 0x000000FF
const SPI_MEM_SPI_SMEM_USR_DDR_DQS_THD_V = 0xFF
const SPI_MEM_SPI_SMEM_USR_DDR_DQS_THD_S = 13
const SPI_MEM_SPI_SMEM_OUTMINBYTELEN = 0x000000FF
const SPI_MEM_SPI_SMEM_OUTMINBYTELEN_V = 0xFF
const SPI_MEM_SPI_SMEM_OUTMINBYTELEN_S = 5
const SPI_MEM_SPI_SMEM_DDR_CMD_DIS_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_CMD_DIS_S = 4
const SPI_MEM_SPI_SMEM_DDR_WDAT_SWP_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_WDAT_SWP_S = 3
const SPI_MEM_SPI_SMEM_DDR_RDAT_SWP_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_RDAT_SWP_S = 2
const SPI_MEM_SPI_SMEM_VAR_DUMMY_V = 0x1
const SPI_MEM_SPI_SMEM_VAR_DUMMY_S = 1
const SPI_MEM_SPI_SMEM_DDR_EN_V = 0x1
const SPI_MEM_SPI_SMEM_DDR_EN_S = 0
const SPI_MEM_CLK_EN_V = 0x1
const SPI_MEM_CLK_EN_S = 0
const SPI_MEM_DATE = 0x0FFFFFFF
const SPI_MEM_DATE_V = 0xFFFFFFF
const SPI_MEM_DATE_S = 0
const SPI_FREAD_DIO = 0
const SPI_FREAD_QIO = 0
const SPI_FWRITE_DIO = 0
const SPI_FWRITE_QIO = 0
const ADC1_GPIO1_CHANNEL = 0
const ADC1_CHANNEL_0_GPIO_NUM = 1
const ADC1_GPIO2_CHANNEL = 1
const ADC1_CHANNEL_1_GPIO_NUM = 2
const ADC1_GPIO3_CHANNEL = 2
const ADC1_CHANNEL_2_GPIO_NUM = 3
const ADC1_GPIO4_CHANNEL = 3
const ADC1_CHANNEL_3_GPIO_NUM = 4
const ADC1_GPIO5_CHANNEL = 4
const ADC1_CHANNEL_4_GPIO_NUM = 5
const ADC1_GPIO6_CHANNEL = 5
const ADC1_CHANNEL_5_GPIO_NUM = 6
const ADC1_GPIO7_CHANNEL = 6
const ADC1_CHANNEL_6_GPIO_NUM = 7
const ADC1_GPIO8_CHANNEL = 7
const ADC1_CHANNEL_7_GPIO_NUM = 8
const ADC1_GPIO9_CHANNEL = 8
const ADC1_CHANNEL_8_GPIO_NUM = 9
const ADC1_GPIO10_CHANNEL = 9
const ADC1_CHANNEL_9_GPIO_NUM = 10
const ADC2_GPIO11_CHANNEL = 0
const ADC2_CHANNEL_0_GPIO_NUM = 11
const ADC2_GPIO12_CHANNEL = 1
const ADC2_CHANNEL_1_GPIO_NUM = 12
const ADC2_GPIO13_CHANNEL = 2
const ADC2_CHANNEL_2_GPIO_NUM = 13
const ADC2_GPIO14_CHANNEL = 3
const ADC2_CHANNEL_3_GPIO_NUM = 14
const ADC2_GPIO15_CHANNEL = 4
const ADC2_CHANNEL_4_GPIO_NUM = 15
const ADC2_GPIO16_CHANNEL = 5
const ADC2_CHANNEL_5_GPIO_NUM = 16
const ADC2_GPIO17_CHANNEL = 6
const ADC2_CHANNEL_6_GPIO_NUM = 17
const ADC2_GPIO18_CHANNEL = 7
const ADC2_CHANNEL_7_GPIO_NUM = 18
const ADC2_GPIO19_CHANNEL = 8
const ADC2_CHANNEL_8_GPIO_NUM = 19
const ADC2_GPIO20_CHANNEL = 9
const ADC2_CHANNEL_9_GPIO_NUM = 20
const SENS_SAR1_INT_EN_V = 0x1
const SENS_SAR1_INT_EN_S = 29
const SENS_SAR1_DATA_INV_V = 0x1
const SENS_SAR1_DATA_INV_S = 28
const SENS_SAR1_SAMPLE_NUM = 0x000000FF
const SENS_SAR1_SAMPLE_NUM_V = 0xFF
const SENS_SAR1_SAMPLE_NUM_S = 19
const SENS_SAR1_CLK_GATED_V = 0x1
const SENS_SAR1_CLK_GATED_S = 18
const SENS_SAR1_CLK_DIV = 0x000000FF
const SENS_SAR1_CLK_DIV_V = 0xFF
const SENS_SAR1_CLK_DIV_S = 0
const SENS_SAR1_READER_STATUS = 0xFFFFFFFF
const SENS_SAR1_READER_STATUS_V = 0xFFFFFFFF
const SENS_SAR1_READER_STATUS_S = 0
const SENS_AMP_SHORT_REF_GND_FORCE = 0x00000003
const SENS_AMP_SHORT_REF_GND_FORCE_V = 0x3
const SENS_AMP_SHORT_REF_GND_FORCE_S = 30
const SENS_AMP_SHORT_REF_FORCE = 0x00000003
const SENS_AMP_SHORT_REF_FORCE_V = 0x3
const SENS_AMP_SHORT_REF_FORCE_S = 28
const SENS_AMP_RST_FB_FORCE = 0x00000003
const SENS_AMP_RST_FB_FORCE_V = 0x3
const SENS_AMP_RST_FB_FORCE_S = 26
const SENS_FORCE_XPD_AMP = 0x00000003
const SENS_FORCE_XPD_AMP_V = 0x3
const SENS_FORCE_XPD_AMP_S = 24
const SENS_FORCE_XPD_AMP_FSM = 0
const SENS_FORCE_XPD_AMP_PD = 2
const SENS_FORCE_XPD_AMP_PU = 3
const SENS_RTC_CLKGATE_EN_V = 0x1
const SENS_RTC_CLKGATE_EN_S = 23
const SENS_RTC_RESET_V = 0x1
const SENS_RTC_RESET_S = 22
const SENS_SAR1_EN_PAD_FORCE_V = 0x1
const SENS_SAR1_EN_PAD_FORCE_S = 31
const SENS_SAR1_EN_PAD = 0x00000FFF
const SENS_SAR1_EN_PAD_V = 0xFFF
const SENS_SAR1_EN_PAD_S = 19
const SENS_MEAS1_START_FORCE_V = 0x1
const SENS_MEAS1_START_FORCE_S = 18
const SENS_MEAS1_START_SAR_V = 0x1
const SENS_MEAS1_START_SAR_S = 17
const SENS_MEAS1_DONE_SAR_V = 0x1
const SENS_MEAS1_DONE_SAR_S = 16
const SENS_MEAS1_DATA_SAR = 0x0000FFFF
const SENS_MEAS1_DATA_SAR_V = 0xFFFF
const SENS_MEAS1_DATA_SAR_S = 0
const SENS_SAR1_DIG_FORCE_V = 0x1
const SENS_SAR1_DIG_FORCE_S = 31
const SENS_SAR1_ATTEN = 0xFFFFFFFF
const SENS_SAR1_ATTEN_V = 0xFFFFFFFF
const SENS_SAR1_ATTEN_S = 0
const SENS_SAR_AMP_WAIT2 = 0x0000FFFF
const SENS_SAR_AMP_WAIT2_V = 0xFFFF
const SENS_SAR_AMP_WAIT2_S = 16
const SENS_SAR_AMP_WAIT1 = 0x0000FFFF
const SENS_SAR_AMP_WAIT1_V = 0xFFFF
const SENS_SAR_AMP_WAIT1_S = 0
const SENS_SAR_AMP_WAIT3 = 0x0000FFFF
const SENS_SAR_AMP_WAIT3_V = 0xFFFF
const SENS_SAR_AMP_WAIT3_S = 16
const SENS_SAR_RSTB_FSM_IDLE_V = 0x1
const SENS_SAR_RSTB_FSM_IDLE_S = 6
const SENS_XPD_SAR_FSM_IDLE_V = 0x1
const SENS_XPD_SAR_FSM_IDLE_S = 5
const SENS_AMP_SHORT_REF_GND_FSM_IDLE_V = 0x1
const SENS_AMP_SHORT_REF_GND_FSM_IDLE_S = 4
const SENS_AMP_SHORT_REF_FSM_IDLE_V = 0x1
const SENS_AMP_SHORT_REF_FSM_IDLE_S = 3
const SENS_AMP_RST_FB_FSM_IDLE_V = 0x1
const SENS_AMP_RST_FB_FSM_IDLE_S = 2
const SENS_XPD_SAR_AMP_FSM_IDLE_V = 0x1
const SENS_XPD_SAR_AMP_FSM_IDLE_S = 1
const SENS_SAR1_DAC_XPD_FSM_IDLE_V = 0x1
const SENS_SAR1_DAC_XPD_FSM_IDLE_S = 0
const SENS_SAR_RSTB_FSM = 0x0000000F
const SENS_SAR_RSTB_FSM_V = 0xF
const SENS_SAR_RSTB_FSM_S = 24
const SENS_XPD_SAR_FSM = 0x0000000F
const SENS_XPD_SAR_FSM_V = 0xF
const SENS_XPD_SAR_FSM_S = 20
const SENS_AMP_SHORT_REF_GND_FSM = 0x0000000F
const SENS_AMP_SHORT_REF_GND_FSM_V = 0xF
const SENS_AMP_SHORT_REF_GND_FSM_S = 16
const SENS_AMP_SHORT_REF_FSM = 0x0000000F
const SENS_AMP_SHORT_REF_FSM_V = 0xF
const SENS_AMP_SHORT_REF_FSM_S = 12
const SENS_AMP_RST_FB_FSM = 0x0000000F
const SENS_AMP_RST_FB_FSM_V = 0xF
const SENS_AMP_RST_FB_FSM_S = 8
const SENS_XPD_SAR_AMP_FSM = 0x0000000F
const SENS_XPD_SAR_AMP_FSM_V = 0xF
const SENS_XPD_SAR_AMP_FSM_S = 4
const SENS_SAR1_DAC_XPD_FSM = 0x0000000F
const SENS_SAR1_DAC_XPD_FSM_V = 0xF
const SENS_SAR1_DAC_XPD_FSM_S = 0
const SENS_SAR2_INT_EN_V = 0x1
const SENS_SAR2_INT_EN_S = 30
const SENS_SAR2_DATA_INV_V = 0x1
const SENS_SAR2_DATA_INV_S = 29
const SENS_SAR2_SAMPLE_NUM = 0x000000FF
const SENS_SAR2_SAMPLE_NUM_V = 0xFF
const SENS_SAR2_SAMPLE_NUM_S = 19
const SENS_SAR2_CLK_GATED_V = 0x1
const SENS_SAR2_CLK_GATED_S = 18
const SENS_SAR2_WAIT_ARB_CYCLE = 0x00000003
const SENS_SAR2_WAIT_ARB_CYCLE_V = 0x3
const SENS_SAR2_WAIT_ARB_CYCLE_S = 16
const SENS_SAR2_CLK_DIV = 0x000000FF
const SENS_SAR2_CLK_DIV_V = 0xFF
const SENS_SAR2_CLK_DIV_S = 0
const SENS_SAR2_READER_STATUS = 0xFFFFFFFF
const SENS_SAR2_READER_STATUS_V = 0xFFFFFFFF
const SENS_SAR2_READER_STATUS_S = 0
const SENS_SAR2_XPD_WAIT = 0x000000FF
const SENS_SAR2_XPD_WAIT_V = 0xFF
const SENS_SAR2_XPD_WAIT_S = 24
const SENS_SAR2_RSTB_WAIT = 0x000000FF
const SENS_SAR2_RSTB_WAIT_V = 0xFF
const SENS_SAR2_RSTB_WAIT_S = 16
const SENS_SAR2_STANDBY_WAIT = 0x000000FF
const SENS_SAR2_STANDBY_WAIT_V = 0xFF
const SENS_SAR2_STANDBY_WAIT_S = 8
const SENS_SAR2_RSTB_FORCE = 0x00000003
const SENS_SAR2_RSTB_FORCE_V = 0x3
const SENS_SAR2_RSTB_FORCE_S = 6
const SENS_SAR2_EN_TEST_V = 0x1
const SENS_SAR2_EN_TEST_S = 5
const SENS_SAR2_PKDET_CAL_EN_V = 0x1
const SENS_SAR2_PKDET_CAL_EN_S = 4
const SENS_SAR2_PWDET_CAL_EN_V = 0x1
const SENS_SAR2_PWDET_CAL_EN_S = 3
const SENS_SAR2_CNTL_STATE = 0x00000007
const SENS_SAR2_CNTL_STATE_V = 0x7
const SENS_SAR2_CNTL_STATE_S = 0
const SENS_SAR2_EN_PAD_FORCE_V = 0x1
const SENS_SAR2_EN_PAD_FORCE_S = 31
const SENS_SAR2_EN_PAD = 0x00000FFF
const SENS_SAR2_EN_PAD_V = 0xFFF
const SENS_SAR2_EN_PAD_S = 19
const SENS_MEAS2_START_FORCE_V = 0x1
const SENS_MEAS2_START_FORCE_S = 18
const SENS_MEAS2_START_SAR_V = 0x1
const SENS_MEAS2_START_SAR_S = 17
const SENS_MEAS2_DONE_SAR_V = 0x1
const SENS_MEAS2_DONE_SAR_S = 16
const SENS_MEAS2_DATA_SAR = 0x0000FFFF
const SENS_MEAS2_DATA_SAR_V = 0xFFFF
const SENS_MEAS2_DATA_SAR_S = 0
const SENS_SAR2_RTC_FORCE_V = 0x1
const SENS_SAR2_RTC_FORCE_S = 31
const SENS_SAR2_PWDET_CCT = 0x00000007
const SENS_SAR2_PWDET_CCT_V = 0x7
const SENS_SAR2_PWDET_CCT_S = 28
const SENS_SAR2_ATTEN = 0xFFFFFFFF
const SENS_SAR2_ATTEN_V = 0xFFFFFFFF
const SENS_SAR2_ATTEN_S = 0
const SENS_SARCLK_EN_V = 0x1
const SENS_SARCLK_EN_S = 31
const SENS_FORCE_XPD_SAR = 0x00000003
const SENS_FORCE_XPD_SAR_V = 0x3
const SENS_FORCE_XPD_SAR_S = 29
const SENS_FORCE_XPD_SAR_FSM = 0
const SENS_FORCE_XPD_SAR_PD = 2
const SENS_FORCE_XPD_SAR_PU = 3
const SENS_MEAS_STATUS = 0x000000FF
const SENS_MEAS_STATUS_V = 0xFF
const SENS_MEAS_STATUS_S = 22
const SENS_I2C_SLAVE_ADDR0 = 0x000007FF
const SENS_I2C_SLAVE_ADDR0_V = 0x7FF
const SENS_I2C_SLAVE_ADDR0_S = 11
const SENS_I2C_SLAVE_ADDR1 = 0x000007FF
const SENS_I2C_SLAVE_ADDR1_V = 0x7FF
const SENS_I2C_SLAVE_ADDR1_S = 0
const SENS_I2C_SLAVE_ADDR2 = 0x000007FF
const SENS_I2C_SLAVE_ADDR2_V = 0x7FF
const SENS_I2C_SLAVE_ADDR2_S = 11
const SENS_I2C_SLAVE_ADDR3 = 0x000007FF
const SENS_I2C_SLAVE_ADDR3_V = 0x7FF
const SENS_I2C_SLAVE_ADDR3_S = 0
const SENS_I2C_SLAVE_ADDR4 = 0x000007FF
const SENS_I2C_SLAVE_ADDR4_V = 0x7FF
const SENS_I2C_SLAVE_ADDR4_S = 11
const SENS_I2C_SLAVE_ADDR5 = 0x000007FF
const SENS_I2C_SLAVE_ADDR5_V = 0x7FF
const SENS_I2C_SLAVE_ADDR5_S = 0
const SENS_I2C_SLAVE_ADDR6 = 0x000007FF
const SENS_I2C_SLAVE_ADDR6_V = 0x7FF
const SENS_I2C_SLAVE_ADDR6_S = 11
const SENS_I2C_SLAVE_ADDR7 = 0x000007FF
const SENS_I2C_SLAVE_ADDR7_V = 0x7FF
const SENS_I2C_SLAVE_ADDR7_S = 0
const SENS_TSENS_DUMP_OUT_V = 0x1
const SENS_TSENS_DUMP_OUT_S = 24
const SENS_TSENS_POWER_UP_FORCE_V = 0x1
const SENS_TSENS_POWER_UP_FORCE_S = 23
const SENS_TSENS_POWER_UP_V = 0x1
const SENS_TSENS_POWER_UP_S = 22
const SENS_TSENS_CLK_DIV = 0x000000FF
const SENS_TSENS_CLK_DIV_V = 0xFF
const SENS_TSENS_CLK_DIV_S = 14
const SENS_TSENS_IN_INV_V = 0x1
const SENS_TSENS_IN_INV_S = 13
const SENS_TSENS_INT_EN_V = 0x1
const SENS_TSENS_INT_EN_S = 12
const SENS_TSENS_READY_V = 0x1
const SENS_TSENS_READY_S = 8
const SENS_TSENS_OUT = 0x000000FF
const SENS_TSENS_OUT_V = 0xFF
const SENS_TSENS_OUT_S = 0
const SENS_TSENS_RESET_V = 0x1
const SENS_TSENS_RESET_S = 16
const SENS_TSENS_CLKGATE_EN_V = 0x1
const SENS_TSENS_CLKGATE_EN_S = 15
const SENS_TSENS_CLK_INV_V = 0x1
const SENS_TSENS_CLK_INV_S = 14
const SENS_TSENS_XPD_FORCE = 0x00000003
const SENS_TSENS_XPD_FORCE_V = 0x3
const SENS_TSENS_XPD_FORCE_S = 12
const SENS_TSENS_XPD_WAIT = 0x00000FFF
const SENS_TSENS_XPD_WAIT_V = 0xFFF
const SENS_TSENS_XPD_WAIT_S = 0
const SENS_SAR_I2C_START_FORCE_V = 0x1
const SENS_SAR_I2C_START_FORCE_S = 29
const SENS_SAR_I2C_START_V = 0x1
const SENS_SAR_I2C_START_S = 28
const SENS_SAR_I2C_CTRL = 0x0FFFFFFF
const SENS_SAR_I2C_CTRL_V = 0xFFFFFFF
const SENS_SAR_I2C_CTRL_S = 0
const SENS_TOUCH_APPROACH_PAD0 = 0x0000000F
const SENS_TOUCH_APPROACH_PAD0_V = 0xF
const SENS_TOUCH_APPROACH_PAD0_S = 28
const SENS_TOUCH_APPROACH_PAD1 = 0x0000000F
const SENS_TOUCH_APPROACH_PAD1_V = 0xF
const SENS_TOUCH_APPROACH_PAD1_S = 24
const SENS_TOUCH_APPROACH_PAD2 = 0x0000000F
const SENS_TOUCH_APPROACH_PAD2_V = 0xF
const SENS_TOUCH_APPROACH_PAD2_S = 20
const SENS_TOUCH_UNIT_END_V = 0x1
const SENS_TOUCH_UNIT_END_S = 19
const SENS_TOUCH_DENOISE_END_V = 0x1
const SENS_TOUCH_DENOISE_END_S = 18
const SENS_TOUCH_DATA_SEL = 0x00000003
const SENS_TOUCH_DATA_SEL_V = 0x3
const SENS_TOUCH_DATA_SEL_S = 16
const SENS_TOUCH_STATUS_CLR_V = 0x1
const SENS_TOUCH_STATUS_CLR_S = 15
const SENS_TOUCH_OUTEN = 0x00007FFF
const SENS_TOUCH_OUTEN_V = 0x7FFF
const SENS_TOUCH_OUTEN_S = 0
const SENS_TOUCH_OUT_TH1 = 0x003FFFFF
const SENS_TOUCH_OUT_TH1_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH1_S = 0
const SENS_TOUCH_OUT_TH2 = 0x003FFFFF
const SENS_TOUCH_OUT_TH2_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH2_S = 0
const SENS_TOUCH_OUT_TH3 = 0x003FFFFF
const SENS_TOUCH_OUT_TH3_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH3_S = 0
const SENS_TOUCH_OUT_TH4 = 0x003FFFFF
const SENS_TOUCH_OUT_TH4_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH4_S = 0
const SENS_TOUCH_OUT_TH5 = 0x003FFFFF
const SENS_TOUCH_OUT_TH5_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH5_S = 0
const SENS_TOUCH_OUT_TH6 = 0x003FFFFF
const SENS_TOUCH_OUT_TH6_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH6_S = 0
const SENS_TOUCH_OUT_TH7 = 0x003FFFFF
const SENS_TOUCH_OUT_TH7_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH7_S = 0
const SENS_TOUCH_OUT_TH8 = 0x003FFFFF
const SENS_TOUCH_OUT_TH8_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH8_S = 0
const SENS_TOUCH_OUT_TH9 = 0x003FFFFF
const SENS_TOUCH_OUT_TH9_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH9_S = 0
const SENS_TOUCH_OUT_TH10 = 0x003FFFFF
const SENS_TOUCH_OUT_TH10_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH10_S = 0
const SENS_TOUCH_OUT_TH11 = 0x003FFFFF
const SENS_TOUCH_OUT_TH11_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH11_S = 0
const SENS_TOUCH_OUT_TH12 = 0x003FFFFF
const SENS_TOUCH_OUT_TH12_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH12_S = 0
const SENS_TOUCH_OUT_TH13 = 0x003FFFFF
const SENS_TOUCH_OUT_TH13_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH13_S = 0
const SENS_TOUCH_OUT_TH14 = 0x003FFFFF
const SENS_TOUCH_OUT_TH14_V = 0x3FFFFF
const SENS_TOUCH_OUT_TH14_S = 0
const SENS_TOUCH_MEAS_DONE_V = 0x1
const SENS_TOUCH_MEAS_DONE_S = 31
const SENS_TOUCH_CHANNEL_CLR = 0x00007FFF
const SENS_TOUCH_CHANNEL_CLR_V = 0x7FFF
const SENS_TOUCH_CHANNEL_CLR_S = 15
const SENS_TOUCH_PAD_ACTIVE = 0x00007FFF
const SENS_TOUCH_PAD_ACTIVE_V = 0x7FFF
const SENS_TOUCH_PAD_ACTIVE_S = 0
const SENS_TOUCH_SCAN_CURR = 0x0000000F
const SENS_TOUCH_SCAN_CURR_V = 0xF
const SENS_TOUCH_SCAN_CURR_S = 22
const SENS_TOUCH_DENOISE_DATA = 0x003FFFFF
const SENS_TOUCH_DENOISE_DATA_V = 0x3FFFFF
const SENS_TOUCH_DENOISE_DATA_S = 0
const SENS_TOUCH_PAD1_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD1_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD1_DEBOUNCE_S = 29
const SENS_TOUCH_PAD1_DATA = 0x003FFFFF
const SENS_TOUCH_PAD1_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD1_DATA_S = 0
const SENS_TOUCH_PAD2_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD2_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD2_DEBOUNCE_S = 29
const SENS_TOUCH_PAD2_DATA = 0x003FFFFF
const SENS_TOUCH_PAD2_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD2_DATA_S = 0
const SENS_TOUCH_PAD3_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD3_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD3_DEBOUNCE_S = 29
const SENS_TOUCH_PAD3_DATA = 0x003FFFFF
const SENS_TOUCH_PAD3_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD3_DATA_S = 0
const SENS_TOUCH_PAD4_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD4_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD4_DEBOUNCE_S = 29
const SENS_TOUCH_PAD4_DATA = 0x003FFFFF
const SENS_TOUCH_PAD4_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD4_DATA_S = 0
const SENS_TOUCH_PAD5_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD5_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD5_DEBOUNCE_S = 29
const SENS_TOUCH_PAD5_DATA = 0x003FFFFF
const SENS_TOUCH_PAD5_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD5_DATA_S = 0
const SENS_TOUCH_PAD6_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD6_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD6_DEBOUNCE_S = 29
const SENS_TOUCH_PAD6_DATA = 0x003FFFFF
const SENS_TOUCH_PAD6_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD6_DATA_S = 0
const SENS_TOUCH_PAD7_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD7_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD7_DEBOUNCE_S = 29
const SENS_TOUCH_PAD7_DATA = 0x003FFFFF
const SENS_TOUCH_PAD7_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD7_DATA_S = 0
const SENS_TOUCH_PAD8_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD8_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD8_DEBOUNCE_S = 29
const SENS_TOUCH_PAD8_DATA = 0x003FFFFF
const SENS_TOUCH_PAD8_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD8_DATA_S = 0
const SENS_TOUCH_PAD9_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD9_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD9_DEBOUNCE_S = 29
const SENS_TOUCH_PAD9_DATA = 0x003FFFFF
const SENS_TOUCH_PAD9_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD9_DATA_S = 0
const SENS_TOUCH_PAD10_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD10_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD10_DEBOUNCE_S = 29
const SENS_TOUCH_PAD10_DATA = 0x003FFFFF
const SENS_TOUCH_PAD10_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD10_DATA_S = 0
const SENS_TOUCH_PAD11_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD11_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD11_DEBOUNCE_S = 29
const SENS_TOUCH_PAD11_DATA = 0x003FFFFF
const SENS_TOUCH_PAD11_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD11_DATA_S = 0
const SENS_TOUCH_PAD12_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD12_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD12_DEBOUNCE_S = 29
const SENS_TOUCH_PAD12_DATA = 0x003FFFFF
const SENS_TOUCH_PAD12_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD12_DATA_S = 0
const SENS_TOUCH_PAD13_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD13_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD13_DEBOUNCE_S = 29
const SENS_TOUCH_PAD13_DATA = 0x003FFFFF
const SENS_TOUCH_PAD13_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD13_DATA_S = 0
const SENS_TOUCH_PAD14_DEBOUNCE = 0x00000007
const SENS_TOUCH_PAD14_DEBOUNCE_V = 0x7
const SENS_TOUCH_PAD14_DEBOUNCE_S = 29
const SENS_TOUCH_PAD14_DATA = 0x003FFFFF
const SENS_TOUCH_PAD14_DATA_V = 0x3FFFFF
const SENS_TOUCH_PAD14_DATA_S = 0
const SENS_TOUCH_SLP_DEBOUNCE = 0x00000007
const SENS_TOUCH_SLP_DEBOUNCE_V = 0x7
const SENS_TOUCH_SLP_DEBOUNCE_S = 29
const SENS_TOUCH_SLP_DATA = 0x003FFFFF
const SENS_TOUCH_SLP_DATA_V = 0x3FFFFF
const SENS_TOUCH_SLP_DATA_S = 0
const SENS_TOUCH_SLP_APPROACH_CNT = 0x000000FF
const SENS_TOUCH_SLP_APPROACH_CNT_V = 0xFF
const SENS_TOUCH_SLP_APPROACH_CNT_S = 24
const SENS_TOUCH_APPROACH_PAD0_CNT = 0x000000FF
const SENS_TOUCH_APPROACH_PAD0_CNT_V = 0xFF
const SENS_TOUCH_APPROACH_PAD0_CNT_S = 16
const SENS_TOUCH_APPROACH_PAD1_CNT = 0x000000FF
const SENS_TOUCH_APPROACH_PAD1_CNT_V = 0xFF
const SENS_TOUCH_APPROACH_PAD1_CNT_S = 8
const SENS_TOUCH_APPROACH_PAD2_CNT = 0x000000FF
const SENS_TOUCH_APPROACH_PAD2_CNT_V = 0xFF
const SENS_TOUCH_APPROACH_PAD2_CNT_S = 0
const SENS_DAC_CLKGATE_EN_V = 0x1
const SENS_DAC_CLKGATE_EN_S = 27
const SENS_DAC_RESET_V = 0x1
const SENS_DAC_RESET_S = 26
const SENS_DAC_CLK_INV_V = 0x1
const SENS_DAC_CLK_INV_S = 25
const SENS_DAC_CLK_FORCE_HIGH_V = 0x1
const SENS_DAC_CLK_FORCE_HIGH_S = 24
const SENS_DAC_CLK_FORCE_LOW_V = 0x1
const SENS_DAC_CLK_FORCE_LOW_S = 23
const SENS_DAC_DIG_FORCE_V = 0x1
const SENS_DAC_DIG_FORCE_S = 22
const SENS_DEBUG_BIT_SEL = 0x0000001F
const SENS_DEBUG_BIT_SEL_V = 0x1F
const SENS_DEBUG_BIT_SEL_S = 17
const SENS_SW_TONE_EN_V = 0x1
const SENS_SW_TONE_EN_S = 16
const SENS_SW_FSTEP = 0x0000FFFF
const SENS_SW_FSTEP_V = 0xFFFF
const SENS_SW_FSTEP_S = 0
const SENS_DAC_CW_EN2_V = 0x1
const SENS_DAC_CW_EN2_S = 25
const SENS_DAC_CW_EN1_V = 0x1
const SENS_DAC_CW_EN1_S = 24
const SENS_DAC_INV2 = 0x00000003
const SENS_DAC_INV2_V = 0x3
const SENS_DAC_INV2_S = 22
const SENS_DAC_INV1 = 0x00000003
const SENS_DAC_INV1_V = 0x3
const SENS_DAC_INV1_S = 20
const SENS_DAC_SCALE2 = 0x00000003
const SENS_DAC_SCALE2_V = 0x3
const SENS_DAC_SCALE2_S = 18
const SENS_DAC_SCALE1 = 0x00000003
const SENS_DAC_SCALE1_V = 0x3
const SENS_DAC_SCALE1_S = 16
const SENS_DAC_DC2 = 0x000000FF
const SENS_DAC_DC2_V = 0xFF
const SENS_DAC_DC2_S = 8
const SENS_DAC_DC1 = 0x000000FF
const SENS_DAC_DC1_V = 0xFF
const SENS_DAC_DC1_S = 0
const SENS_COCPU_EBREAK_V = 0x1
const SENS_COCPU_EBREAK_S = 30
const SENS_COCPU_TRAP_V = 0x1
const SENS_COCPU_TRAP_S = 29
const SENS_COCPU_EOI_V = 0x1
const SENS_COCPU_EOI_S = 28
const SENS_COCPU_RESET_N_V = 0x1
const SENS_COCPU_RESET_N_S = 27
const SENS_COCPU_CLK_EN_V = 0x1
const SENS_COCPU_CLK_EN_S = 26
const SENS_COCPU_DBG_TRIGGER_V = 0x1
const SENS_COCPU_DBG_TRIGGER_S = 25
const SENS_COCPU_SWD_INT_RAW_V = 0x1
const SENS_COCPU_SWD_INT_RAW_S = 8
const SENS_COCPU_SW_INT_RAW_V = 0x1
const SENS_COCPU_SW_INT_RAW_S = 7
const SENS_COCPU_START_INT_RAW_V = 0x1
const SENS_COCPU_START_INT_RAW_S = 6
const SENS_COCPU_TSENS_INT_RAW_V = 0x1
const SENS_COCPU_TSENS_INT_RAW_S = 5
const SENS_COCPU_SENS2_INT_RAW_V = 0x1
const SENS_COCPU_SENS2_INT_RAW_S = 4
const SENS_COCPU_SENS1_INT_RAW_V = 0x1
const SENS_COCPU_SENS1_INT_RAW_S = 3
const SENS_COCPU_TOUCH_ACTIVE_INT_RAW_V = 0x1
const SENS_COCPU_TOUCH_ACTIVE_INT_RAW_S = 2
const SENS_COCPU_TOUCH_INACTIVE_INT_RAW_V = 0x1
const SENS_COCPU_TOUCH_INACTIVE_INT_RAW_S = 1
const SENS_COCPU_TOUCH_DONE_INT_RAW_V = 0x1
const SENS_COCPU_TOUCH_DONE_INT_RAW_S = 0
const SENS_COCPU_SWD_INT_ENA_V = 0x1
const SENS_COCPU_SWD_INT_ENA_S = 8
const SENS_COCPU_SW_INT_ENA_V = 0x1
const SENS_COCPU_SW_INT_ENA_S = 7
const SENS_COCPU_START_INT_ENA_V = 0x1
const SENS_COCPU_START_INT_ENA_S = 6
const SENS_COCPU_TSENS_INT_ENA_V = 0x1
const SENS_COCPU_TSENS_INT_ENA_S = 5
const SENS_COCPU_SENS2_INT_ENA_V = 0x1
const SENS_COCPU_SENS2_INT_ENA_S = 4
const SENS_COCPU_SENS1_INT_ENA_V = 0x1
const SENS_COCPU_SENS1_INT_ENA_S = 3
const SENS_COCPU_TOUCH_ACTIVE_INT_ENA_V = 0x1
const SENS_COCPU_TOUCH_ACTIVE_INT_ENA_S = 2
const SENS_COCPU_TOUCH_INACTIVE_INT_ENA_V = 0x1
const SENS_COCPU_TOUCH_INACTIVE_INT_ENA_S = 1
const SENS_COCPU_TOUCH_DONE_INT_ENA_V = 0x1
const SENS_COCPU_TOUCH_DONE_INT_ENA_S = 0
const SENS_COCPU_SWD_INT_ST_V = 0x1
const SENS_COCPU_SWD_INT_ST_S = 8
const SENS_COCPU_SW_INT_ST_V = 0x1
const SENS_COCPU_SW_INT_ST_S = 7
const SENS_COCPU_START_INT_ST_V = 0x1
const SENS_COCPU_START_INT_ST_S = 6
const SENS_COCPU_TSENS_INT_ST_V = 0x1
const SENS_COCPU_TSENS_INT_ST_S = 5
const SENS_COCPU_SENS2_INT_ST_V = 0x1
const SENS_COCPU_SENS2_INT_ST_S = 4
const SENS_COCPU_SENS1_INT_ST_V = 0x1
const SENS_COCPU_SENS1_INT_ST_S = 3
const SENS_COCPU_TOUCH_ACTIVE_INT_ST_V = 0x1
const SENS_COCPU_TOUCH_ACTIVE_INT_ST_S = 2
const SENS_COCPU_TOUCH_INACTIVE_INT_ST_V = 0x1
const SENS_COCPU_TOUCH_INACTIVE_INT_ST_S = 1
const SENS_COCPU_TOUCH_DONE_INT_ST_V = 0x1
const SENS_COCPU_TOUCH_DONE_INT_ST_S = 0
const SENS_COCPU_SWD_INT_CLR_V = 0x1
const SENS_COCPU_SWD_INT_CLR_S = 8
const SENS_COCPU_SW_INT_CLR_V = 0x1
const SENS_COCPU_SW_INT_CLR_S = 7
const SENS_COCPU_START_INT_CLR_V = 0x1
const SENS_COCPU_START_INT_CLR_S = 6
const SENS_COCPU_TSENS_INT_CLR_V = 0x1
const SENS_COCPU_TSENS_INT_CLR_S = 5
const SENS_COCPU_SENS2_INT_CLR_V = 0x1
const SENS_COCPU_SENS2_INT_CLR_S = 4
const SENS_COCPU_SENS1_INT_CLR_V = 0x1
const SENS_COCPU_SENS1_INT_CLR_S = 3
const SENS_COCPU_TOUCH_ACTIVE_INT_CLR_V = 0x1
const SENS_COCPU_TOUCH_ACTIVE_INT_CLR_S = 2
const SENS_COCPU_TOUCH_INACTIVE_INT_CLR_V = 0x1
const SENS_COCPU_TOUCH_INACTIVE_INT_CLR_S = 1
const SENS_COCPU_TOUCH_DONE_INT_CLR_V = 0x1
const SENS_COCPU_TOUCH_DONE_INT_CLR_S = 0
const SENS_COCPU_MEM_ADDR = 0x00001FFF
const SENS_COCPU_MEM_ADDR_V = 0x1FFF
const SENS_COCPU_MEM_ADDR_S = 19
const SENS_COCPU_MEM_WEN = 0x0000000F
const SENS_COCPU_MEM_WEN_V = 0xF
const SENS_COCPU_MEM_WEN_S = 15
const SENS_COCPU_MEM_RDY_V = 0x1
const SENS_COCPU_MEM_RDY_S = 14
const SENS_COCPU_MEM_VLD_V = 0x1
const SENS_COCPU_MEM_VLD_S = 13
const SENS_COCPU_PC = 0x00001FFF
const SENS_COCPU_PC_V = 0x1FFF
const SENS_COCPU_PC_S = 0
const SENS_HALL_PHASE_FORCE_V = 0x1
const SENS_HALL_PHASE_FORCE_S = 31
const SENS_HALL_PHASE_V = 0x1
const SENS_HALL_PHASE_S = 30
const SENS_XPD_HALL_FORCE_V = 0x1
const SENS_XPD_HALL_FORCE_S = 29
const SENS_XPD_HALL_V = 0x1
const SENS_XPD_HALL_S = 28
const SENS_SAR_NOUSE = 0xFFFFFFFF
const SENS_SAR_NOUSE_V = 0xFFFFFFFF
const SENS_SAR_NOUSE_S = 0
const SENS_IOMUX_CLK_GATE_EN_V = 0x1
const SENS_IOMUX_CLK_GATE_EN_S = 31
const SENS_IOMUX_RESET_V = 0x1
const SENS_IOMUX_RESET_S = 30
const SENS_SAR_DATE = 0x0FFFFFFF
const SENS_SAR_DATE_V = 0xFFFFFFF
const SENS_SAR_DATE_S = 0

type X__int8T c.Char
type X__uint8T c.Char
type X__int16T int16
type X__uint16T uint16
type X__int32T c.Int
type X__uint32T c.Uint
type X__int64T c.LongLong
type X__uint64T c.UlongLong
type X__intLeast8T c.Char
type X__uintLeast8T c.Char
type X__intLeast16T int16
type X__uintLeast16T uint16
type X__intLeast32T c.Int
type X__uintLeast32T c.Uint
type X__intLeast64T c.LongLong
type X__uintLeast64T c.UlongLong
type X__intmaxT c.LongLong
type X__uintmaxT c.UlongLong
type X__intptrT c.Int
type X__uintptrT c.Uint
type IntLeast8T X__intLeast8T
type UintLeast8T X__uintLeast8T
type IntLeast16T X__intLeast16T
type UintLeast16T X__uintLeast16T
type IntLeast32T X__intLeast32T
type UintLeast32T X__uintLeast32T
type IntLeast64T X__intLeast64T
type UintLeast64T X__uintLeast64T
type IntFast8T c.Char
type UintFast8T c.Char
type IntFast16T int16
type UintFast16T uint16
type IntFast32T c.Int
type UintFast32T c.Uint
type IntFast64T c.LongLong
type UintFast64T c.UlongLong
type PtrdiffT c.Int
type WcharT c.Int

type MaxAlignT struct {
	X__clangMaxAlignNonce1 c.LongLong
	X__clangMaxAlignNonce2 c.Double
}
type WintT c.Uint
type X__blkcntT c.Long
type X__blksizeT c.Long
type X__fsblkcntT X__uint64T
type X__fsfilcntT X__uint32T
type X_offT c.Long
type X__pidT c.Int
type X__devT int16
type X__uidT uint16
type X__gidT uint16
type X__idT X__uint32T
type X__inoT uint16
type X__modeT X__uint32T
type X_off64T c.LongLong
type X__offT X_offT
type X__loffT X_off64T
type X__keyT c.Long
type X_fposT c.Long
type X__sizeT c.Uint
type X_ssizeT c.Int
type X__ssizeT X_ssizeT

type X_mbstateT struct {
	X__count c.Int
	X__value struct {
		X__wch WintT
	}
}
type X_iconvT c.Pointer
type X__clockT c.Ulong
type X__timeT X__intLeast64T
type X__clockidT c.Ulong
type X__daddrT c.Long
type X__timerT c.Ulong
type X__saFamilyT X__uint8T
type X__socklenT X__uint32T
type X__nlItem c.Int
type X__nlinkT uint16
type X__susecondsT c.Long
type X__usecondsT c.Ulong
type X__vaList c.Pointer
type X__ULong c.Ulong

type X__lock struct {
	Unused [8]uint8
}
type X_LOCKT *X__lock
type X_lockT X_LOCKT
type X_flockT X_LOCKT

type X_reent struct {
	Unused [8]uint8
}

type X__localeT struct {
	Unused [8]uint8
}

type X_Bigint struct {
	X_next   *X_Bigint
	X_k      c.Int
	X_maxwds c.Int
	X_sign   c.Int
	X_wds    c.Int
	X_x      [1]X__ULong
}

type X__tm struct {
	X__tmSec   c.Int
	X__tmMin   c.Int
	X__tmHour  c.Int
	X__tmMday  c.Int
	X__tmMon   c.Int
	X__tmYear  c.Int
	X__tmWday  c.Int
	X__tmYday  c.Int
	X__tmIsdst c.Int
}

type X_onExitArgs struct {
	X_fnargs    [32]c.Pointer
	X_dsoHandle [32]c.Pointer
	X_fntypes   X__ULong
	X_isCxa     X__ULong
}

type X_atexit struct {
	X_next          *X_atexit
	X_ind           c.Int
	X_fns           [32]c.Pointer
	X_onExitArgsPtr *X_onExitArgs
}

type X__sbuf struct {
	X_base *c.Char
	X_size c.Int
}

type X__sFILE struct {
	X_p       *c.Char
	X_r       c.Int
	X_w       c.Int
	X_flags   int16
	X_file    int16
	X_bf      X__sbuf
	X_lbfsize c.Int
	X_data    *X_reent
	X_cookie  c.Pointer
	X_read    c.Pointer
	X_write   c.Pointer
	X_seek    c.Pointer
	X_close   c.Pointer
	X_ub      X__sbuf
	X_up      *c.Char
	X_ur      c.Int
	X_ubuf    [3]c.Char
	X_nbuf    [1]c.Char
	X_lb      X__sbuf
	X_blksize c.Int
	X_offset  X_offT
	X_lock    X_flockT
	X_mbstate X_mbstateT
	X_flags2  c.Int
}
type X__FILE X__sFILE

type X_glue struct {
	X_next  *X_glue
	X_niobs c.Int
	X_iobs  *X__FILE
}

type X_rand48 struct {
	X_seed     [3]uint16
	X_mult     [3]uint16
	X_add      uint16
	X_randNext c.UlongLong
}

type X_mprec struct {
	X_result   *X_Bigint
	X_resultK  c.Int
	X_p5s      *X_Bigint
	X_freelist **X_Bigint
}

type X_miscReent struct {
	X_strtokLast     *c.Char
	X_mblenState     X_mbstateT
	X_wctombState    X_mbstateT
	X_mbtowcState    X_mbstateT
	X_l64aBuf        [8]c.Char
	X_getdateErr     c.Int
	X_mbrlenState    X_mbstateT
	X_mbrtowcState   X_mbstateT
	X_mbsrtowcsState X_mbstateT
	X_wcrtombState   X_mbstateT
	X_wcsrtombsState X_mbstateT
}

type DivT struct {
	Quot c.Int
	Rem  c.Int
}

type LdivT struct {
	Quot c.Long
	Rem  c.Long
}

type LldivT struct {
	Quot c.LongLong
	Rem  c.LongLong
}

// llgo:type C
type X__comparFnT func(c.Pointer, c.Pointer) c.Int

//go:linkname Abort C.abort
func Abort()

type SensDevS struct {
	SarReader1Ctrl struct {
		Val c.Uint32T
	}
	SarReader1Status c.Uint32T
	SarMeas1Ctrl1    struct {
		Val c.Uint32T
	}
	SarMeas1Ctrl2 struct {
		Val c.Uint32T
	}
	SarMeas1Mux struct {
		Val c.Uint32T
	}
	SarAtten1   c.Uint32T
	SarAmpCtrl1 struct {
		Val c.Uint32T
	}
	SarAmpCtrl2 struct {
		Val c.Uint32T
	}
	SarAmpCtrl3 struct {
		Val c.Uint32T
	}
	SarReader2Ctrl struct {
		Val c.Uint32T
	}
	SarReader2Status c.Uint32T
	SarMeas2Ctrl1    struct {
		Val c.Uint32T
	}
	SarMeas2Ctrl2 struct {
		Val c.Uint32T
	}
	SarMeas2Mux struct {
		Val c.Uint32T
	}
	SarAtten2      c.Uint32T
	SarPowerXpdSar struct {
		Val c.Uint32T
	}
	SarSlaveAddr1 struct {
		Val c.Uint32T
	}
	SarSlaveAddr2 struct {
		Val c.Uint32T
	}
	SarSlaveAddr3 struct {
		Val c.Uint32T
	}
	SarSlaveAddr4 struct {
		Val c.Uint32T
	}
	SarTctrl struct {
		Val c.Uint32T
	}
	SarTctrl2 struct {
		Val c.Uint32T
	}
	SarI2cCtrl struct {
		Val c.Uint32T
	}
	SarTouchConf struct {
		Val c.Uint32T
	}
	TouchThresh [14]struct {
		Val c.Uint32T
	}
	Reserved98    c.Uint32T
	Reserved9c    c.Uint32T
	ReservedA0    c.Uint32T
	ReservedA4    c.Uint32T
	ReservedA8    c.Uint32T
	ReservedAc    c.Uint32T
	ReservedB0    c.Uint32T
	ReservedB4    c.Uint32T
	ReservedB8    c.Uint32T
	ReservedBc    c.Uint32T
	ReservedC0    c.Uint32T
	ReservedC4    c.Uint32T
	ReservedC8    c.Uint32T
	ReservedCc    c.Uint32T
	ReservedD0    c.Uint32T
	SarTouchChnSt struct {
		Val c.Uint32T
	}
	SarTouchStatus0 struct {
		Val c.Uint32T
	}
	SarTouchStatus [14]struct {
		Val c.Uint32T
	}
	SarTouchSlpStatus struct {
		Val c.Uint32T
	}
	SarTouchApprStatus struct {
		Val c.Uint32T
	}
	SarDacCtrl1 struct {
		Val c.Uint32T
	}
	SarDacCtrl2 struct {
		Val c.Uint32T
	}
	SarCocpuState struct {
		Val c.Uint32T
	}
	SarCocpuIntRaw struct {
		Val c.Uint32T
	}
	SarCocpuIntEna struct {
		Val c.Uint32T
	}
	SarCocpuIntSt struct {
		Val c.Uint32T
	}
	SarCocpuIntClr struct {
		Val c.Uint32T
	}
	SarCocpuDebug struct {
		Val c.Uint32T
	}
	SarHallCtrl struct {
		Val c.Uint32T
	}
	SarNouse     c.Uint32T
	SarIoMuxConf struct {
		Val c.Uint32T
	}
	Sardate struct {
		Val c.Uint32T
	}
}
type SensDevT SensDevS

type RtcCntlDevS struct {
	Options0 struct {
		Val c.Uint32T
	}
	SlpTimer0 c.Uint32T
	SlpTimer1 struct {
		Val c.Uint32T
	}
	TimeUpdate struct {
		Val c.Uint32T
	}
	TimeLow0  c.Uint32T
	TimeHigh0 struct {
		Val c.Uint32T
	}
	State0 struct {
		Val c.Uint32T
	}
	Timer1 struct {
		Val c.Uint32T
	}
	Timer2 struct {
		Val c.Uint32T
	}
	Timer3 struct {
		Val c.Uint32T
	}
	Timer4 struct {
		Val c.Uint32T
	}
	Timer5 struct {
		Val c.Uint32T
	}
	Timer6 struct {
		Val c.Uint32T
	}
	AnaConf struct {
		Val c.Uint32T
	}
	ResetState struct {
		Val c.Uint32T
	}
	WakeupState struct {
		Val c.Uint32T
	}
	IntEna struct {
		Val c.Uint32T
	}
	IntRaw struct {
		Val c.Uint32T
	}
	IntSt struct {
		Val c.Uint32T
	}
	IntClr struct {
		Val c.Uint32T
	}
	Store      [4]c.Uint32T
	ExtXtlConf struct {
		Val c.Uint32T
	}
	ExtWakeupConf struct {
		Val c.Uint32T
	}
	SlpRejectConf struct {
		Val c.Uint32T
	}
	CpuPeriodConf struct {
		Val c.Uint32T
	}
	SdioActConf struct {
		Val c.Uint32T
	}
	ClkConf struct {
		Val c.Uint32T
	}
	SlowClkConf struct {
		Val c.Uint32T
	}
	SdioConf struct {
		Val c.Uint32T
	}
	BiasConf struct {
		Val c.Uint32T
	}
	Rtc struct {
		Val c.Uint32T
	}
	RtcPwc struct {
		Val c.Uint32T
	}
	DigPwc struct {
		Val c.Uint32T
	}
	DigIso struct {
		Val c.Uint32T
	}
	WdtConfig0 struct {
		Val c.Uint32T
	}
	WdtConfig1 c.Uint32T
	WdtConfig2 c.Uint32T
	WdtConfig3 c.Uint32T
	WdtConfig4 c.Uint32T
	WdtFeed    struct {
		Val c.Uint32T
	}
	WdtWprotect c.Uint32T
	SwdConf     struct {
		Val c.Uint32T
	}
	SwdWprotect c.Uint32T
	SwCpuStall  struct {
		Val c.Uint32T
	}
	Store4     c.Uint32T
	Store5     c.Uint32T
	Store6     c.Uint32T
	Store7     c.Uint32T
	LowPowerSt struct {
		Val c.Uint32T
	}
	Diag0   c.Uint32T
	PadHold struct {
		Val c.Uint32T
	}
	DigPadHold c.Uint32T
	ExtWakeup1 struct {
		Val c.Uint32T
	}
	ExtWakeup1Status struct {
		Val c.Uint32T
	}
	BrownOut struct {
		Val c.Uint32T
	}
	TimeLow1  c.Uint32T
	TimeHigh1 struct {
		Val c.Uint32T
	}
	Xtal32kClkFactor c.Uint32T
	Xtal32kConf      struct {
		Val c.Uint32T
	}
	UlpCpTimer struct {
		Val c.Uint32T
	}
	UlpCpCtrl struct {
		Val c.Uint32T
	}
	CocpuCtrl struct {
		Val c.Uint32T
	}
	TouchCtrl1 struct {
		Val c.Uint32T
	}
	TouchCtrl2 struct {
		Val c.Uint32T
	}
	TouchScanCtrl struct {
		Val c.Uint32T
	}
	TouchSlpThres struct {
		Val c.Uint32T
	}
	TouchApproach struct {
		Val c.Uint32T
	}
	TouchFilterCtrl struct {
		Val c.Uint32T
	}
	UsbConf struct {
		Val c.Uint32T
	}
	TouchTimeoutCtrl struct {
		Val c.Uint32T
	}
	SlpRejectCause struct {
		Val c.Uint32T
	}
	Option1 struct {
		Val c.Uint32T
	}
	SlpWakeupCause struct {
		Val c.Uint32T
	}
	UlpCpTimer1 struct {
		Val c.Uint32T
	}
	Reserved134 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type RtcCntlDevT RtcCntlDevS

type RtcIoDevS struct {
	Out struct {
		Val c.Uint32T
	}
	OutW1ts struct {
		Val c.Uint32T
	}
	OutW1tc struct {
		Val c.Uint32T
	}
	Enable struct {
		Val c.Uint32T
	}
	EnableW1ts struct {
		Val c.Uint32T
	}
	EnableW1tc struct {
		Val c.Uint32T
	}
	Status struct {
		Val c.Uint32T
	}
	StatusW1ts struct {
		Val c.Uint32T
	}
	StatusW1tc struct {
		Val c.Uint32T
	}
	InVal struct {
		Val c.Uint32T
	}
	Pin [22]struct {
		Val c.Uint32T
	}
	DebugSel struct {
		Val c.Uint32T
	}
	TouchPad [15]struct {
		Val c.Uint32T
	}
	Xtal32pPad struct {
		Val c.Uint32T
	}
	Xtal32nPad struct {
		Val c.Uint32T
	}
	PadDac [2]struct {
		Val c.Uint32T
	}
	RtcPad19 struct {
		Val c.Uint32T
	}
	RtcPad20 struct {
		Val c.Uint32T
	}
	RtcPad21 struct {
		Val c.Uint32T
	}
	ExtWakeup0 struct {
		Val c.Uint32T
	}
	XtlExtCtr struct {
		Val c.Uint32T
	}
	SarI2cIo struct {
		Val c.Uint32T
	}
	TouchCtrl struct {
		Val c.Uint32T
	}
	ReservedEc  c.Uint32T
	ReservedF0  c.Uint32T
	ReservedF4  c.Uint32T
	ReservedF8  c.Uint32T
	ReservedFc  c.Uint32T
	Reserved100 c.Uint32T
	Reserved104 c.Uint32T
	Reserved108 c.Uint32T
	Reserved10c c.Uint32T
	Reserved110 c.Uint32T
	Reserved114 c.Uint32T
	Reserved118 c.Uint32T
	Reserved11c c.Uint32T
	Reserved120 c.Uint32T
	Reserved124 c.Uint32T
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	Reserved14c c.Uint32T
	Reserved150 c.Uint32T
	Reserved154 c.Uint32T
	Reserved158 c.Uint32T
	Reserved15c c.Uint32T
	Reserved160 c.Uint32T
	Reserved164 c.Uint32T
	Reserved168 c.Uint32T
	Reserved16c c.Uint32T
	Reserved170 c.Uint32T
	Reserved174 c.Uint32T
	Reserved178 c.Uint32T
	Reserved17c c.Uint32T
	Reserved180 c.Uint32T
	Reserved184 c.Uint32T
	Reserved188 c.Uint32T
	Reserved18c c.Uint32T
	Reserved190 c.Uint32T
	Reserved194 c.Uint32T
	Reserved198 c.Uint32T
	Reserved19c c.Uint32T
	Reserved1a0 c.Uint32T
	Reserved1a4 c.Uint32T
	Reserved1a8 c.Uint32T
	Reserved1ac c.Uint32T
	Reserved1b0 c.Uint32T
	Reserved1b4 c.Uint32T
	Reserved1b8 c.Uint32T
	Reserved1bc c.Uint32T
	Reserved1c0 c.Uint32T
	Reserved1c4 c.Uint32T
	Reserved1c8 c.Uint32T
	Reserved1cc c.Uint32T
	Reserved1d0 c.Uint32T
	Reserved1d4 c.Uint32T
	Reserved1d8 c.Uint32T
	Reserved1dc c.Uint32T
	Reserved1e0 c.Uint32T
	Reserved1e4 c.Uint32T
	Reserved1e8 c.Uint32T
	Reserved1ec c.Uint32T
	Reserved1f0 c.Uint32T
	Reserved1f4 c.Uint32T
	Reserved1f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type RtcIoDevT RtcIoDevS

type TouchHalVoltT struct {
	Refh  TouchHighVoltT
	Refl  TouchLowVoltT
	Atten TouchVoltAttenT
}

type TouchHalMeasModeT struct {
	Slope  TouchCntSlopeT
	TieOpt TouchTieOptT
}
type SocRootClkT c.Int

const (
	SOC_ROOT_CLK_INT_RC_FAST SocRootClkT = 0
	SOC_ROOT_CLK_INT_RC_SLOW SocRootClkT = 1
	SOC_ROOT_CLK_EXT_XTAL    SocRootClkT = 2
	SOC_ROOT_CLK_EXT_XTAL32K SocRootClkT = 3
)

type SocCpuClkSrcT c.Int

const (
	SOC_CPU_CLK_SRC_XTAL    SocCpuClkSrcT = 0
	SOC_CPU_CLK_SRC_PLL     SocCpuClkSrcT = 1
	SOC_CPU_CLK_SRC_RC_FAST SocCpuClkSrcT = 2
	SOC_CPU_CLK_SRC_APLL    SocCpuClkSrcT = 3
	SOC_CPU_CLK_SRC_INVALID SocCpuClkSrcT = 4
)

type SocRtcSlowClkSrcT c.Int

const (
	SOC_RTC_SLOW_CLK_SRC_RC_SLOW      SocRtcSlowClkSrcT = 0
	SOC_RTC_SLOW_CLK_SRC_XTAL32K      SocRtcSlowClkSrcT = 1
	SOC_RTC_SLOW_CLK_SRC_RC_FAST_D256 SocRtcSlowClkSrcT = 2
	SOC_RTC_SLOW_CLK_SRC_INVALID      SocRtcSlowClkSrcT = 3
)

type SocRtcFastClkSrcT c.Int

const (
	SOC_RTC_FAST_CLK_SRC_XTAL_D4  SocRtcFastClkSrcT = 0
	SOC_RTC_FAST_CLK_SRC_XTAL_DIV SocRtcFastClkSrcT = 0
	SOC_RTC_FAST_CLK_SRC_RC_FAST  SocRtcFastClkSrcT = 1
	SOC_RTC_FAST_CLK_SRC_INVALID  SocRtcFastClkSrcT = 2
)

type SocXtalFreqT c.Int

const SOC_XTAL_FREQ_40M SocXtalFreqT = 40

type SocModuleClkT c.Int

const (
	SOC_MOD_CLK_CPU          SocModuleClkT = 1
	SOC_MOD_CLK_RTC_FAST     SocModuleClkT = 2
	SOC_MOD_CLK_RTC_SLOW     SocModuleClkT = 3
	SOC_MOD_CLK_APB          SocModuleClkT = 4
	SOC_MOD_CLK_PLL_F160M    SocModuleClkT = 5
	SOC_MOD_CLK_XTAL32K      SocModuleClkT = 6
	SOC_MOD_CLK_RC_FAST      SocModuleClkT = 7
	SOC_MOD_CLK_RC_FAST_D256 SocModuleClkT = 8
	SOC_MOD_CLK_XTAL         SocModuleClkT = 9
	SOC_MOD_CLK_REF_TICK     SocModuleClkT = 10
	SOC_MOD_CLK_APLL         SocModuleClkT = 11
	SOC_MOD_CLK_TEMP_SENSOR  SocModuleClkT = 12
	SOC_MOD_CLK_INVALID      SocModuleClkT = 13
)

type SocPeriphSystimerClkSrcT c.Int

const (
	SYSTIMER_CLK_SRC_XTAL    SocPeriphSystimerClkSrcT = 9
	SYSTIMER_CLK_SRC_DEFAULT SocPeriphSystimerClkSrcT = 9
)

type SocPeriphGptimerClkSrcT c.Int

const (
	GPTIMER_CLK_SRC_APB     SocPeriphGptimerClkSrcT = 4
	GPTIMER_CLK_SRC_XTAL    SocPeriphGptimerClkSrcT = 9
	GPTIMER_CLK_SRC_DEFAULT SocPeriphGptimerClkSrcT = 4
)

type SocPeriphTgClkSrcLegacyT c.Int

const (
	TIMER_SRC_CLK_APB     SocPeriphTgClkSrcLegacyT = 4
	TIMER_SRC_CLK_XTAL    SocPeriphTgClkSrcLegacyT = 9
	TIMER_SRC_CLK_DEFAULT SocPeriphTgClkSrcLegacyT = 4
)

type SocPeriphLcdClkSrcT c.Int

const (
	LCD_CLK_SRC_PLL160M SocPeriphLcdClkSrcT = 5
	LCD_CLK_SRC_DEFAULT SocPeriphLcdClkSrcT = 5
)

type SocPeriphRmtClkSrcT c.Int

const (
	RMT_CLK_SRC_APB      SocPeriphRmtClkSrcT = 4
	RMT_CLK_SRC_REF_TICK SocPeriphRmtClkSrcT = 10
	RMT_CLK_SRC_DEFAULT  SocPeriphRmtClkSrcT = 4
)

type SocPeriphRmtClkSrcLegacyT c.Int

const (
	RMT_BASECLK_APB     SocPeriphRmtClkSrcLegacyT = 4
	RMT_BASECLK_REF     SocPeriphRmtClkSrcLegacyT = 10
	RMT_BASECLK_DEFAULT SocPeriphRmtClkSrcLegacyT = 4
)

type SocPeriphTemperatureSensorClkSrcT c.Int

const (
	TEMPERATURE_SENSOR_CLK_SRC_RC_FAST SocPeriphTemperatureSensorClkSrcT = 12
	TEMPERATURE_SENSOR_CLK_SRC_DEFAULT SocPeriphTemperatureSensorClkSrcT = 12
)

type SocPeriphUartClkSrcLegacyT c.Int

const (
	UART_SCLK_APB      SocPeriphUartClkSrcLegacyT = 4
	UART_SCLK_REF_TICK SocPeriphUartClkSrcLegacyT = 10
	UART_SCLK_DEFAULT  SocPeriphUartClkSrcLegacyT = 4
)

type SocPeriphI2sClkSrcT c.Int

const (
	I2S_CLK_SRC_DEFAULT  SocPeriphI2sClkSrcT = 5
	I2S_CLK_SRC_PLL_160M SocPeriphI2sClkSrcT = 5
	I2S_CLK_SRC_APLL     SocPeriphI2sClkSrcT = 11
)

type SocPeriphI2cClkSrcT c.Int

const (
	I2C_CLK_SRC_APB      SocPeriphI2cClkSrcT = 4
	I2C_CLK_SRC_REF_TICK SocPeriphI2cClkSrcT = 10
	I2C_CLK_SRC_DEFAULT  SocPeriphI2cClkSrcT = 4
)

type SocPeriphSpiClkSrcT c.Int

const (
	SPI_CLK_SRC_DEFAULT SocPeriphSpiClkSrcT = 4
	SPI_CLK_SRC_APB     SocPeriphSpiClkSrcT = 4
)

type SocPeriphSdmClkSrcT c.Int

const (
	SDM_CLK_SRC_APB     SocPeriphSdmClkSrcT = 4
	SDM_CLK_SRC_DEFAULT SocPeriphSdmClkSrcT = 4
)

type SocPeriphGlitchFilterClkSrcT c.Int

const (
	GLITCH_FILTER_CLK_SRC_APB     SocPeriphGlitchFilterClkSrcT = 4
	GLITCH_FILTER_CLK_SRC_DEFAULT SocPeriphGlitchFilterClkSrcT = 4
)

type SocPeriphDacDigiClkSrcT c.Int

const (
	DAC_DIGI_CLK_SRC_APB     SocPeriphDacDigiClkSrcT = 4
	DAC_DIGI_CLK_SRC_APLL    SocPeriphDacDigiClkSrcT = 11
	DAC_DIGI_CLK_SRC_DEFAULT SocPeriphDacDigiClkSrcT = 4
)

type SocPeriphDacCosineClkSrcT c.Int

const (
	DAC_COSINE_CLK_SRC_RTC_FAST SocPeriphDacCosineClkSrcT = 2
	DAC_COSINE_CLK_SRC_DEFAULT  SocPeriphDacCosineClkSrcT = 2
)

type SocPeriphTwaiClkSrcT c.Int

const (
	TWAI_CLK_SRC_APB     SocPeriphTwaiClkSrcT = 4
	TWAI_CLK_SRC_DEFAULT SocPeriphTwaiClkSrcT = 4
)

type SocPeriphAdcDigiClkSrcT c.Int

const (
	ADC_DIGI_CLK_SRC_APB     SocPeriphAdcDigiClkSrcT = 4
	ADC_DIGI_CLK_SRC_APLL    SocPeriphAdcDigiClkSrcT = 11
	ADC_DIGI_CLK_SRC_DEFAULT SocPeriphAdcDigiClkSrcT = 4
)

type SocPeriphAdcRtcClkSrcT c.Int

const (
	ADC_RTC_CLK_SRC_RC_FAST SocPeriphAdcRtcClkSrcT = 7
	ADC_RTC_CLK_SRC_DEFAULT SocPeriphAdcRtcClkSrcT = 7
)

type SocPeriphMwdtClkSrcT c.Int

const (
	MWDT_CLK_SRC_APB     SocPeriphMwdtClkSrcT = 4
	MWDT_CLK_SRC_DEFAULT SocPeriphMwdtClkSrcT = 4
)

type SocPeriphLedcClkSrcLegacyT c.Int

const (
	LEDC_AUTO_CLK        SocPeriphLedcClkSrcLegacyT = 0
	LEDC_USE_APB_CLK     SocPeriphLedcClkSrcLegacyT = 4
	LEDC_USE_RC_FAST_CLK SocPeriphLedcClkSrcLegacyT = 7
	LEDC_USE_REF_TICK    SocPeriphLedcClkSrcLegacyT = 10
	LEDC_USE_XTAL_CLK    SocPeriphLedcClkSrcLegacyT = 9
	LEDC_USE_RTC8M_CLK   SocPeriphLedcClkSrcLegacyT = 7
)

type SocClkoutSigIdT c.Int

const (
	CLKOUT_SIG_PLL      SocClkoutSigIdT = 1
	CLKOUT_SIG_RC_SLOW  SocClkoutSigIdT = 4
	CLKOUT_SIG_XTAL     SocClkoutSigIdT = 5
	CLKOUT_SIG_APLL     SocClkoutSigIdT = 6
	CLKOUT_SIG_REF_TICK SocClkoutSigIdT = 12
	CLKOUT_SIG_PLL_F80M SocClkoutSigIdT = 13
	CLKOUT_SIG_RC_FAST  SocClkoutSigIdT = 14
	CLKOUT_SIG_INVALID  SocClkoutSigIdT = 255
)

/** Interrupt Registers */
/** Type of dma_int_raw register
 *  Raw interrupt status
 */

type CpDmaIntRawRegT struct {
	Val c.Uint32T
}

/** Type of dma_int_st register
 *  Masked interrupt status
 */

type CpDmaIntStRegT struct {
	Val c.Uint32T
}

/** Type of dma_int_ena register
 *  Interrupt enable bits
 */

type CpDmaIntEnaRegT struct {
	Val c.Uint32T
}

/** Type of dma_int_clr register
 *  Interrupt clear bits
 */

type CpDmaIntClrRegT struct {
	Val c.Uint32T
}

/** Configuration Registers */
/** Type of dma_out_link register
 *  Link descriptor address and control
 */

type CpDmaOutLinkRegT struct {
	Val c.Uint32T
}

/** Type of dma_in_link register
 *  Link descriptor address and control
 */

type CpDmaInLinkRegT struct {
	Val c.Uint32T
}

/** Type of dma_conf register
 *  Copy DMA configuration register
 */

type CpDmaConfRegT struct {
	Val c.Uint32T
}

/** Status Registers */
/** Type of dma_out_eof_des_addr register
 *  Outlink descriptor address when EOF occurs
 */

type CpDmaOutEofDesAddrRegT struct {
	Val c.Uint32T
}

/** Type of dma_in_eof_des_addr register
 *  Inlink descriptor address when EOF occurs
 */

type CpDmaInEofDesAddrRegT struct {
	Val c.Uint32T
}

/** Type of dma_out_eof_bfr_des_addr register
 *  Outlink descriptor address before the last outlink descriptor
 */

type CpDmaOutEofBfrDesAddrRegT struct {
	Val c.Uint32T
}

/** Type of dma_inlink_dscr register
 *  Address of current inlink descriptor
 */

type CpDmaInlinkDscrRegT struct {
	Val c.Uint32T
}

/** Type of dma_inlink_dscr_bf0 register
 *  Address of last inlink descriptor
 */

type CpDmaInlinkDscrBf0RegT struct {
	Val c.Uint32T
}

/** Type of dma_inlink_dscr_bf1 register
 *  Address of the second-to-last inlink descriptor
 */

type CpDmaInlinkDscrBf1RegT struct {
	Val c.Uint32T
}

/** Type of dma_outlink_dscr register
 *  Address of current outlink descriptor
 */

type CpDmaOutlinkDscrRegT struct {
	Val c.Uint32T
}

/** Type of dma_outlink_dscr_bf0 register
 *  Address of last outlink descriptor
 */

type CpDmaOutlinkDscrBf0RegT struct {
	Val c.Uint32T
}

/** Type of dma_outlink_dscr_bf1 register
 *  Address of the second-to-last outlink descriptor
 */

type CpDmaOutlinkDscrBf1RegT struct {
	Val c.Uint32T
}

/** Type of dma_in_st register
 *  Status register of receiving data
 */

type CpDmaInStRegT struct {
	Val c.Uint32T
}

/** Type of dma_out_st register
 *  Status register of transmitting data
 */

type CpDmaOutStRegT struct {
	Val c.Uint32T
}

/** Type of dma_crc_out register
 *  CRC result register
 */

type CpDmaCrcOutRegT struct {
	Val c.Uint32T
}

/** Type of dma_date register
 *  Copy DMA version register
 */

type CpDmaDateRegT struct {
	Val c.Uint32T
}

type CpDmaDevT struct {
	DmaIntRaw           CpDmaIntRawRegT
	DmaIntSt            CpDmaIntStRegT
	DmaIntEna           CpDmaIntEnaRegT
	DmaIntClr           CpDmaIntClrRegT
	DmaOutLink          CpDmaOutLinkRegT
	DmaInLink           CpDmaInLinkRegT
	DmaOutEofDesAddr    CpDmaOutEofDesAddrRegT
	DmaInEofDesAddr     CpDmaInEofDesAddrRegT
	DmaOutEofBfrDesAddr CpDmaOutEofBfrDesAddrRegT
	DmaInlinkDscr       CpDmaInlinkDscrRegT
	DmaInlinkDscrBf0    CpDmaInlinkDscrBf0RegT
	DmaInlinkDscrBf1    CpDmaInlinkDscrBf1RegT
	DmaOutlinkDscr      CpDmaOutlinkDscrRegT
	DmaOutlinkDscrBf0   CpDmaOutlinkDscrBf0RegT
	DmaOutlinkDscrBf1   CpDmaOutlinkDscrBf1RegT
	DmaConf             CpDmaConfRegT
	DmaInSt             CpDmaInStRegT
	DmaOutSt            CpDmaOutStRegT
	DmaCrcOut           CpDmaCrcOutRegT
	Reserved04c         c.Uint32T
	Reserved050         c.Uint32T
	Reserved054         c.Uint32T
	Reserved058         c.Uint32T
	Reserved05c         c.Uint32T
	Reserved060         c.Uint32T
	Reserved064         c.Uint32T
	Reserved068         c.Uint32T
	Reserved06c         c.Uint32T
	Reserved070         c.Uint32T
	Reserved074         c.Uint32T
	Reserved078         c.Uint32T
	Reserved07c         c.Uint32T
	Reserved080         c.Uint32T
	Reserved084         c.Uint32T
	Reserved088         c.Uint32T
	Reserved08c         c.Uint32T
	Reserved090         c.Uint32T
	Reserved094         c.Uint32T
	Reserved098         c.Uint32T
	Reserved09c         c.Uint32T
	Reserved0a0         c.Uint32T
	Reserved0a4         c.Uint32T
	Reserved0a8         c.Uint32T
	Reserved0ac         c.Uint32T
	Reserved0b0         c.Uint32T
	Reserved0b4         c.Uint32T
	Reserved0b8         c.Uint32T
	Reserved0bc         c.Uint32T
	Reserved0c0         c.Uint32T
	Reserved0c4         c.Uint32T
	Reserved0c8         c.Uint32T
	Reserved0cc         c.Uint32T
	Reserved0d0         c.Uint32T
	Reserved0d4         c.Uint32T
	Reserved0d8         c.Uint32T
	Reserved0dc         c.Uint32T
	Reserved0e0         c.Uint32T
	Reserved0e4         c.Uint32T
	Reserved0e8         c.Uint32T
	Reserved0ec         c.Uint32T
	Reserved0f0         c.Uint32T
	Reserved0f4         c.Uint32T
	Reserved0f8         c.Uint32T
	DmaDate             CpDmaDateRegT
}
type GpioNumT c.Int

const (
	GPIO_NUM_NC  GpioNumT = -1
	GPIO_NUM_0   GpioNumT = 0
	GPIO_NUM_1   GpioNumT = 1
	GPIO_NUM_2   GpioNumT = 2
	GPIO_NUM_3   GpioNumT = 3
	GPIO_NUM_4   GpioNumT = 4
	GPIO_NUM_5   GpioNumT = 5
	GPIO_NUM_6   GpioNumT = 6
	GPIO_NUM_7   GpioNumT = 7
	GPIO_NUM_8   GpioNumT = 8
	GPIO_NUM_9   GpioNumT = 9
	GPIO_NUM_10  GpioNumT = 10
	GPIO_NUM_11  GpioNumT = 11
	GPIO_NUM_12  GpioNumT = 12
	GPIO_NUM_13  GpioNumT = 13
	GPIO_NUM_14  GpioNumT = 14
	GPIO_NUM_15  GpioNumT = 15
	GPIO_NUM_16  GpioNumT = 16
	GPIO_NUM_17  GpioNumT = 17
	GPIO_NUM_18  GpioNumT = 18
	GPIO_NUM_19  GpioNumT = 19
	GPIO_NUM_20  GpioNumT = 20
	GPIO_NUM_21  GpioNumT = 21
	GPIO_NUM_26  GpioNumT = 26
	GPIO_NUM_27  GpioNumT = 27
	GPIO_NUM_28  GpioNumT = 28
	GPIO_NUM_29  GpioNumT = 29
	GPIO_NUM_30  GpioNumT = 30
	GPIO_NUM_31  GpioNumT = 31
	GPIO_NUM_32  GpioNumT = 32
	GPIO_NUM_33  GpioNumT = 33
	GPIO_NUM_34  GpioNumT = 34
	GPIO_NUM_35  GpioNumT = 35
	GPIO_NUM_36  GpioNumT = 36
	GPIO_NUM_37  GpioNumT = 37
	GPIO_NUM_38  GpioNumT = 38
	GPIO_NUM_39  GpioNumT = 39
	GPIO_NUM_40  GpioNumT = 40
	GPIO_NUM_41  GpioNumT = 41
	GPIO_NUM_42  GpioNumT = 42
	GPIO_NUM_43  GpioNumT = 43
	GPIO_NUM_44  GpioNumT = 44
	GPIO_NUM_45  GpioNumT = 45
	GPIO_NUM_46  GpioNumT = 46
	GPIO_NUM_MAX GpioNumT = 47
)

type X__gnucVaList c.Pointer
type FposT X_fposT
type OffT X__offT
type EspErrT c.Int

/* ---------------------------- Register Types ------------------------------ */

type UsbDwcGotgctlRegT struct {
	Val c.Uint32T
}

type UsbDwcGotgintRegT struct {
	Val c.Uint32T
}

type UsbDwcGahbcfgRegT struct {
	Val c.Uint32T
}

type UsbDwcGusbcfgRegT struct {
	Val c.Uint32T
}

type UsbDwcGrstctlRegT struct {
	Val c.Uint32T
}

type UsbDwcGintstsRegT struct {
	Val c.Uint32T
}

type UsbDwcGintmskRegT struct {
	Val c.Uint32T
}

type UsbDwcGrxstsrRegT struct {
	Val c.Uint32T
}

type UsbDwcGrxstspRegT struct {
	Val c.Uint32T
}

type UsbDwcGrxfsizRegT struct {
	Val c.Uint32T
}

type UsbDwcGnptxfsizRegT struct {
	Val c.Uint32T
}

type UsbDwcGnptxstsRegT struct {
	Val c.Uint32T
}

type UsbDwcGsnpsidRegT struct {
	Val c.Uint32T
}

type UsbDwcGhwcfg1RegT struct {
	Val c.Uint32T
}

type UsbDwcGhwcfg2RegT struct {
	Val c.Uint32T
}

type UsbDwcGhwcfg3RegT struct {
	Val c.Uint32T
}

type UsbDwcGhwcfg4RegT struct {
	Val c.Uint32T
}

type UsbDwcGdfifocfgRegT struct {
	Val c.Uint32T
}

type UsbDwcHptxfsizRegT struct {
	Val c.Uint32T
}

type UsbDwcDieptxfiRegT struct {
	Val c.Uint32T
}

type UsbDwcHcfgRegT struct {
	Val c.Uint32T
}

type UsbDwcHfirRegT struct {
	Val c.Uint32T
}

type UsbDwcHfnumRegT struct {
	Val c.Uint32T
}

type UsbDwcHptxstsRegT struct {
	Val c.Uint32T
}

type UsbDwcHaintRegT struct {
	Val c.Uint32T
}

type UsbDwcHaintmskRegT struct {
	Val c.Uint32T
}

type UsbDwcHflbaddrRegT struct {
	Val c.Uint32T
}

type UsbDwcHprtRegT struct {
	Val c.Uint32T
}

type UsbDwcHccharRegT struct {
	Val c.Uint32T
}

type UsbDwcHcintRegT struct {
	Val c.Uint32T
}

type UsbDwcHcintmskRegT struct {
	Val c.Uint32T
}

type UsbDwcHctsizRegT struct {
	Val c.Uint32T
}

type UsbDwcHcdmaRegT struct {
	Val c.Uint32T
}

type UsbDwcHcdmabRegT struct {
	Val c.Uint32T
}

type UsbDwcDcfgRegT struct {
	Val c.Uint32T
}

type UsbDwcDctlRegT struct {
	Val c.Uint32T
}

type UsbDwcDstsRegT struct {
	Val c.Uint32T
}

type UsbDwcDiepmskRegT struct {
	Val c.Uint32T
}

type UsbDwcDoepmskRegT struct {
	Val c.Uint32T
}

type UsbDwcDaintRegT struct {
	Val c.Uint32T
}

type UsbDwcDaintmskRegT struct {
	Val c.Uint32T
}

type UsbDwcDvbusdisRegT struct {
	Val c.Uint32T
}

type UsbDwcDvbuspulseRegT struct {
	Val c.Uint32T
}

type UsbDwcDthrctlRegT struct {
	Val c.Uint32T
}

type UsbDwcDiepempmskRegT struct {
	Val c.Uint32T
}

type UsbDwcDiepctl0RegT struct {
	Val c.Uint32T
}

type UsbDwcDiepint0RegT struct {
	Val c.Uint32T
}

type UsbDwcDieptsiz0RegT struct {
	Val c.Uint32T
}

type UsbDwcDiepdma0RegT struct {
	Val c.Uint32T
}

type UsbDwcDtxfsts0RegT struct {
	Val c.Uint32T
}

type UsbDwcDiepdmab0RegT struct {
	Val c.Uint32T
}

type UsbDwcDiepctlRegT struct {
	Val c.Uint32T
}

type UsbDwcDiepintRegT struct {
	Val c.Uint32T
}

type UsbDwcDieptsizRegT struct {
	Val c.Uint32T
}

type UsbDwcDiepdmaRegT struct {
	Val c.Uint32T
}

type UsbDwcDtxfstsRegT struct {
	Val c.Uint32T
}

type UsbDwcDiepdmabRegT struct {
	Val c.Uint32T
}

type UsbDwcDoepctl0RegT struct {
	Val c.Uint32T
}

type UsbDwcDoepint0RegT struct {
	Val c.Uint32T
}

type UsbDwcDoeptsiz0RegT struct {
	Val c.Uint32T
}

type UsbDwcDoepdma0RegT struct {
	Val c.Uint32T
}

type UsbDwcDoepdmab0RegT struct {
	Val c.Uint32T
}

type UsbDwcDoepctlRegT struct {
	Val c.Uint32T
}

type UsbDwcDoepintRegT struct {
	Val c.Uint32T
}

type UsbDwcDoeptsizRegT struct {
	Val c.Uint32T
}

type UsbDwcDoepdmaRegT struct {
	Val c.Uint32T
}

type UsbDwcDoepdmabRegT struct {
	Val c.Uint32T
}

type UsbDwcPcgcctlRegT struct {
	Val c.Uint32T
}

/* --------------------------- Register Groups ------------------------------ */

type UsbDwcHostChanRegsT struct {
	HccharReg    UsbDwcHccharRegT
	Reserved0x04 [1]c.Uint32T
	HcintReg     UsbDwcHcintRegT
	HcintmskReg  UsbDwcHcintmskRegT
	HctsizReg    UsbDwcHctsizRegT
	HcdmaReg     UsbDwcHcdmaRegT
	Reserved0x18 [1]c.Uint32T
	HcdmabReg    UsbDwcHcdmabRegT
}

type UsbDwcInEpRegsT struct {
	DiepctlReg   UsbDwcDiepctlRegT
	Reserved0x04 [1]c.Uint32T
	DiepintReg   UsbDwcDiepintRegT
	Reserved0x0c [1]c.Uint32T
	DieptsizReg  UsbDwcDieptsizRegT
	DiepdmaReg   UsbDwcDiepdmaRegT
	DtxfstsReg   UsbDwcDtxfstsRegT
	DiepdmabReg  UsbDwcDiepdmabRegT
}

type UsbDwcOutEpRegsT struct {
	DoepctlReg   UsbDwcDoepctlRegT
	Reserved0x04 [1]c.Uint32T
	DoepintReg   UsbDwcDoepintRegT
	Reserved0x0c [1]c.Uint32T
	DoeptsizReg  UsbDwcDoeptsizRegT
	DoepdmaReg   UsbDwcDoepdmaRegT
	Reserved0x18 [1]c.Uint32T
	DoepdmabReg  UsbDwcDoepdmabRegT
}

/* --------------------------- Register Layout ------------------------------ */

type UsbDwcDevT struct {
	GotgctlReg           UsbDwcGotgctlRegT
	GotgintReg           UsbDwcGotgintRegT
	GahbcfgReg           UsbDwcGahbcfgRegT
	GusbcfgReg           UsbDwcGusbcfgRegT
	GrstctlReg           UsbDwcGrstctlRegT
	GintstsReg           UsbDwcGintstsRegT
	GintmskReg           UsbDwcGintmskRegT
	GrxstsrReg           UsbDwcGrxstsrRegT
	GrxstspReg           UsbDwcGrxstspRegT
	GrxfsizReg           UsbDwcGrxfsizRegT
	GnptxfsizReg         UsbDwcGnptxfsizRegT
	GnptxstsReg          UsbDwcGnptxstsRegT
	Reserved0x0030       c.Uint32T
	Reserved0x0034       c.Uint32T
	Reserved0x0038       c.Uint32T
	Reserved0x003c       c.Uint32T
	GsnpsidReg           UsbDwcGsnpsidRegT
	Ghwcfg1Reg           UsbDwcGhwcfg1RegT
	Ghwcfg2Reg           UsbDwcGhwcfg2RegT
	Ghwcfg3Reg           UsbDwcGhwcfg3RegT
	Ghwcfg4Reg           UsbDwcGhwcfg4RegT
	Reserved0x0054       c.Uint32T
	Reserved0x0058       c.Uint32T
	GdfifocfgReg         UsbDwcGdfifocfgRegT
	Reserved0x0060       c.Uint32T
	Reserved0x00640x0100 [39]c.Uint32T
	HptxfsizReg          UsbDwcHptxfsizRegT
	DieptxfRegs          [4]UsbDwcDieptxfiRegT
	Reserved0x01140x013c [11]UsbDwcDieptxfiRegT
	Reserved0x1400x3fc   [176]c.Uint32T
	HcfgReg              UsbDwcHcfgRegT
	HfirReg              UsbDwcHfirRegT
	HfnumReg             UsbDwcHfnumRegT
	Reserved0x40c        [1]c.Uint32T
	HptxstsReg           UsbDwcHptxstsRegT
	HaintReg             UsbDwcHaintRegT
	HaintmskReg          UsbDwcHaintmskRegT
	HflbaddrReg          UsbDwcHflbaddrRegT
	Reserved0x4200x43c   [8]c.Uint32T
	HprtReg              UsbDwcHprtRegT
	Reserved0x04440x04fc [47]c.Uint32T
	HostChans            [8]UsbDwcHostChanRegsT
	Reserved0x06000x06fc [8]UsbDwcHostChanRegsT
	Reserved0x07000x07fc [64]c.Uint32T
	DcfgReg              UsbDwcDcfgRegT
	DctlReg              UsbDwcDctlRegT
	DstsReg              UsbDwcDstsRegT
	Reserved0x080c       [1]c.Uint32T
	DiepmskReg           UsbDwcDiepmskRegT
	DoepmskReg           UsbDwcDoepmskRegT
	DaintReg             UsbDwcDaintRegT
	DaintmskReg          UsbDwcDaintmskRegT
	Reserved0x0820       c.Uint32T
	Reserved0x0824       c.Uint32T
	DvbusdisReg          UsbDwcDvbusdisRegT
	DvbuspulseReg        UsbDwcDvbuspulseRegT
	DthrctlReg           UsbDwcDthrctlRegT
	DiepempmskReg        UsbDwcDiepempmskRegT
	Reserved0x0838       c.Uint32T
	Reserved0x083c       c.Uint32T
	Reserved0x0840       c.Uint32T
	Reserved0x08440x087c [15]c.Uint32T
	Reserved0x0880       c.Uint32T
	Reserved0x08840x08c0 [15]c.Uint32T
	Reserved0x08c40x08fc [16]c.Uint32T
	Diepctl0Reg          UsbDwcDiepctl0RegT
	Reserved0x0904       [1]c.Uint32T
	Diepint0Reg          UsbDwcDiepint0RegT
	Reserved0x090c       [1]c.Uint32T
	Dieptsiz0Reg         UsbDwcDieptsiz0RegT
	Diepdma0Reg          UsbDwcDiepdma0RegT
	Dtxfsts0Reg          UsbDwcDtxfsts0RegT
	Diepdmab0Reg         UsbDwcDiepdmab0RegT
	InEps                [6]UsbDwcInEpRegsT
	Reserved0x09e00x0afc [9]UsbDwcInEpRegsT
	Doepctl0Reg          UsbDwcDoepctl0RegT
	Reserved0x0b04       [1]c.Uint32T
	Doepint0Reg          UsbDwcDoepint0RegT
	Reserved0x0b0c       [1]c.Uint32T
	Doeptsiz0Reg         UsbDwcDoeptsiz0RegT
	Doepdma0Reg          UsbDwcDoepdma0RegT
	Reserved0x0b18       [1]c.Uint32T
	Doepdmab0Reg         UsbDwcDoepdmab0RegT
	OutEps               [6]UsbDwcOutEpRegsT
	Reserved0x0be00x0d00 [9]UsbDwcOutEpRegsT
	Reserved0x0d000x0dfc [64]c.Uint32T
	PcgcctlReg           UsbDwcPcgcctlRegT
	Reserved0x0e04       [1]c.Uint32T
}
type ETSSTATUS c.Int

const (
	ETS_OK      ETSSTATUS = 0
	ETS_FAILED  ETSSTATUS = 1
	ETS_PENDING ETSSTATUS = 2
	ETS_BUSY    ETSSTATUS = 3
	ETS_CANCEL  ETSSTATUS = 4
)

type EtsStatusT ETSSTATUS
type ETSSignal c.Uint32T
type ETSParam c.Uint32T

type ETSEventTag struct {
	Unused [8]uint8
}
type ETSEvent ETSEventTag

// llgo:type C
type ETSTask func(*ETSEvent)

// llgo:type C
type EtsIdleCbT func(c.Pointer)

// llgo:type C
type ETSTimerFunc func(c.Pointer)

type X_ETSTIMER_ struct {
	TimerNext   *X_ETSTIMER_
	TimerExpire c.Uint32T
	TimerPeriod c.Uint32T
	TimerFunc   *ETSTimerFunc
	TimerArg    c.Pointer
}
type ETSTimer X_ETSTIMER_

// llgo:type C
type EtsIsrT func(c.Pointer)
type SHATYPE c.Int

const (
	SHA1         SHATYPE = 0
	SHA2_224     SHATYPE = 1
	SHA2_256     SHATYPE = 2
	SHA2_384     SHATYPE = 3
	SHA2_512     SHATYPE = 4
	SHA2_512224  SHATYPE = 5
	SHA2_512256  SHATYPE = 6
	SHA2_512T    SHATYPE = 7
	SHA_TYPE_MAX SHATYPE = 8
)

type SHAContext struct {
	Start      bool
	InHardware bool
	Type       SHATYPE
	State      [16]c.Uint32T
	Buffer     [128]c.Char
	TotalBits  [4]c.Uint32T
}
type SHACTX SHAContext

type ImaxdivT struct {
	Quot c.IntmaxT
	Rem  c.IntmaxT
}
type SocResetReasonT c.Int

const (
	RESET_REASON_CHIP_POWER_ON   SocResetReasonT = 1
	RESET_REASON_CHIP_BROWN_OUT  SocResetReasonT = 1
	RESET_REASON_CHIP_SUPER_WDT  SocResetReasonT = 1
	RESET_REASON_CORE_SW         SocResetReasonT = 3
	RESET_REASON_CORE_DEEP_SLEEP SocResetReasonT = 5
	RESET_REASON_CORE_MWDT0      SocResetReasonT = 7
	RESET_REASON_CORE_MWDT1      SocResetReasonT = 8
	RESET_REASON_CORE_RTC_WDT    SocResetReasonT = 9
	RESET_REASON_CPU0_MWDT0      SocResetReasonT = 11
	RESET_REASON_CPU0_SW         SocResetReasonT = 12
	RESET_REASON_CPU0_RTC_WDT    SocResetReasonT = 13
	RESET_REASON_SYS_BROWN_OUT   SocResetReasonT = 15
	RESET_REASON_SYS_RTC_WDT     SocResetReasonT = 16
	RESET_REASON_CPU0_MWDT1      SocResetReasonT = 17
	RESET_REASON_SYS_SUPER_WDT   SocResetReasonT = 18
	RESET_REASON_SYS_CLK_GLITCH  SocResetReasonT = 19
	RESET_REASON_CORE_EFUSE_CRC  SocResetReasonT = 20
)

type EspLogLevelT c.Int

const (
	ESP_LOG_NONE    EspLogLevelT = 0
	ESP_LOG_ERROR   EspLogLevelT = 1
	ESP_LOG_WARN    EspLogLevelT = 2
	ESP_LOG_INFO    EspLogLevelT = 3
	ESP_LOG_DEBUG   EspLogLevelT = 4
	ESP_LOG_VERBOSE EspLogLevelT = 5
	ESP_LOG_MAX     EspLogLevelT = 6
)

// llgo:type C
type VprintfLikeT func(*c.Char, c.VaList) c.Int

/** Configuration registers */
/** Type of gpio_out_drt register
 *  Dedicated GPIO Directive Output register
 */

type DedicGpioOutDrtRegT struct {
	Val c.Uint32T
}

/** Type of gpio_out_msk register
 *  Dedicated GPIO Mask Output register
 */

type DedicGpioOutMskRegT struct {
	Val c.Uint32T
}

/** Type of gpio_out_idv register
 *  Dedicated GPIO Individual Output register
 */

type DedicGpioOutIdvRegT struct {
	Val c.Uint32T
}

/** Type of gpio_out_cpu register
 *  Dedicated GPIO Output Mode Select register
 */

type DedicGpioOutCpuRegT struct {
	Val c.Uint32T
}

/** Type of gpio_in_dly register
 *  Dedicated GPIO Input Delay Configuration register
 */

type DedicGpioInDlyRegT struct {
	Val c.Uint32T
}

/** Type of gpio_intr_rcgn register
 *  Dedicated GPIO Interrupts Generate Mode register
 */

type DedicGpioIntrRcgnRegT struct {
	Val c.Uint32T
}

/** Status registers */
/** Type of gpio_out_scan register
 *  Dedicated GPIO Output Status register
 */

type DedicGpioOutScanRegT struct {
	Val c.Uint32T
}

/** Type of gpio_in_scan register
 *  Dedicated GPIO Input Status register
 */

type DedicGpioInScanRegT struct {
	Val c.Uint32T
}

/** Interrupt registers */
/** Type of gpio_intr_raw register
 *  Raw interrupt status
 */

type DedicGpioIntrRawRegT struct {
	Val c.Uint32T
}

/** Type of gpio_intr_rls register
 *  Interrupt enable bits
 */

type DedicGpioIntrRlsRegT struct {
	Val c.Uint32T
}

/** Type of gpio_intr_st register
 *  Masked interrupt status
 */

type DedicGpioIntrStRegT struct {
	Val c.Uint32T
}

/** Type of gpio_intr_clr register
 *  Interrupt clear bits
 */

type DedicGpioIntrClrRegT struct {
	Val c.Uint32T
}

type DedicDevT struct {
	GpioOutDrt   DedicGpioOutDrtRegT
	GpioOutMsk   DedicGpioOutMskRegT
	GpioOutIdv   DedicGpioOutIdvRegT
	GpioOutScan  DedicGpioOutScanRegT
	GpioOutCpu   DedicGpioOutCpuRegT
	GpioInDly    DedicGpioInDlyRegT
	GpioInScan   DedicGpioInScanRegT
	GpioIntrRcgn DedicGpioIntrRcgnRegT
	GpioIntrRaw  DedicGpioIntrRawRegT
	GpioIntrRls  DedicGpioIntrRlsRegT
	GpioIntrSt   DedicGpioIntrStRegT
	GpioIntrClr  DedicGpioIntrClrRegT
}

/** SYSTEM TIMER REGISTER */
/** Type of conf register
 *  Configure system timer clock
 */

type SystimerConfRegT struct {
	Val c.Uint32T
}

/** Type of load register
 *  load value to system timer
 */

type SystimerLoadRegT struct {
	Val c.Uint32T
}

/** Type of load_hi register
 *  High 32-bit load to system timer
 */

type SystimerLoadHiRegT struct {
	Val c.Uint32T
}

/** Type of load_lo register
 *  Low 32-bit load to system timer
 */

type SystimerLoadLoRegT struct {
	Val c.Uint32T
}

/** Type of step register
 *  system timer accumulation step
 */

type SystimerStepRegT struct {
	Val c.Uint32T
}

/** Type of target_val register
 *  System timer target value
 */

type SystimerTargetValRegT struct {
	Hi struct {
		Val c.Uint32T
	}
	Lo struct {
		Val c.Uint32T
	}
}

/** Type of target_conf register
 *  Configure system timer target work mode
 */

type SystimerTargetConfRegT struct {
	Val c.Uint32T
}

/** Type of update register
 *  Read out system timer value
 */

type SystimerUpdateRegT struct {
	Val c.Uint32T
}

/** Type of value_hi register
 *  system timer high 32-bit
 */

type SystimerValueHiRegT struct {
	Val c.Uint32T
}

/** Type of value_lo register
 *  system timer low 32-bit
 */

type SystimerValueLoRegT struct {
	Val c.Uint32T
}

/** Type of int_ena register
 *  system timer interrupt enable
 */

type SystimerIntEnaRegT struct {
	Val c.Uint32T
}

/** Type of int_raw register
 *  system timer interrupt raw
 */

type SystimerIntRawRegT struct {
	Val c.Uint32T
}

/** Type of int_clr register
 *  system timer interrupt clear
 */

type SystimerIntClrRegT struct {
	Val c.Uint32T
}

/** DATE */
/** Type of date register
 *  system timer register version
 */

type SystimerDateRegT struct {
	Val c.Uint32T
}

/** Control/Status registers */
/** Type of otg_conf register
 *  PAD/DFIFO/PHY configuration register.
 */

type UsbWrapOtgConfRegT struct {
	Val c.Uint32T
}

/** Type of test_conf register
 *  TEST relative configuration registers.
 */

type UsbWrapTestConfRegT struct {
	Val c.Uint32T
}

/** Status registers */
/** Type of date register
 *  Version register.
 */

type UsbWrapDateRegT struct {
	Val c.Uint32T
}

type UsbWrapDevT struct {
	OtgConf     UsbWrapOtgConfRegT
	TestConf    UsbWrapTestConfRegT
	Reserved008 c.Uint32T
	Reserved00c c.Uint32T
	Reserved010 c.Uint32T
	Reserved014 c.Uint32T
	Reserved018 c.Uint32T
	Reserved01c c.Uint32T
	Reserved020 c.Uint32T
	Reserved024 c.Uint32T
	Reserved028 c.Uint32T
	Reserved02c c.Uint32T
	Reserved030 c.Uint32T
	Reserved034 c.Uint32T
	Reserved038 c.Uint32T
	Reserved03c c.Uint32T
	Reserved040 c.Uint32T
	Reserved044 c.Uint32T
	Reserved048 c.Uint32T
	Reserved04c c.Uint32T
	Reserved050 c.Uint32T
	Reserved054 c.Uint32T
	Reserved058 c.Uint32T
	Reserved05c c.Uint32T
	Reserved060 c.Uint32T
	Reserved064 c.Uint32T
	Reserved068 c.Uint32T
	Reserved06c c.Uint32T
	Reserved070 c.Uint32T
	Reserved074 c.Uint32T
	Reserved078 c.Uint32T
	Reserved07c c.Uint32T
	Reserved080 c.Uint32T
	Reserved084 c.Uint32T
	Reserved088 c.Uint32T
	Reserved08c c.Uint32T
	Reserved090 c.Uint32T
	Reserved094 c.Uint32T
	Reserved098 c.Uint32T
	Reserved09c c.Uint32T
	Reserved0a0 c.Uint32T
	Reserved0a4 c.Uint32T
	Reserved0a8 c.Uint32T
	Reserved0ac c.Uint32T
	Reserved0b0 c.Uint32T
	Reserved0b4 c.Uint32T
	Reserved0b8 c.Uint32T
	Reserved0bc c.Uint32T
	Reserved0c0 c.Uint32T
	Reserved0c4 c.Uint32T
	Reserved0c8 c.Uint32T
	Reserved0cc c.Uint32T
	Reserved0d0 c.Uint32T
	Reserved0d4 c.Uint32T
	Reserved0d8 c.Uint32T
	Reserved0dc c.Uint32T
	Reserved0e0 c.Uint32T
	Reserved0e4 c.Uint32T
	Reserved0e8 c.Uint32T
	Reserved0ec c.Uint32T
	Reserved0f0 c.Uint32T
	Reserved0f4 c.Uint32T
	Reserved0f8 c.Uint32T
	Reserved0fc c.Uint32T
	Reserved100 c.Uint32T
	Reserved104 c.Uint32T
	Reserved108 c.Uint32T
	Reserved10c c.Uint32T
	Reserved110 c.Uint32T
	Reserved114 c.Uint32T
	Reserved118 c.Uint32T
	Reserved11c c.Uint32T
	Reserved120 c.Uint32T
	Reserved124 c.Uint32T
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	Reserved14c c.Uint32T
	Reserved150 c.Uint32T
	Reserved154 c.Uint32T
	Reserved158 c.Uint32T
	Reserved15c c.Uint32T
	Reserved160 c.Uint32T
	Reserved164 c.Uint32T
	Reserved168 c.Uint32T
	Reserved16c c.Uint32T
	Reserved170 c.Uint32T
	Reserved174 c.Uint32T
	Reserved178 c.Uint32T
	Reserved17c c.Uint32T
	Reserved180 c.Uint32T
	Reserved184 c.Uint32T
	Reserved188 c.Uint32T
	Reserved18c c.Uint32T
	Reserved190 c.Uint32T
	Reserved194 c.Uint32T
	Reserved198 c.Uint32T
	Reserved19c c.Uint32T
	Reserved1a0 c.Uint32T
	Reserved1a4 c.Uint32T
	Reserved1a8 c.Uint32T
	Reserved1ac c.Uint32T
	Reserved1b0 c.Uint32T
	Reserved1b4 c.Uint32T
	Reserved1b8 c.Uint32T
	Reserved1bc c.Uint32T
	Reserved1c0 c.Uint32T
	Reserved1c4 c.Uint32T
	Reserved1c8 c.Uint32T
	Reserved1cc c.Uint32T
	Reserved1d0 c.Uint32T
	Reserved1d4 c.Uint32T
	Reserved1d8 c.Uint32T
	Reserved1dc c.Uint32T
	Reserved1e0 c.Uint32T
	Reserved1e4 c.Uint32T
	Reserved1e8 c.Uint32T
	Reserved1ec c.Uint32T
	Reserved1f0 c.Uint32T
	Reserved1f4 c.Uint32T
	Reserved1f8 c.Uint32T
	Reserved1fc c.Uint32T
	Reserved200 c.Uint32T
	Reserved204 c.Uint32T
	Reserved208 c.Uint32T
	Reserved20c c.Uint32T
	Reserved210 c.Uint32T
	Reserved214 c.Uint32T
	Reserved218 c.Uint32T
	Reserved21c c.Uint32T
	Reserved220 c.Uint32T
	Reserved224 c.Uint32T
	Reserved228 c.Uint32T
	Reserved22c c.Uint32T
	Reserved230 c.Uint32T
	Reserved234 c.Uint32T
	Reserved238 c.Uint32T
	Reserved23c c.Uint32T
	Reserved240 c.Uint32T
	Reserved244 c.Uint32T
	Reserved248 c.Uint32T
	Reserved24c c.Uint32T
	Reserved250 c.Uint32T
	Reserved254 c.Uint32T
	Reserved258 c.Uint32T
	Reserved25c c.Uint32T
	Reserved260 c.Uint32T
	Reserved264 c.Uint32T
	Reserved268 c.Uint32T
	Reserved26c c.Uint32T
	Reserved270 c.Uint32T
	Reserved274 c.Uint32T
	Reserved278 c.Uint32T
	Reserved27c c.Uint32T
	Reserved280 c.Uint32T
	Reserved284 c.Uint32T
	Reserved288 c.Uint32T
	Reserved28c c.Uint32T
	Reserved290 c.Uint32T
	Reserved294 c.Uint32T
	Reserved298 c.Uint32T
	Reserved29c c.Uint32T
	Reserved2a0 c.Uint32T
	Reserved2a4 c.Uint32T
	Reserved2a8 c.Uint32T
	Reserved2ac c.Uint32T
	Reserved2b0 c.Uint32T
	Reserved2b4 c.Uint32T
	Reserved2b8 c.Uint32T
	Reserved2bc c.Uint32T
	Reserved2c0 c.Uint32T
	Reserved2c4 c.Uint32T
	Reserved2c8 c.Uint32T
	Reserved2cc c.Uint32T
	Reserved2d0 c.Uint32T
	Reserved2d4 c.Uint32T
	Reserved2d8 c.Uint32T
	Reserved2dc c.Uint32T
	Reserved2e0 c.Uint32T
	Reserved2e4 c.Uint32T
	Reserved2e8 c.Uint32T
	Reserved2ec c.Uint32T
	Reserved2f0 c.Uint32T
	Reserved2f4 c.Uint32T
	Reserved2f8 c.Uint32T
	Reserved2fc c.Uint32T
	Reserved300 c.Uint32T
	Reserved304 c.Uint32T
	Reserved308 c.Uint32T
	Reserved30c c.Uint32T
	Reserved310 c.Uint32T
	Reserved314 c.Uint32T
	Reserved318 c.Uint32T
	Reserved31c c.Uint32T
	Reserved320 c.Uint32T
	Reserved324 c.Uint32T
	Reserved328 c.Uint32T
	Reserved32c c.Uint32T
	Reserved330 c.Uint32T
	Reserved334 c.Uint32T
	Reserved338 c.Uint32T
	Reserved33c c.Uint32T
	Reserved340 c.Uint32T
	Reserved344 c.Uint32T
	Reserved348 c.Uint32T
	Reserved34c c.Uint32T
	Reserved350 c.Uint32T
	Reserved354 c.Uint32T
	Reserved358 c.Uint32T
	Reserved35c c.Uint32T
	Reserved360 c.Uint32T
	Reserved364 c.Uint32T
	Reserved368 c.Uint32T
	Reserved36c c.Uint32T
	Reserved370 c.Uint32T
	Reserved374 c.Uint32T
	Reserved378 c.Uint32T
	Reserved37c c.Uint32T
	Reserved380 c.Uint32T
	Reserved384 c.Uint32T
	Reserved388 c.Uint32T
	Reserved38c c.Uint32T
	Reserved390 c.Uint32T
	Reserved394 c.Uint32T
	Reserved398 c.Uint32T
	Reserved39c c.Uint32T
	Reserved3a0 c.Uint32T
	Reserved3a4 c.Uint32T
	Reserved3a8 c.Uint32T
	Reserved3ac c.Uint32T
	Reserved3b0 c.Uint32T
	Reserved3b4 c.Uint32T
	Reserved3b8 c.Uint32T
	Reserved3bc c.Uint32T
	Reserved3c0 c.Uint32T
	Reserved3c4 c.Uint32T
	Reserved3c8 c.Uint32T
	Reserved3cc c.Uint32T
	Reserved3d0 c.Uint32T
	Reserved3d4 c.Uint32T
	Reserved3d8 c.Uint32T
	Reserved3dc c.Uint32T
	Reserved3e0 c.Uint32T
	Reserved3e4 c.Uint32T
	Reserved3e8 c.Uint32T
	Reserved3ec c.Uint32T
	Reserved3f0 c.Uint32T
	Reserved3f4 c.Uint32T
	Reserved3f8 c.Uint32T
	Date        UsbWrapDateRegT
}
type ClockOutChannel c.Int

const (
	CLKOUT_CHANNEL_1   ClockOutChannel = 0
	CLKOUT_CHANNEL_2   ClockOutChannel = 1
	CLKOUT_CHANNEL_3   ClockOutChannel = 2
	CLKOUT_CHANNEL_MAX ClockOutChannel = 3
)

type ClockOutChannelT ClockOutChannel
type CacheT c.Int

const (
	CACHE_DCACHE CacheT = 0
	CACHE_ICACHE CacheT = 1
)

type CacheLayoutT c.Int

const (
	CACHE_MEMORY_INVALID     CacheLayoutT = 0
	CACHE_MEMORY_ICACHE_LOW  CacheLayoutT = 1
	CACHE_MEMORY_ICACHE_HIGH CacheLayoutT = 2
	CACHE_MEMORY_DCACHE_LOW  CacheLayoutT = 4
	CACHE_MEMORY_DCACHE_HIGH CacheLayoutT = 8
)

type CacheSizeT c.Int

const (
	CACHE_SIZE_HALF CacheSizeT = 0
	CACHE_SIZE_FULL CacheSizeT = 1
)

type CacheWaysT c.Int

const CACHE_4WAYS_ASSOC CacheWaysT = 0

type CacheLineSizeT c.Int

const (
	CACHE_LINE_SIZE_16B CacheLineSizeT = 0
	CACHE_LINE_SIZE_32B CacheLineSizeT = 1
)

type CacheAutoloadOrderT c.Int

const (
	CACHE_AUTOLOAD_POSITIVE CacheAutoloadOrderT = 0
	CACHE_AUTOLOAD_NEGATIVE CacheAutoloadOrderT = 1
)

type CacheAutoloadTriggerT c.Int

const (
	CACHE_AUTOLOAD_MISS_TRIGGER CacheAutoloadTriggerT = 0
	CACHE_AUTOLOAD_HIT_TRIGGER  CacheAutoloadTriggerT = 1
	CACHE_AUTOLOAD_BOTH_TRIGGER CacheAutoloadTriggerT = 2
)

type CacheMode struct {
	CacheSize     c.Uint32T
	CacheLineSize c.Uint16T
	CacheWays     c.Uint8T
	Icache        c.Uint8T
}

type TagItem struct {
	Dirty    c.Uint32T
	Tag      c.Uint32T
	Valid    c.Uint32T
	FifoCnt  c.Uint32T
	Lock     c.Uint32T
	Attr     c.Uint32T
	Access   c.Uint32T
	Reserved c.Uint32T
}

type AutoloadConfig struct {
	Order   c.Uint8T
	Trigger c.Uint8T
	Ena0    c.Uint8T
	Ena1    c.Uint8T
	Addr0   c.Uint32T
	Size0   c.Uint32T
	Addr1   c.Uint32T
	Size1   c.Uint32T
}

type TagGroupInfo struct {
	Mode              CacheMode
	FilterAddr        c.Uint32T
	VaddrOffset       c.Uint32T
	TagAddr           [4]c.Uint32T
	CacheMemoryOffset [4]c.Uint32T
}

type LockConfig struct {
	Addr  c.Uint32T
	Size  c.Uint16T
	Group c.Uint16T
}

/* this bitfield is start from the LSB!!! */

type LldescS struct {
	Size   c.Uint32T
	Length c.Uint32T
	Offset c.Uint32T
	Sosf   c.Uint32T
	Eof    c.Uint32T
	Owner  c.Uint32T
	Buf    *c.Uint8T
}
type LldescT LldescS

/** Group: Configuration Register */
/** Type of un_conf0 register
 *  Configuration register 0 for unit n
 */

type PcntUnConf0RegT struct {
	Val c.Uint32T
}

/** Type of un_conf1 register
 *  Configuration register 1 for unit n
 */

type PcntUnConf1RegT struct {
	Val c.Uint32T
}

/** Type of un_conf2 register
 *  Configuration register 2 for unit n
 */

type PcntUnConf2RegT struct {
	Val c.Uint32T
}

/** Type of ctrl register
 *  Control register for all counters
 */

type PcntCtrlRegT struct {
	Val c.Uint32T
}

/** Group: Status Register */
/** Type of un_cnt register
 *  Counter value for unit n
 */

type PcntUnCntRegT struct {
	Val c.Uint32T
}

/** Type of un_status register
 *  PNCT UNITn status register
 */

type PcntUnStatusRegT struct {
	Val c.Uint32T
}

/** Group: Interrupt Register */
/** Type of int_raw register
 *  Interrupt raw status register
 */

type PcntIntRawRegT struct {
	Val c.Uint32T
}

/** Type of int_st register
 *  Interrupt status register
 */

type PcntIntStRegT struct {
	Val c.Uint32T
}

/** Type of int_ena register
 *  Interrupt enable register
 */

type PcntIntEnaRegT struct {
	Val c.Uint32T
}

/** Type of int_clr register
 *  Interrupt clear register
 */

type PcntIntClrRegT struct {
	Val c.Uint32T
}

/** Group: Version Register */
/** Type of date register
 *  PCNT version control register
 */

type PcntDateRegT struct {
	Val c.Uint32T
}

type DacSignalConnT struct {
	DacChannelIoNum [2]c.Uint8T
}

type ApbSaradcDevS struct {
	Ctrl struct {
		Val c.Uint32T
	}
	Ctrl2 struct {
		Val c.Uint32T
	}
	Fsm struct {
		Val c.Uint32T
	}
	FsmWait struct {
		Val c.Uint32T
	}
	Sar1Status    c.Uint32T
	Sar2Status    c.Uint32T
	Sar1PattTab   [4]c.Uint32T
	Sar2PattTab   [4]c.Uint32T
	ApbAdcArbCtrl struct {
		Val c.Uint32T
	}
	FilterCtrl struct {
		Val c.Uint32T
	}
	FilterStatus struct {
		Val c.Uint32T
	}
	ThresCtrl struct {
		Val c.Uint32T
	}
	IntEna struct {
		Val c.Uint32T
	}
	IntRaw struct {
		Val c.Uint32T
	}
	IntSt struct {
		Val c.Uint32T
	}
	IntClr struct {
		Val c.Uint32T
	}
	DmaConf struct {
		Val c.Uint32T
	}
	ApbAdcClkmConf struct {
		Val c.Uint32T
	}
	ApbDacCtrl struct {
		Val c.Uint32T
	}
	Reserved64  c.Uint32T
	Reserved68  c.Uint32T
	Reserved6c  c.Uint32T
	Reserved70  c.Uint32T
	Reserved74  c.Uint32T
	Reserved78  c.Uint32T
	Reserved7c  c.Uint32T
	Reserved80  c.Uint32T
	Reserved84  c.Uint32T
	Reserved88  c.Uint32T
	Reserved8c  c.Uint32T
	Reserved90  c.Uint32T
	Reserved94  c.Uint32T
	Reserved98  c.Uint32T
	Reserved9c  c.Uint32T
	ReservedA0  c.Uint32T
	ReservedA4  c.Uint32T
	ReservedA8  c.Uint32T
	ReservedAc  c.Uint32T
	ReservedB0  c.Uint32T
	ReservedB4  c.Uint32T
	ReservedB8  c.Uint32T
	ReservedBc  c.Uint32T
	ReservedC0  c.Uint32T
	ReservedC4  c.Uint32T
	ReservedC8  c.Uint32T
	ReservedCc  c.Uint32T
	ReservedD0  c.Uint32T
	ReservedD4  c.Uint32T
	ReservedD8  c.Uint32T
	ReservedDc  c.Uint32T
	ReservedE0  c.Uint32T
	ReservedE4  c.Uint32T
	ReservedE8  c.Uint32T
	ReservedEc  c.Uint32T
	ReservedF0  c.Uint32T
	ReservedF4  c.Uint32T
	ReservedF8  c.Uint32T
	ReservedFc  c.Uint32T
	Reserved100 c.Uint32T
	Reserved104 c.Uint32T
	Reserved108 c.Uint32T
	Reserved10c c.Uint32T
	Reserved110 c.Uint32T
	Reserved114 c.Uint32T
	Reserved118 c.Uint32T
	Reserved11c c.Uint32T
	Reserved120 c.Uint32T
	Reserved124 c.Uint32T
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	Reserved14c c.Uint32T
	Reserved150 c.Uint32T
	Reserved154 c.Uint32T
	Reserved158 c.Uint32T
	Reserved15c c.Uint32T
	Reserved160 c.Uint32T
	Reserved164 c.Uint32T
	Reserved168 c.Uint32T
	Reserved16c c.Uint32T
	Reserved170 c.Uint32T
	Reserved174 c.Uint32T
	Reserved178 c.Uint32T
	Reserved17c c.Uint32T
	Reserved180 c.Uint32T
	Reserved184 c.Uint32T
	Reserved188 c.Uint32T
	Reserved18c c.Uint32T
	Reserved190 c.Uint32T
	Reserved194 c.Uint32T
	Reserved198 c.Uint32T
	Reserved19c c.Uint32T
	Reserved1a0 c.Uint32T
	Reserved1a4 c.Uint32T
	Reserved1a8 c.Uint32T
	Reserved1ac c.Uint32T
	Reserved1b0 c.Uint32T
	Reserved1b4 c.Uint32T
	Reserved1b8 c.Uint32T
	Reserved1bc c.Uint32T
	Reserved1c0 c.Uint32T
	Reserved1c4 c.Uint32T
	Reserved1c8 c.Uint32T
	Reserved1cc c.Uint32T
	Reserved1d0 c.Uint32T
	Reserved1d4 c.Uint32T
	Reserved1d8 c.Uint32T
	Reserved1dc c.Uint32T
	Reserved1e0 c.Uint32T
	Reserved1e4 c.Uint32T
	Reserved1e8 c.Uint32T
	Reserved1ec c.Uint32T
	Reserved1f0 c.Uint32T
	Reserved1f4 c.Uint32T
	Reserved1f8 c.Uint32T
	Reserved1fc c.Uint32T
	Reserved200 c.Uint32T
	Reserved204 c.Uint32T
	Reserved208 c.Uint32T
	Reserved20c c.Uint32T
	Reserved210 c.Uint32T
	Reserved214 c.Uint32T
	Reserved218 c.Uint32T
	Reserved21c c.Uint32T
	Reserved220 c.Uint32T
	Reserved224 c.Uint32T
	Reserved228 c.Uint32T
	Reserved22c c.Uint32T
	Reserved230 c.Uint32T
	Reserved234 c.Uint32T
	Reserved238 c.Uint32T
	Reserved23c c.Uint32T
	Reserved240 c.Uint32T
	Reserved244 c.Uint32T
	Reserved248 c.Uint32T
	Reserved24c c.Uint32T
	Reserved250 c.Uint32T
	Reserved254 c.Uint32T
	Reserved258 c.Uint32T
	Reserved25c c.Uint32T
	Reserved260 c.Uint32T
	Reserved264 c.Uint32T
	Reserved268 c.Uint32T
	Reserved26c c.Uint32T
	Reserved270 c.Uint32T
	Reserved274 c.Uint32T
	Reserved278 c.Uint32T
	Reserved27c c.Uint32T
	Reserved280 c.Uint32T
	Reserved284 c.Uint32T
	Reserved288 c.Uint32T
	Reserved28c c.Uint32T
	Reserved290 c.Uint32T
	Reserved294 c.Uint32T
	Reserved298 c.Uint32T
	Reserved29c c.Uint32T
	Reserved2a0 c.Uint32T
	Reserved2a4 c.Uint32T
	Reserved2a8 c.Uint32T
	Reserved2ac c.Uint32T
	Reserved2b0 c.Uint32T
	Reserved2b4 c.Uint32T
	Reserved2b8 c.Uint32T
	Reserved2bc c.Uint32T
	Reserved2c0 c.Uint32T
	Reserved2c4 c.Uint32T
	Reserved2c8 c.Uint32T
	Reserved2cc c.Uint32T
	Reserved2d0 c.Uint32T
	Reserved2d4 c.Uint32T
	Reserved2d8 c.Uint32T
	Reserved2dc c.Uint32T
	Reserved2e0 c.Uint32T
	Reserved2e4 c.Uint32T
	Reserved2e8 c.Uint32T
	Reserved2ec c.Uint32T
	Reserved2f0 c.Uint32T
	Reserved2f4 c.Uint32T
	Reserved2f8 c.Uint32T
	Reserved2fc c.Uint32T
	Reserved300 c.Uint32T
	Reserved304 c.Uint32T
	Reserved308 c.Uint32T
	Reserved30c c.Uint32T
	Reserved310 c.Uint32T
	Reserved314 c.Uint32T
	Reserved318 c.Uint32T
	Reserved31c c.Uint32T
	Reserved320 c.Uint32T
	Reserved324 c.Uint32T
	Reserved328 c.Uint32T
	Reserved32c c.Uint32T
	Reserved330 c.Uint32T
	Reserved334 c.Uint32T
	Reserved338 c.Uint32T
	Reserved33c c.Uint32T
	Reserved340 c.Uint32T
	Reserved344 c.Uint32T
	Reserved348 c.Uint32T
	Reserved34c c.Uint32T
	Reserved350 c.Uint32T
	Reserved354 c.Uint32T
	Reserved358 c.Uint32T
	Reserved35c c.Uint32T
	Reserved360 c.Uint32T
	Reserved364 c.Uint32T
	Reserved368 c.Uint32T
	Reserved36c c.Uint32T
	Reserved370 c.Uint32T
	Reserved374 c.Uint32T
	Reserved378 c.Uint32T
	Reserved37c c.Uint32T
	Reserved380 c.Uint32T
	Reserved384 c.Uint32T
	Reserved388 c.Uint32T
	Reserved38c c.Uint32T
	Reserved390 c.Uint32T
	Reserved394 c.Uint32T
	Reserved398 c.Uint32T
	Reserved39c c.Uint32T
	Reserved3a0 c.Uint32T
	Reserved3a4 c.Uint32T
	Reserved3a8 c.Uint32T
	Reserved3ac c.Uint32T
	Reserved3b0 c.Uint32T
	Reserved3b4 c.Uint32T
	Reserved3b8 c.Uint32T
	Reserved3bc c.Uint32T
	Reserved3c0 c.Uint32T
	Reserved3c4 c.Uint32T
	Reserved3c8 c.Uint32T
	Reserved3cc c.Uint32T
	Reserved3d0 c.Uint32T
	Reserved3d4 c.Uint32T
	Reserved3d8 c.Uint32T
	Reserved3dc c.Uint32T
	Reserved3e0 c.Uint32T
	Reserved3e4 c.Uint32T
	Reserved3e8 c.Uint32T
	Reserved3ec c.Uint32T
	Reserved3f0 c.Uint32T
	Reserved3f4 c.Uint32T
	Reserved3f8 c.Uint32T
	ApbCtrlDate c.Uint32T
}
type ApbSaradcDevT ApbSaradcDevS

/** Group: FIFO R/W registers */
/** Type of chndata register
 *  Read and write data for channel n via APB FIFO
 */

type RmtChndataRegT struct {
	Val c.Uint32T
}

/** Group: Configuration registers */
/** Type of chnconf0 register
 *  Channel n configuration register 0
 */

type RmtChnconf0RegT struct {
	Val c.Uint32T
}

/** Type of chnconf1 register
 *  Channel n configuration register 1
 */

type RmtChnconf1RegT struct {
	Val c.Uint32T
}

/** Type of apb_conf register
 *  RMT APB configuration register
 */

type RmtApbConfRegT struct {
	Val c.Uint32T
}

/** Type of ref_cnt_rst register
 *  RMT clock divider reset register
 */

type RmtRefCntRstRegT struct {
	Val c.Uint32T
}

/** Type of chn_rx_carrier_rm register
 *  Channel n carrier remove register
 */

type RmtChnRxCarrierRmRegT struct {
	Val c.Uint32T
}

/** Group: Status registers */
/** Type of chnstatus register
 *  Channel n status register
 */

type RmtChnstatusRegT struct {
	Val c.Uint32T
}

/** Type of chnaddr register
 *  Channel n address register
 */

type RmtChnaddrRegT struct {
	Val c.Uint32T
}

/** Group: Interrupt registers */
/** Type of int_raw register
 *  Raw interrupt status register
 */

type RmtIntRawRegT struct {
	Val c.Uint32T
}

/** Type of int_st register
 *  Masked interrupt status register
 */

type RmtIntStRegT struct {
	Val c.Uint32T
}

/** Type of int_ena register
 *  Interrupt enable register
 */

type RmtIntEnaRegT struct {
	Val c.Uint32T
}

/** Type of int_clr register
 *  Interrupt clear register
 */

type RmtIntClrRegT struct {
	Val c.Uint32T
}

/** Group: Carrier wave duty cycle registers */
/** Type of chncarrier_duty register
 *  Channel n duty cycle configuration register
 */

type RmtChncarrierDutyRegT struct {
	Val c.Uint32T
}

/** Group: Tx event configuration registers */
/** Type of chn_tx_lim register
 *  Channel n Tx event configuration register
 */

type RmtChnTxLimRegT struct {
	Val c.Uint32T
}

/** Type of tx_sim register
 *  Enable RMT simultaneous transmission
 */

type RmtTxSimRegT struct {
	Val c.Uint32T
}

/** Group: Version register */
/** Type of date register
 *  Version control register
 */

type RmtDateRegT struct {
	Val c.Uint32T
}

/** Group: PGM Data Registers */
/** Type of pgm_data0 register
 *  Register 0 that stores data to be programmed.
 */

type EfusePgmData0RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data1 register
 *  Register 1 that stores data to be programmed.
 */

type EfusePgmData1RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data2 register
 *  Register 2 that stores data to be programmed.
 */

type EfusePgmData2RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data3 register
 *  Register 3 that stores data to be programmed.
 */

type EfusePgmData3RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data4 register
 *  Register 4 that stores data to be programmed.
 */

type EfusePgmData4RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data5 register
 *  Register 5 that stores data to be programmed.
 */

type EfusePgmData5RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data6 register
 *  Register 6 that stores data to be programmed.
 */

type EfusePgmData6RegT struct {
	Val c.Uint32T
}

/** Type of pgm_data7 register
 *  Register 7 that stores data to be programmed.
 */

type EfusePgmData7RegT struct {
	Val c.Uint32T
}

/** Type of pgm_check_value0 register
 *  Register 0 that stores the RS code to be programmed.
 */

type EfusePgmCheckValue0RegT struct {
	Val c.Uint32T
}

/** Type of pgm_check_value1 register
 *  Register 1 that stores the RS code to be programmed.
 */

type EfusePgmCheckValue1RegT struct {
	Val c.Uint32T
}

/** Type of pgm_check_value2 register
 *  Register 2 that stores the RS code to be programmed.
 */

type EfusePgmCheckValue2RegT struct {
	Val c.Uint32T
}

/** Group: Read Data Registers */
/** Type of rd_wr_dis register
 *  Register 0 of BLOCK0.
 */

type EfuseRdWrDisRegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_data0 register
 *  Register 1 of BLOCK0.
 */

type EfuseRdRepeatData0RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_data1 register
 *  Register 2 of BLOCK0.
 */

type EfuseRdRepeatData1RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_data2 register
 *  Register 3 of BLOCK0.
 */

type EfuseRdRepeatData2RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_data3 register
 *  Register 4 of BLOCK0.
 */

type EfuseRdRepeatData3RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_data4 register
 *  Register 5 of BLOCK0.
 */

type EfuseRdRepeatData4RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_0 register
 *  Register 0 of BLOCK1.
 */

type EfuseRdMacSpiSys0RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_1 register
 *  Register 1 of BLOCK1.
 */

type EfuseRdMacSpiSys1RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_2 register
 *  Register 2 of BLOCK1.
 */

type EfuseRdMacSpiSys2RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_3 register
 *  Register 3 of BLOCK1.
 */

type EfuseRdMacSpiSys3RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_4 register
 *  Register 4 of BLOCK1.
 */

type EfuseRdMacSpiSys4RegT struct {
	Val c.Uint32T
}

/** Type of rd_mac_spi_sys_5 register
 *  Register 5 of BLOCK1.
 */

type EfuseRdMacSpiSys5RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data0 register
 *  Register 0 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data1 register
 *  Register 1 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data2 register
 *  Register 2 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data3 register
 *  Register 3 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data4 register
 *  Register 4 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data5 register
 *  Register 5 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data6 register
 *  Register 6 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part1_data7 register
 *  Register 7 of BLOCK2 (system).
 */

type EfuseRdSysPart1Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data0 register
 *  Register 0 of BLOCK3 (user).
 */

type EfuseRdUsrData0RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data1 register
 *  Register 1 of BLOCK3 (user).
 */

type EfuseRdUsrData1RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data2 register
 *  Register 2 of BLOCK3 (user).
 */

type EfuseRdUsrData2RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data3 register
 *  Register 3 of BLOCK3 (user).
 */

type EfuseRdUsrData3RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data4 register
 *  Register 4 of BLOCK3 (user).
 */

type EfuseRdUsrData4RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data5 register
 *  Register 5 of BLOCK3 (user).
 */

type EfuseRdUsrData5RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data6 register
 *  Register 6 of BLOCK3 (user).
 */

type EfuseRdUsrData6RegT struct {
	Val c.Uint32T
}

/** Type of rd_usr_data7 register
 *  Register 7 of BLOCK3 (user).
 */

type EfuseRdUsrData7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data0 register
 *  Register 0 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data1 register
 *  Register 1 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data2 register
 *  Register 2 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data3 register
 *  Register 3 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data4 register
 *  Register 4 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data5 register
 *  Register 5 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data6 register
 *  Register 6 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key0_data7 register
 *  Register 7 of BLOCK4 (KEY0).
 */

type EfuseRdKey0Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data0 register
 *  Register 0 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data1 register
 *  Register 1 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data2 register
 *  Register 2 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data3 register
 *  Register 3 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data4 register
 *  Register 4 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data5 register
 *  Register 5 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data6 register
 *  Register 6 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key1_data7 register
 *  Register 7 of BLOCK5 (KEY1).
 */

type EfuseRdKey1Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data0 register
 *  Register 0 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data1 register
 *  Register 1 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data2 register
 *  Register 2 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data3 register
 *  Register 3 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data4 register
 *  Register 4 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data5 register
 *  Register 5 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data6 register
 *  Register 6 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key2_data7 register
 *  Register 7 of BLOCK6 (KEY2).
 */

type EfuseRdKey2Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data0 register
 *  Register 0 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data1 register
 *  Register 1 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data2 register
 *  Register 2 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data3 register
 *  Register 3 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data4 register
 *  Register 4 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data5 register
 *  Register 5 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data6 register
 *  Register 6 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key3_data7 register
 *  Register 7 of BLOCK7 (KEY3).
 */

type EfuseRdKey3Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data0 register
 *  Register 0 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data1 register
 *  Register 1 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data2 register
 *  Register 2 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data3 register
 *  Register 3 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data4 register
 *  Register 4 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data5 register
 *  Register 5 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data6 register
 *  Register 6 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key4_data7 register
 *  Register 7 of BLOCK8 (KEY4).
 */

type EfuseRdKey4Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data0 register
 *  Register 0 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data1 register
 *  Register 1 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data2 register
 *  Register 2 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data3 register
 *  Register 3 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data4 register
 *  Register 4 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data5 register
 *  Register 5 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data6 register
 *  Register 6 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_key5_data7 register
 *  Register 7 of BLOCK9 (KEY5).
 */

type EfuseRdKey5Data7RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data0 register
 *  Register 0 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data0RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data1 register
 *  Register 1 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data1RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data2 register
 *  Register 2 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data2RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data3 register
 *  Register 3 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data3RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data4 register
 *  Register 4 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data4RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data5 register
 *  Register 5 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data5RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data6 register
 *  Register 6 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data6RegT struct {
	Val c.Uint32T
}

/** Type of rd_sys_part2_data7 register
 *  Register 7 of BLOCK10 (system).
 */

type EfuseRdSysPart2Data7RegT struct {
	Val c.Uint32T
}

/** Group: Error Status Registers */
/** Type of rd_repeat_err0 register
 *  Programming error record register 0 of BLOCK0.
 */

type EfuseRdRepeatErr0RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_err1 register
 *  Programming error record register 1 of BLOCK0.
 */

type EfuseRdRepeatErr1RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_err2 register
 *  Programming error record register 2 of BLOCK0.
 */

type EfuseRdRepeatErr2RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_err3 register
 *  Programming error record register 3 of BLOCK0.
 */

type EfuseRdRepeatErr3RegT struct {
	Val c.Uint32T
}

/** Type of rd_repeat_err4 register
 *  Programming error record register 4 of BLOCK0.
 */

type EfuseRdRepeatErr4RegT struct {
	Val c.Uint32T
}

/** Type of rd_rs_err0 register
 *  Programming error record register 0 of BLOCK1-10.
 */

type EfuseRdRsErr0RegT struct {
	Val c.Uint32T
}

/** Type of rd_rs_err1 register
 *  Programming error record register 1 of BLOCK1-10.
 */

type EfuseRdRsErr1RegT struct {
	Val c.Uint32T
}

/** Group: Control/Status Registers */
/** Type of clk register
 *  eFuse clock configuration register.
 */

type EfuseClkRegT struct {
	Val c.Uint32T
}

/** Type of conf register
 *  eFuse operation mode configuration register.
 */

type EfuseConfRegT struct {
	Val c.Uint32T
}

/** Type of status register
 *  eFuse status register.
 */

type EfuseStatusRegT struct {
	Val c.Uint32T
}

/** Type of cmd register
 *  eFuse command register.
 */

type EfuseCmdRegT struct {
	Val c.Uint32T
}

/** Type of dac_conf register
 *  Controls the eFuse programming voltage.
 */

type EfuseDacConfRegT struct {
	Val c.Uint32T
}

/** Group: Interrupt Registers */
/** Type of int_raw register
 *  eFuse raw interrupt register.
 */

type EfuseIntRawRegT struct {
	Val c.Uint32T
}

/** Type of int_st register
 *  eFuse interrupt status register.
 */

type EfuseIntStRegT struct {
	Val c.Uint32T
}

/** Type of int_ena register
 *  eFuse interrupt enable register.
 */

type EfuseIntEnaRegT struct {
	Val c.Uint32T
}

/** Type of int_clr register
 *  eFuse interrupt clear register.
 */

type EfuseIntClrRegT struct {
	Val c.Uint32T
}

/** Group: Configuration Registers */
/** Type of rd_tim_conf register
 *  Configures read timing parameters.
 */

type EfuseRdTimConfRegT struct {
	Val c.Uint32T
}

/** Type of wr_tim_conf0 register
 *  Configuration register 0 of eFuse programming timing parameters.
 */

type EfuseWrTimConf0RegT struct {
	Val c.Uint32T
}

/** Type of wr_tim_conf1 register
 *  Configuration register 1 of eFuse programming timing parameters.
 */

type EfuseWrTimConf1RegT struct {
	Val c.Uint32T
}

/** Type of wr_tim_conf2 register
 *  Configuration register 2 of eFuse programming timing parameters.
 */

type EfuseWrTimConf2RegT struct {
	Val c.Uint32T
}

/** Group: Version Register */
/** Type of date register
 *  Version control register.
 */

type EfuseDateRegT struct {
	Val c.Uint32T
}

type EfuseDevT struct {
	PgmData0        EfusePgmData0RegT
	PgmData1        EfusePgmData1RegT
	PgmData2        EfusePgmData2RegT
	PgmData3        EfusePgmData3RegT
	PgmData4        EfusePgmData4RegT
	PgmData5        EfusePgmData5RegT
	PgmData6        EfusePgmData6RegT
	PgmData7        EfusePgmData7RegT
	PgmCheckValue0  EfusePgmCheckValue0RegT
	PgmCheckValue1  EfusePgmCheckValue1RegT
	PgmCheckValue2  EfusePgmCheckValue2RegT
	RdWrDis         EfuseRdWrDisRegT
	RdRepeatData0   EfuseRdRepeatData0RegT
	RdRepeatData1   EfuseRdRepeatData1RegT
	RdRepeatData2   EfuseRdRepeatData2RegT
	RdRepeatData3   EfuseRdRepeatData3RegT
	RdRepeatData4   EfuseRdRepeatData4RegT
	RdMacSpiSys0    EfuseRdMacSpiSys0RegT
	RdMacSpiSys1    EfuseRdMacSpiSys1RegT
	RdMacSpiSys2    EfuseRdMacSpiSys2RegT
	RdMacSpiSys3    EfuseRdMacSpiSys3RegT
	RdMacSpiSys4    EfuseRdMacSpiSys4RegT
	RdMacSpiSys5    EfuseRdMacSpiSys5RegT
	RdSysPart1Data0 EfuseRdSysPart1Data0RegT
	RdSysPart1Data1 EfuseRdSysPart1Data1RegT
	RdSysPart1Data2 EfuseRdSysPart1Data2RegT
	RdSysPart1Data3 EfuseRdSysPart1Data3RegT
	RdSysPart1Data4 EfuseRdSysPart1Data4RegT
	RdSysPart1Data5 EfuseRdSysPart1Data5RegT
	RdSysPart1Data6 EfuseRdSysPart1Data6RegT
	RdSysPart1Data7 EfuseRdSysPart1Data7RegT
	RdUsrData0      EfuseRdUsrData0RegT
	RdUsrData1      EfuseRdUsrData1RegT
	RdUsrData2      EfuseRdUsrData2RegT
	RdUsrData3      EfuseRdUsrData3RegT
	RdUsrData4      EfuseRdUsrData4RegT
	RdUsrData5      EfuseRdUsrData5RegT
	RdUsrData6      EfuseRdUsrData6RegT
	RdUsrData7      EfuseRdUsrData7RegT
	RdKey0Data0     EfuseRdKey0Data0RegT
	RdKey0Data1     EfuseRdKey0Data1RegT
	RdKey0Data2     EfuseRdKey0Data2RegT
	RdKey0Data3     EfuseRdKey0Data3RegT
	RdKey0Data4     EfuseRdKey0Data4RegT
	RdKey0Data5     EfuseRdKey0Data5RegT
	RdKey0Data6     EfuseRdKey0Data6RegT
	RdKey0Data7     EfuseRdKey0Data7RegT
	RdKey1Data0     EfuseRdKey1Data0RegT
	RdKey1Data1     EfuseRdKey1Data1RegT
	RdKey1Data2     EfuseRdKey1Data2RegT
	RdKey1Data3     EfuseRdKey1Data3RegT
	RdKey1Data4     EfuseRdKey1Data4RegT
	RdKey1Data5     EfuseRdKey1Data5RegT
	RdKey1Data6     EfuseRdKey1Data6RegT
	RdKey1Data7     EfuseRdKey1Data7RegT
	RdKey2Data0     EfuseRdKey2Data0RegT
	RdKey2Data1     EfuseRdKey2Data1RegT
	RdKey2Data2     EfuseRdKey2Data2RegT
	RdKey2Data3     EfuseRdKey2Data3RegT
	RdKey2Data4     EfuseRdKey2Data4RegT
	RdKey2Data5     EfuseRdKey2Data5RegT
	RdKey2Data6     EfuseRdKey2Data6RegT
	RdKey2Data7     EfuseRdKey2Data7RegT
	RdKey3Data0     EfuseRdKey3Data0RegT
	RdKey3Data1     EfuseRdKey3Data1RegT
	RdKey3Data2     EfuseRdKey3Data2RegT
	RdKey3Data3     EfuseRdKey3Data3RegT
	RdKey3Data4     EfuseRdKey3Data4RegT
	RdKey3Data5     EfuseRdKey3Data5RegT
	RdKey3Data6     EfuseRdKey3Data6RegT
	RdKey3Data7     EfuseRdKey3Data7RegT
	RdKey4Data0     EfuseRdKey4Data0RegT
	RdKey4Data1     EfuseRdKey4Data1RegT
	RdKey4Data2     EfuseRdKey4Data2RegT
	RdKey4Data3     EfuseRdKey4Data3RegT
	RdKey4Data4     EfuseRdKey4Data4RegT
	RdKey4Data5     EfuseRdKey4Data5RegT
	RdKey4Data6     EfuseRdKey4Data6RegT
	RdKey4Data7     EfuseRdKey4Data7RegT
	RdKey5Data0     EfuseRdKey5Data0RegT
	RdKey5Data1     EfuseRdKey5Data1RegT
	RdKey5Data2     EfuseRdKey5Data2RegT
	RdKey5Data3     EfuseRdKey5Data3RegT
	RdKey5Data4     EfuseRdKey5Data4RegT
	RdKey5Data5     EfuseRdKey5Data5RegT
	RdKey5Data6     EfuseRdKey5Data6RegT
	RdKey5Data7     EfuseRdKey5Data7RegT
	RdSysPart2Data0 EfuseRdSysPart2Data0RegT
	RdSysPart2Data1 EfuseRdSysPart2Data1RegT
	RdSysPart2Data2 EfuseRdSysPart2Data2RegT
	RdSysPart2Data3 EfuseRdSysPart2Data3RegT
	RdSysPart2Data4 EfuseRdSysPart2Data4RegT
	RdSysPart2Data5 EfuseRdSysPart2Data5RegT
	RdSysPart2Data6 EfuseRdSysPart2Data6RegT
	RdSysPart2Data7 EfuseRdSysPart2Data7RegT
	RdRepeatErr0    EfuseRdRepeatErr0RegT
	RdRepeatErr1    EfuseRdRepeatErr1RegT
	RdRepeatErr2    EfuseRdRepeatErr2RegT
	RdRepeatErr3    EfuseRdRepeatErr3RegT
	Reserved18c     c.Uint32T
	RdRepeatErr4    EfuseRdRepeatErr4RegT
	Reserved194     [11]c.Uint32T
	RdRsErr0        EfuseRdRsErr0RegT
	RdRsErr1        EfuseRdRsErr1RegT
	Clk             EfuseClkRegT
	Conf            EfuseConfRegT
	Status          EfuseStatusRegT
	Cmd             EfuseCmdRegT
	IntRaw          EfuseIntRawRegT
	IntSt           EfuseIntStRegT
	IntEna          EfuseIntEnaRegT
	IntClr          EfuseIntClrRegT
	DacConf         EfuseDacConfRegT
	RdTimConf       EfuseRdTimConfRegT
	WrTimConf0      EfuseWrTimConf0RegT
	WrTimConf1      EfuseWrTimConf1RegT
	WrTimConf2      EfuseWrTimConf2RegT
	Date            EfuseDateRegT
}
type EtsEfusePurposeT c.Int

const (
	ETS_EFUSE_KEY_PURPOSE_USER                        EtsEfusePurposeT = 0
	ETS_EFUSE_KEY_PURPOSE_RESERVED                    EtsEfusePurposeT = 1
	ETS_EFUSE_KEY_PURPOSE_XTS_AES_256_KEY_1           EtsEfusePurposeT = 2
	ETS_EFUSE_KEY_PURPOSE_XTS_AES_256_KEY_2           EtsEfusePurposeT = 3
	ETS_EFUSE_KEY_PURPOSE_XTS_AES_128_KEY             EtsEfusePurposeT = 4
	ETS_EFUSE_KEY_PURPOSE_HMAC_DOWN_ALL               EtsEfusePurposeT = 5
	ETS_EFUSE_KEY_PURPOSE_HMAC_DOWN_JTAG              EtsEfusePurposeT = 6
	ETS_EFUSE_KEY_PURPOSE_HMAC_DOWN_DIGITAL_SIGNATURE EtsEfusePurposeT = 7
	ETS_EFUSE_KEY_PURPOSE_HMAC_UP                     EtsEfusePurposeT = 8
	ETS_EFUSE_KEY_PURPOSE_SECURE_BOOT_DIGEST0         EtsEfusePurposeT = 9
	ETS_EFUSE_KEY_PURPOSE_SECURE_BOOT_DIGEST1         EtsEfusePurposeT = 10
	ETS_EFUSE_KEY_PURPOSE_SECURE_BOOT_DIGEST2         EtsEfusePurposeT = 11
	ETS_EFUSE_KEY_PURPOSE_MAX                         EtsEfusePurposeT = 12
)

type EtsEfuseBlockT c.Int

const (
	ETS_EFUSE_BLOCK0         EtsEfuseBlockT = 0
	ETS_EFUSE_MAC_SPI_SYS_0  EtsEfuseBlockT = 1
	ETS_EFUSE_BLOCK_SYS_DATA EtsEfuseBlockT = 2
	ETS_EFUSE_BLOCK_USR_DATA EtsEfuseBlockT = 3
	ETS_EFUSE_BLOCK_KEY0     EtsEfuseBlockT = 4
	ETS_EFUSE_BLOCK_KEY1     EtsEfuseBlockT = 5
	ETS_EFUSE_BLOCK_KEY2     EtsEfuseBlockT = 6
	ETS_EFUSE_BLOCK_KEY3     EtsEfuseBlockT = 7
	ETS_EFUSE_BLOCK_KEY4     EtsEfuseBlockT = 8
	ETS_EFUSE_BLOCK_KEY5     EtsEfuseBlockT = 9
	ETS_EFUSE_BLOCK_KEY6     EtsEfuseBlockT = 10
	ETS_EFUSE_BLOCK_MAX      EtsEfuseBlockT = 11
)

/** Group: Configuration and Control Register */
/** Type of txconfig register
 *  Timer x configuration register
 */

type TimgTxconfigRegT struct {
	Val c.Uint32T
}

/** Type of txlo register
 *  Timer x current value, low 32 bits
 */

type TimgTxloRegT struct {
	Val c.Uint32T
}

/** Type of txhi register
 *  Timer x current value, high 32 bits
 */

type TimgTxhiRegT struct {
	Val c.Uint32T
}

/** Type of txupdate register
 *  Write to copy current timer value to TIMGn_Tx_(LO/HI)_REG
 */

type TimgTxupdateRegT struct {
	Val c.Uint32T
}

/** Type of txalarmlo register
 *  Timer x alarm value, low 32 bits
 */

type TimgTxalarmloRegT struct {
	Val c.Uint32T
}

/** Type of txalarmhi register
 *  Timer x alarm value, high bits
 */

type TimgTxalarmhiRegT struct {
	Val c.Uint32T
}

/** Type of txloadlo register
 *  Timer x reload value, low 32 bits
 */

type TimgTxloadloRegT struct {
	Val c.Uint32T
}

/** Type of txloadhi register
 *  Timer x reload value, high 32 bits
 */

type TimgTxloadhiRegT struct {
	Val c.Uint32T
}

/** Type of txload register
 *  Write to reload timer from TIMG_T0_(LOADLOLOADHI)_REG
 */

type TimgTxloadRegT struct {
	Val c.Uint32T
}

/** Group: Configuration and Control Register for WDT */
/** Type of wdtconfig0 register
 *  Watchdog timer configuration register
 */

type TimgWdtconfig0RegT struct {
	Val c.Uint32T
}

/** Type of wdtconfig1 register
 *  Watchdog timer prescaler register
 */

type TimgWdtconfig1RegT struct {
	Val c.Uint32T
}

/** Type of wdtconfig2 register
 *  Watchdog timer stage 0 timeout value
 */

type TimgWdtconfig2RegT struct {
	Val c.Uint32T
}

/** Type of wdtconfig3 register
 *  Watchdog timer stage 1 timeout value
 */

type TimgWdtconfig3RegT struct {
	Val c.Uint32T
}

/** Type of wdtconfig4 register
 *  Watchdog timer stage 2 timeout value
 */

type TimgWdtconfig4RegT struct {
	Val c.Uint32T
}

/** Type of wdtconfig5 register
 *  Watchdog timer stage 3 timeout value
 */

type TimgWdtconfig5RegT struct {
	Val c.Uint32T
}

/** Type of wdtfeed register
 *  Write to feed the watchdog timer
 */

type TimgWdtfeedRegT struct {
	Val c.Uint32T
}

/** Type of wdtwprotect register
 *  Watchdog write protect register
 */

type TimgWdtwprotectRegT struct {
	Val c.Uint32T
}

/** Group: Configuration and Control Register for RTC CALI */
/** Type of rtccalicfg register
 *  RTC calibration configuration register
 */

type TimgRtccalicfgRegT struct {
	Val c.Uint32T
}

/** Type of rtccalicfg1 register
 *  RTC calibration configuration1 register
 */

type TimgRtccalicfg1RegT struct {
	Val c.Uint32T
}

/** Type of rtccalicfg2 register
 *  Timer group calibration register
 */

type TimgRtccalicfg2RegT struct {
	Val c.Uint32T
}

/** Group: Configuration and Control Register for LACT */
/** Type of lactconfig register
 *  LACT configuration register
 */

type TimgLactconfigRegT struct {
	Val c.Uint32T
}

/** Type of lactrtc register
 *  LACT RTC register
 */

type TimgLactrtcRegT struct {
	Val c.Uint32T
}

/** Type of lactlo register
 *  LACT low register
 */

type TimgLactloRegT struct {
	Val c.Uint32T
}

/** Type of lacthi register
 *  LACT high register
 */

type TimgLacthiRegT struct {
	Val c.Uint32T
}

/** Type of lactupdate register
 *  LACT update register
 */

type TimgLactupdateRegT struct {
	Val c.Uint32T
}

/** Type of lactalarmlo register
 *  LACT alarm low register
 */

type TimgLactalarmloRegT struct {
	Val c.Uint32T
}

/** Type of lactalarmhi register
 *  LACT alarm high register
 */

type TimgLactalarmhiRegT struct {
	Val c.Uint32T
}

/** Type of lactloadlo register
 *  LACT load low register
 */

type TimgLactloadloRegT struct {
	Val c.Uint32T
}

/** Type of lactloadhi register
 *  Timer LACT load high register
 */

type TimgLactloadhiRegT struct {
	Val c.Uint32T
}

/** Type of lactload register
 *  Timer LACT load register
 */

type TimgLactloadRegT struct {
	Val c.Uint32T
}

/** Group: Interrupt Register */
/** Type of int_ena_timers register
 *  Interrupt enable bits
 */

type TimgIntEnaTimersRegT struct {
	Val c.Uint32T
}

/** Type of int_raw_timers register
 *  Raw interrupt status
 */

type TimgIntRawTimersRegT struct {
	Val c.Uint32T
}

/** Type of int_st_timers register
 *  Masked interrupt status
 */

type TimgIntStTimersRegT struct {
	Val c.Uint32T
}

/** Type of int_clr_timers register
 *  Interrupt clear bits
 */

type TimgIntClrTimersRegT struct {
	Val c.Uint32T
}

/** Group: Version Register */
/** Type of timers_date register
 *  Version control register
 */

type TimgTimersDateRegT struct {
	Val c.Uint32T
}

/** Group: Configuration Register */
/** Type of regclk register
 *  Timer group clock gate register
 */

type TimgRegclkRegT struct {
	Val c.Uint32T
}

type TimgHwtimerRegT struct {
	Config  TimgTxconfigRegT
	Lo      TimgTxloRegT
	Hi      TimgTxhiRegT
	Update  TimgTxupdateRegT
	Alarmlo TimgTxalarmloRegT
	Alarmhi TimgTxalarmhiRegT
	Loadlo  TimgTxloadloRegT
	Loadhi  TimgTxloadhiRegT
	Load    TimgTxloadRegT
}

// llgo:type C
type XtHalVoidFunc func()

/*
 * This structure is used to represent each MPU entry (both foreground and
 * background). The internal representation of the structure is subject to
 * change, so it should only be accessed by the XTHAL_MPU_ENTRY_... macros
 * below.
 */

type XthalMPUEntry struct {
	As c.Uint32T
	At c.Uint32T
}

/*
 *  Kernel vector mode exception stack frame.
 *
 *  NOTE:  due to the limited range of addi used in the current
 *  kernel exception vector, and the fact that historically
 *  the vector is limited to 12 bytes, the size of this
 *  stack frame is limited to 128 bytes (currently at 64).
 */

type KernelFrame struct {
	Pc   c.Long
	Ps   c.Long
	Areg [4]c.Long
	Sar  c.Long
}

/*
 *  User vector mode exception stack frame:
 *
 *  WARNING:  if you modify this structure, you MUST modify the
 *  computation of the pad size (ALIGNPAD) accordingly.
 */

type UserFrame struct {
	Pc       c.Long
	Ps       c.Long
	Sar      c.Long
	Vpri     c.Long
	A2       c.Long
	A3       c.Long
	A4       c.Long
	A5       c.Long
	Exccause c.Long
	Pad      [3]c.Long
}

/*
 *  Save area for saving entire core state, such as across Power Shut-Off (PSO).
 */

type XtosCoreState struct {
	Signature       c.Long
	RestoreLabel    c.Long
	AftersaveLabel  c.Long
	Areg            [64]c.Long
	CallerRegs      [16]c.Long
	CallerRegsSaved c.Long
	Windowbase      c.Long
	Windowstart     c.Long
	Sar             c.Long
	Epc1            c.Long
	Ps              c.Long
	Excsave1        c.Long
	Depc            c.Long
	Epc             [6]c.Long
	Eps             [6]c.Long
	Excsave         [6]c.Long
	Vecbase         c.Long
	Ccount          c.Long
	Ccompare        [3]c.Long
	Intenable       c.Long
	Interrupt       c.Long
	Icount          c.Long
	Icountlevel     c.Long
	Debugcause      c.Long
	Dbreakc         [2]c.Long
	Dbreaka         [2]c.Long
	Ibreaka         [2]c.Long
	Ibreakenable    c.Long
	Misc            [4]c.Long
	Cpenable        c.Long
	Tlbs            [16]c.Long
	Ncp             [4]c.Char
}

// llgo:type C
type X_xtosHandlerFunc func()
type X_xtosHandler *X_xtosHandlerFunc
type PeriphInterrputT c.Int

const (
	ETS_WIFI_MAC_INTR_SOURCE              PeriphInterrputT = 0
	ETS_WIFI_MAC_NMI_SOURCE               PeriphInterrputT = 1
	ETS_WIFI_PWR_INTR_SOURCE              PeriphInterrputT = 2
	ETS_WIFI_BB_INTR_SOURCE               PeriphInterrputT = 3
	ETS_BT_MAC_INTR_SOURCE                PeriphInterrputT = 4
	ETS_BT_BB_INTR_SOURCE                 PeriphInterrputT = 5
	ETS_BT_BB_NMI_SOURCE                  PeriphInterrputT = 6
	ETS_RWBT_INTR_SOURCE                  PeriphInterrputT = 7
	ETS_RWBLE_INTR_SOURCE                 PeriphInterrputT = 8
	ETS_RWBT_NMI_SOURCE                   PeriphInterrputT = 9
	ETS_RWBLE_NMI_SOURCE                  PeriphInterrputT = 10
	ETS_SLC0_INTR_SOURCE                  PeriphInterrputT = 11
	ETS_SLC1_INTR_SOURCE                  PeriphInterrputT = 12
	ETS_UHCI0_INTR_SOURCE                 PeriphInterrputT = 13
	ETS_UHCI1_INTR_SOURCE                 PeriphInterrputT = 14
	ETS_TG0_T0_LEVEL_INTR_SOURCE          PeriphInterrputT = 15
	ETS_TG0_T1_LEVEL_INTR_SOURCE          PeriphInterrputT = 16
	ETS_TG0_WDT_LEVEL_INTR_SOURCE         PeriphInterrputT = 17
	ETS_TG0_LACT_LEVEL_INTR_SOURCE        PeriphInterrputT = 18
	ETS_TG1_T0_LEVEL_INTR_SOURCE          PeriphInterrputT = 19
	ETS_TG1_T1_LEVEL_INTR_SOURCE          PeriphInterrputT = 20
	ETS_TG1_WDT_LEVEL_INTR_SOURCE         PeriphInterrputT = 21
	ETS_TG1_LACT_LEVEL_INTR_SOURCE        PeriphInterrputT = 22
	ETS_GPIO_INTR_SOURCE                  PeriphInterrputT = 23
	ETS_GPIO_NMI_SOURCE                   PeriphInterrputT = 24
	ETS_GPIO_INTR_SOURCE2                 PeriphInterrputT = 25
	ETS_GPIO_NMI_SOURCE2                  PeriphInterrputT = 26
	ETS_DEDICATED_GPIO_INTR_SOURCE        PeriphInterrputT = 27
	ETS_FROM_CPU_INTR0_SOURCE             PeriphInterrputT = 28
	ETS_FROM_CPU_INTR1_SOURCE             PeriphInterrputT = 29
	ETS_FROM_CPU_INTR2_SOURCE             PeriphInterrputT = 30
	ETS_FROM_CPU_INTR3_SOURCE             PeriphInterrputT = 31
	ETS_SPI1_INTR_SOURCE                  PeriphInterrputT = 32
	ETS_SPI2_INTR_SOURCE                  PeriphInterrputT = 33
	ETS_SPI3_INTR_SOURCE                  PeriphInterrputT = 34
	ETS_I2S0_INTR_SOURCE                  PeriphInterrputT = 35
	ETS_UART0_INTR_SOURCE                 PeriphInterrputT = 37
	ETS_UART1_INTR_SOURCE                 PeriphInterrputT = 38
	ETS_UART2_INTR_SOURCE                 PeriphInterrputT = 39
	ETS_SDIO_HOST_INTR_SOURCE             PeriphInterrputT = 40
	ETS_LEDC_INTR_SOURCE                  PeriphInterrputT = 45
	ETS_EFUSE_INTR_SOURCE                 PeriphInterrputT = 46
	ETS_TWAI_INTR_SOURCE                  PeriphInterrputT = 47
	ETS_USB_INTR_SOURCE                   PeriphInterrputT = 48
	ETS_RTC_CORE_INTR_SOURCE              PeriphInterrputT = 49
	ETS_RMT_INTR_SOURCE                   PeriphInterrputT = 50
	ETS_PCNT_INTR_SOURCE                  PeriphInterrputT = 51
	ETS_I2C_EXT0_INTR_SOURCE              PeriphInterrputT = 52
	ETS_I2C_EXT1_INTR_SOURCE              PeriphInterrputT = 53
	ETS_RSA_INTR_SOURCE                   PeriphInterrputT = 54
	ETS_SHA_INTR_SOURCE                   PeriphInterrputT = 55
	ETS_AES_INTR_SOURCE                   PeriphInterrputT = 56
	ETS_SPI2_DMA_INTR_SOURCE              PeriphInterrputT = 57
	ETS_SPI3_DMA_INTR_SOURCE              PeriphInterrputT = 58
	ETS_WDT_INTR_SOURCE                   PeriphInterrputT = 59
	ETS_TIMER1_INTR_SOURCE                PeriphInterrputT = 60
	ETS_TIMER2_INTR_SOURCE                PeriphInterrputT = 61
	ETS_TG0_T0_EDGE_INTR_SOURCE           PeriphInterrputT = 62
	ETS_TG0_T1_EDGE_INTR_SOURCE           PeriphInterrputT = 63
	ETS_TG0_WDT_EDGE_INTR_SOURCE          PeriphInterrputT = 64
	ETS_TG0_LACT_EDGE_INTR_SOURCE         PeriphInterrputT = 65
	ETS_TG1_T0_EDGE_INTR_SOURCE           PeriphInterrputT = 66
	ETS_TG1_T1_EDGE_INTR_SOURCE           PeriphInterrputT = 67
	ETS_TG1_WDT_EDGE_INTR_SOURCE          PeriphInterrputT = 68
	ETS_TG1_LACT_EDGE_INTR_SOURCE         PeriphInterrputT = 69
	ETS_CACHE_IA_INTR_SOURCE              PeriphInterrputT = 70
	ETS_SYSTIMER_TARGET0_INTR_SOURCE      PeriphInterrputT = 71
	ETS_SYSTIMER_TARGET1_INTR_SOURCE      PeriphInterrputT = 72
	ETS_SYSTIMER_TARGET2_INTR_SOURCE      PeriphInterrputT = 73
	ETS_SYSTIMER_TARGET0_EDGE_INTR_SOURCE PeriphInterrputT = 71
	ETS_SYSTIMER_TARGET1_EDGE_INTR_SOURCE PeriphInterrputT = 72
	ETS_SYSTIMER_TARGET2_EDGE_INTR_SOURCE PeriphInterrputT = 73
	ETS_ASSIST_DEBUG_INTR_SOURCE          PeriphInterrputT = 74
	ETS_PMS_PRO_IRAM0_ILG_INTR_SOURCE     PeriphInterrputT = 75
	ETS_PMS_PRO_DRAM0_ILG_INTR_SOURCE     PeriphInterrputT = 76
	ETS_PMS_PRO_DPORT_ILG_INTR_SOURCE     PeriphInterrputT = 77
	ETS_PMS_PRO_AHB_ILG_INTR_SOURCE       PeriphInterrputT = 78
	ETS_PMS_PRO_CACHE_ILG_INTR_SOURCE     PeriphInterrputT = 79
	ETS_PMS_DMA_APB_I_ILG_INTR_SOURCE     PeriphInterrputT = 80
	ETS_PMS_DMA_RX_I_ILG_INTR_SOURCE      PeriphInterrputT = 81
	ETS_PMS_DMA_TX_I_ILG_INTR_SOURCE      PeriphInterrputT = 82
	ETS_SPI_MEM_REJECT_CACHE_INTR_SOURCE  PeriphInterrputT = 83
	ETS_DMA_COPY_INTR_SOURCE              PeriphInterrputT = 84
	ETS_SPI4_DMA_INTR_SOURCE              PeriphInterrputT = 85
	ETS_SPI4_INTR_SOURCE                  PeriphInterrputT = 86
	ETS_ICACHE_PRELOAD_INTR_SOURCE        PeriphInterrputT = 87
	ETS_DCACHE_PRELOAD_INTR_SOURCE        PeriphInterrputT = 88
	ETS_APB_ADC_INTR_SOURCE               PeriphInterrputT = 89
	ETS_CRYPTO_DMA_INTR_SOURCE            PeriphInterrputT = 90
	ETS_CPU_PERI_ERROR_INTR_SOURCE        PeriphInterrputT = 91
	ETS_APB_PERI_ERROR_INTR_SOURCE        PeriphInterrputT = 92
	ETS_DCACHE_SYNC_INTR_SOURCE           PeriphInterrputT = 93
	ETS_ICACHE_SYNC_INTR_SOURCE           PeriphInterrputT = 94
	ETS_MAX_INTR_SOURCE                   PeriphInterrputT = 95
)

type PeriphModuleT c.Int

const (
	PERIPH_LEDC_MODULE           PeriphModuleT = 0
	PERIPH_UART0_MODULE          PeriphModuleT = 1
	PERIPH_UART1_MODULE          PeriphModuleT = 2
	PERIPH_USB_MODULE            PeriphModuleT = 3
	PERIPH_I2C0_MODULE           PeriphModuleT = 4
	PERIPH_I2C1_MODULE           PeriphModuleT = 5
	PERIPH_I2S0_MODULE           PeriphModuleT = 6
	PERIPH_TIMG0_MODULE          PeriphModuleT = 7
	PERIPH_TIMG1_MODULE          PeriphModuleT = 8
	PERIPH_UHCI0_MODULE          PeriphModuleT = 9
	PERIPH_UHCI1_MODULE          PeriphModuleT = 10
	PERIPH_RMT_MODULE            PeriphModuleT = 11
	PERIPH_PCNT_MODULE           PeriphModuleT = 12
	PERIPH_SPI_MODULE            PeriphModuleT = 13
	PERIPH_FSPI_MODULE           PeriphModuleT = 14
	PERIPH_HSPI_MODULE           PeriphModuleT = 15
	PERIPH_SPI2_DMA_MODULE       PeriphModuleT = 16
	PERIPH_SPI3_DMA_MODULE       PeriphModuleT = 17
	PERIPH_TWAI_MODULE           PeriphModuleT = 18
	PERIPH_RNG_MODULE            PeriphModuleT = 19
	PERIPH_WIFI_MODULE           PeriphModuleT = 20
	PERIPH_WIFI_BT_COMMON_MODULE PeriphModuleT = 21
	PERIPH_SYSTIMER_MODULE       PeriphModuleT = 22
	PERIPH_AES_MODULE            PeriphModuleT = 23
	PERIPH_SHA_MODULE            PeriphModuleT = 24
	PERIPH_RSA_MODULE            PeriphModuleT = 25
	PERIPH_CRYPTO_DMA_MODULE     PeriphModuleT = 26
	PERIPH_AES_DMA_MODULE        PeriphModuleT = 27
	PERIPH_SHA_DMA_MODULE        PeriphModuleT = 28
	PERIPH_DEDIC_GPIO_MODULE     PeriphModuleT = 29
	PERIPH_SARADC_MODULE         PeriphModuleT = 30
	PERIPH_TEMPSENSOR_MODULE     PeriphModuleT = 31
	PERIPH_MODULE_MAX            PeriphModuleT = 32
)

type GpioDevS struct {
	BtSelect c.Uint32T
	Out      c.Uint32T
	OutW1ts  c.Uint32T
	OutW1tc  c.Uint32T
	Out1     struct {
		Val c.Uint32T
	}
	Out1W1ts struct {
		Val c.Uint32T
	}
	Out1W1tc struct {
		Val c.Uint32T
	}
	SdioSelect struct {
		Val c.Uint32T
	}
	Enable     c.Uint32T
	EnableW1ts c.Uint32T
	EnableW1tc c.Uint32T
	Enable1    struct {
		Val c.Uint32T
	}
	Enable1W1ts struct {
		Val c.Uint32T
	}
	Enable1W1tc struct {
		Val c.Uint32T
	}
	Strap struct {
		Val c.Uint32T
	}
	In  c.Uint32T
	In1 struct {
		Val c.Uint32T
	}
	Status     c.Uint32T
	StatusW1ts c.Uint32T
	StatusW1tc c.Uint32T
	Status1    struct {
		Val c.Uint32T
	}
	Status1W1ts struct {
		Val c.Uint32T
	}
	Status1W1tc struct {
		Val c.Uint32T
	}
	PcpuInt    c.Uint32T
	PcpuNmiInt c.Uint32T
	CpusdioInt c.Uint32T
	PcpuInt1   struct {
		Val c.Uint32T
	}
	PcpuNmiInt1 struct {
		Val c.Uint32T
	}
	CpusdioInt1 struct {
		Val c.Uint32T
	}
	Pin [54]struct {
		Val c.Uint32T
	}
	StatusNext  c.Uint32T
	StatusNext1 struct {
		Val c.Uint32T
	}
	FuncInSelCfg [256]struct {
		Val c.Uint32T
	}
	FuncOutSelCfg [54]struct {
		Val c.Uint32T
	}
	ClockGate struct {
		Val c.Uint32T
	}
	Reserved630 c.Uint32T
	Reserved634 c.Uint32T
	Reserved638 c.Uint32T
	Reserved63c c.Uint32T
	Reserved640 c.Uint32T
	Reserved644 c.Uint32T
	Reserved648 c.Uint32T
	Reserved64c c.Uint32T
	Reserved650 c.Uint32T
	Reserved654 c.Uint32T
	Reserved658 c.Uint32T
	Reserved65c c.Uint32T
	Reserved660 c.Uint32T
	Reserved664 c.Uint32T
	Reserved668 c.Uint32T
	Reserved66c c.Uint32T
	Reserved670 c.Uint32T
	Reserved674 c.Uint32T
	Reserved678 c.Uint32T
	Reserved67c c.Uint32T
	Reserved680 c.Uint32T
	Reserved684 c.Uint32T
	Reserved688 c.Uint32T
	Reserved68c c.Uint32T
	Reserved690 c.Uint32T
	Reserved694 c.Uint32T
	Reserved698 c.Uint32T
	Reserved69c c.Uint32T
	Reserved6a0 c.Uint32T
	Reserved6a4 c.Uint32T
	Reserved6a8 c.Uint32T
	Reserved6ac c.Uint32T
	Reserved6b0 c.Uint32T
	Reserved6b4 c.Uint32T
	Reserved6b8 c.Uint32T
	Reserved6bc c.Uint32T
	Reserved6c0 c.Uint32T
	Reserved6c4 c.Uint32T
	Reserved6c8 c.Uint32T
	Reserved6cc c.Uint32T
	Reserved6d0 c.Uint32T
	Reserved6d4 c.Uint32T
	Reserved6d8 c.Uint32T
	Reserved6dc c.Uint32T
	Reserved6e0 c.Uint32T
	Reserved6e4 c.Uint32T
	Reserved6e8 c.Uint32T
	Reserved6ec c.Uint32T
	Reserved6f0 c.Uint32T
	Reserved6f4 c.Uint32T
	Reserved6f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type GpioDevT GpioDevS

type TwaiControllerSignalConnT struct {
	Controllers [1]struct {
		Module     PeriphModuleT
		IrqId      c.Int
		TxSig      c.Int
		RxSig      c.Int
		ClkOutSig  c.Int
		BusOffSig  c.Int
		StandBySig c.Int
	}
}

/* The TWAI peripheral's registers are 8bits, however the ESP32-S2 can only access
 * peripheral registers every 32bits. Therefore each TWAI register is mapped to
 * the least significant byte of every 32bits.
 */

type TwaiDevS struct {
	ModeReg struct {
		Val c.Uint32T
	}
	CommandReg struct {
		Val c.Uint32T
	}
	StatusReg struct {
		Val c.Uint32T
	}
	InterruptReg struct {
		Val c.Uint32T
	}
	InterruptEnableReg struct {
		Val c.Uint32T
	}
	Reserved14    c.Uint32T
	BusTiming0Reg struct {
		Val c.Uint32T
	}
	BusTiming1Reg struct {
		Val c.Uint32T
	}
	Reserved20               c.Uint32T
	Reserved24               c.Uint32T
	Reserved28               c.Uint32T
	ArbitrationLostCaptueReg struct {
		Val c.Uint32T
	}
	ErrorCodeCaptureReg struct {
		Val c.Uint32T
	}
	ErrorWarningLimitReg struct {
		Val c.Uint32T
	}
	RxErrorCounterReg struct {
		Val c.Uint32T
	}
	TxErrorCounterReg struct {
		Val c.Uint32T
	}
	RxMessageCounterReg struct {
		Val c.Uint32T
	}
	Reserved78      c.Uint32T
	ClockDividerReg struct {
		Val c.Uint32T
	}
}
type TwaiDevT TwaiDevS

/**
 * @brief Pin function information for a single RTCIO pad's.
 *
 * This is an internal function of the driver, and is not usually useful
 * for external use.
 */

type RtcIoDescT struct {
	Reg       c.Uint32T
	Mux       c.Uint32T
	Func      c.Uint32T
	Ie        c.Uint32T
	Pullup    c.Uint32T
	Pulldown  c.Uint32T
	Slpsel    c.Uint32T
	Slpie     c.Uint32T
	Slpoe     c.Uint32T
	Hold      c.Uint32T
	HoldForce c.Uint32T
	DrvV      c.Uint32T
	DrvS      c.Uint32T
	RtcNum    c.Int
}

type I2sDevS struct {
	Reserved0 c.Uint32T
	Reserved4 c.Uint32T
	Conf      struct {
		Val c.Uint32T
	}
	IntRaw struct {
		Val c.Uint32T
	}
	IntSt struct {
		Val c.Uint32T
	}
	IntEna struct {
		Val c.Uint32T
	}
	IntClr struct {
		Val c.Uint32T
	}
	Timing struct {
		Val c.Uint32T
	}
	FifoConf struct {
		Val c.Uint32T
	}
	RxEofNum       c.Uint32T
	ConfSingleData c.Uint32T
	ConfChan       struct {
		Val c.Uint32T
	}
	OutLink struct {
		Val c.Uint32T
	}
	InLink struct {
		Val c.Uint32T
	}
	OutEofDesAddr    c.Uint32T
	InEofDesAddr     c.Uint32T
	OutEofBfrDesAddr c.Uint32T
	AhbTest          struct {
		Val c.Uint32T
	}
	InLinkDscr     c.Uint32T
	InLinkDscrBf0  c.Uint32T
	InLinkDscrBf1  c.Uint32T
	OutLinkDscr    c.Uint32T
	OutLinkDscrBf0 c.Uint32T
	OutLinkDscrBf1 c.Uint32T
	LcConf         struct {
		Val c.Uint32T
	}
	OutFifoPush struct {
		Val c.Uint32T
	}
	InFifoPop struct {
		Val c.Uint32T
	}
	LcState0 struct {
		Val c.Uint32T
	}
	LcState1 struct {
		Val c.Uint32T
	}
	LcHungConf struct {
		Val c.Uint32T
	}
	Reserved78 c.Uint32T
	Reserved7c c.Uint32T
	Reserved80 c.Uint32T
	Reserved84 c.Uint32T
	Reserved88 c.Uint32T
	Reserved8c c.Uint32T
	Reserved90 c.Uint32T
	Reserved94 c.Uint32T
	Reserved98 c.Uint32T
	Reserved9c c.Uint32T
	Conf1      struct {
		Val c.Uint32T
	}
	PdConf struct {
		Val c.Uint32T
	}
	Conf2 struct {
		Val c.Uint32T
	}
	ClkmConf struct {
		Val c.Uint32T
	}
	SampleRateConf struct {
		Val c.Uint32T
	}
	ReservedB4 c.Uint32T
	ReservedB8 c.Uint32T
	State      struct {
		Val c.Uint32T
	}
	ReservedC0 c.Uint32T
	ReservedC4 c.Uint32T
	ReservedC8 c.Uint32T
	ReservedCc c.Uint32T
	ReservedD0 c.Uint32T
	ReservedD4 c.Uint32T
	ReservedD8 c.Uint32T
	ReservedDc c.Uint32T
	ReservedE0 c.Uint32T
	ReservedE4 c.Uint32T
	ReservedE8 c.Uint32T
	ReservedEc c.Uint32T
	ReservedF0 c.Uint32T
	ReservedF4 c.Uint32T
	ReservedF8 c.Uint32T
	Date       c.Uint32T
}
type I2sDevT I2sDevS

/*
Stores a bunch of per-I2S-peripheral data.
*/
type I2sSignalConnT struct {
	MckOutSig c.Uint8T
	MckInSig  c.Uint8T
	MTxBckSig c.Uint8T
	MRxBckSig c.Uint8T
	MTxWsSig  c.Uint8T
	MRxWsSig  c.Uint8T
	STxBckSig c.Uint8T
	SRxBckSig c.Uint8T
	STxWsSig  c.Uint8T
	SRxWsSig  c.Uint8T
	Irq       c.Uint8T
}

type UartDevS struct {
	AhbFifo struct {
		Val c.Uint32T
	}
	IntRaw struct {
		Val c.Uint32T
	}
	IntSt struct {
		Val c.Uint32T
	}
	IntEna struct {
		Val c.Uint32T
	}
	IntClr struct {
		Val c.Uint32T
	}
	ClkDiv struct {
		Val c.Uint32T
	}
	AutoBaud struct {
		Val c.Uint32T
	}
	Status struct {
		Val c.Uint32T
	}
	Conf0 struct {
		Val c.Uint32T
	}
	Conf1 struct {
		Val c.Uint32T
	}
	Lowpulse struct {
		Val c.Uint32T
	}
	Highpulse struct {
		Val c.Uint32T
	}
	RxdCnt struct {
		Val c.Uint32T
	}
	FlowConf struct {
		Val c.Uint32T
	}
	SleepConf struct {
		Val c.Uint32T
	}
	SwfcConf0 struct {
		Val c.Uint32T
	}
	SwfcConf1 struct {
		Val c.Uint32T
	}
	IdleConf struct {
		Val c.Uint32T
	}
	Rs485Conf struct {
		Val c.Uint32T
	}
	AtCmdPrecnt struct {
		Val c.Uint32T
	}
	AtCmdPostcnt struct {
		Val c.Uint32T
	}
	AtCmdGaptout struct {
		Val c.Uint32T
	}
	AtCmdChar struct {
		Val c.Uint32T
	}
	MemConf struct {
		Val c.Uint32T
	}
	MemTxStatus struct {
		Val c.Uint32T
	}
	MemRxStatus struct {
		Val c.Uint32T
	}
	FsmStatus struct {
		Val c.Uint32T
	}
	Pospulse struct {
		Val c.Uint32T
	}
	Negpulse struct {
		Val c.Uint32T
	}
	Date c.Uint32T
	Id   c.Uint32T
}
type UartDevT UartDevS

type LedcDevS struct {
	ChannelGroup [1]struct {
		Channel [8]struct {
			Conf0 struct {
				Val c.Uint32T
			}
			Hpoint struct {
				Val c.Uint32T
			}
			Duty struct {
				Val c.Uint32T
			}
			Conf1 struct {
				Val c.Uint32T
			}
			DutyRd struct {
				Val c.Uint32T
			}
		}
	}
	TimerGroup [1]struct {
		Timer [4]struct {
			Conf struct {
				Val c.Uint32T
			}
			Value struct {
				Val c.Uint32T
			}
		}
	}
	IntRaw struct {
		Val c.Uint32T
	}
	IntSt struct {
		Val c.Uint32T
	}
	IntEna struct {
		Val c.Uint32T
	}
	IntClr struct {
		Val c.Uint32T
	}
	Conf struct {
		Val c.Uint32T
	}
	ReservedD4 c.Uint32T
	ReservedD8 c.Uint32T
	ReservedDc c.Uint32T
	ReservedE0 c.Uint32T
	ReservedE4 c.Uint32T
	ReservedE8 c.Uint32T
	ReservedEc c.Uint32T
	ReservedF0 c.Uint32T
	ReservedF4 c.Uint32T
	ReservedF8 c.Uint32T
	Date       c.Uint32T
}
type LedcDevT LedcDevS

/*
Stores a bunch of per-ledc-peripheral data.
*/
type LedcSignalConnT struct {
	SigOut0Idx c.Uint8T
}

type I2cDevS struct {
	SclLowPeriod struct {
		Val c.Uint32T
	}
	Ctr struct {
		Val c.Uint32T
	}
	StatusReg struct {
		Val c.Uint32T
	}
	Timeout struct {
		Val c.Uint32T
	}
	SlaveAddr struct {
		Val c.Uint32T
	}
	FifoSt struct {
		Val c.Uint32T
	}
	FifoConf struct {
		Val c.Uint32T
	}
	FifoData struct {
		Val c.Uint32T
	}
	IntRaw struct {
		Val c.Uint32T
	}
	IntClr struct {
		Val c.Uint32T
	}
	IntEna struct {
		Val c.Uint32T
	}
	IntStatus struct {
		Val c.Uint32T
	}
	SdaHold struct {
		Val c.Uint32T
	}
	SdaSample struct {
		Val c.Uint32T
	}
	SclHighPeriod struct {
		Val c.Uint32T
	}
	Reserved3c   c.Uint32T
	SclStartHold struct {
		Val c.Uint32T
	}
	SclRstartSetup struct {
		Val c.Uint32T
	}
	SclStopHold struct {
		Val c.Uint32T
	}
	SclStopSetup struct {
		Val c.Uint32T
	}
	SclFilterCfg struct {
		Val c.Uint32T
	}
	SdaFilterCfg struct {
		Val c.Uint32T
	}
	Command [16]struct {
		Val c.Uint32T
	}
	SclStTimeOut struct {
		Val c.Uint32T
	}
	SclMainStTimeOut struct {
		Val c.Uint32T
	}
	SclSpConf struct {
		Val c.Uint32T
	}
	SclStretchConf struct {
		Val c.Uint32T
	}
	ReservedA8      c.Uint32T
	ReservedAc      c.Uint32T
	ReservedB0      c.Uint32T
	ReservedB4      c.Uint32T
	ReservedB8      c.Uint32T
	ReservedBc      c.Uint32T
	ReservedC0      c.Uint32T
	ReservedC4      c.Uint32T
	ReservedC8      c.Uint32T
	ReservedCc      c.Uint32T
	ReservedD0      c.Uint32T
	ReservedD4      c.Uint32T
	ReservedD8      c.Uint32T
	ReservedDc      c.Uint32T
	ReservedE0      c.Uint32T
	ReservedE4      c.Uint32T
	ReservedE8      c.Uint32T
	ReservedEc      c.Uint32T
	ReservedF0      c.Uint32T
	ReservedF4      c.Uint32T
	Date            c.Uint32T
	ReservedFc      c.Uint32T
	TxfifoStartAddr c.Uint32T
	Reserved104     c.Uint32T
	Reserved108     c.Uint32T
	Reserved10c     c.Uint32T
	Reserved110     c.Uint32T
	Reserved114     c.Uint32T
	Reserved118     c.Uint32T
	Reserved11c     c.Uint32T
	Reserved120     c.Uint32T
	Reserved124     c.Uint32T
	Reserved128     c.Uint32T
	Reserved12c     c.Uint32T
	Reserved130     c.Uint32T
	Reserved134     c.Uint32T
	Reserved138     c.Uint32T
	Reserved13c     c.Uint32T
	Reserved140     c.Uint32T
	Reserved144     c.Uint32T
	Reserved148     c.Uint32T
	Reserved14c     c.Uint32T
	Reserved150     c.Uint32T
	Reserved154     c.Uint32T
	Reserved158     c.Uint32T
	Reserved15c     c.Uint32T
	Reserved160     c.Uint32T
	Reserved164     c.Uint32T
	Reserved168     c.Uint32T
	Reserved16c     c.Uint32T
	Reserved170     c.Uint32T
	Reserved174     c.Uint32T
	Reserved178     c.Uint32T
	Reserved17c     c.Uint32T
	FifoStartAddr   c.Uint32T
}
type I2cDevT I2cDevS

type I2cSignalConnT struct {
	SdaOutSig c.Uint8T
	SdaInSig  c.Uint8T
	SclOutSig c.Uint8T
	SclInSig  c.Uint8T
	IomuxFunc c.Uint8T
	Irq       c.Uint8T
}
type SLEEPMODE c.Int

const (
	AWAKE       SLEEPMODE = 0
	LIGHT_SLEEP SLEEPMODE = 1
	DEEP_SLEEP  SLEEPMODE = 2
)

type RESETREASON c.Int

const (
	NO_MEAN                RESETREASON = 0
	POWERON_RESET          RESETREASON = 1
	RTC_SW_SYS_RESET       RESETREASON = 3
	DEEPSLEEP_RESET        RESETREASON = 5
	TG0WDT_SYS_RESET       RESETREASON = 7
	TG1WDT_SYS_RESET       RESETREASON = 8
	RTCWDT_SYS_RESET       RESETREASON = 9
	INTRUSION_RESET        RESETREASON = 10
	TG0WDT_CPU_RESET       RESETREASON = 11
	RTC_SW_CPU_RESET       RESETREASON = 12
	RTCWDT_CPU_RESET       RESETREASON = 13
	RTCWDT_BROWN_OUT_RESET RESETREASON = 15
	RTCWDT_RTC_RESET       RESETREASON = 16
	TG1WDT_CPU_RESET       RESETREASON = 17
	SUPER_WDT_RESET        RESETREASON = 18
	GLITCH_RTC_RESET       RESETREASON = 19
	EFUSE_RESET            RESETREASON = 20
)

type WAKEUPREASON c.Int

const (
	NO_SLEEP        WAKEUPREASON = 0
	EXT_EVENT0_TRIG WAKEUPREASON = 1
	EXT_EVENT1_TRIG WAKEUPREASON = 2
	GPIO_TRIG       WAKEUPREASON = 4
	TIMER_EXPIRE    WAKEUPREASON = 8
	SDIO_TRIG       WAKEUPREASON = 16
	MAC_TRIG        WAKEUPREASON = 32
	UART0_TRIG      WAKEUPREASON = 64
	UART1_TRIG      WAKEUPREASON = 128
	TOUCH_TRIG      WAKEUPREASON = 256
	SAR_TRIG        WAKEUPREASON = 512
	BT_TRIG         WAKEUPREASON = 1024
	RISCV_TRIG      WAKEUPREASON = 2048
	XTAL_DEAD_TRIG  WAKEUPREASON = 4096
	RISCV_TRAP_TRIG WAKEUPREASON = 8192
	USB_TRIG        WAKEUPREASON = 16384
)

type WAKEUPENABLE c.Int

const (
	DISEN_WAKEUP       WAKEUPENABLE = 0
	EXT_EVENT0_TRIG_EN WAKEUPENABLE = 1
	EXT_EVENT1_TRIG_EN WAKEUPENABLE = 2
	GPIO_TRIG_EN       WAKEUPENABLE = 4
	TIMER_EXPIRE_EN    WAKEUPENABLE = 8
	SDIO_TRIG_EN       WAKEUPENABLE = 16
	MAC_TRIG_EN        WAKEUPENABLE = 32
	UART0_TRIG_EN      WAKEUPENABLE = 64
	UART1_TRIG_EN      WAKEUPENABLE = 128
	TOUCH_TRIG_EN      WAKEUPENABLE = 256
	SAR_TRIG_EN        WAKEUPENABLE = 512
	BT_TRIG_EN         WAKEUPENABLE = 1024
	RISCV_TRIG_EN      WAKEUPENABLE = 2048
	XTAL_DEAD_TRIG_EN  WAKEUPENABLE = 4096
	RISCV_TRAP_TRIG_EN WAKEUPENABLE = 8192
	USB_TRIG_EN        WAKEUPENABLE = 16384
)

type SpiDevS struct {
	Cmd struct {
		Val c.Uint32T
	}
	Addr c.Uint32T
	Ctrl struct {
		Val c.Uint32T
	}
	Ctrl1 struct {
		Val c.Uint32T
	}
	Ctrl2 struct {
		Val c.Uint32T
	}
	Clock struct {
		Val c.Uint32T
	}
	User struct {
		Val c.Uint32T
	}
	User1 struct {
		Val c.Uint32T
	}
	User2 struct {
		Val c.Uint32T
	}
	MosiDlen struct {
		Val c.Uint32T
	}
	MisoDlen struct {
		Val c.Uint32T
	}
	Misc struct {
		Val c.Uint32T
	}
	Slave struct {
		Val c.Uint32T
	}
	Slave1 struct {
		Val c.Uint32T
	}
	SlvWrbufDlen struct {
		Val c.Uint32T
	}
	SlvRdbufDlen struct {
		Val c.Uint32T
	}
	SlvRdByte struct {
		Val c.Uint32T
	}
	Fsm struct {
		Val c.Uint32T
	}
	Hold struct {
		Val c.Uint32T
	}
	DmaConf struct {
		Val c.Uint32T
	}
	DmaOutLink struct {
		Val c.Uint32T
	}
	DmaInLink struct {
		Val c.Uint32T
	}
	DmaIntEna struct {
		Val c.Uint32T
	}
	DmaIntRaw struct {
		Val c.Uint32T
	}
	DmaIntSt struct {
		Val c.Uint32T
	}
	DmaIntClr struct {
		Val c.Uint32T
	}
	DmaInErrEofDesAddr  c.Uint32T
	DmaInSucEofDesAddr  c.Uint32T
	DmaInlinkDscr       c.Uint32T
	DmaInlinkDscrBf0    c.Uint32T
	DmaInlinkDscrBf1    c.Uint32T
	DmaOutEofBfrDesAddr c.Uint32T
	DmaOutEofDesAddr    c.Uint32T
	DmaOutlinkDscr      c.Uint32T
	DmaOutlinkDscrBf0   c.Uint32T
	DmaOutlinkDscrBf1   c.Uint32T
	DmaOutStatus        struct {
		Val c.Uint32T
	}
	DmaInStatus struct {
		Val c.Uint32T
	}
	DataBuf [18]c.Uint32T
	DinMode struct {
		Val c.Uint32T
	}
	DinNum struct {
		Val c.Uint32T
	}
	DoutMode struct {
		Val c.Uint32T
	}
	DoutNum struct {
		Val c.Uint32T
	}
	LcdCtrl struct {
		Val c.Uint32T
	}
	LcdCtrl1 struct {
		Val c.Uint32T
	}
	LcdCtrl2 struct {
		Val c.Uint32T
	}
	LcdDMode struct {
		Val c.Uint32T
	}
	LcdDNum struct {
		Val c.Uint32T
	}
	Reserved104 c.Uint32T
	Reserved108 c.Uint32T
	Reserved10c c.Uint32T
	Reserved110 c.Uint32T
	Reserved114 c.Uint32T
	Reserved118 c.Uint32T
	Reserved11c c.Uint32T
	Reserved120 c.Uint32T
	Reserved124 c.Uint32T
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	Reserved14c c.Uint32T
	Reserved150 c.Uint32T
	Reserved154 c.Uint32T
	Reserved158 c.Uint32T
	Reserved15c c.Uint32T
	Reserved160 c.Uint32T
	Reserved164 c.Uint32T
	Reserved168 c.Uint32T
	Reserved16c c.Uint32T
	Reserved170 c.Uint32T
	Reserved174 c.Uint32T
	Reserved178 c.Uint32T
	Reserved17c c.Uint32T
	Reserved180 c.Uint32T
	Reserved184 c.Uint32T
	Reserved188 c.Uint32T
	Reserved18c c.Uint32T
	Reserved190 c.Uint32T
	Reserved194 c.Uint32T
	Reserved198 c.Uint32T
	Reserved19c c.Uint32T
	Reserved1a0 c.Uint32T
	Reserved1a4 c.Uint32T
	Reserved1a8 c.Uint32T
	Reserved1ac c.Uint32T
	Reserved1b0 c.Uint32T
	Reserved1b4 c.Uint32T
	Reserved1b8 c.Uint32T
	Reserved1bc c.Uint32T
	Reserved1c0 c.Uint32T
	Reserved1c4 c.Uint32T
	Reserved1c8 c.Uint32T
	Reserved1cc c.Uint32T
	Reserved1d0 c.Uint32T
	Reserved1d4 c.Uint32T
	Reserved1d8 c.Uint32T
	Reserved1dc c.Uint32T
	Reserved1e0 c.Uint32T
	Reserved1e4 c.Uint32T
	Reserved1e8 c.Uint32T
	Reserved1ec c.Uint32T
	Reserved1f0 c.Uint32T
	Reserved1f4 c.Uint32T
	Reserved1f8 c.Uint32T
	Reserved1fc c.Uint32T
	Reserved200 c.Uint32T
	Reserved204 c.Uint32T
	Reserved208 c.Uint32T
	Reserved20c c.Uint32T
	Reserved210 c.Uint32T
	Reserved214 c.Uint32T
	Reserved218 c.Uint32T
	Reserved21c c.Uint32T
	Reserved220 c.Uint32T
	Reserved224 c.Uint32T
	Reserved228 c.Uint32T
	Reserved22c c.Uint32T
	Reserved230 c.Uint32T
	Reserved234 c.Uint32T
	Reserved238 c.Uint32T
	Reserved23c c.Uint32T
	Reserved240 c.Uint32T
	Reserved244 c.Uint32T
	Reserved248 c.Uint32T
	Reserved24c c.Uint32T
	Reserved250 c.Uint32T
	Reserved254 c.Uint32T
	Reserved258 c.Uint32T
	Reserved25c c.Uint32T
	Reserved260 c.Uint32T
	Reserved264 c.Uint32T
	Reserved268 c.Uint32T
	Reserved26c c.Uint32T
	Reserved270 c.Uint32T
	Reserved274 c.Uint32T
	Reserved278 c.Uint32T
	Reserved27c c.Uint32T
	Reserved280 c.Uint32T
	Reserved284 c.Uint32T
	Reserved288 c.Uint32T
	Reserved28c c.Uint32T
	Reserved290 c.Uint32T
	Reserved294 c.Uint32T
	Reserved298 c.Uint32T
	Reserved29c c.Uint32T
	Reserved2a0 c.Uint32T
	Reserved2a4 c.Uint32T
	Reserved2a8 c.Uint32T
	Reserved2ac c.Uint32T
	Reserved2b0 c.Uint32T
	Reserved2b4 c.Uint32T
	Reserved2b8 c.Uint32T
	Reserved2bc c.Uint32T
	Reserved2c0 c.Uint32T
	Reserved2c4 c.Uint32T
	Reserved2c8 c.Uint32T
	Reserved2cc c.Uint32T
	Reserved2d0 c.Uint32T
	Reserved2d4 c.Uint32T
	Reserved2d8 c.Uint32T
	Reserved2dc c.Uint32T
	Reserved2e0 c.Uint32T
	Reserved2e4 c.Uint32T
	Reserved2e8 c.Uint32T
	Reserved2ec c.Uint32T
	Reserved2f0 c.Uint32T
	Reserved2f4 c.Uint32T
	Reserved2f8 c.Uint32T
	Reserved2fc c.Uint32T
	Reserved300 c.Uint32T
	Reserved304 c.Uint32T
	Reserved308 c.Uint32T
	Reserved30c c.Uint32T
	Reserved310 c.Uint32T
	Reserved314 c.Uint32T
	Reserved318 c.Uint32T
	Reserved31c c.Uint32T
	Reserved320 c.Uint32T
	Reserved324 c.Uint32T
	Reserved328 c.Uint32T
	Reserved32c c.Uint32T
	Reserved330 c.Uint32T
	Reserved334 c.Uint32T
	Reserved338 c.Uint32T
	Reserved33c c.Uint32T
	Reserved340 c.Uint32T
	Reserved344 c.Uint32T
	Reserved348 c.Uint32T
	Reserved34c c.Uint32T
	Reserved350 c.Uint32T
	Reserved354 c.Uint32T
	Reserved358 c.Uint32T
	Reserved35c c.Uint32T
	Reserved360 c.Uint32T
	Reserved364 c.Uint32T
	Reserved368 c.Uint32T
	Reserved36c c.Uint32T
	Reserved370 c.Uint32T
	Reserved374 c.Uint32T
	Reserved378 c.Uint32T
	Reserved37c c.Uint32T
	Reserved380 c.Uint32T
	Reserved384 c.Uint32T
	Reserved388 c.Uint32T
	Reserved38c c.Uint32T
	Reserved390 c.Uint32T
	Reserved394 c.Uint32T
	Reserved398 c.Uint32T
	Reserved39c c.Uint32T
	Reserved3a0 c.Uint32T
	Reserved3a4 c.Uint32T
	Reserved3a8 c.Uint32T
	Reserved3ac c.Uint32T
	Reserved3b0 c.Uint32T
	Reserved3b4 c.Uint32T
	Reserved3b8 c.Uint32T
	Reserved3bc c.Uint32T
	Reserved3c0 c.Uint32T
	Reserved3c4 c.Uint32T
	Reserved3c8 c.Uint32T
	Reserved3cc c.Uint32T
	Reserved3d0 c.Uint32T
	Reserved3d4 c.Uint32T
	Reserved3d8 c.Uint32T
	Reserved3dc c.Uint32T
	Reserved3e0 c.Uint32T
	Reserved3e4 c.Uint32T
	Reserved3e8 c.Uint32T
	Reserved3ec c.Uint32T
	Reserved3f0 c.Uint32T
	Reserved3f4 c.Uint32T
	Reserved3f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type SpiDevT SpiDevS

type SpiMemDevS struct {
	Cmd struct {
		Val c.Uint32T
	}
	Addr c.Uint32T
	Ctrl struct {
		Val c.Uint32T
	}
	Ctrl1 struct {
		Val c.Uint32T
	}
	Ctrl2 struct {
		Val c.Uint32T
	}
	Clock struct {
		Val c.Uint32T
	}
	User struct {
		Val c.Uint32T
	}
	User1 struct {
		Val c.Uint32T
	}
	User2 struct {
		Val c.Uint32T
	}
	MosiDlen struct {
		Val c.Uint32T
	}
	MisoDlen struct {
		Val c.Uint32T
	}
	RdStatus struct {
		Val c.Uint32T
	}
	ExtAddr c.Uint32T
	Misc    struct {
		Val c.Uint32T
	}
	TxCrc      c.Uint32T
	CacheFctrl struct {
		Val c.Uint32T
	}
	CacheSctrl struct {
		Val c.Uint32T
	}
	SramCmd struct {
		Val c.Uint32T
	}
	SramDrdCmd struct {
		Val c.Uint32T
	}
	SramDwrCmd struct {
		Val c.Uint32T
	}
	SramClk struct {
		Val c.Uint32T
	}
	Fsm struct {
		Val c.Uint32T
	}
	DataBuf        [16]c.Uint32T
	FlashWaitiCtrl struct {
		Val c.Uint32T
	}
	FlashSusCmd struct {
		Val c.Uint32T
	}
	FlashSusCtrl struct {
		Val c.Uint32T
	}
	SusStatus struct {
		Val c.Uint32T
	}
	TimingCali struct {
		Val c.Uint32T
	}
	DinMode struct {
		Val c.Uint32T
	}
	DinNum struct {
		Val c.Uint32T
	}
	DoutMode struct {
		Val c.Uint32T
	}
	DoutNum struct {
		Val c.Uint32T
	}
	SpiSmemTimingCali struct {
		Val c.Uint32T
	}
	SpiSmemDinMode struct {
		Val c.Uint32T
	}
	SpiSmemDinNum struct {
		Val c.Uint32T
	}
	SpiSmemDoutMode struct {
		Val c.Uint32T
	}
	SpiSmemDoutNum struct {
		Val c.Uint32T
	}
	SpiSmemAc struct {
		Val c.Uint32T
	}
	Ddr struct {
		Val c.Uint32T
	}
	SpiSmemDdr struct {
		Val c.Uint32T
	}
	ClockGate struct {
		Val c.Uint32T
	}
	SpiCoreClkSel struct {
		Val c.Uint32T
	}
	ReservedE4  c.Uint32T
	ReservedE8  c.Uint32T
	ReservedEc  c.Uint32T
	ReservedF0  c.Uint32T
	ReservedF4  c.Uint32T
	ReservedF8  c.Uint32T
	ReservedFc  c.Uint32T
	Reserved100 c.Uint32T
	Reserved104 c.Uint32T
	Reserved108 c.Uint32T
	Reserved10c c.Uint32T
	Reserved110 c.Uint32T
	Reserved114 c.Uint32T
	Reserved118 c.Uint32T
	Reserved11c c.Uint32T
	Reserved120 c.Uint32T
	Reserved124 c.Uint32T
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	Reserved14c c.Uint32T
	Reserved150 c.Uint32T
	Reserved154 c.Uint32T
	Reserved158 c.Uint32T
	Reserved15c c.Uint32T
	Reserved160 c.Uint32T
	Reserved164 c.Uint32T
	Reserved168 c.Uint32T
	Reserved16c c.Uint32T
	Reserved170 c.Uint32T
	Reserved174 c.Uint32T
	Reserved178 c.Uint32T
	Reserved17c c.Uint32T
	Reserved180 c.Uint32T
	Reserved184 c.Uint32T
	Reserved188 c.Uint32T
	Reserved18c c.Uint32T
	Reserved190 c.Uint32T
	Reserved194 c.Uint32T
	Reserved198 c.Uint32T
	Reserved19c c.Uint32T
	Reserved1a0 c.Uint32T
	Reserved1a4 c.Uint32T
	Reserved1a8 c.Uint32T
	Reserved1ac c.Uint32T
	Reserved1b0 c.Uint32T
	Reserved1b4 c.Uint32T
	Reserved1b8 c.Uint32T
	Reserved1bc c.Uint32T
	Reserved1c0 c.Uint32T
	Reserved1c4 c.Uint32T
	Reserved1c8 c.Uint32T
	Reserved1cc c.Uint32T
	Reserved1d0 c.Uint32T
	Reserved1d4 c.Uint32T
	Reserved1d8 c.Uint32T
	Reserved1dc c.Uint32T
	Reserved1e0 c.Uint32T
	Reserved1e4 c.Uint32T
	Reserved1e8 c.Uint32T
	Reserved1ec c.Uint32T
	Reserved1f0 c.Uint32T
	Reserved1f4 c.Uint32T
	Reserved1f8 c.Uint32T
	Reserved1fc c.Uint32T
	Reserved200 c.Uint32T
	Reserved204 c.Uint32T
	Reserved208 c.Uint32T
	Reserved20c c.Uint32T
	Reserved210 c.Uint32T
	Reserved214 c.Uint32T
	Reserved218 c.Uint32T
	Reserved21c c.Uint32T
	Reserved220 c.Uint32T
	Reserved224 c.Uint32T
	Reserved228 c.Uint32T
	Reserved22c c.Uint32T
	Reserved230 c.Uint32T
	Reserved234 c.Uint32T
	Reserved238 c.Uint32T
	Reserved23c c.Uint32T
	Reserved240 c.Uint32T
	Reserved244 c.Uint32T
	Reserved248 c.Uint32T
	Reserved24c c.Uint32T
	Reserved250 c.Uint32T
	Reserved254 c.Uint32T
	Reserved258 c.Uint32T
	Reserved25c c.Uint32T
	Reserved260 c.Uint32T
	Reserved264 c.Uint32T
	Reserved268 c.Uint32T
	Reserved26c c.Uint32T
	Reserved270 c.Uint32T
	Reserved274 c.Uint32T
	Reserved278 c.Uint32T
	Reserved27c c.Uint32T
	Reserved280 c.Uint32T
	Reserved284 c.Uint32T
	Reserved288 c.Uint32T
	Reserved28c c.Uint32T
	Reserved290 c.Uint32T
	Reserved294 c.Uint32T
	Reserved298 c.Uint32T
	Reserved29c c.Uint32T
	Reserved2a0 c.Uint32T
	Reserved2a4 c.Uint32T
	Reserved2a8 c.Uint32T
	Reserved2ac c.Uint32T
	Reserved2b0 c.Uint32T
	Reserved2b4 c.Uint32T
	Reserved2b8 c.Uint32T
	Reserved2bc c.Uint32T
	Reserved2c0 c.Uint32T
	Reserved2c4 c.Uint32T
	Reserved2c8 c.Uint32T
	Reserved2cc c.Uint32T
	Reserved2d0 c.Uint32T
	Reserved2d4 c.Uint32T
	Reserved2d8 c.Uint32T
	Reserved2dc c.Uint32T
	Reserved2e0 c.Uint32T
	Reserved2e4 c.Uint32T
	Reserved2e8 c.Uint32T
	Reserved2ec c.Uint32T
	Reserved2f0 c.Uint32T
	Reserved2f4 c.Uint32T
	Reserved2f8 c.Uint32T
	Reserved2fc c.Uint32T
	Reserved300 c.Uint32T
	Reserved304 c.Uint32T
	Reserved308 c.Uint32T
	Reserved30c c.Uint32T
	Reserved310 c.Uint32T
	Reserved314 c.Uint32T
	Reserved318 c.Uint32T
	Reserved31c c.Uint32T
	Reserved320 c.Uint32T
	Reserved324 c.Uint32T
	Reserved328 c.Uint32T
	Reserved32c c.Uint32T
	Reserved330 c.Uint32T
	Reserved334 c.Uint32T
	Reserved338 c.Uint32T
	Reserved33c c.Uint32T
	Reserved340 c.Uint32T
	Reserved344 c.Uint32T
	Reserved348 c.Uint32T
	Reserved34c c.Uint32T
	Reserved350 c.Uint32T
	Reserved354 c.Uint32T
	Reserved358 c.Uint32T
	Reserved35c c.Uint32T
	Reserved360 c.Uint32T
	Reserved364 c.Uint32T
	Reserved368 c.Uint32T
	Reserved36c c.Uint32T
	Reserved370 c.Uint32T
	Reserved374 c.Uint32T
	Reserved378 c.Uint32T
	Reserved37c c.Uint32T
	Reserved380 c.Uint32T
	Reserved384 c.Uint32T
	Reserved388 c.Uint32T
	Reserved38c c.Uint32T
	Reserved390 c.Uint32T
	Reserved394 c.Uint32T
	Reserved398 c.Uint32T
	Reserved39c c.Uint32T
	Reserved3a0 c.Uint32T
	Reserved3a4 c.Uint32T
	Reserved3a8 c.Uint32T
	Reserved3ac c.Uint32T
	Reserved3b0 c.Uint32T
	Reserved3b4 c.Uint32T
	Reserved3b8 c.Uint32T
	Reserved3bc c.Uint32T
	Reserved3c0 c.Uint32T
	Reserved3c4 c.Uint32T
	Reserved3c8 c.Uint32T
	Reserved3cc c.Uint32T
	Reserved3d0 c.Uint32T
	Reserved3d4 c.Uint32T
	Reserved3d8 c.Uint32T
	Reserved3dc c.Uint32T
	Reserved3e0 c.Uint32T
	Reserved3e4 c.Uint32T
	Reserved3e8 c.Uint32T
	Reserved3ec c.Uint32T
	Reserved3f0 c.Uint32T
	Reserved3f4 c.Uint32T
	Reserved3f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type SpiMemDevT SpiMemDevS

/*
Stores a bunch of per-spi-peripheral data.
*/
type SpiSignalConnT struct {
	SpiclkOut      c.Uint8T
	SpiclkIn       c.Uint8T
	SpidOut        c.Uint8T
	SpiqOut        c.Uint8T
	SpiwpOut       c.Uint8T
	SpihdOut       c.Uint8T
	Spid4Out       c.Uint8T
	Spid5Out       c.Uint8T
	Spid6Out       c.Uint8T
	Spid7Out       c.Uint8T
	SpidIn         c.Uint8T
	SpiqIn         c.Uint8T
	SpiwpIn        c.Uint8T
	SpihdIn        c.Uint8T
	Spid4In        c.Uint8T
	Spid5In        c.Uint8T
	Spid6In        c.Uint8T
	Spid7In        c.Uint8T
	SpicsOut       [6]c.Uint8T
	SpicsIn        c.Uint8T
	SpidqsOut      c.Uint8T
	SpicdOut       c.Uint8T
	SpiclkIomuxPin c.Uint8T
	SpidIomuxPin   c.Uint8T
	SpiqIomuxPin   c.Uint8T
	SpiwpIomuxPin  c.Uint8T
	SpihdIomuxPin  c.Uint8T
	Spics0IomuxPin c.Uint8T
	Irq            c.Uint8T
	IrqDma         c.Uint8T
	Func           c.Int
	Hw             *SpiDevT
}
