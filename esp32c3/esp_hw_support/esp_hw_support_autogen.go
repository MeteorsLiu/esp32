package esp_hw_support

import (
	"github.com/goplus/lib/c"
	_ "unsafe"
)

const X_NEWLIB_VERSION_H__ = 1
const X_NEWLIB_VERSION = "4.3.0"
const X__NEWLIB__ = 4
const X__NEWLIB_MINOR__ = 3
const X__NEWLIB_PATCHLEVEL__ = 0
const X_ATFILE_SOURCE = 1
const X_DEFAULT_SOURCE = 1
const X_ISOC99_SOURCE = 1
const X_ISOC11_SOURCE = 1
const X_POSIX_SOURCE = 1
const X_XOPEN_SOURCE = 700
const X_XOPEN_SOURCE_EXTENDED = 1
const X__ATFILE_VISIBLE = 1
const X__BSD_VISIBLE = 1
const X__GNU_VISIBLE = 1
const X__ISO_C_VISIBLE = 2011
const X__LARGEFILE_VISIBLE = 1
const X__MISC_VISIBLE = 1
const X__POSIX_VISIBLE = 200809
const X__SVID_VISIBLE = 1
const X__XSI_VISIBLE = 700
const X__SSP_FORTIFY_LEVEL = 0
const X_POSIX_THREADS = 1
const X_POSIX_TIMEOUTS = 1
const X_POSIX_TIMERS = 1
const X_UNIX98_THREAD_MUTEX_ATTRIBUTES = 1
const X__have_longlong64 = 1
const X__have_long32 = 1
const X___int8_t_defined = 1
const X___int16_t_defined = 1
const X___int32_t_defined = 1
const X___int64_t_defined = 1
const X___int_least8_t_defined = 1
const X___int_least16_t_defined = 1
const X___int_least32_t_defined = 1
const X___int_least64_t_defined = 1
const X__INT8 = "hh"
const X__INT16 = "h"
const X__INT64 = "ll"
const X__FAST8 = "hh"
const X__FAST16 = "h"
const X__FAST64 = "ll"
const X__LEAST8 = "hh"
const X__LEAST16 = "h"
const X__LEAST64 = "ll"
const X__int8_t_defined = 1
const X__int16_t_defined = 1
const X__int32_t_defined = 1
const X__int64_t_defined = 1
const X__int_least8_t_defined = 1
const X__int_least16_t_defined = 1
const X__int_least32_t_defined = 1
const X__int_least64_t_defined = 1
const X__int_fast8_t_defined = 1
const X__int_fast16_t_defined = 1
const X__int_fast32_t_defined = 1
const X__int_fast64_t_defined = 1
const X__bool_true_false_are_defined = 1
const True = 1
const False = 0
const SOC_ADC_SUPPORTED = 1
const SOC_DEDICATED_GPIO_SUPPORTED = 1
const SOC_UART_SUPPORTED = 1
const SOC_GDMA_SUPPORTED = 1
const SOC_AHB_GDMA_SUPPORTED = 1
const SOC_GPTIMER_SUPPORTED = 1
const SOC_TWAI_SUPPORTED = 1
const SOC_BT_SUPPORTED = 1
const SOC_ASYNC_MEMCPY_SUPPORTED = 1
const SOC_USB_SERIAL_JTAG_SUPPORTED = 1
const SOC_TEMP_SENSOR_SUPPORTED = 1
const SOC_XT_WDT_SUPPORTED = 1
const SOC_PHY_SUPPORTED = 1
const SOC_WIFI_SUPPORTED = 1
const SOC_SUPPORTS_SECURE_DL_MODE = 1
const SOC_EFUSE_KEY_PURPOSE_FIELD = 1
const SOC_EFUSE_HAS_EFUSE_RST_BUG = 1
const SOC_EFUSE_SUPPORTED = 1
const SOC_RTC_FAST_MEM_SUPPORTED = 1
const SOC_RTC_MEM_SUPPORTED = 1
const SOC_I2S_SUPPORTED = 1
const SOC_RMT_SUPPORTED = 1
const SOC_SDM_SUPPORTED = 1
const SOC_GPSPI_SUPPORTED = 1
const SOC_LEDC_SUPPORTED = 1
const SOC_I2C_SUPPORTED = 1
const SOC_SYSTIMER_SUPPORTED = 1
const SOC_SUPPORT_COEXISTENCE = 1
const SOC_AES_SUPPORTED = 1
const SOC_MPI_SUPPORTED = 1
const SOC_SHA_SUPPORTED = 1
const SOC_HMAC_SUPPORTED = 1
const SOC_DIG_SIGN_SUPPORTED = 1
const SOC_FLASH_ENC_SUPPORTED = 1
const SOC_SECURE_BOOT_SUPPORTED = 1
const SOC_MEMPROT_SUPPORTED = 1
const SOC_BOD_SUPPORTED = 1
const SOC_CLK_TREE_SUPPORTED = 1
const SOC_ASSIST_DEBUG_SUPPORTED = 1
const SOC_WDT_SUPPORTED = 1
const SOC_SPI_FLASH_SUPPORTED = 1
const SOC_RNG_SUPPORTED = 1
const SOC_LIGHT_SLEEP_SUPPORTED = 1
const SOC_DEEP_SLEEP_SUPPORTED = 1
const SOC_LP_PERIPH_SHARE_INTERRUPT = 1
const SOC_PM_SUPPORTED = 1
const SOC_XTAL_SUPPORT_40M = 1
const SOC_ADC_DIG_CTRL_SUPPORTED = 1
const SOC_ADC_ARBITER_SUPPORTED = 1
const SOC_ADC_DIG_IIR_FILTER_SUPPORTED = 1
const SOC_ADC_MONITOR_SUPPORTED = 1
const SOC_ADC_DMA_SUPPORTED = 1
const SOC_ADC_SAMPLE_FREQ_THRES_HIGH = 83333
const SOC_ADC_SAMPLE_FREQ_THRES_LOW = 611
const SOC_ADC_SHARED_POWER = 1
const SOC_BROWNOUT_RESET_SUPPORTED = 1
const SOC_SHARED_IDCACHE_SUPPORTED = 1
const SOC_CACHE_MEMORY_IBANK_SIZE = 0x4000
const SOC_CPU_INTR_NUM = 32
const SOC_CPU_HAS_FLEXIBLE_INTC = 1
const SOC_CPU_HAS_CSR_PC = 1
const SOC_CPU_BREAKPOINTS_NUM = 8
const SOC_CPU_WATCHPOINTS_NUM = 8
const SOC_CPU_WATCHPOINT_MAX_REGION_SIZE = 0x80000000
const SOC_GDMA_PAIRS_PER_GROUP_MAX = 3
const SOC_GPIO_PIN_COUNT = 22
const SOC_GPIO_SUPPORT_PIN_GLITCH_FILTER = 1
const SOC_GPIO_FILTER_CLK_SUPPORT_APB = 1
const SOC_GPIO_IN_RANGE_MAX = 21
const SOC_GPIO_OUT_RANGE_MAX = 21
const SOC_MPU_CONFIGURABLE_REGIONS_SUPPORTED = 0
const SOC_MPU_REGIONS_MAX_NUM = 8
const SOC_MPU_REGION_RO_SUPPORTED = 0
const SOC_MPU_REGION_WO_SUPPORTED = 0
const SOC_RMT_TX_CANDIDATES_PER_GROUP = 2
const SOC_RMT_RX_CANDIDATES_PER_GROUP = 2
const SOC_RMT_CHANNELS_PER_GROUP = 4
const SOC_RMT_MEM_WORDS_PER_CHANNEL = 48
const SOC_RMT_SUPPORT_RX_PINGPONG = 1
const SOC_RMT_SUPPORT_RX_DEMODULATION = 1
const SOC_RMT_SUPPORT_TX_ASYNC_STOP = 1
const SOC_RMT_SUPPORT_TX_LOOP_COUNT = 1
const SOC_RMT_SUPPORT_TX_SYNCHRO = 1
const SOC_RMT_SUPPORT_TX_CARRIER_DATA_ONLY = 1
const SOC_RMT_SUPPORT_XTAL = 1
const SOC_RMT_SUPPORT_APB = 1
const SOC_RMT_SUPPORT_RC_FAST = 1
const SOC_SLEEP_SYSTIMER_STALL_WORKAROUND = 1
const SOC_SLEEP_TGWDT_STOP_WORKAROUND = 1
const SOC_SDM_CHANNELS_PER_GROUP = 4
const SOC_SDM_CLK_SUPPORT_APB = 1
const SOC_SPI_PERIPH_NUM = 2
const SOC_SPI_MAX_CS_NUM = 6
const SOC_SPI_MAXIMUM_BUFFER_SIZE = 64
const SOC_SPI_SUPPORT_DDRCLK = 1
const SOC_SPI_SLAVE_SUPPORT_SEG_TRANS = 1
const SOC_SPI_SUPPORT_CD_SIG = 1
const SOC_SPI_SUPPORT_CONTINUOUS_TRANS = 1
const SOC_SPI_SUPPORT_SLAVE_HD_VER2 = 1
const SOC_SPI_SUPPORT_CLK_APB = 1
const SOC_SPI_SUPPORT_CLK_XTAL = 1
const SOC_SPI_PERIPH_SUPPORT_CONTROL_DUMMY_OUT = 1
const SOC_SPI_SCT_SUPPORTED = 1
const SOC_SPI_SCT_REG_NUM = 14
const SOC_SPI_SCT_CONF_BITLEN_MAX = 0x3FFFA
const SOC_MEMSPI_IS_INDEPENDENT = 1
const SOC_SPI_MAX_PRE_DIVIDER = 16
const SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED = 1
const SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED = 1
const SOC_SYSTIMER_COUNTER_NUM = 2
const SOC_SYSTIMER_ALARM_NUM = 3
const SOC_SYSTIMER_BIT_WIDTH_LO = 32
const SOC_SYSTIMER_BIT_WIDTH_HI = 20
const SOC_SYSTIMER_FIXED_DIVIDER = 1
const SOC_SYSTIMER_INT_LEVEL = 1
const SOC_SYSTIMER_ALARM_MISS_COMPENSATE = 1
const SOC_LP_TIMER_BIT_WIDTH_LO = 32
const SOC_LP_TIMER_BIT_WIDTH_HI = 16
const SOC_TWAI_CLK_SUPPORT_APB = 1
const SOC_TWAI_BRP_MIN = 2
const SOC_TWAI_BRP_MAX = 16384
const SOC_TWAI_SUPPORTS_RX_STATUS = 1
const SOC_EFUSE_DIS_DOWNLOAD_ICACHE = 1
const SOC_EFUSE_DIS_PAD_JTAG = 1
const SOC_EFUSE_DIS_USB_JTAG = 1
const SOC_EFUSE_DIS_DIRECT_BOOT = 1
const SOC_EFUSE_SOFT_DIS_JTAG = 1
const SOC_EFUSE_DIS_ICACHE = 1
const SOC_EFUSE_BLOCK9_KEY_PURPOSE_QUIRK = 1
const SOC_SECURE_BOOT_V2_RSA = 1
const SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 3
const SOC_EFUSE_REVOKE_BOOT_KEY_DIGESTS = 1
const SOC_SUPPORT_SECURE_BOOT_REVOKE_KEY = 1
const SOC_FLASH_ENCRYPTION_XTS_AES = 1
const SOC_FLASH_ENCRYPTION_XTS_AES_128 = 1
const SOC_MEMPROT_CPU_PREFETCH_PAD_SIZE = 16
const SOC_MEMPROT_MEM_ALIGN_SIZE = 512
const CONFIG_SOC_ADC_SUPPORTED = 1
const CONFIG_SOC_DEDICATED_GPIO_SUPPORTED = 1
const CONFIG_SOC_UART_SUPPORTED = 1
const CONFIG_SOC_GDMA_SUPPORTED = 1
const CONFIG_SOC_AHB_GDMA_SUPPORTED = 1
const CONFIG_SOC_GPTIMER_SUPPORTED = 1
const CONFIG_SOC_TWAI_SUPPORTED = 1
const CONFIG_SOC_BT_SUPPORTED = 1
const CONFIG_SOC_ASYNC_MEMCPY_SUPPORTED = 1
const CONFIG_SOC_USB_SERIAL_JTAG_SUPPORTED = 1
const CONFIG_SOC_TEMP_SENSOR_SUPPORTED = 1
const CONFIG_SOC_XT_WDT_SUPPORTED = 1
const CONFIG_SOC_PHY_SUPPORTED = 1
const CONFIG_SOC_WIFI_SUPPORTED = 1
const CONFIG_SOC_SUPPORTS_SECURE_DL_MODE = 1
const CONFIG_SOC_EFUSE_KEY_PURPOSE_FIELD = 1
const CONFIG_SOC_EFUSE_HAS_EFUSE_RST_BUG = 1
const CONFIG_SOC_EFUSE_SUPPORTED = 1
const CONFIG_SOC_RTC_FAST_MEM_SUPPORTED = 1
const CONFIG_SOC_RTC_MEM_SUPPORTED = 1
const CONFIG_SOC_I2S_SUPPORTED = 1
const CONFIG_SOC_RMT_SUPPORTED = 1
const CONFIG_SOC_SDM_SUPPORTED = 1
const CONFIG_SOC_GPSPI_SUPPORTED = 1
const CONFIG_SOC_LEDC_SUPPORTED = 1
const CONFIG_SOC_I2C_SUPPORTED = 1
const CONFIG_SOC_SYSTIMER_SUPPORTED = 1
const CONFIG_SOC_SUPPORT_COEXISTENCE = 1
const CONFIG_SOC_AES_SUPPORTED = 1
const CONFIG_SOC_MPI_SUPPORTED = 1
const CONFIG_SOC_SHA_SUPPORTED = 1
const CONFIG_SOC_HMAC_SUPPORTED = 1
const CONFIG_SOC_DIG_SIGN_SUPPORTED = 1
const CONFIG_SOC_FLASH_ENC_SUPPORTED = 1
const CONFIG_SOC_SECURE_BOOT_SUPPORTED = 1
const CONFIG_SOC_MEMPROT_SUPPORTED = 1
const CONFIG_SOC_BOD_SUPPORTED = 1
const CONFIG_SOC_CLK_TREE_SUPPORTED = 1
const CONFIG_SOC_ASSIST_DEBUG_SUPPORTED = 1
const CONFIG_SOC_WDT_SUPPORTED = 1
const CONFIG_SOC_SPI_FLASH_SUPPORTED = 1
const CONFIG_SOC_RNG_SUPPORTED = 1
const CONFIG_SOC_LIGHT_SLEEP_SUPPORTED = 1
const CONFIG_SOC_DEEP_SLEEP_SUPPORTED = 1
const CONFIG_SOC_LP_PERIPH_SHARE_INTERRUPT = 1
const CONFIG_SOC_PM_SUPPORTED = 1
const CONFIG_SOC_XTAL_SUPPORT_40M = 1
const CONFIG_SOC_AES_SUPPORT_DMA = 1
const CONFIG_SOC_AES_GDMA = 1
const CONFIG_SOC_AES_SUPPORT_AES_128 = 1
const CONFIG_SOC_AES_SUPPORT_AES_256 = 1
const CONFIG_SOC_ADC_DIG_CTRL_SUPPORTED = 1
const CONFIG_SOC_ADC_ARBITER_SUPPORTED = 1
const CONFIG_SOC_ADC_DIG_IIR_FILTER_SUPPORTED = 1
const CONFIG_SOC_ADC_MONITOR_SUPPORTED = 1
const CONFIG_SOC_ADC_DMA_SUPPORTED = 1
const CONFIG_SOC_ADC_PERIPH_NUM = 2
const CONFIG_SOC_ADC_MAX_CHANNEL_NUM = 5
const CONFIG_SOC_ADC_ATTEN_NUM = 4
const CONFIG_SOC_ADC_DIGI_CONTROLLER_NUM = 1
const CONFIG_SOC_ADC_PATT_LEN_MAX = 8
const CONFIG_SOC_ADC_DIGI_MIN_BITWIDTH = 12
const CONFIG_SOC_ADC_DIGI_MAX_BITWIDTH = 12
const CONFIG_SOC_ADC_DIGI_RESULT_BYTES = 4
const CONFIG_SOC_ADC_DIGI_DATA_BYTES_PER_CONV = 4
const CONFIG_SOC_ADC_DIGI_IIR_FILTER_NUM = 2
const CONFIG_SOC_ADC_DIGI_MONITOR_NUM = 2
const CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_HIGH = 83333
const CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_LOW = 611
const CONFIG_SOC_ADC_RTC_MIN_BITWIDTH = 12
const CONFIG_SOC_ADC_RTC_MAX_BITWIDTH = 12
const CONFIG_SOC_ADC_CALIBRATION_V1_SUPPORTED = 1
const CONFIG_SOC_ADC_SELF_HW_CALI_SUPPORTED = 1
const CONFIG_SOC_ADC_SHARED_POWER = 1
const CONFIG_SOC_APB_BACKUP_DMA = 1
const CONFIG_SOC_BROWNOUT_RESET_SUPPORTED = 1
const CONFIG_SOC_SHARED_IDCACHE_SUPPORTED = 1
const CONFIG_SOC_CACHE_MEMORY_IBANK_SIZE = 0x4000
const CONFIG_SOC_CPU_CORES_NUM = 1
const CONFIG_SOC_CPU_INTR_NUM = 32
const CONFIG_SOC_CPU_HAS_FLEXIBLE_INTC = 1
const CONFIG_SOC_CPU_HAS_CSR_PC = 1
const CONFIG_SOC_CPU_BREAKPOINTS_NUM = 8
const CONFIG_SOC_CPU_WATCHPOINTS_NUM = 8
const CONFIG_SOC_CPU_WATCHPOINT_MAX_REGION_SIZE = 0x80000000
const CONFIG_SOC_DS_SIGNATURE_MAX_BIT_LEN = 3072
const CONFIG_SOC_DS_KEY_PARAM_MD_IV_LENGTH = 16
const CONFIG_SOC_DS_KEY_CHECK_MAX_WAIT_US = 1100
const CONFIG_SOC_AHB_GDMA_VERSION = 1
const CONFIG_SOC_GDMA_NUM_GROUPS_MAX = 1
const CONFIG_SOC_GDMA_PAIRS_PER_GROUP_MAX = 3
const CONFIG_SOC_GPIO_PORT = 1
const CONFIG_SOC_GPIO_PIN_COUNT = 22
const CONFIG_SOC_GPIO_SUPPORT_PIN_GLITCH_FILTER = 1
const CONFIG_SOC_GPIO_FILTER_CLK_SUPPORT_APB = 1
const CONFIG_SOC_GPIO_SUPPORT_FORCE_HOLD = 1
const CONFIG_SOC_GPIO_SUPPORT_DEEPSLEEP_WAKEUP = 1
const CONFIG_SOC_GPIO_IN_RANGE_MAX = 21
const CONFIG_SOC_GPIO_OUT_RANGE_MAX = 21
const CONFIG_SOC_GPIO_DEEP_SLEEP_WAKE_VALID_GPIO_MASK = 0
const CONFIG_SOC_GPIO_DEEP_SLEEP_WAKE_SUPPORTED_PIN_CNT = 6
const CONFIG_SOC_GPIO_VALID_DIGITAL_IO_PAD_MASK = 0x00000000003FFFC0
const CONFIG_SOC_GPIO_CLOCKOUT_BY_GPIO_MATRIX = 1
const CONFIG_SOC_GPIO_CLOCKOUT_CHANNEL_NUM = 3
const CONFIG_SOC_GPIO_SUPPORT_HOLD_IO_IN_DSLP = 1
const CONFIG_SOC_DEDIC_GPIO_OUT_CHANNELS_NUM = 8
const CONFIG_SOC_DEDIC_GPIO_IN_CHANNELS_NUM = 8
const CONFIG_SOC_DEDIC_PERIPH_ALWAYS_ENABLE = 1
const CONFIG_SOC_I2C_NUM = 1
const CONFIG_SOC_HP_I2C_NUM = 1
const CONFIG_SOC_I2C_FIFO_LEN = 32
const CONFIG_SOC_I2C_CMD_REG_NUM = 8
const CONFIG_SOC_I2C_SUPPORT_SLAVE = 1
const CONFIG_SOC_I2C_SUPPORT_HW_CLR_BUS = 1
const CONFIG_SOC_I2C_SUPPORT_XTAL = 1
const CONFIG_SOC_I2C_SUPPORT_RTC = 1
const CONFIG_SOC_I2C_SUPPORT_10BIT_ADDR = 1
const CONFIG_SOC_I2C_SLAVE_SUPPORT_BROADCAST = 1
const CONFIG_SOC_I2C_SLAVE_CAN_GET_STRETCH_CAUSE = 1
const CONFIG_SOC_I2C_SLAVE_SUPPORT_I2CRAM_ACCESS = 1
const CONFIG_SOC_I2S_NUM = 1
const CONFIG_SOC_I2S_HW_VERSION_2 = 1
const CONFIG_SOC_I2S_SUPPORTS_XTAL = 1
const CONFIG_SOC_I2S_SUPPORTS_PLL_F160M = 1
const CONFIG_SOC_I2S_SUPPORTS_PCM = 1
const CONFIG_SOC_I2S_SUPPORTS_PDM = 1
const CONFIG_SOC_I2S_SUPPORTS_PDM_TX = 1
const CONFIG_SOC_I2S_PDM_MAX_TX_LINES = 2
const CONFIG_SOC_I2S_SUPPORTS_TDM = 1
const CONFIG_SOC_LEDC_SUPPORT_APB_CLOCK = 1
const CONFIG_SOC_LEDC_SUPPORT_XTAL_CLOCK = 1
const CONFIG_SOC_LEDC_TIMER_NUM = 4
const CONFIG_SOC_LEDC_CHANNEL_NUM = 6
const CONFIG_SOC_LEDC_TIMER_BIT_WIDTH = 14
const CONFIG_SOC_LEDC_SUPPORT_FADE_STOP = 1
const CONFIG_SOC_MMU_LINEAR_ADDRESS_REGION_NUM = 1
const CONFIG_SOC_MMU_PERIPH_NUM = 1
const CONFIG_SOC_MPU_MIN_REGION_SIZE = 0x20000000
const CONFIG_SOC_MPU_REGIONS_MAX_NUM = 8
const CONFIG_SOC_RMT_GROUPS = 1
const CONFIG_SOC_RMT_TX_CANDIDATES_PER_GROUP = 2
const CONFIG_SOC_RMT_RX_CANDIDATES_PER_GROUP = 2
const CONFIG_SOC_RMT_CHANNELS_PER_GROUP = 4
const CONFIG_SOC_RMT_MEM_WORDS_PER_CHANNEL = 48
const CONFIG_SOC_RMT_SUPPORT_RX_PINGPONG = 1
const CONFIG_SOC_RMT_SUPPORT_RX_DEMODULATION = 1
const CONFIG_SOC_RMT_SUPPORT_TX_ASYNC_STOP = 1
const CONFIG_SOC_RMT_SUPPORT_TX_LOOP_COUNT = 1
const CONFIG_SOC_RMT_SUPPORT_TX_SYNCHRO = 1
const CONFIG_SOC_RMT_SUPPORT_TX_CARRIER_DATA_ONLY = 1
const CONFIG_SOC_RMT_SUPPORT_XTAL = 1
const CONFIG_SOC_RMT_SUPPORT_APB = 1
const CONFIG_SOC_RMT_SUPPORT_RC_FAST = 1
const CONFIG_SOC_RTC_CNTL_CPU_PD_DMA_BUS_WIDTH = 128
const CONFIG_SOC_RTC_CNTL_CPU_PD_REG_FILE_NUM = 108
const CONFIG_SOC_SLEEP_SYSTIMER_STALL_WORKAROUND = 1
const CONFIG_SOC_SLEEP_TGWDT_STOP_WORKAROUND = 1
const CONFIG_SOC_RTCIO_PIN_COUNT = 0
const CONFIG_SOC_MPI_MEM_BLOCKS_NUM = 4
const CONFIG_SOC_MPI_OPERATIONS_NUM = 3
const CONFIG_SOC_RSA_MAX_BIT_LEN = 3072
const CONFIG_SOC_SHA_DMA_MAX_BUFFER_SIZE = 3968
const CONFIG_SOC_SHA_SUPPORT_DMA = 1
const CONFIG_SOC_SHA_SUPPORT_RESUME = 1
const CONFIG_SOC_SHA_GDMA = 1
const CONFIG_SOC_SHA_SUPPORT_SHA1 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA224 = 1
const CONFIG_SOC_SHA_SUPPORT_SHA256 = 1
const CONFIG_SOC_SDM_GROUPS = 1
const CONFIG_SOC_SDM_CHANNELS_PER_GROUP = 4
const CONFIG_SOC_SDM_CLK_SUPPORT_APB = 1
const CONFIG_SOC_SPI_PERIPH_NUM = 2
const CONFIG_SOC_SPI_MAX_CS_NUM = 6
const CONFIG_SOC_SPI_MAXIMUM_BUFFER_SIZE = 64
const CONFIG_SOC_SPI_SUPPORT_DDRCLK = 1
const CONFIG_SOC_SPI_SLAVE_SUPPORT_SEG_TRANS = 1
const CONFIG_SOC_SPI_SUPPORT_CD_SIG = 1
const CONFIG_SOC_SPI_SUPPORT_CONTINUOUS_TRANS = 1
const CONFIG_SOC_SPI_SUPPORT_SLAVE_HD_VER2 = 1
const CONFIG_SOC_SPI_SUPPORT_CLK_APB = 1
const CONFIG_SOC_SPI_SUPPORT_CLK_XTAL = 1
const CONFIG_SOC_SPI_PERIPH_SUPPORT_CONTROL_DUMMY_OUT = 1
const CONFIG_SOC_SPI_SCT_SUPPORTED = 1
const CONFIG_SOC_SPI_SCT_REG_NUM = 14
const CONFIG_SOC_SPI_SCT_BUFFER_NUM_MAX = 1
const CONFIG_SOC_SPI_SCT_CONF_BITLEN_MAX = 0x3FFFA
const CONFIG_SOC_MEMSPI_IS_INDEPENDENT = 1
const CONFIG_SOC_SPI_MAX_PRE_DIVIDER = 16
const CONFIG_SOC_SPI_MEM_SUPPORT_AUTO_WAIT_IDLE = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_AUTO_SUSPEND = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_AUTO_RESUME = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_IDLE_INTR = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_SW_SUSPEND = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_CHECK_SUS = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_CONFIG_GPIO_BY_EFUSE = 1
const CONFIG_SOC_SPI_MEM_SUPPORT_WRAP = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED = 1
const CONFIG_SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED = 1
const CONFIG_SOC_SYSTIMER_COUNTER_NUM = 2
const CONFIG_SOC_SYSTIMER_ALARM_NUM = 3
const CONFIG_SOC_SYSTIMER_BIT_WIDTH_LO = 32
const CONFIG_SOC_SYSTIMER_BIT_WIDTH_HI = 20
const CONFIG_SOC_SYSTIMER_FIXED_DIVIDER = 1
const CONFIG_SOC_SYSTIMER_INT_LEVEL = 1
const CONFIG_SOC_SYSTIMER_ALARM_MISS_COMPENSATE = 1
const CONFIG_SOC_TIMER_GROUPS = 2
const CONFIG_SOC_TIMER_GROUP_TIMERS_PER_GROUP = 1
const CONFIG_SOC_TIMER_GROUP_COUNTER_BIT_WIDTH = 54
const CONFIG_SOC_TIMER_GROUP_SUPPORT_XTAL = 1
const CONFIG_SOC_TIMER_GROUP_SUPPORT_APB = 1
const CONFIG_SOC_TIMER_GROUP_TOTAL_TIMERS = 2
const CONFIG_SOC_LP_TIMER_BIT_WIDTH_LO = 32
const CONFIG_SOC_LP_TIMER_BIT_WIDTH_HI = 16
const CONFIG_SOC_MWDT_SUPPORT_XTAL = 1
const CONFIG_SOC_TWAI_CONTROLLER_NUM = 1
const CONFIG_SOC_TWAI_CLK_SUPPORT_APB = 1
const CONFIG_SOC_TWAI_BRP_MIN = 2
const CONFIG_SOC_TWAI_BRP_MAX = 16384
const CONFIG_SOC_TWAI_SUPPORTS_RX_STATUS = 1
const CONFIG_SOC_EFUSE_DIS_DOWNLOAD_ICACHE = 1
const CONFIG_SOC_EFUSE_DIS_PAD_JTAG = 1
const CONFIG_SOC_EFUSE_DIS_USB_JTAG = 1
const CONFIG_SOC_EFUSE_DIS_DIRECT_BOOT = 1
const CONFIG_SOC_EFUSE_SOFT_DIS_JTAG = 1
const CONFIG_SOC_EFUSE_DIS_ICACHE = 1
const CONFIG_SOC_EFUSE_BLOCK9_KEY_PURPOSE_QUIRK = 1
const CONFIG_SOC_SECURE_BOOT_V2_RSA = 1
const CONFIG_SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 3
const CONFIG_SOC_EFUSE_REVOKE_BOOT_KEY_DIGESTS = 1
const CONFIG_SOC_SUPPORT_SECURE_BOOT_REVOKE_KEY = 1
const CONFIG_SOC_FLASH_ENCRYPTED_XTS_AES_BLOCK_MAX = 32
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES = 1
const CONFIG_SOC_FLASH_ENCRYPTION_XTS_AES_128 = 1
const CONFIG_SOC_MEMPROT_CPU_PREFETCH_PAD_SIZE = 16
const CONFIG_SOC_MEMPROT_MEM_ALIGN_SIZE = 512
const CONFIG_SOC_UART_NUM = 2
const CONFIG_SOC_UART_HP_NUM = 2
const CONFIG_SOC_UART_FIFO_LEN = 128
const CONFIG_SOC_UART_BITRATE_MAX = 5000000
const CONFIG_SOC_UART_SUPPORT_APB_CLK = 1
const CONFIG_SOC_UART_SUPPORT_RTC_CLK = 1
const CONFIG_SOC_UART_SUPPORT_XTAL_CLK = 1
const CONFIG_SOC_UART_SUPPORT_WAKEUP_INT = 1
const CONFIG_SOC_UART_SUPPORT_FSM_TX_WAIT_SEND = 1
const CONFIG_SOC_COEX_HW_PTI = 1
const CONFIG_SOC_PHY_DIG_REGS_MEM_SIZE = 21
const CONFIG_SOC_MAC_BB_PD_MEM_SIZE = 192
const CONFIG_SOC_WIFI_LIGHT_SLEEP_CLK_WIDTH = 12
const CONFIG_SOC_PM_SUPPORT_WIFI_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_BT_WAKEUP = 1
const CONFIG_SOC_PM_SUPPORT_CPU_PD = 1
const CONFIG_SOC_PM_SUPPORT_WIFI_PD = 1
const CONFIG_SOC_PM_SUPPORT_BT_PD = 1
const CONFIG_SOC_PM_SUPPORT_RC_FAST_PD = 1
const CONFIG_SOC_PM_SUPPORT_VDDSDIO_PD = 1
const CONFIG_SOC_PM_SUPPORT_MAC_BB_PD = 1
const CONFIG_SOC_PM_CPU_RETENTION_BY_RTCCNTL = 1
const CONFIG_SOC_PM_MODEM_RETENTION_BY_BACKUPDMA = 1
const CONFIG_SOC_PM_MODEM_PD_BY_SW = 1
const CONFIG_SOC_CLK_RC_FAST_D256_SUPPORTED = 1
const CONFIG_SOC_RTC_SLOW_CLK_SUPPORT_RC_FAST_D256 = 1
const CONFIG_SOC_CLK_RC_FAST_SUPPORT_CALIBRATION = 1
const CONFIG_SOC_CLK_XTAL32K_SUPPORTED = 1
const CONFIG_SOC_TEMPERATURE_SENSOR_SUPPORT_FAST_RC = 1
const CONFIG_SOC_TEMPERATURE_SENSOR_SUPPORT_XTAL = 1
const CONFIG_SOC_WIFI_HW_TSF = 1
const CONFIG_SOC_WIFI_FTM_SUPPORT = 1
const CONFIG_SOC_WIFI_GCMP_SUPPORT = 1
const CONFIG_SOC_WIFI_WAPI_SUPPORT = 1
const CONFIG_SOC_WIFI_CSI_SUPPORT = 1
const CONFIG_SOC_WIFI_MESH_SUPPORT = 1
const CONFIG_SOC_WIFI_SUPPORT_VARIABLE_BEACON_WINDOW = 1
const CONFIG_SOC_WIFI_PHY_NEEDS_USB_WORKAROUND = 1
const CONFIG_SOC_BLE_SUPPORTED = 1
const CONFIG_SOC_BLE_MESH_SUPPORTED = 1
const CONFIG_SOC_BLE_50_SUPPORTED = 1
const CONFIG_SOC_BLE_DEVICE_PRIVACY_SUPPORTED = 1
const CONFIG_SOC_BLUFI_SUPPORTED = 1
const CONFIG_SOC_PHY_COMBO_MODULE = 1
const CONFIG_IDF_CMAKE = 1
const CONFIG_IDF_TOOLCHAIN = "gcc"
const CONFIG_IDF_TOOLCHAIN_GCC = 1
const CONFIG_IDF_TARGET_ARCH_RISCV = 1
const CONFIG_IDF_TARGET_ARCH = "riscv"
const CONFIG_IDF_TARGET = "esp32c3"
const CONFIG_IDF_INIT_VERSION = "5.4.2"
const CONFIG_IDF_TARGET_ESP32C3 = 1
const CONFIG_IDF_FIRMWARE_CHIP_ID = 0x0005
const CONFIG_APP_BUILD_TYPE_APP_2NDBOOT = 1
const CONFIG_APP_BUILD_GENERATE_BINARIES = 1
const CONFIG_APP_BUILD_BOOTLOADER = 1
const CONFIG_APP_BUILD_USE_FLASH_SECTIONS = 1
const CONFIG_BOOTLOADER_COMPILE_TIME_DATE = 1
const CONFIG_BOOTLOADER_PROJECT_VER = 1
const CONFIG_BOOTLOADER_OFFSET_IN_FLASH = 0x0
const CONFIG_BOOTLOADER_COMPILER_OPTIMIZATION_SIZE = 1
const CONFIG_BOOTLOADER_LOG_LEVEL_INFO = 1
const CONFIG_BOOTLOADER_LOG_LEVEL = 3
const CONFIG_BOOTLOADER_LOG_TIMESTAMP_SOURCE_CPU_TICKS = 1
const CONFIG_BOOTLOADER_FLASH_XMC_SUPPORT = 1
const CONFIG_BOOTLOADER_REGION_PROTECTION_ENABLE = 1
const CONFIG_BOOTLOADER_WDT_ENABLE = 1
const CONFIG_BOOTLOADER_WDT_TIME_MS = 9000
const CONFIG_BOOTLOADER_RESERVE_RTC_SIZE = 0x0
const CONFIG_SECURE_BOOT_V2_RSA_SUPPORTED = 1
const CONFIG_SECURE_BOOT_V2_PREFERRED = 1
const CONFIG_SECURE_ROM_DL_MODE_ENABLED = 1
const CONFIG_APP_COMPILE_TIME_DATE = 1
const CONFIG_APP_RETRIEVE_LEN_ELF_SHA = 9
const CONFIG_ESP_ROM_HAS_CRC_LE = 1
const CONFIG_ESP_ROM_HAS_CRC_BE = 1
const CONFIG_ESP_ROM_HAS_MZ_CRC32 = 1
const CONFIG_ESP_ROM_HAS_JPEG_DECODE = 1
const CONFIG_ESP_ROM_UART_CLK_IS_XTAL = 1
const CONFIG_ESP_ROM_USB_SERIAL_DEVICE_NUM = 3
const CONFIG_ESP_ROM_HAS_RETARGETABLE_LOCKING = 1
const CONFIG_ESP_ROM_HAS_ERASE_0_REGION_BUG = 1
const CONFIG_ESP_ROM_HAS_ENCRYPTED_WRITES_USING_LEGACY_DRV = 1
const CONFIG_ESP_ROM_GET_CLK_FREQ = 1
const CONFIG_ESP_ROM_NEEDS_SWSETUP_WORKAROUND = 1
const CONFIG_ESP_ROM_HAS_LAYOUT_TABLE = 1
const CONFIG_ESP_ROM_HAS_SPI_FLASH = 1
const CONFIG_ESP_ROM_HAS_ETS_PRINTF_BUG = 1
const CONFIG_ESP_ROM_HAS_NEWLIB = 1
const CONFIG_ESP_ROM_HAS_NEWLIB_NANO_FORMAT = 1
const CONFIG_ESP_ROM_HAS_NEWLIB_32BIT_TIME = 1
const CONFIG_ESP_ROM_NEEDS_SET_CACHE_MMU_SIZE = 1
const CONFIG_ESP_ROM_RAM_APP_NEEDS_MMU_INIT = 1
const CONFIG_ESP_ROM_HAS_SW_FLOAT = 1
const CONFIG_ESP_ROM_HAS_VERSION = 1
const CONFIG_ESP_ROM_SUPPORT_DEEP_SLEEP_WAKEUP_STUB = 1
const CONFIG_BOOT_ROM_LOG_ALWAYS_ON = 1
const CONFIG_ESPTOOLPY_FLASHMODE_DIO = 1
const CONFIG_ESPTOOLPY_FLASH_SAMPLE_MODE_STR = 1
const CONFIG_ESPTOOLPY_FLASHMODE = "dio"
const CONFIG_ESPTOOLPY_FLASHFREQ_80M = 1
const CONFIG_ESPTOOLPY_FLASHFREQ = "80m"
const CONFIG_ESPTOOLPY_FLASHSIZE_2MB = 1
const CONFIG_ESPTOOLPY_FLASHSIZE = "2MB"
const CONFIG_ESPTOOLPY_BEFORE_RESET = 1
const CONFIG_ESPTOOLPY_BEFORE = "default_reset"
const CONFIG_ESPTOOLPY_AFTER_RESET = 1
const CONFIG_ESPTOOLPY_AFTER = "hard_reset"
const CONFIG_ESPTOOLPY_MONITOR_BAUD = 115200
const CONFIG_PARTITION_TABLE_SINGLE_APP = 1
const CONFIG_PARTITION_TABLE_CUSTOM_FILENAME = "partitions.csv"
const CONFIG_PARTITION_TABLE_FILENAME = "partitions_singleapp.csv"
const CONFIG_PARTITION_TABLE_OFFSET = 0x8000
const CONFIG_PARTITION_TABLE_MD5 = 1
const CONFIG_COMPILER_OPTIMIZATION_DEBUG = 1
const CONFIG_COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE = 1
const CONFIG_COMPILER_ASSERT_NDEBUG_EVALUATE = 1
const CONFIG_COMPILER_FLOAT_LIB_FROM_GCCLIB = 1
const CONFIG_COMPILER_OPTIMIZATION_ASSERTION_LEVEL = 2
const CONFIG_COMPILER_HIDE_PATHS_MACROS = 1
const CONFIG_COMPILER_STACK_CHECK_MODE_NONE = 1
const CONFIG_COMPILER_DISABLE_DEFAULT_ERRORS = 1
const CONFIG_COMPILER_RT_LIB_GCCLIB = 1
const CONFIG_COMPILER_RT_LIB_NAME = "gcc"
const CONFIG_COMPILER_ORPHAN_SECTIONS_WARNING = 1
const CONFIG_APPTRACE_DEST_NONE = 1
const CONFIG_APPTRACE_DEST_UART_NONE = 1
const CONFIG_APPTRACE_UART_TASK_PRIO = 1
const CONFIG_APPTRACE_LOCK_ENABLE = 1
const CONFIG_TWAI_ERRATA_FIX_LISTEN_ONLY_DOM = 1
const CONFIG_EFUSE_MAX_BLK_LEN = 256
const CONFIG_ESP_TLS_USING_MBEDTLS = 1
const CONFIG_ESP_TLS_USE_DS_PERIPHERAL = 1
const CONFIG_ESP_COEX_ENABLED = 1
const CONFIG_ESP_ERR_TO_NAME_LOOKUP = 1
const CONFIG_GPTIMER_ISR_HANDLER_IN_IRAM = 1
const CONFIG_GPTIMER_OBJ_CACHE_SAFE = 1
const CONFIG_SPI_MASTER_ISR_IN_IRAM = 1
const CONFIG_SPI_SLAVE_ISR_IN_IRAM = 1
const CONFIG_USJ_ENABLE_USB_SERIAL_JTAG = 1
const CONFIG_ETH_ENABLED = 1
const CONFIG_ETH_USE_SPI_ETHERNET = 1
const CONFIG_ESP_EVENT_POST_FROM_ISR = 1
const CONFIG_ESP_EVENT_POST_FROM_IRAM_ISR = 1
const CONFIG_ESP_GDBSTUB_ENABLED = 1
const CONFIG_ESP_GDBSTUB_SUPPORT_TASKS = 1
const CONFIG_ESP_GDBSTUB_MAX_TASKS = 32
const CONFIG_ESPHID_TASK_SIZE_BT = 2048
const CONFIG_ESPHID_TASK_SIZE_BLE = 4096
const CONFIG_ESP_HTTP_CLIENT_ENABLE_HTTPS = 1
const CONFIG_ESP_HTTP_CLIENT_EVENT_POST_TIMEOUT = 2000
const CONFIG_HTTPD_MAX_REQ_HDR_LEN = 512
const CONFIG_HTTPD_MAX_URI_LEN = 512
const CONFIG_HTTPD_ERR_RESP_NO_DELAY = 1
const CONFIG_HTTPD_PURGE_BUF_LEN = 32
const CONFIG_HTTPD_SERVER_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP_HTTPS_OTA_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP_HTTPS_SERVER_EVENT_POST_TIMEOUT = 2000
const CONFIG_ESP32C3_REV_MIN_3 = 1
const CONFIG_ESP32C3_REV_MIN_FULL = 3
const CONFIG_ESP_REV_MIN_FULL = 3
const CONFIG_ESP32C3_REV_MAX_FULL = 199
const CONFIG_ESP_REV_MAX_FULL = 199
const CONFIG_ESP_EFUSE_BLOCK_REV_MIN_FULL = 0
const CONFIG_ESP_EFUSE_BLOCK_REV_MAX_FULL = 199
const CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_STA = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_AP = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_BT = 1
const CONFIG_ESP_MAC_ADDR_UNIVERSE_ETH = 1
const CONFIG_ESP_MAC_UNIVERSAL_MAC_ADDRESSES_FOUR = 1
const CONFIG_ESP_MAC_UNIVERSAL_MAC_ADDRESSES = 4
const CONFIG_ESP32C3_UNIVERSAL_MAC_ADDRESSES_FOUR = 1
const CONFIG_ESP32C3_UNIVERSAL_MAC_ADDRESSES = 4
const CONFIG_ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND = 1
const CONFIG_ESP_SLEEP_GPIO_RESET_WORKAROUND = 1
const CONFIG_ESP_SLEEP_WAIT_FLASH_READY_EXTRA_DELAY = 0
const CONFIG_ESP_SLEEP_GPIO_ENABLE_INTERNAL_RESISTORS = 1
const CONFIG_RTC_CLK_SRC_INT_RC = 1
const CONFIG_RTC_CLK_CAL_CYCLES = 1024
const CONFIG_GDMA_CTRL_FUNC_IN_IRAM = 1
const CONFIG_GDMA_ISR_HANDLER_IN_IRAM = 1
const CONFIG_GDMA_OBJ_DRAM_SAFE = 1
const CONFIG_XTAL_FREQ_40 = 1
const CONFIG_XTAL_FREQ = 40
const CONFIG_ESP_SPI_BUS_LOCK_ISR_FUNCS_IN_IRAM = 1
const CONFIG_ESP_NETIF_IP_LOST_TIMER_INTERVAL = 120
const CONFIG_ESP_NETIF_TCPIP_LWIP = 1
const CONFIG_ESP_NETIF_USES_TCPIP_WITH_BSD_API = 1
const CONFIG_ESP_NETIF_REPORT_DATA_TRAFFIC = 1
const CONFIG_ESP_PHY_ENABLED = 1
const CONFIG_ESP_PHY_CALIBRATION_AND_DATA_STORAGE = 1
const CONFIG_ESP_PHY_MAX_WIFI_TX_POWER = 20
const CONFIG_ESP_PHY_MAX_TX_POWER = 20
const CONFIG_ESP_PHY_ENABLE_USB = 1
const CONFIG_ESP_PHY_RF_CAL_PARTIAL = 1
const CONFIG_ESP_PHY_CALIBRATION_MODE = 0
const CONFIG_PM_POWER_DOWN_CPU_IN_LIGHT_SLEEP = 1
const CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_160 = 1
const CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ = 160
const CONFIG_ESP_SYSTEM_PANIC_PRINT_REBOOT = 1
const CONFIG_ESP_SYSTEM_PANIC_REBOOT_DELAY_SECONDS = 0
const CONFIG_ESP_SYSTEM_SINGLE_CORE_MODE = 1
const CONFIG_ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK = 1
const CONFIG_ESP_SYSTEM_ALLOW_RTC_FAST_MEM_AS_HEAP = 1
const CONFIG_ESP_SYSTEM_MEMPROT_FEATURE = 1
const CONFIG_ESP_SYSTEM_MEMPROT_FEATURE_LOCK = 1
const CONFIG_ESP_SYSTEM_EVENT_QUEUE_SIZE = 32
const CONFIG_ESP_SYSTEM_EVENT_TASK_STACK_SIZE = 2304
const CONFIG_ESP_MAIN_TASK_STACK_SIZE = 3584
const CONFIG_ESP_MAIN_TASK_AFFINITY_CPU0 = 1
const CONFIG_ESP_MAIN_TASK_AFFINITY = 0x0
const CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE = 2048
const CONFIG_ESP_CONSOLE_UART_DEFAULT = 1
const CONFIG_ESP_CONSOLE_SECONDARY_USB_SERIAL_JTAG = 1
const CONFIG_ESP_CONSOLE_USB_SERIAL_JTAG_ENABLED = 1
const CONFIG_ESP_CONSOLE_UART = 1
const CONFIG_ESP_CONSOLE_UART_NUM = 0
const CONFIG_ESP_CONSOLE_ROM_SERIAL_PORT_NUM = 0
const CONFIG_ESP_CONSOLE_UART_BAUDRATE = 115200
const CONFIG_ESP_INT_WDT = 1
const CONFIG_ESP_INT_WDT_TIMEOUT_MS = 300
const CONFIG_ESP_TASK_WDT_EN = 1
const CONFIG_ESP_TASK_WDT_INIT = 1
const CONFIG_ESP_TASK_WDT_TIMEOUT_S = 5
const CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0 = 1
const CONFIG_ESP_DEBUG_OCDAWARE = 1
const CONFIG_ESP_SYSTEM_CHECK_INT_LEVEL_4 = 1
const CONFIG_ESP_BROWNOUT_DET = 1
const CONFIG_ESP_BROWNOUT_DET_LVL_SEL_7 = 1
const CONFIG_ESP_BROWNOUT_DET_LVL = 7
const CONFIG_ESP_SYSTEM_BROWNOUT_INTR = 1
const CONFIG_ESP_SYSTEM_HW_STACK_GUARD = 1
const CONFIG_ESP_SYSTEM_HW_PC_RECORD = 1
const CONFIG_ESP_IPC_TASK_STACK_SIZE = 1024
const CONFIG_ESP_TIME_FUNCS_USE_RTC_TIMER = 1
const CONFIG_ESP_TIME_FUNCS_USE_ESP_TIMER = 1
const CONFIG_ESP_TIMER_TASK_STACK_SIZE = 3584
const CONFIG_ESP_TIMER_INTERRUPT_LEVEL = 1
const CONFIG_ESP_TIMER_TASK_AFFINITY = 0x0
const CONFIG_ESP_TIMER_TASK_AFFINITY_CPU0 = 1
const CONFIG_ESP_TIMER_ISR_AFFINITY_CPU0 = 1
const CONFIG_ESP_TIMER_IMPL_SYSTIMER = 1
const CONFIG_ESP_WIFI_ENABLED = 1
const CONFIG_ESP_WIFI_STATIC_RX_BUFFER_NUM = 10
const CONFIG_ESP_WIFI_DYNAMIC_RX_BUFFER_NUM = 32
const CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER = 1
const CONFIG_ESP_WIFI_TX_BUFFER_TYPE = 1
const CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER_NUM = 32
const CONFIG_ESP_WIFI_STATIC_RX_MGMT_BUFFER = 1
const CONFIG_ESP_WIFI_DYNAMIC_RX_MGMT_BUF = 0
const CONFIG_ESP_WIFI_RX_MGMT_BUF_NUM_DEF = 5
const CONFIG_ESP_WIFI_AMPDU_TX_ENABLED = 1
const CONFIG_ESP_WIFI_TX_BA_WIN = 6
const CONFIG_ESP_WIFI_AMPDU_RX_ENABLED = 1
const CONFIG_ESP_WIFI_RX_BA_WIN = 6
const CONFIG_ESP_WIFI_NVS_ENABLED = 1
const CONFIG_ESP_WIFI_SOFTAP_BEACON_MAX_LEN = 752
const CONFIG_ESP_WIFI_MGMT_SBUF_NUM = 32
const CONFIG_ESP_WIFI_IRAM_OPT = 1
const CONFIG_ESP_WIFI_RX_IRAM_OPT = 1
const CONFIG_ESP_WIFI_ENABLE_WPA3_SAE = 1
const CONFIG_ESP_WIFI_ENABLE_SAE_PK = 1
const CONFIG_ESP_WIFI_SOFTAP_SAE_SUPPORT = 1
const CONFIG_ESP_WIFI_ENABLE_WPA3_OWE_STA = 1
const CONFIG_ESP_WIFI_SLP_DEFAULT_MIN_ACTIVE_TIME = 50
const CONFIG_ESP_WIFI_SLP_DEFAULT_MAX_ACTIVE_TIME = 10
const CONFIG_ESP_WIFI_SLP_DEFAULT_WAIT_BROADCAST_DATA_TIME = 15
const CONFIG_ESP_WIFI_STA_DISCONNECTED_PM_ENABLE = 1
const CONFIG_ESP_WIFI_GMAC_SUPPORT = 1
const CONFIG_ESP_WIFI_SOFTAP_SUPPORT = 1
const CONFIG_ESP_WIFI_ESPNOW_MAX_ENCRYPT_NUM = 7
const CONFIG_ESP_WIFI_MBEDTLS_CRYPTO = 1
const CONFIG_ESP_WIFI_MBEDTLS_TLS_CLIENT = 1
const CONFIG_ESP_WIFI_ENTERPRISE_SUPPORT = 1
const CONFIG_ESP_COREDUMP_ENABLE_TO_NONE = 1
const CONFIG_FATFS_VOLUME_COUNT = 2
const CONFIG_FATFS_LFN_NONE = 1
const CONFIG_FATFS_SECTOR_4096 = 1
const CONFIG_FATFS_CODEPAGE_437 = 1
const CONFIG_FATFS_CODEPAGE = 437
const CONFIG_FATFS_FS_LOCK = 0
const CONFIG_FATFS_TIMEOUT_MS = 10000
const CONFIG_FATFS_PER_FILE_CACHE = 1
const CONFIG_FATFS_USE_STRFUNC_NONE = 1
const CONFIG_FATFS_VFS_FSTAT_BLKSIZE = 0
const CONFIG_FATFS_LINK_LOCK = 1
const CONFIG_FATFS_DONT_TRUST_FREE_CLUSTER_CNT = 0
const CONFIG_FATFS_DONT_TRUST_LAST_ALLOC = 0
const CONFIG_FREERTOS_UNICORE = 1
const CONFIG_FREERTOS_HZ = 100
const CONFIG_FREERTOS_OPTIMIZED_SCHEDULER = 1
const CONFIG_FREERTOS_CHECK_STACKOVERFLOW_CANARY = 1
const CONFIG_FREERTOS_THREAD_LOCAL_STORAGE_POINTERS = 1
const CONFIG_FREERTOS_IDLE_TASK_STACKSIZE = 1536
const CONFIG_FREERTOS_MAX_TASK_NAME_LEN = 16
const CONFIG_FREERTOS_USE_TIMERS = 1
const CONFIG_FREERTOS_TIMER_SERVICE_TASK_NAME = "Tmr Svc"
const CONFIG_FREERTOS_TIMER_TASK_NO_AFFINITY = 1
const CONFIG_FREERTOS_TIMER_SERVICE_TASK_CORE_AFFINITY = 0x7FFFFFFF
const CONFIG_FREERTOS_TIMER_TASK_PRIORITY = 1
const CONFIG_FREERTOS_TIMER_TASK_STACK_DEPTH = 2048
const CONFIG_FREERTOS_TIMER_QUEUE_LENGTH = 10
const CONFIG_FREERTOS_QUEUE_REGISTRY_SIZE = 0
const CONFIG_FREERTOS_TASK_NOTIFICATION_ARRAY_ENTRIES = 1
const CONFIG_FREERTOS_TASK_FUNCTION_WRAPPER = 1
const CONFIG_FREERTOS_TLSP_DELETION_CALLBACKS = 1
const CONFIG_FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER = 1
const CONFIG_FREERTOS_ISR_STACKSIZE = 1536
const CONFIG_FREERTOS_INTERRUPT_BACKTRACE = 1
const CONFIG_FREERTOS_TICK_SUPPORT_SYSTIMER = 1
const CONFIG_FREERTOS_CORETIMER_SYSTIMER_LVL1 = 1
const CONFIG_FREERTOS_SYSTICK_USES_SYSTIMER = 1
const CONFIG_FREERTOS_PORT = 1
const CONFIG_FREERTOS_NO_AFFINITY = 0x7FFFFFFF
const CONFIG_FREERTOS_SUPPORT_STATIC_ALLOCATION = 1
const CONFIG_FREERTOS_DEBUG_OCDAWARE = 1
const CONFIG_FREERTOS_ENABLE_TASK_SNAPSHOT = 1
const CONFIG_FREERTOS_PLACE_SNAPSHOT_FUNS_INTO_FLASH = 1
const CONFIG_FREERTOS_NUMBER_OF_CORES = 1
const CONFIG_HAL_ASSERTION_EQUALS_SYSTEM = 1
const CONFIG_HAL_DEFAULT_ASSERTION_LEVEL = 2
const CONFIG_HAL_SPI_MASTER_FUNC_IN_IRAM = 1
const CONFIG_HAL_SPI_SLAVE_FUNC_IN_IRAM = 1
const CONFIG_HEAP_POISONING_DISABLED = 1
const CONFIG_HEAP_TRACING_OFF = 1
const CONFIG_LOG_DEFAULT_LEVEL_INFO = 1
const CONFIG_LOG_DEFAULT_LEVEL = 3
const CONFIG_LOG_MAXIMUM_EQUALS_DEFAULT = 1
const CONFIG_LOG_MAXIMUM_LEVEL = 3
const CONFIG_LOG_DYNAMIC_LEVEL_CONTROL = 1
const CONFIG_LOG_TAG_LEVEL_IMPL_CACHE_AND_LINKED_LIST = 1
const CONFIG_LOG_TAG_LEVEL_CACHE_BINARY_MIN_HEAP = 1
const CONFIG_LOG_TAG_LEVEL_IMPL_CACHE_SIZE = 31
const CONFIG_LOG_TIMESTAMP_SOURCE_RTOS = 1
const CONFIG_LWIP_ENABLE = 1
const CONFIG_LWIP_LOCAL_HOSTNAME = "espressif"
const CONFIG_LWIP_TCPIP_TASK_PRIO = 18
const CONFIG_LWIP_DNS_SUPPORT_MDNS_QUERIES = 1
const CONFIG_LWIP_TIMERS_ONDEMAND = 1
const CONFIG_LWIP_ND6 = 1
const CONFIG_LWIP_MAX_SOCKETS = 10
const CONFIG_LWIP_SO_REUSE = 1
const CONFIG_LWIP_SO_REUSE_RXTOALL = 1
const CONFIG_LWIP_IP_DEFAULT_TTL = 64
const CONFIG_LWIP_IP4_FRAG = 1
const CONFIG_LWIP_IP6_FRAG = 1
const CONFIG_LWIP_IP_REASS_MAX_PBUFS = 10
const CONFIG_LWIP_ESP_GRATUITOUS_ARP = 1
const CONFIG_LWIP_GARP_TMR_INTERVAL = 60
const CONFIG_LWIP_ESP_MLDV6_REPORT = 1
const CONFIG_LWIP_MLDV6_TMR_INTERVAL = 40
const CONFIG_LWIP_TCPIP_RECVMBOX_SIZE = 32
const CONFIG_LWIP_DHCP_DOES_ARP_CHECK = 1
const CONFIG_LWIP_DHCP_DISABLE_VENDOR_CLASS_ID = 1
const CONFIG_LWIP_DHCP_OPTIONS_LEN = 68
const CONFIG_LWIP_NUM_NETIF_CLIENT_DATA = 0
const CONFIG_LWIP_DHCP_COARSE_TIMER_SECS = 1
const CONFIG_LWIP_DHCPS = 1
const CONFIG_LWIP_DHCPS_LEASE_UNIT = 60
const CONFIG_LWIP_DHCPS_MAX_STATION_NUM = 8
const CONFIG_LWIP_DHCPS_STATIC_ENTRIES = 1
const CONFIG_LWIP_DHCPS_ADD_DNS = 1
const CONFIG_LWIP_IPV4 = 1
const CONFIG_LWIP_IPV6 = 1
const CONFIG_LWIP_IPV6_NUM_ADDRESSES = 3
const CONFIG_LWIP_NETIF_LOOPBACK = 1
const CONFIG_LWIP_LOOPBACK_MAX_PBUFS = 8
const CONFIG_LWIP_MAX_ACTIVE_TCP = 16
const CONFIG_LWIP_MAX_LISTENING_TCP = 16
const CONFIG_LWIP_TCP_HIGH_SPEED_RETRANSMISSION = 1
const CONFIG_LWIP_TCP_MAXRTX = 12
const CONFIG_LWIP_TCP_SYNMAXRTX = 12
const CONFIG_LWIP_TCP_MSS = 1440
const CONFIG_LWIP_TCP_TMR_INTERVAL = 250
const CONFIG_LWIP_TCP_MSL = 60000
const CONFIG_LWIP_TCP_FIN_WAIT_TIMEOUT = 20000
const CONFIG_LWIP_TCP_SND_BUF_DEFAULT = 5760
const CONFIG_LWIP_TCP_WND_DEFAULT = 5760
const CONFIG_LWIP_TCP_RECVMBOX_SIZE = 6
const CONFIG_LWIP_TCP_ACCEPTMBOX_SIZE = 6
const CONFIG_LWIP_TCP_QUEUE_OOSEQ = 1
const CONFIG_LWIP_TCP_OOSEQ_TIMEOUT = 6
const CONFIG_LWIP_TCP_OOSEQ_MAX_PBUFS = 4
const CONFIG_LWIP_TCP_OVERSIZE_MSS = 1
const CONFIG_LWIP_TCP_RTO_TIME = 1500
const CONFIG_LWIP_MAX_UDP_PCBS = 16
const CONFIG_LWIP_UDP_RECVMBOX_SIZE = 6
const CONFIG_LWIP_CHECKSUM_CHECK_ICMP = 1
const CONFIG_LWIP_TCPIP_TASK_STACK_SIZE = 3072
const CONFIG_LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY = 1
const CONFIG_LWIP_TCPIP_TASK_AFFINITY = 0x7FFFFFFF
const CONFIG_LWIP_IPV6_MEMP_NUM_ND6_QUEUE = 3
const CONFIG_LWIP_IPV6_ND6_NUM_NEIGHBORS = 5
const CONFIG_LWIP_IPV6_ND6_NUM_PREFIXES = 5
const CONFIG_LWIP_IPV6_ND6_NUM_ROUTERS = 3
const CONFIG_LWIP_IPV6_ND6_NUM_DESTINATIONS = 10
const CONFIG_LWIP_ICMP = 1
const CONFIG_LWIP_MAX_RAW_PCBS = 16
const CONFIG_LWIP_SNTP_MAX_SERVERS = 1
const CONFIG_LWIP_SNTP_UPDATE_DELAY = 3600000
const CONFIG_LWIP_SNTP_STARTUP_DELAY = 1
const CONFIG_LWIP_SNTP_MAXIMUM_STARTUP_DELAY = 5000
const CONFIG_LWIP_DNS_MAX_HOST_IP = 1
const CONFIG_LWIP_DNS_MAX_SERVERS = 3
const CONFIG_LWIP_BRIDGEIF_MAX_PORTS = 7
const CONFIG_LWIP_ESP_LWIP_ASSERT = 1
const CONFIG_LWIP_HOOK_TCP_ISN_DEFAULT = 1
const CONFIG_LWIP_HOOK_IP6_ROUTE_NONE = 1
const CONFIG_LWIP_HOOK_ND6_GET_GW_NONE = 1
const CONFIG_LWIP_HOOK_IP6_SELECT_SRC_ADDR_NONE = 1
const CONFIG_LWIP_HOOK_NETCONN_EXT_RESOLVE_NONE = 1
const CONFIG_LWIP_HOOK_DNS_EXT_RESOLVE_NONE = 1
const CONFIG_LWIP_HOOK_IP6_INPUT_DEFAULT = 1
const CONFIG_MBEDTLS_INTERNAL_MEM_ALLOC = 1
const CONFIG_MBEDTLS_ASYMMETRIC_CONTENT_LEN = 1
const CONFIG_MBEDTLS_SSL_IN_CONTENT_LEN = 16384
const CONFIG_MBEDTLS_SSL_OUT_CONTENT_LEN = 4096
const CONFIG_MBEDTLS_SSL_KEEP_PEER_CERTIFICATE = 1
const CONFIG_MBEDTLS_PKCS7_C = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL = 1
const CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS = 200
const CONFIG_MBEDTLS_CMAC_C = 1
const CONFIG_MBEDTLS_HARDWARE_AES = 1
const CONFIG_MBEDTLS_AES_USE_INTERRUPT = 1
const CONFIG_MBEDTLS_AES_INTERRUPT_LEVEL = 0
const CONFIG_MBEDTLS_GCM_SUPPORT_NON_AES_CIPHER = 1
const CONFIG_MBEDTLS_HARDWARE_MPI = 1
const CONFIG_MBEDTLS_LARGE_KEY_SOFTWARE_MPI = 1
const CONFIG_MBEDTLS_MPI_USE_INTERRUPT = 1
const CONFIG_MBEDTLS_MPI_INTERRUPT_LEVEL = 0
const CONFIG_MBEDTLS_HARDWARE_SHA = 1
const CONFIG_MBEDTLS_ROM_MD5 = 1
const CONFIG_MBEDTLS_HAVE_TIME = 1
const CONFIG_MBEDTLS_ECDSA_DETERMINISTIC = 1
const CONFIG_MBEDTLS_SHA1_C = 1
const CONFIG_MBEDTLS_SHA512_C = 1
const CONFIG_MBEDTLS_TLS_SERVER_AND_CLIENT = 1
const CONFIG_MBEDTLS_TLS_SERVER = 1
const CONFIG_MBEDTLS_TLS_CLIENT = 1
const CONFIG_MBEDTLS_TLS_ENABLED = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_RSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA = 1
const CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_RSA = 1
const CONFIG_MBEDTLS_SSL_RENEGOTIATION = 1
const CONFIG_MBEDTLS_SSL_PROTO_TLS1_2 = 1
const CONFIG_MBEDTLS_SSL_ALPN = 1
const CONFIG_MBEDTLS_CLIENT_SSL_SESSION_TICKETS = 1
const CONFIG_MBEDTLS_SERVER_SSL_SESSION_TICKETS = 1
const CONFIG_MBEDTLS_AES_C = 1
const CONFIG_MBEDTLS_CCM_C = 1
const CONFIG_MBEDTLS_GCM_C = 1
const CONFIG_MBEDTLS_PEM_PARSE_C = 1
const CONFIG_MBEDTLS_PEM_WRITE_C = 1
const CONFIG_MBEDTLS_X509_CRL_PARSE_C = 1
const CONFIG_MBEDTLS_X509_CSR_PARSE_C = 1
const CONFIG_MBEDTLS_ECP_C = 1
const CONFIG_MBEDTLS_PK_PARSE_EC_EXTENDED = 1
const CONFIG_MBEDTLS_PK_PARSE_EC_COMPRESSED = 1
const CONFIG_MBEDTLS_ECDH_C = 1
const CONFIG_MBEDTLS_ECDSA_C = 1
const CONFIG_MBEDTLS_ECP_DP_SECP192R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP224R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP256R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP384R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP521R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP192K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP224K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_SECP256K1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP256R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP384R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_BP512R1_ENABLED = 1
const CONFIG_MBEDTLS_ECP_DP_CURVE25519_ENABLED = 1
const CONFIG_MBEDTLS_ECP_NIST_OPTIM = 1
const CONFIG_MBEDTLS_ERROR_STRINGS = 1
const CONFIG_MBEDTLS_FS_IO = 1
const CONFIG_MQTT_PROTOCOL_311 = 1
const CONFIG_MQTT_TRANSPORT_SSL = 1
const CONFIG_MQTT_TRANSPORT_WEBSOCKET = 1
const CONFIG_MQTT_TRANSPORT_WEBSOCKET_SECURE = 1
const CONFIG_NEWLIB_STDOUT_LINE_ENDING_CRLF = 1
const CONFIG_NEWLIB_STDIN_LINE_ENDING_CR = 1
const CONFIG_NEWLIB_TIME_SYSCALL_USE_RTC_HRT = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_0 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_1 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_2 = 1
const CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_PATCH_VERSION = 1
const CONFIG_PTHREAD_TASK_PRIO_DEFAULT = 5
const CONFIG_PTHREAD_TASK_STACK_SIZE_DEFAULT = 3072
const CONFIG_PTHREAD_STACK_MIN = 768
const CONFIG_PTHREAD_TASK_NAME_DEFAULT = "pthread"
const CONFIG_MMU_PAGE_SIZE_64KB = 1
const CONFIG_MMU_PAGE_MODE = "64KB"
const CONFIG_MMU_PAGE_SIZE = 0x10000
const CONFIG_SPI_FLASH_BROWNOUT_RESET_XMC = 1
const CONFIG_SPI_FLASH_BROWNOUT_RESET = 1
const CONFIG_SPI_FLASH_SUSPEND_TSUS_VAL_US = 50
const CONFIG_SPI_FLASH_ROM_DRIVER_PATCH = 1
const CONFIG_SPI_FLASH_DANGEROUS_WRITE_ABORTS = 1
const CONFIG_SPI_FLASH_YIELD_DURING_ERASE = 1
const CONFIG_SPI_FLASH_ERASE_YIELD_DURATION_MS = 20
const CONFIG_SPI_FLASH_ERASE_YIELD_TICKS = 1
const CONFIG_SPI_FLASH_WRITE_CHUNK_SIZE = 8192
const CONFIG_SPI_FLASH_VENDOR_XMC_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_GD_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_ISSI_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_MXIC_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_WINBOND_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_BOYA_SUPPORTED = 1
const CONFIG_SPI_FLASH_VENDOR_TH_SUPPORTED = 1
const CONFIG_SPI_FLASH_SUPPORT_ISSI_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_MXIC_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_GD_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_WINBOND_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_BOYA_CHIP = 1
const CONFIG_SPI_FLASH_SUPPORT_TH_CHIP = 1
const CONFIG_SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE = 1
const CONFIG_SPIFFS_MAX_PARTITIONS = 3
const CONFIG_SPIFFS_CACHE = 1
const CONFIG_SPIFFS_CACHE_WR = 1
const CONFIG_SPIFFS_PAGE_CHECK = 1
const CONFIG_SPIFFS_GC_MAX_RUNS = 10
const CONFIG_SPIFFS_PAGE_SIZE = 256
const CONFIG_SPIFFS_OBJ_NAME_LEN = 32
const CONFIG_SPIFFS_USE_MAGIC = 1
const CONFIG_SPIFFS_USE_MAGIC_LENGTH = 1
const CONFIG_SPIFFS_META_LENGTH = 4
const CONFIG_SPIFFS_USE_MTIME = 1
const CONFIG_WS_TRANSPORT = 1
const CONFIG_WS_BUFFER_SIZE = 1024
const CONFIG_UNITY_ENABLE_FLOAT = 1
const CONFIG_UNITY_ENABLE_DOUBLE = 1
const CONFIG_UNITY_ENABLE_IDF_TEST_RUNNER = 1
const CONFIG_VFS_SUPPORT_IO = 1
const CONFIG_VFS_SUPPORT_DIR = 1
const CONFIG_VFS_SUPPORT_SELECT = 1
const CONFIG_VFS_SUPPRESS_SELECT_DEBUG_OUTPUT = 1
const CONFIG_VFS_SUPPORT_TERMIOS = 1
const CONFIG_VFS_MAX_COUNT = 8
const CONFIG_VFS_SEMIHOSTFS_MAX_MOUNT_POINTS = 1
const CONFIG_VFS_INITIALIZE_DEV_NULL = 1
const CONFIG_WL_SECTOR_SIZE_4096 = 1
const CONFIG_WL_SECTOR_SIZE = 4096
const CONFIG_WIFI_PROV_SCAN_MAX_ENTRIES = 16
const CONFIG_WIFI_PROV_AUTOSTOP_TIMEOUT = 30
const CONFIG_WIFI_PROV_STA_ALL_CHANNEL_SCAN = 1
const X__GNUCLIKE_ASM = 3
const X__GNUCLIKE___TYPEOF = 1
const X__GNUCLIKE___SECTION = 1
const X__GNUCLIKE_CTOR_SECTION_HANDLING = 1
const X__GNUCLIKE_BUILTIN_CONSTANT_P = 1
const X__GNUCLIKE_BUILTIN_VARARGS = 1
const X__GNUCLIKE_BUILTIN_STDARG = 1
const X__GNUCLIKE_BUILTIN_VAALIST = 1
const X__GNUC_VA_LIST_COMPATIBILITY = 1
const X__GNUCLIKE_BUILTIN_NEXT_ARG = 1
const X__GNUCLIKE_BUILTIN_MEMCPY = 1
const X__CC_SUPPORTS_INLINE = 1
const X__CC_SUPPORTS___INLINE = 1
const X__CC_SUPPORTS___INLINE__ = 1
const X__CC_SUPPORTS___FUNC__ = 1
const X__CC_SUPPORTS_WARNING = 1
const X__CC_SUPPORTS_VARADIC_XXX = 1
const X__CC_SUPPORTS_DYNAMIC_ARRAY_INIT = 1
const BIT31 = 0x80000000
const BIT30 = 0x40000000
const BIT29 = 0x20000000
const BIT28 = 0x10000000
const BIT27 = 0x08000000
const BIT26 = 0x04000000
const BIT25 = 0x02000000
const BIT24 = 0x01000000
const BIT23 = 0x00800000
const BIT22 = 0x00400000
const BIT21 = 0x00200000
const BIT20 = 0x00100000
const BIT19 = 0x00080000
const BIT18 = 0x00040000
const BIT17 = 0x00020000
const BIT16 = 0x00010000
const BIT15 = 0x00008000
const BIT14 = 0x00004000
const BIT13 = 0x00002000
const BIT12 = 0x00001000
const BIT11 = 0x00000800
const BIT10 = 0x00000400
const BIT9 = 0x00000200
const BIT8 = 0x00000100
const BIT7 = 0x00000080
const BIT6 = 0x00000040
const BIT5 = 0x00000020
const BIT4 = 0x00000010
const BIT3 = 0x00000008
const BIT2 = 0x00000004
const BIT1 = 0x00000002
const BIT0 = 0x00000001
const X__OBSOLETE_MATH_DEFAULT = 1
const X__NEWLIB_H__ = 1
const X_ATEXIT_DYNAMIC_ALLOC = 1
const X_FSEEK_OPTIMIZATION = 1
const X_FVWRITE_IN_STREAMIO = 1
const X_HAVE_INITFINI_ARRAY = 1
const X_HAVE_LONG_DOUBLE = 1
const X_ICONV_ENABLED = 1
const X_MB_LEN_MAX = 1
const X_NANO_MALLOC = 1
const X_REENT_CHECK_VERIFY = 1
const X_RETARGETABLE_LOCKING = 1
const X_UNBUF_STREAM_OPT = 1
const X_WANT_IO_C99_FORMATS = 1
const X_WANT_IO_LONG_LONG = 1
const X_WANT_IO_POS_ARGS = 1
const X_WANT_REENT_BACKWARD_BINARY_COMPAT = 1
const X_WANT_REENT_SMALL = 1
const X_WANT_USE_GDTOA = 1
const X__BUFSIZ__ = 128
const X__RAND_MAX = 0x7fffffff
const X_NULL = 0
const X_ATEXIT_SIZE = 32
const X_REENT_EMERGENCY_SIZE = 25
const X_REENT_ASCTIME_SIZE = 26
const X_REENT_SIGNAL_SIZE = 24
const EXIT_FAILURE = 1
const EXIT_SUCCESS = 0
const SOC_CLK_RC_FAST_FREQ_APPROX = 17500000
const SOC_CLK_RC_SLOW_FREQ_APPROX = 136000
const SOC_CLK_XTAL32K_FREQ_APPROX = 32768
const X__SLBF = 0x0001
const X__SNBF = 0x0002
const X__SRD = 0x0004
const X__SWR = 0x0008
const X__SRW = 0x0010
const X__SEOF = 0x0020
const X__SERR = 0x0040
const X__SMBF = 0x0080
const X__SAPP = 0x0100
const X__SSTR = 0x0200
const X__SOPT = 0x0400
const X__SNPT = 0x0800
const X__SOFF = 0x1000
const X__SORD = 0x2000
const X__SL64 = 0x8000
const X__SNLK = 0x0001
const X__SWID = 0x2000
const X_IOFBF = 0
const X_IOLBF = 1
const X_IONBF = 2
const FOPEN_MAX = 20
const FILENAME_MAX = 1024
const P_tmpdir = "/tmp"
const SEEK_SET = 0
const SEEK_CUR = 1
const SEEK_END = 2
const TMP_MAX = 26
const L_cuserid = 9
const L_ctermid = 16
const ESP_OK = 0
const ESP_ERR_NO_MEM = 0x101
const ESP_ERR_INVALID_ARG = 0x102
const ESP_ERR_INVALID_STATE = 0x103
const ESP_ERR_INVALID_SIZE = 0x104
const ESP_ERR_NOT_FOUND = 0x105
const ESP_ERR_NOT_SUPPORTED = 0x106
const ESP_ERR_TIMEOUT = 0x107
const ESP_ERR_INVALID_RESPONSE = 0x108
const ESP_ERR_INVALID_CRC = 0x109
const ESP_ERR_INVALID_VERSION = 0x10A
const ESP_ERR_INVALID_MAC = 0x10B
const ESP_ERR_NOT_FINISHED = 0x10C
const ESP_ERR_NOT_ALLOWED = 0x10D
const ESP_ERR_WIFI_BASE = 0x3000
const ESP_ERR_MESH_BASE = 0x4000
const ESP_ERR_FLASH_BASE = 0x6000
const ESP_ERR_HW_CRYPTO_BASE = 0xc000
const ESP_ERR_MEMPROT_BASE = 0xd000
const I2C_MST_ANA_CONF0_REG = 0x6000E040
const ANA_CONFIG_REG = 0x6000E044
const ANA_CONFIG2_REG = 0x6000E048
const REGI2C_ANA_CALI_PD_WORKAROUND = 1
const REGI2C_ANA_CALI_BYTE_NUM = 8
const DR_REG_SYSTEM_BASE = 0x600c0000
const DR_REG_SENSITIVE_BASE = 0x600c1000
const DR_REG_INTERRUPT_BASE = 0x600c2000
const DR_REG_EXTMEM_BASE = 0x600c4000
const DR_REG_MMU_TABLE = 0x600c5000
const DR_REG_AES_BASE = 0x6003a000
const DR_REG_SHA_BASE = 0x6003b000
const DR_REG_RSA_BASE = 0x6003c000
const DR_REG_HMAC_BASE = 0x6003e000
const DR_REG_DIGITAL_SIGNATURE_BASE = 0x6003d000
const DR_REG_GDMA_BASE = 0x6003f000
const DR_REG_ASSIST_DEBUG_BASE = 0x600ce000
const DR_REG_DEDICATED_GPIO_BASE = 0x600cf000
const DR_REG_WORLD_CNTL_BASE = 0x600d0000
const DR_REG_UART_BASE = 0x60000000
const DR_REG_SPI1_BASE = 0x60002000
const DR_REG_SPI0_BASE = 0x60003000
const DR_REG_GPIO_BASE = 0x60004000
const DR_REG_FE2_BASE = 0x60005000
const DR_REG_FE_BASE = 0x60006000
const DR_REG_RTCCNTL_BASE = 0x60008000
const DR_REG_IO_MUX_BASE = 0x60009000
const DR_REG_RTC_I2C_BASE = 0x6000e000
const DR_REG_UART1_BASE = 0x60010000
const DR_REG_I2C_EXT_BASE = 0x60013000
const DR_REG_UHCI0_BASE = 0x60014000
const DR_REG_RMT_BASE = 0x60016000
const DR_REG_LEDC_BASE = 0x60019000
const DR_REG_EFUSE_BASE = 0x60008800
const DR_REG_NRX_BASE = 0x6001CC00
const DR_REG_BB_BASE = 0x6001D000
const DR_REG_TIMERGROUP0_BASE = 0x6001F000
const DR_REG_TIMERGROUP1_BASE = 0x60020000
const DR_REG_SYSTIMER_BASE = 0x60023000
const DR_REG_SPI2_BASE = 0x60024000
const DR_REG_SYSCON_BASE = 0x60026000
const DR_REG_APB_CTRL_BASE = 0x60026000
const DR_REG_TWAI_BASE = 0x6002B000
const DR_REG_I2S_BASE = 0x6002D000
const DR_REG_APB_SARADC_BASE = 0x60040000
const DR_REG_USB_SERIAL_JTAG_BASE = 0x60043000
const DR_REG_XTS_AES_BASE = 0x600CC000
const SPI_CLK_DIV = 4
const TICKS_PER_US_ROM = 40
const SOC_DROM_LOW = 0x3C000000
const SOC_DROM_HIGH = 0x3C800000
const SOC_IROM_LOW = 0x42000000
const SOC_IROM_HIGH = 0x42800000
const SOC_IROM_MASK_LOW = 0x40000000
const SOC_IROM_MASK_HIGH = 0x40060000
const SOC_DROM_MASK_LOW = 0x3FF00000
const SOC_DROM_MASK_HIGH = 0x3FF20000
const SOC_IRAM_LOW = 0x4037C000
const SOC_IRAM_HIGH = 0x403E0000
const SOC_DRAM_LOW = 0x3FC80000
const SOC_DRAM_HIGH = 0x3FCE0000
const SOC_RTC_IRAM_LOW = 0x50000000
const SOC_RTC_IRAM_HIGH = 0x50002000
const SOC_RTC_DRAM_LOW = 0x50000000
const SOC_RTC_DRAM_HIGH = 0x50002000
const SOC_RTC_DATA_LOW = 0x50000000
const SOC_RTC_DATA_HIGH = 0x50002000
const SOC_DIRAM_IRAM_LOW = 0x40380000
const SOC_DIRAM_IRAM_HIGH = 0x403E0000
const SOC_DIRAM_DRAM_LOW = 0x3FC80000
const SOC_DIRAM_DRAM_HIGH = 0x3FCE0000
const SOC_DMA_LOW = 0x3FC80000
const SOC_DMA_HIGH = 0x3FCE0000
const SOC_BYTE_ACCESSIBLE_LOW = 0x3FC80000
const SOC_BYTE_ACCESSIBLE_HIGH = 0x3FD00000
const SOC_MEM_INTERNAL_LOW = 0x3FC80000
const SOC_MEM_INTERNAL_HIGH = 0x3FCE0000
const SOC_PERIPHERAL_LOW = 0x60000000
const SOC_PERIPHERAL_HIGH = 0x60100000
const SOC_DEBUG_LOW = 0x20000000
const SOC_DEBUG_HIGH = 0x28000000
const SOC_ROM_STACK_START = 0x3fcde710
const SOC_ROM_STACK_SIZE = 0x2000
const ETS_T1_WDT_INUM = 24
const ETS_CACHEERR_INUM = 25
const ETS_MEMPROT_ERR_INUM = 26
const ETS_ASSIST_DEBUG_INUM = 27
const ETS_MAX_INUM = 31
const ETS_SLC_INUM = 1
const ETS_UART0_INUM = 5
const ETS_UART1_INUM = 5
const ETS_SPI2_INUM = 1
const ETS_GPIO_INUM = 4
const ETS_INVALID_INUM = 0
const SOC_INTERRUPT_LEVEL_MEDIUM = 4
const OTHER_BLOCKS_POWERUP = 1
const OTHER_BLOCKS_WAIT = 1
const RTC_CNTL_DBIAS_0V90 = 13
const RTC_CNTL_DBIAS_0V95 = 16
const RTC_CNTL_DBIAS_1V00 = 18
const RTC_CNTL_DBIAS_1V05 = 20
const RTC_CNTL_DBIAS_1V10 = 23
const RTC_CNTL_DBIAS_1V15 = 25
const RTC_CNTL_DBIAS_1V20 = 28
const RTC_CNTL_DBIAS_1V25 = 30
const RTC_CNTL_DBIAS_1V30 = 31
const SOC_DELAY_RTC_FAST_CLK_SWITCH = 3
const SOC_DELAY_RTC_SLOW_CLK_SWITCH = 300
const SOC_DELAY_RC_FAST_ENABLE = 50
const SOC_DELAY_RC_FAST_DIGI_SWITCH = 5
const RTC_CNTL_PLL_BUF_WAIT_DEFAULT = 20
const RTC_CNTL_XTL_BUF_WAIT_DEFAULT = 100
const RTC_CNTL_CK8M_WAIT_DEFAULT = 20
const RTC_CK8M_ENABLE_WAIT_DEFAULT = 5
const RTC_CNTL_CK8M_DFREQ_DEFAULT = 100
const RTC_CNTL_SCK_DCAP_DEFAULT = 255
const RTC_CNTL_DBG_ATTEN_LIGHTSLEEP_DEFAULT = 5
const RTC_CNTL_DBG_ATTEN_LIGHTSLEEP_NODROP = 0
const RTC_CNTL_DBG_ATTEN_DEEPSLEEP_DEFAULT = 15
const RTC_CNTL_DBG_ATTEN_DEEPSLEEP_NODROP = 0
const RTC_CNTL_BIASSLP_SLEEP_DEFAULT = 1
const RTC_CNTL_BIASSLP_SLEEP_ON = 0
const RTC_CNTL_PD_CUR_SLEEP_DEFAULT = 1
const RTC_CNTL_PD_CUR_SLEEP_ON = 0
const RTC_CNTL_DG_VDD_DRV_B_SLP_DEFAULT = 254
const RTC_CNTL_DBG_ATTEN_MONITOR_DEFAULT = 0
const RTC_CNTL_BIASSLP_MONITOR_DEFAULT = 0
const RTC_CNTL_PD_CUR_MONITOR_DEFAULT = 0
const RTC_CNTL_RTC_DBIAS_DEEPSLEEP_0V7 = 25
const RTC_CNTL_RTC_DBIAS_LIGHTSLEEP_0V6 = 5
const RTC_CNTL_DIG_DBIAS_LIGHTSLEEP_0V6 = 5
const K_RTC_MID_MUL10000 = 215
const K_DIG_MID_MUL10000 = 213
const V_RTC_MID_MUL10000 = 10800
const V_DIG_MID_MUL10000 = 10860
const RTC_CLK_CAL_FRACT = 19
const RTC_VDDSDIO_TIEH_1_8V = 0
const RTC_VDDSDIO_TIEH_3_3V = 1
const STACK_OVERHEAD_CHECKER = 0
const STACK_OVERHEAD_OPTIMIZATION = 0
const STACK_OVERHEAD_APPTRACE = 0
const STACK_OVERHEAD_WATCHPOINT = 0
const ConfigUSE_PORT_OPTIMISED_TASK_SELECTION = 1
const ConfigMAX_API_CALL_INTERRUPT_PRIORITY = 0
const ConfigUSE_NEWLIB_REENTRANT = 1
const ConfigINCLUDE_FREERTOS_TASK_C_ADDITIONS_H = 1
const INCLUDE_xTaskDelayUntil = 1
const INCLUDE_uxTaskGetStackHighWaterMark2 = 1
const ConfigUSE_PREEMPTION = 1
const ConfigUSE_TIME_SLICING = 1
const ConfigUSE_16_BIT_TICKS = 0
const ConfigIDLE_SHOULD_YIELD = 0
const ConfigKERNEL_INTERRUPT_PRIORITY = 1
const ConfigUSE_MUTEXES = 1
const ConfigUSE_RECURSIVE_MUTEXES = 1
const ConfigUSE_COUNTING_SEMAPHORES = 1
const ConfigUSE_QUEUE_SETS = 1
const ConfigUSE_TASK_NOTIFICATIONS = 1
const ConfigENABLE_BACKWARD_COMPATIBILITY = 0
const ConfigSUPPORT_STATIC_ALLOCATION = 1
const ConfigSUPPORT_DYNAMIC_ALLOCATION = 1
const ConfigAPPLICATION_ALLOCATED_HEAP = 1
const ConfigSTACK_ALLOCATION_FROM_SEPARATE_HEAP = 0
const ConfigUSE_IDLE_HOOK = 0
const ConfigUSE_TICK_HOOK = 0
const ConfigCHECK_FOR_STACK_OVERFLOW = 2
const ConfigRECORD_STACK_HIGH_ADDRESS = 1
const ConfigUSE_CO_ROUTINES = 0
const ConfigMAX_CO_ROUTINE_PRIORITIES = 2
const ConfigUSE_TIMERS = 1
const INCLUDE_vTaskPrioritySet = 1
const INCLUDE_uxTaskPriorityGet = 1
const INCLUDE_vTaskDelete = 1
const INCLUDE_vTaskSuspend = 1
const INCLUDE_vTaskDelay = 1
const INCLUDE_xTaskGetIdleTaskHandle = 1
const INCLUDE_xTaskAbortDelay = 1
const INCLUDE_xSemaphoreGetMutexHolder = 1
const INCLUDE_xTaskGetHandle = 1
const INCLUDE_uxTaskGetStackHighWaterMark = 1
const INCLUDE_eTaskGetState = 1
const INCLUDE_xTaskResumeFromISR = 1
const INCLUDE_xTimerPendFunctionCall = 1
const INCLUDE_xTaskGetSchedulerState = 1
const INCLUDE_xTaskGetCurrentTaskHandle = 1
const ConfigTHREAD_LOCAL_STORAGE_DELETE_CALLBACKS = 1
const ConfigCHECK_MUTEX_GIVEN_BY_OWNER = 1
const COLOR_SPACE_BITWIDTH = 8
const COLOR_PIXEL_FORMAT_BITWIDTH = 24
const SLP_OE_V = 1
const SLP_OE_S = 0
const SLP_SEL_V = 1
const SLP_SEL_S = 1
const SLP_PD_V = 1
const SLP_PD_S = 2
const SLP_PU_V = 1
const SLP_PU_S = 3
const SLP_IE_V = 1
const SLP_IE_S = 4
const SLP_DRV = 0x3
const SLP_DRV_V = 0x3
const SLP_DRV_S = 5
const FUN_PD_V = 1
const FUN_PD_S = 7
const FUN_PU_V = 1
const FUN_PU_S = 8
const FUN_IE_V = 1
const FUN_IE_S = 9
const FUN_DRV = 0x3
const FUN_DRV_V = 0x3
const FUN_DRV_S = 10
const MCU_SEL = 0x7
const MCU_SEL_V = 0x7
const MCU_SEL_S = 12
const FILTER_EN_V = 1
const FILTER_EN_S = 15
const PIN_FUNC_GPIO = 1
const SPI_HD_GPIO_NUM = 12
const SPI_WP_GPIO_NUM = 13
const SPI_CS0_GPIO_NUM = 14
const SPI_CLK_GPIO_NUM = 15
const SPI_D_GPIO_NUM = 16
const SPI_Q_GPIO_NUM = 17
const SD_CLK_GPIO_NUM = 12
const SD_CMD_GPIO_NUM = 11
const SD_DATA0_GPIO_NUM = 13
const SD_DATA1_GPIO_NUM = 14
const SD_DATA2_GPIO_NUM = 9
const SD_DATA3_GPIO_NUM = 10
const USB_INT_PHY0_DM_GPIO_NUM = 18
const USB_INT_PHY0_DP_GPIO_NUM = 19
const MAX_RTC_GPIO_NUM = 5
const MAX_PAD_GPIO_NUM = 21
const MAX_GPIO_NUM = 25
const PAD_POWER_SEL_V = 0x1
const PAD_POWER_SEL_S = 15
const PAD_POWER_SWITCH_DELAY = 0x7
const PAD_POWER_SWITCH_DELAY_V = 0x7
const PAD_POWER_SWITCH_DELAY_S = 12
const CLK_OUT3 = 0xf
const CLK_OUT3_S = 8
const CLK_OUT2 = 0xf
const CLK_OUT2_S = 4
const CLK_OUT1 = 0xf
const CLK_OUT1_S = 0
const FUNC_XTAL_32K_P_GPIO0 = 1
const FUNC_XTAL_32K_P_GPIO0_0 = 0
const FUNC_XTAL_32K_N_GPIO1 = 1
const FUNC_XTAL_32K_N_GPIO1_0 = 0
const FUNC_GPIO2_FSPIQ = 2
const FUNC_GPIO2_GPIO2 = 1
const FUNC_GPIO2_GPIO2_0 = 0
const FUNC_GPIO3_GPIO3 = 1
const FUNC_GPIO3_GPIO3_0 = 0
const FUNC_MTMS_FSPIHD = 2
const FUNC_MTMS_GPIO4 = 1
const FUNC_MTMS_MTMS = 0
const FUNC_MTDI_FSPIWP = 2
const FUNC_MTDI_GPIO5 = 1
const FUNC_MTDI_MTDI = 0
const FUNC_MTCK_FSPICLK = 2
const FUNC_MTCK_GPIO6 = 1
const FUNC_MTCK_MTCK = 0
const FUNC_MTDO_FSPID = 2
const FUNC_MTDO_GPIO7 = 1
const FUNC_MTDO_MTDO = 0
const FUNC_GPIO8_GPIO8 = 1
const FUNC_GPIO8_GPIO8_0 = 0
const FUNC_GPIO9_GPIO9 = 1
const FUNC_GPIO9_GPIO9_0 = 0
const FUNC_GPIO10_FSPICS0 = 2
const FUNC_GPIO10_GPIO10 = 1
const FUNC_GPIO10_GPIO10_0 = 0
const FUNC_VDD_SPI_GPIO11 = 1
const FUNC_VDD_SPI_GPIO11_0 = 0
const FUNC_SPIHD_GPIO12 = 1
const FUNC_SPIHD_SPIHD = 0
const FUNC_SPIWP_GPIO13 = 1
const FUNC_SPIWP_SPIWP = 0
const FUNC_SPICS0_GPIO14 = 1
const FUNC_SPICS0_SPICS0 = 0
const FUNC_SPICLK_GPIO15 = 1
const FUNC_SPICLK_SPICLK = 0
const FUNC_SPID_GPIO16 = 1
const FUNC_SPID_SPID = 0
const FUNC_SPIQ_GPIO17 = 1
const FUNC_SPIQ_SPIQ = 0
const FUNC_GPIO18_GPIO18 = 1
const FUNC_GPIO18_GPIO18_0 = 0
const FUNC_GPIO19_GPIO19 = 1
const FUNC_GPIO19_GPIO19_0 = 0
const FUNC_U0RXD_GPIO20 = 1
const FUNC_U0RXD_U0RXD = 0
const FUNC_U0TXD_GPIO21 = 1
const FUNC_U0TXD_U0TXD = 0
const IO_MUX_DATE = 0xFFFFFFFF
const IO_MUX_DATE_S = 0
const IO_MUX_DATE_VERSION = 0x2006050
const SENSITIVE_ROM_TABLE_LOCK_V = 0x1
const SENSITIVE_ROM_TABLE_LOCK_S = 0
const SENSITIVE_ROM_TABLE = 0xFFFFFFFF
const SENSITIVE_ROM_TABLE_V = 0xFFFFFFFF
const SENSITIVE_ROM_TABLE_S = 0
const SENSITIVE_PRIVILEGE_MODE_SEL_LOCK_V = 0x1
const SENSITIVE_PRIVILEGE_MODE_SEL_LOCK_S = 0
const SENSITIVE_PRIVILEGE_MODE_SEL_V = 0x1
const SENSITIVE_PRIVILEGE_MODE_SEL_S = 0
const SENSITIVE_APB_PERIPHERAL_ACCESS_LOCK_V = 0x1
const SENSITIVE_APB_PERIPHERAL_ACCESS_LOCK_S = 0
const SENSITIVE_APB_PERIPHERAL_ACCESS_SPLIT_BURST_V = 0x1
const SENSITIVE_APB_PERIPHERAL_ACCESS_SPLIT_BURST_S = 0
const SENSITIVE_INTERNAL_SRAM_USAGE_LOCK_V = 0x1
const SENSITIVE_INTERNAL_SRAM_USAGE_LOCK_S = 0
const SENSITIVE_INTERNAL_SRAM_USAGE_CPU_SRAM = 0x00000007
const SENSITIVE_INTERNAL_SRAM_USAGE_CPU_SRAM_V = 0x7
const SENSITIVE_INTERNAL_SRAM_USAGE_CPU_SRAM_S = 1
const SENSITIVE_INTERNAL_SRAM_USAGE_CPU_CACHE_V = 0x1
const SENSITIVE_INTERNAL_SRAM_USAGE_CPU_CACHE_S = 0
const SENSITIVE_INTERNAL_SRAM_ALLOC_MAC_DUMP_V = 0x1
const SENSITIVE_INTERNAL_SRAM_ALLOC_MAC_DUMP_S = 3
const SENSITIVE_INTERNAL_SRAM_USAGE_MAC_DUMP_SRAM = 0x00000007
const SENSITIVE_INTERNAL_SRAM_USAGE_MAC_DUMP_SRAM_V = 0x7
const SENSITIVE_INTERNAL_SRAM_USAGE_MAC_DUMP_SRAM_S = 0
const SENSITIVE_INTERNAL_SRAM_USAGE_LOG_SRAM_V = 0x1
const SENSITIVE_INTERNAL_SRAM_USAGE_LOG_SRAM_S = 0
const SENSITIVE_CACHE_TAG_ACCESS_LOCK_V = 0x1
const SENSITIVE_CACHE_TAG_ACCESS_LOCK_S = 0
const SENSITIVE_PRO_D_TAG_WR_ACS_V = 0x1
const SENSITIVE_PRO_D_TAG_WR_ACS_S = 3
const SENSITIVE_PRO_D_TAG_RD_ACS_V = 0x1
const SENSITIVE_PRO_D_TAG_RD_ACS_S = 2
const SENSITIVE_PRO_I_TAG_WR_ACS_V = 0x1
const SENSITIVE_PRO_I_TAG_WR_ACS_S = 1
const SENSITIVE_PRO_I_TAG_RD_ACS_V = 0x1
const SENSITIVE_PRO_I_TAG_RD_ACS_S = 0
const SENSITIVE_CACHE_MMU_ACCESS_LOCK_V = 0x1
const SENSITIVE_CACHE_MMU_ACCESS_LOCK_S = 0
const SENSITIVE_PRO_MMU_WR_ACS_V = 0x1
const SENSITIVE_PRO_MMU_WR_ACS_S = 1
const SENSITIVE_PRO_MMU_RD_ACS_V = 0x1
const SENSITIVE_PRO_MMU_RD_ACS_S = 0
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 18
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 16
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 14
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 12
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 6
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 4
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 2
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 18
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 16
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 14
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 12
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 6
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 4
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 2
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 18
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 16
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 14
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 12
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 6
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 4
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 2
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 18
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 16
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 14
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 12
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 6
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 4
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 2
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 18
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 16
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 14
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 12
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 6
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 4
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 2
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 18
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 16
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 14
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 12
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 6
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 4
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 2
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 18
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 16
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 14
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 12
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 6
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 4
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 2
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 18
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 16
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 14
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 12
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 6
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 4
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 2
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 18
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 16
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 14
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 12
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000003
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x3
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 6
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000003
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x3
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 4
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000003
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x3
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 2
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000003
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x3
const SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_LOCK_V = 0x1
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_LOCK_S = 0
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_EN_V = 0x1
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_EN_S = 1
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_CLR_V = 0x1
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_CLR_S = 0
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_ADDR = 0x00FFFFFF
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_ADDR_V = 0xFFFFFF
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_ADDR_S = 3
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WORLD = 0x00000003
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WORLD_V = 0x3
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WORLD_S = 1
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_V = 0x1
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_S = 0
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_BYTEEN = 0x0000000F
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_BYTEEN_V = 0xF
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_BYTEEN_S = 1
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WR_V = 0x1
const SENSITIVE_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WR_S = 0
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_LOCK_S = 0
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_SPLITADDR = 0x000000FF
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_SPLITADDR_V = 0xFF
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_SPLITADDR_S = 14
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_2 = 0x00000003
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_2_V = 0x3
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_2_S = 4
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_1 = 0x00000003
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_1_V = 0x3
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_1_S = 2
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_0 = 0x00000003
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_0_V = 0x3
const SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_0_S = 0
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_SPLITADDR = 0x000000FF
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_SPLITADDR_V = 0xFF
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_SPLITADDR_S = 14
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_2 = 0x00000003
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_2_V = 0x3
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_2_S = 4
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_1 = 0x00000003
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_1_V = 0x3
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_1_S = 2
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_0 = 0x00000003
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_0_V = 0x3
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_0_S = 0
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_SPLITADDR = 0x000000FF
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_SPLITADDR_V = 0xFF
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_SPLITADDR_S = 14
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_2 = 0x00000003
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_2_V = 0x3
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_2_S = 4
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_1 = 0x00000003
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_1_V = 0x3
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_1_S = 2
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_0 = 0x00000003
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_0_V = 0x3
const SENSITIVE_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_0_S = 0
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_SPLITADDR = 0x000000FF
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_SPLITADDR_V = 0xFF
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_SPLITADDR_S = 14
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_2 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_2_V = 0x3
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_2_S = 4
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_1 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_1_V = 0x3
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_1_S = 2
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_0 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_0_V = 0x3
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_0_S = 0
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_SPLITADDR = 0x000000FF
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_SPLITADDR_V = 0xFF
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_SPLITADDR_S = 14
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_2 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_2_V = 0x3
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_2_S = 4
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_1 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_1_V = 0x3
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_1_S = 2
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_0 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_0_V = 0x3
const SENSITIVE_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_0_S = 0
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS_S = 18
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_0 = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_0_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_0_S = 12
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 9
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 6
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 3
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 0
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS_S = 18
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_0 = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_0_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_0_S = 12
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 9
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 6
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 3
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000007
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x7
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_LOCK_V = 0x1
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_LOCK_S = 0
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_EN_V = 0x1
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_EN_S = 1
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_CLR_V = 0x1
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_CLR_S = 0
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR = 0x00FFFFFF
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR_V = 0xFFFFFF
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR_S = 5
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD = 0x00000003
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD_V = 0x3
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD_S = 3
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE_V = 0x1
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE_S = 2
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR_V = 0x1
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR_S = 1
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_V = 0x1
const SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_S = 0
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS = 0x00000003
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS_V = 0x3
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS_S = 26
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS = 0x00000003
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS_V = 0x3
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS_S = 24
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_V = 0x3
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_S = 18
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_V = 0x3
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_S = 16
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_V = 0x3
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_S = 14
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_V = 0x3
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_S = 12
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_V = 0x3
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_S = 6
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_V = 0x3
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_S = 4
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_V = 0x3
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_S = 2
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 = 0x00000003
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_V = 0x3
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_S = 0
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_LOCK_V = 0x1
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_LOCK_S = 0
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_EN_V = 0x1
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_EN_S = 1
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_CLR_V = 0x1
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_CLR_S = 0
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR = 0x00FFFFFF
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR_V = 0xFFFFFF
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR_S = 4
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD = 0x00000003
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD_V = 0x3
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD_S = 2
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK_V = 0x1
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK_S = 1
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_V = 0x1
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_S = 0
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_BYTEEN = 0x0000000F
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_BYTEEN_V = 0xF
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_BYTEEN_S = 1
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR_V = 0x1
const SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR_S = 0
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART1 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART1_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART1_S = 30
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_S = 26
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_MISC = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_MISC_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_MISC_S = 24
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WDG = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WDG_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WDG_S = 18
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_IO_MUX = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_IO_MUX_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_IO_MUX_S = 16
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RTC = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RTC_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RTC_S = 14
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMER = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMER_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMER_S = 12
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE_S = 10
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE2 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE2_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE2_S = 8
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_GPIO = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_GPIO_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_GPIO_S = 6
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_0 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_0_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_0_S = 4
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_1 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_1_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_1_S = 2
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART_S = 0
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTIMER = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTIMER_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTIMER_S = 30
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP1 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP1_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP1_S = 28
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP_S = 26
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BB = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BB_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BB_S = 22
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_LEDC = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_LEDC_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_LEDC_S = 16
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RMT = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RMT_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RMT_S = 10
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UHCI0 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UHCI0_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UHCI0_S = 6
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT0 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT0_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT0_S = 4
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_S = 0
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWR = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWR_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWR_S = 28
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WIFIMAC = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WIFIMAC_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WIFIMAC_S = 26
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RWBT = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RWBT_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RWBT_S = 22
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2S0 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2S0_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2S0_S = 14
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CAN = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CAN_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CAN_S = 10
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_CTRL = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_CTRL_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_CTRL_S = 4
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SPI_2 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SPI_2_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SPI_2_S = 0
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WORLD_CONTROLLER = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WORLD_CONTROLLER_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WORLD_CONTROLLER_S = 30
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DIO = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DIO_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DIO_S = 28
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_AD = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_AD_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_AD_S = 26
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CACHE_CONFIG = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CACHE_CONFIG_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CACHE_CONFIG_S = 24
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DMA_COPY = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DMA_COPY_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DMA_COPY_S = 22
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_INTERRUPT = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_INTERRUPT_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_INTERRUPT_S = 20
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SENSITIVE = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SENSITIVE_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SENSITIVE_S = 18
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTEM = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTEM_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTEM_S = 16
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_DEVICE = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_DEVICE_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_DEVICE_S = 14
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_PWR = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_PWR_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_PWR_S = 12
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_ADC = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_ADC_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_ADC_S = 8
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_DMA = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_DMA_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_DMA_S = 6
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_PERI = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_PERI_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_PERI_S = 4
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_WRAP = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_WRAP_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_WRAP_S = 2
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART1 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART1_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART1_S = 30
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_S = 26
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_MISC = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_MISC_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_MISC_S = 24
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WDG = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WDG_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WDG_S = 18
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_IO_MUX = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_IO_MUX_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_IO_MUX_S = 16
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RTC = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RTC_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RTC_S = 14
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMER = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMER_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMER_S = 12
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE_S = 10
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE2 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE2_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE2_S = 8
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_GPIO = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_GPIO_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_GPIO_S = 6
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_0 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_0_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_0_S = 4
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_1 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_1_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_1_S = 2
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART_S = 0
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTIMER = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTIMER_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTIMER_S = 30
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP1 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP1_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP1_S = 28
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP_S = 26
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BB = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BB_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BB_S = 22
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_LEDC = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_LEDC_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_LEDC_S = 16
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RMT = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RMT_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RMT_S = 10
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UHCI0 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UHCI0_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UHCI0_S = 6
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT0 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT0_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT0_S = 4
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_S = 0
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWR = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWR_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWR_S = 28
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WIFIMAC = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WIFIMAC_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WIFIMAC_S = 26
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RWBT = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RWBT_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RWBT_S = 22
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2S0 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2S0_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2S0_S = 14
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CAN = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CAN_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CAN_S = 10
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_CTRL = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_CTRL_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_CTRL_S = 4
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SPI_2 = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SPI_2_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SPI_2_S = 0
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WORLD_CONTROLLER = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WORLD_CONTROLLER_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WORLD_CONTROLLER_S = 30
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DIO = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DIO_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DIO_S = 28
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_AD = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_AD_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_AD_S = 26
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CACHE_CONFIG = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CACHE_CONFIG_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CACHE_CONFIG_S = 24
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DMA_COPY = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DMA_COPY_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DMA_COPY_S = 22
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_INTERRUPT = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_INTERRUPT_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_INTERRUPT_S = 20
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SENSITIVE = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SENSITIVE_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SENSITIVE_S = 18
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTEM = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTEM_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTEM_S = 16
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_DEVICE = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_DEVICE_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_DEVICE_S = 14
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_PWR = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_PWR_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_PWR_S = 12
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_ADC = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_ADC_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_ADC_S = 8
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_DMA = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_DMA_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_DMA_S = 6
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_PERI = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_PERI_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_PERI_S = 4
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_WRAP = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_WRAP_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_WRAP_S = 2
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_1 = 0x000007FF
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_1_V = 0x7FF
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_1_S = 11
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_0 = 0x000007FF
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_0_V = 0x7FF
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_0_S = 0
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_H = 0x00000007
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_H_V = 0x7
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_H_S = 9
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_L = 0x00000007
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_L_V = 0x7
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_L_S = 6
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_H = 0x00000007
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_H_V = 0x7
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_H_S = 3
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_L = 0x00000007
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_L_V = 0x7
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_L_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_REGION_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_6 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_6_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_6_S = 12
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_5 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_5_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_5_S = 10
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_4 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_4_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_4_S = 8
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_3 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_3_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_3_S = 6
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_2 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_2_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_2_S = 4
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_1 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_1_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_1_S = 2
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_0 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_0_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_0_AREA_0_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_6 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_6_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_6_S = 12
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_5 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_5_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_5_S = 10
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_4 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_4_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_4_S = 8
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_3 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_3_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_3_S = 6
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_2 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_2_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_2_S = 4
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_1 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_1_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_1_S = 2
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_0 = 0x00000003
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_0_V = 0x3
const SENSITIVE_REGION_PMS_CONSTRAIN_WORLD_1_AREA_0_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_0 = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_0_V = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_0_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_1 = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_1_V = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_1_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_2 = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_2_V = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_2_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_3 = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_3_V = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_3_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_4 = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_4_V = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_4_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_5 = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_5_V = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_5_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_6 = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_6_V = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_6_S = 0
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_7 = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_7_V = 0x3FFFFFFF
const SENSITIVE_REGION_PMS_CONSTRAIN_ADDR_7_S = 0
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_LOCK_V = 0x1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_LOCK_S = 0
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_EN_V = 0x1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_EN_S = 1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_CLR_V = 0x1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_CLR_S = 0
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWORLD = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWORLD_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWORLD_S = 6
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE_V = 0x1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE_S = 5
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HSIZE = 0x00000007
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HSIZE_V = 0x7
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HSIZE_S = 2
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0_V = 0x1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0_S = 1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_V = 0x1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_S = 0
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HADDR = 0xFFFFFFFF
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HADDR_V = 0xFFFFFFFF
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HADDR_S = 0
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN_V = 0x1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN_S = 1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR_V = 0x1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR_S = 0
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HWORLD = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HWORLD_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HWORLD_S = 3
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HSIZE = 0x00000003
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HSIZE_V = 0x3
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HSIZE_S = 1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR_V = 0x1
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR_S = 0
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HADDR = 0xFFFFFFFF
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HADDR_V = 0xFFFFFFFF
const SENSITIVE_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HADDR_S = 0
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_LOCK_V = 0x1
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_LOCK_S = 0
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_UART1 = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_UART1_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_UART1_S = 30
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_I2C = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_I2C_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_I2C_S = 26
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_MISC = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_MISC_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_MISC_S = 24
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_WDG = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_WDG_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_WDG_S = 18
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_IO_MUX = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_IO_MUX_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_IO_MUX_S = 16
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_RTC = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_RTC_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_RTC_S = 14
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_TIMER = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_TIMER_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_TIMER_S = 12
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_FE = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_FE_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_FE_S = 10
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_FE2 = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_FE2_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_FE2_S = 8
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_GPIO = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_GPIO_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_GPIO_S = 6
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_G0SPI_0 = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_G0SPI_0_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_G0SPI_0_S = 4
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_G0SPI_1 = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_G0SPI_1_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_G0SPI_1_S = 2
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_UART = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_UART_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_UART_S = 0
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_SYSTIMER = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_SYSTIMER_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_SYSTIMER_S = 30
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP1 = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP1_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP1_S = 28
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP_S = 26
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_BB = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_BB_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_BB_S = 22
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_LEDC = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_LEDC_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_LEDC_S = 16
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_RMT = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_RMT_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_RMT_S = 10
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_UHCI0 = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_UHCI0_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_UHCI0_S = 6
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_I2C_EXT0 = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_I2C_EXT0_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_I2C_EXT0_S = 4
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_BT = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_BT_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_BT_S = 0
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_PWR = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_PWR_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_PWR_S = 28
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_WIFIMAC = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_WIFIMAC_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_WIFIMAC_S = 26
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_RWBT = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_RWBT_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_RWBT_S = 22
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_I2S0 = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_I2S0_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_I2S0_S = 14
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_CAN = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_CAN_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_CAN_S = 10
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_APB_CTRL = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_APB_CTRL_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_APB_CTRL_S = 4
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_SPI_2 = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_SPI_2_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_SPI_2_S = 0
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_USB_DEVICE = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_USB_DEVICE_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_USB_DEVICE_S = 14
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_BT_PWR = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_BT_PWR_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_BT_PWR_S = 12
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_APB_ADC = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_APB_ADC_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_APB_ADC_S = 8
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_DMA = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_DMA_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_DMA_S = 6
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_PERI = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_PERI_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_PERI_S = 4
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_USB_WRAP = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_USB_WRAP_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_USB_WRAP_S = 2
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_LOCK_V = 0x1
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_LOCK_S = 0
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_EN_V = 0x1
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_EN_S = 1
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_CLR_V = 0x1
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_CLR_S = 0
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HWRITE_V = 0x1
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HWRITE_S = 6
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HSIZE = 0x00000007
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HSIZE_V = 0x7
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HSIZE_S = 3
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HTRANS = 0x00000003
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HTRANS_V = 0x3
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HTRANS_S = 1
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_INTR_V = 0x1
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_INTR_S = 0
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_HADDR = 0xFFFFFFFF
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_HADDR_V = 0xFFFFFFFF
const SENSITIVE_BACKUP_BUS_PMS_MONITOR_VIOLATE_HADDR_S = 0
const SENSITIVE_CLK_EN_V = 0x1
const SENSITIVE_CLK_EN_S = 0
const SENSITIVE_DATE = 0x0FFFFFFF
const SENSITIVE_DATE_V = 0xFFFFFFF
const SENSITIVE_DATE_S = 0
const I_D_SRAM_SEGMENT_SIZE = 0x20000
const I_D_SPLIT_LINE_SHIFT = 0x9
const I_D_FAULT_ADDR_SHIFT = 0x2
const DRAM_SRAM_START = 0x3FC7C000
const IRAM0_VIOLATE_STATUS_ADDR_OFFSET = 0x40000000
const DRAM0_VIOLATE_STATUS_ADDR_OFFSET = 0x3C000000
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_X_R = 0x1
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_X_W = 0x2
const SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_X_F = 0x4
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_X_R = 0x1
const SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_X_W = 0x2
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_X_W = 0x1
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_X_R = 0x2
const SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_X_F = 0x4
const AREA_LOW = 0
const AREA_HIGH = 1
const MEMP_HAL_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_BITS_BELOW_SA = 0x0
const MEMP_HAL_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_BITS_EQUAL_SA = 0x2
const MEMP_HAL_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_BITS_ABOVE_SA = 0x3
const RTC_CNTL_SW_SYS_RST_V = 0x1
const RTC_CNTL_SW_SYS_RST_S = 31
const RTC_CNTL_DG_WRAP_FORCE_NORST_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_NORST_S = 30
const RTC_CNTL_DG_WRAP_FORCE_RST_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_RST_S = 29
const RTC_CNTL_ANALOG_FORCE_NOISO_V = 0x1
const RTC_CNTL_ANALOG_FORCE_NOISO_S = 28
const RTC_CNTL_PLL_FORCE_NOISO_V = 0x1
const RTC_CNTL_PLL_FORCE_NOISO_S = 27
const RTC_CNTL_XTL_FORCE_NOISO_V = 0x1
const RTC_CNTL_XTL_FORCE_NOISO_S = 26
const RTC_CNTL_ANALOG_FORCE_ISO_V = 0x1
const RTC_CNTL_ANALOG_FORCE_ISO_S = 25
const RTC_CNTL_PLL_FORCE_ISO_V = 0x1
const RTC_CNTL_PLL_FORCE_ISO_S = 24
const RTC_CNTL_XTL_FORCE_ISO_V = 0x1
const RTC_CNTL_XTL_FORCE_ISO_S = 23
const RTC_CNTL_XTL_EXT_CTR_SEL = 0x00000007
const RTC_CNTL_XTL_EXT_CTR_SEL_V = 0x7
const RTC_CNTL_XTL_EXT_CTR_SEL_S = 20
const RTC_CNTL_XTL_EN_WAIT = 0x0000000F
const RTC_CNTL_XTL_EN_WAIT_V = 0xF
const RTC_CNTL_XTL_EN_WAIT_S = 14
const RTC_CNTL_XTL_FORCE_PU_V = 0x1
const RTC_CNTL_XTL_FORCE_PU_S = 13
const RTC_CNTL_XTL_FORCE_PD_V = 0x1
const RTC_CNTL_XTL_FORCE_PD_S = 12
const RTC_CNTL_BBPLL_FORCE_PU_V = 0x1
const RTC_CNTL_BBPLL_FORCE_PU_S = 11
const RTC_CNTL_BBPLL_FORCE_PD_V = 0x1
const RTC_CNTL_BBPLL_FORCE_PD_S = 10
const RTC_CNTL_BBPLL_I2C_FORCE_PU_V = 0x1
const RTC_CNTL_BBPLL_I2C_FORCE_PU_S = 9
const RTC_CNTL_BBPLL_I2C_FORCE_PD_V = 0x1
const RTC_CNTL_BBPLL_I2C_FORCE_PD_S = 8
const RTC_CNTL_BB_I2C_FORCE_PU_V = 0x1
const RTC_CNTL_BB_I2C_FORCE_PU_S = 7
const RTC_CNTL_BB_I2C_FORCE_PD_V = 0x1
const RTC_CNTL_BB_I2C_FORCE_PD_S = 6
const RTC_CNTL_SW_PROCPU_RST_V = 0x1
const RTC_CNTL_SW_PROCPU_RST_S = 5
const RTC_CNTL_SW_APPCPU_RST_V = 0x1
const RTC_CNTL_SW_APPCPU_RST_S = 4
const RTC_CNTL_SW_STALL_PROCPU_C0 = 0x00000003
const RTC_CNTL_SW_STALL_PROCPU_C0_V = 0x3
const RTC_CNTL_SW_STALL_PROCPU_C0_S = 2
const RTC_CNTL_SW_STALL_APPCPU_C0 = 0x00000003
const RTC_CNTL_SW_STALL_APPCPU_C0_V = 0x3
const RTC_CNTL_SW_STALL_APPCPU_C0_S = 0
const RTC_CNTL_SLP_VAL_LO = 0xFFFFFFFF
const RTC_CNTL_SLP_VAL_LO_V = 0xFFFFFFFF
const RTC_CNTL_SLP_VAL_LO_S = 0
const RTC_CNTL_MAIN_TIMER_ALARM_EN_V = 0x1
const RTC_CNTL_MAIN_TIMER_ALARM_EN_S = 16
const RTC_CNTL_SLP_VAL_HI = 0x0000FFFF
const RTC_CNTL_SLP_VAL_HI_V = 0xFFFF
const RTC_CNTL_SLP_VAL_HI_S = 0
const RTC_CNTL_TIME_UPDATE_V = 0x1
const RTC_CNTL_TIME_UPDATE_S = 31
const RTC_CNTL_TIMER_SYS_RST_V = 0x1
const RTC_CNTL_TIMER_SYS_RST_S = 29
const RTC_CNTL_TIMER_XTL_OFF_V = 0x1
const RTC_CNTL_TIMER_XTL_OFF_S = 28
const RTC_CNTL_TIMER_SYS_STALL_V = 0x1
const RTC_CNTL_TIMER_SYS_STALL_S = 27
const RTC_CNTL_TIMER_VALUE0_LOW = 0xFFFFFFFF
const RTC_CNTL_TIMER_VALUE0_LOW_V = 0xFFFFFFFF
const RTC_CNTL_TIMER_VALUE0_LOW_S = 0
const RTC_CNTL_TIMER_VALUE0_HIGH = 0x0000FFFF
const RTC_CNTL_TIMER_VALUE0_HIGH_V = 0xFFFF
const RTC_CNTL_TIMER_VALUE0_HIGH_S = 0
const RTC_CNTL_SLEEP_EN_V = 0x1
const RTC_CNTL_SLEEP_EN_S = 31
const RTC_CNTL_SLP_REJECT_V = 0x1
const RTC_CNTL_SLP_REJECT_S = 30
const RTC_CNTL_SLP_WAKEUP_V = 0x1
const RTC_CNTL_SLP_WAKEUP_S = 29
const RTC_CNTL_SDIO_ACTIVE_IND_V = 0x1
const RTC_CNTL_SDIO_ACTIVE_IND_S = 28
const RTC_CNTL_APB2RTC_BRIDGE_SEL_V = 0x1
const RTC_CNTL_APB2RTC_BRIDGE_SEL_S = 22
const RTC_CNTL_SLP_REJECT_CAUSE_CLR_V = 0x1
const RTC_CNTL_SLP_REJECT_CAUSE_CLR_S = 1
const RTC_CNTL_SW_CPU_INT_V = 0x1
const RTC_CNTL_SW_CPU_INT_S = 0
const RTC_CNTL_PLL_BUF_WAIT = 0x000000FF
const RTC_CNTL_PLL_BUF_WAIT_V = 0xFF
const RTC_CNTL_PLL_BUF_WAIT_S = 24
const RTC_CNTL_XTL_BUF_WAIT = 0x000003FF
const RTC_CNTL_XTL_BUF_WAIT_V = 0x3FF
const RTC_CNTL_XTL_BUF_WAIT_S = 14
const RTC_CNTL_CK8M_WAIT = 0x000000FF
const RTC_CNTL_CK8M_WAIT_V = 0xFF
const RTC_CNTL_CK8M_WAIT_S = 6
const RTC_CNTL_CPU_STALL_WAIT = 0x0000001F
const RTC_CNTL_CPU_STALL_WAIT_V = 0x1F
const RTC_CNTL_CPU_STALL_WAIT_S = 1
const RTC_CNTL_CPU_STALL_EN_V = 0x1
const RTC_CNTL_CPU_STALL_EN_S = 0
const RTC_CNTL_MIN_TIME_CK8M_OFF = 0x000000FF
const RTC_CNTL_MIN_TIME_CK8M_OFF_V = 0xFF
const RTC_CNTL_MIN_TIME_CK8M_OFF_S = 24
const RTC_CNTL_BT_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_BT_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_BT_POWERUP_TIMER_S = 25
const RTC_CNTL_BT_WAIT_TIMER = 0x000001FF
const RTC_CNTL_BT_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_BT_WAIT_TIMER_S = 16
const RTC_CNTL_WIFI_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_WIFI_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_WIFI_POWERUP_TIMER_S = 9
const RTC_CNTL_WIFI_WAIT_TIMER = 0x000001FF
const RTC_CNTL_WIFI_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_WIFI_WAIT_TIMER_S = 0
const RTC_CNTL_DG_WRAP_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_DG_WRAP_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_DG_WRAP_POWERUP_TIMER_S = 25
const RTC_CNTL_DG_WRAP_WAIT_TIMER = 0x000001FF
const RTC_CNTL_DG_WRAP_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_DG_WRAP_WAIT_TIMER_S = 16
const RTC_CNTL_CPU_TOP_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_CPU_TOP_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_CPU_TOP_POWERUP_TIMER_S = 9
const RTC_CNTL_CPU_TOP_WAIT_TIMER = 0x000001FF
const RTC_CNTL_CPU_TOP_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_CPU_TOP_WAIT_TIMER_S = 0
const RTC_CNTL_MIN_SLP_VAL = 0x000000FF
const RTC_CNTL_MIN_SLP_VAL_V = 0xFF
const RTC_CNTL_MIN_SLP_VAL_S = 8
const RTC_CNTL_DG_PERI_POWERUP_TIMER = 0x0000007F
const RTC_CNTL_DG_PERI_POWERUP_TIMER_V = 0x7F
const RTC_CNTL_DG_PERI_POWERUP_TIMER_S = 25
const RTC_CNTL_DG_PERI_WAIT_TIMER = 0x000001FF
const RTC_CNTL_DG_PERI_WAIT_TIMER_V = 0x1FF
const RTC_CNTL_DG_PERI_WAIT_TIMER_S = 16
const RTC_CNTL_PLL_I2C_PU_V = 0x1
const RTC_CNTL_PLL_I2C_PU_S = 31
const RTC_CNTL_CKGEN_I2C_PU_V = 0x1
const RTC_CNTL_CKGEN_I2C_PU_S = 30
const RTC_CNTL_RFRX_PBUS_PU_V = 0x1
const RTC_CNTL_RFRX_PBUS_PU_S = 28
const RTC_CNTL_TXRF_I2C_PU_V = 0x1
const RTC_CNTL_TXRF_I2C_PU_S = 27
const RTC_CNTL_PVTMON_PU_V = 0x1
const RTC_CNTL_PVTMON_PU_S = 26
const RTC_CNTL_BBPLL_CAL_SLP_START_V = 0x1
const RTC_CNTL_BBPLL_CAL_SLP_START_S = 25
const RTC_CNTL_PLLA_FORCE_PU_V = 0x1
const RTC_CNTL_PLLA_FORCE_PU_S = 24
const RTC_CNTL_PLLA_FORCE_PD_V = 0x1
const RTC_CNTL_PLLA_FORCE_PD_S = 23
const RTC_CNTL_SAR_I2C_PU_V = 0x1
const RTC_CNTL_SAR_I2C_PU_S = 22
const RTC_CNTL_GLITCH_RST_EN_V = 0x1
const RTC_CNTL_GLITCH_RST_EN_S = 20
const RTC_CNTL_I2C_RESET_POR_FORCE_PU_V = 0x1
const RTC_CNTL_I2C_RESET_POR_FORCE_PU_S = 19
const RTC_CNTL_I2C_RESET_POR_FORCE_PD_V = 0x1
const RTC_CNTL_I2C_RESET_POR_FORCE_PD_S = 18
const RTC_CNTL_DRESET_MASK_PROCPU_V = 0x1
const RTC_CNTL_DRESET_MASK_PROCPU_S = 25
const RTC_CNTL_DRESET_MASK_APPCPU_V = 0x1
const RTC_CNTL_DRESET_MASK_APPCPU_S = 24
const RTC_CNTL_JTAG_RESET_FLAG_CLR_APPCPU_V = 0x1
const RTC_CNTL_JTAG_RESET_FLAG_CLR_APPCPU_S = 23
const RTC_CNTL_JTAG_RESET_FLAG_CLR_PROCPU_V = 0x1
const RTC_CNTL_JTAG_RESET_FLAG_CLR_PROCPU_S = 22
const RTC_CNTL_JTAG_RESET_FLAG_APPCPU_V = 0x1
const RTC_CNTL_JTAG_RESET_FLAG_APPCPU_S = 21
const RTC_CNTL_JTAG_RESET_FLAG_PROCPU_V = 0x1
const RTC_CNTL_JTAG_RESET_FLAG_PROCPU_S = 20
const RTC_CNTL_OCD_HALT_ON_RESET_PROCPU_V = 0x1
const RTC_CNTL_OCD_HALT_ON_RESET_PROCPU_S = 19
const RTC_CNTL_OCD_HALT_ON_RESET_APPCPU_V = 0x1
const RTC_CNTL_OCD_HALT_ON_RESET_APPCPU_S = 18
const RTC_CNTL_ALL_RESET_FLAG_CLR_APPCPU_V = 0x1
const RTC_CNTL_ALL_RESET_FLAG_CLR_APPCPU_S = 17
const RTC_CNTL_ALL_RESET_FLAG_CLR_PROCPU_V = 0x1
const RTC_CNTL_ALL_RESET_FLAG_CLR_PROCPU_S = 16
const RTC_CNTL_ALL_RESET_FLAG_APPCPU_V = 0x1
const RTC_CNTL_ALL_RESET_FLAG_APPCPU_S = 15
const RTC_CNTL_ALL_RESET_FLAG_PROCPU_V = 0x1
const RTC_CNTL_ALL_RESET_FLAG_PROCPU_S = 14
const RTC_CNTL_STAT_VECTOR_SEL_PROCPU_V = 0x1
const RTC_CNTL_STAT_VECTOR_SEL_PROCPU_S = 13
const RTC_CNTL_STAT_VECTOR_SEL_APPCPU_V = 0x1
const RTC_CNTL_STAT_VECTOR_SEL_APPCPU_S = 12
const RTC_CNTL_RESET_CAUSE_APPCPU = 0x0000003F
const RTC_CNTL_RESET_CAUSE_APPCPU_V = 0x3F
const RTC_CNTL_RESET_CAUSE_APPCPU_S = 6
const RTC_CNTL_RESET_CAUSE_PROCPU = 0x0000003F
const RTC_CNTL_RESET_CAUSE_PROCPU_V = 0x3F
const RTC_CNTL_RESET_CAUSE_PROCPU_S = 0
const RTC_CNTL_WAKEUP_ENA = 0x0001FFFF
const RTC_CNTL_WAKEUP_ENA_V = 0x1FFFF
const RTC_CNTL_WAKEUP_ENA_S = 15
const RTC_CNTL_BBPLL_CAL_INT_ENA_V = 0x1
const RTC_CNTL_BBPLL_CAL_INT_ENA_S = 20
const RTC_CNTL_GLITCH_DET_INT_ENA_V = 0x1
const RTC_CNTL_GLITCH_DET_INT_ENA_S = 19
const RTC_CNTL_XTAL32K_DEAD_INT_ENA_V = 0x1
const RTC_CNTL_XTAL32K_DEAD_INT_ENA_S = 16
const RTC_CNTL_SWD_INT_ENA_V = 0x1
const RTC_CNTL_SWD_INT_ENA_S = 15
const RTC_CNTL_MAIN_TIMER_INT_ENA_V = 0x1
const RTC_CNTL_MAIN_TIMER_INT_ENA_S = 10
const RTC_CNTL_BROWN_OUT_INT_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT_INT_ENA_S = 9
const RTC_CNTL_WDT_INT_ENA_V = 0x1
const RTC_CNTL_WDT_INT_ENA_S = 3
const RTC_CNTL_SLP_REJECT_INT_ENA_V = 0x1
const RTC_CNTL_SLP_REJECT_INT_ENA_S = 1
const RTC_CNTL_SLP_WAKEUP_INT_ENA_V = 0x1
const RTC_CNTL_SLP_WAKEUP_INT_ENA_S = 0
const RTC_CNTL_BBPLL_CAL_INT_RAW_V = 0x1
const RTC_CNTL_BBPLL_CAL_INT_RAW_S = 20
const RTC_CNTL_GLITCH_DET_INT_RAW_V = 0x1
const RTC_CNTL_GLITCH_DET_INT_RAW_S = 19
const RTC_CNTL_XTAL32K_DEAD_INT_RAW_V = 0x1
const RTC_CNTL_XTAL32K_DEAD_INT_RAW_S = 16
const RTC_CNTL_SWD_INT_RAW_V = 0x1
const RTC_CNTL_SWD_INT_RAW_S = 15
const RTC_CNTL_MAIN_TIMER_INT_RAW_V = 0x1
const RTC_CNTL_MAIN_TIMER_INT_RAW_S = 10
const RTC_CNTL_BROWN_OUT_INT_RAW_V = 0x1
const RTC_CNTL_BROWN_OUT_INT_RAW_S = 9
const RTC_CNTL_WDT_INT_RAW_V = 0x1
const RTC_CNTL_WDT_INT_RAW_S = 3
const RTC_CNTL_SLP_REJECT_INT_RAW_V = 0x1
const RTC_CNTL_SLP_REJECT_INT_RAW_S = 1
const RTC_CNTL_SLP_WAKEUP_INT_RAW_V = 0x1
const RTC_CNTL_SLP_WAKEUP_INT_RAW_S = 0
const RTC_CNTL_BBPLL_CAL_INT_ST_V = 0x1
const RTC_CNTL_BBPLL_CAL_INT_ST_S = 20
const RTC_CNTL_GLITCH_DET_INT_ST_V = 0x1
const RTC_CNTL_GLITCH_DET_INT_ST_S = 19
const RTC_CNTL_XTAL32K_DEAD_INT_ST_V = 0x1
const RTC_CNTL_XTAL32K_DEAD_INT_ST_S = 16
const RTC_CNTL_SWD_INT_ST_V = 0x1
const RTC_CNTL_SWD_INT_ST_S = 15
const RTC_CNTL_MAIN_TIMER_INT_ST_V = 0x1
const RTC_CNTL_MAIN_TIMER_INT_ST_S = 10
const RTC_CNTL_BROWN_OUT_INT_ST_V = 0x1
const RTC_CNTL_BROWN_OUT_INT_ST_S = 9
const RTC_CNTL_WDT_INT_ST_V = 0x1
const RTC_CNTL_WDT_INT_ST_S = 3
const RTC_CNTL_SLP_REJECT_INT_ST_V = 0x1
const RTC_CNTL_SLP_REJECT_INT_ST_S = 1
const RTC_CNTL_SLP_WAKEUP_INT_ST_V = 0x1
const RTC_CNTL_SLP_WAKEUP_INT_ST_S = 0
const RTC_CNTL_BBPLL_CAL_INT_CLR_V = 0x1
const RTC_CNTL_BBPLL_CAL_INT_CLR_S = 20
const RTC_CNTL_GLITCH_DET_INT_CLR_V = 0x1
const RTC_CNTL_GLITCH_DET_INT_CLR_S = 19
const RTC_CNTL_XTAL32K_DEAD_INT_CLR_V = 0x1
const RTC_CNTL_XTAL32K_DEAD_INT_CLR_S = 16
const RTC_CNTL_SWD_INT_CLR_V = 0x1
const RTC_CNTL_SWD_INT_CLR_S = 15
const RTC_CNTL_MAIN_TIMER_INT_CLR_V = 0x1
const RTC_CNTL_MAIN_TIMER_INT_CLR_S = 10
const RTC_CNTL_BROWN_OUT_INT_CLR_V = 0x1
const RTC_CNTL_BROWN_OUT_INT_CLR_S = 9
const RTC_CNTL_WDT_INT_CLR_V = 0x1
const RTC_CNTL_WDT_INT_CLR_S = 3
const RTC_CNTL_SLP_REJECT_INT_CLR_V = 0x1
const RTC_CNTL_SLP_REJECT_INT_CLR_S = 1
const RTC_CNTL_SLP_WAKEUP_INT_CLR_V = 0x1
const RTC_CNTL_SLP_WAKEUP_INT_CLR_S = 0
const RTC_CNTL_SCRATCH0 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH0_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH0_S = 0
const RTC_CNTL_SCRATCH1 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH1_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH1_S = 0
const RTC_CNTL_SCRATCH2 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH2_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH2_S = 0
const RTC_CNTL_SCRATCH3 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH3_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH3_S = 0
const RTC_CNTL_XTL_EXT_CTR_EN_V = 0x1
const RTC_CNTL_XTL_EXT_CTR_EN_S = 31
const RTC_CNTL_XTL_EXT_CTR_LV_V = 0x1
const RTC_CNTL_XTL_EXT_CTR_LV_S = 30
const RTC_CNTL_XTAL32K_GPIO_SEL_V = 0x1
const RTC_CNTL_XTAL32K_GPIO_SEL_S = 23
const RTC_CNTL_WDT_STATE = 0x00000007
const RTC_CNTL_WDT_STATE_V = 0x7
const RTC_CNTL_WDT_STATE_S = 20
const RTC_CNTL_DAC_XTAL_32K = 0x00000007
const RTC_CNTL_DAC_XTAL_32K_V = 0x7
const RTC_CNTL_DAC_XTAL_32K_S = 17
const RTC_CNTL_XPD_XTAL_32K_V = 0x1
const RTC_CNTL_XPD_XTAL_32K_S = 16
const RTC_CNTL_DRES_XTAL_32K = 0x00000007
const RTC_CNTL_DRES_XTAL_32K_V = 0x7
const RTC_CNTL_DRES_XTAL_32K_S = 13
const RTC_CNTL_DGM_XTAL_32K = 0x00000007
const RTC_CNTL_DGM_XTAL_32K_V = 0x7
const RTC_CNTL_DGM_XTAL_32K_S = 10
const RTC_CNTL_DBUF_XTAL_32K_V = 0x1
const RTC_CNTL_DBUF_XTAL_32K_S = 9
const RTC_CNTL_ENCKINIT_XTAL_32K_V = 0x1
const RTC_CNTL_ENCKINIT_XTAL_32K_S = 8
const RTC_CNTL_XTAL32K_XPD_FORCE_V = 0x1
const RTC_CNTL_XTAL32K_XPD_FORCE_S = 7
const RTC_CNTL_XTAL32K_AUTO_RETURN_V = 0x1
const RTC_CNTL_XTAL32K_AUTO_RETURN_S = 6
const RTC_CNTL_XTAL32K_AUTO_RESTART_V = 0x1
const RTC_CNTL_XTAL32K_AUTO_RESTART_S = 5
const RTC_CNTL_XTAL32K_AUTO_BACKUP_V = 0x1
const RTC_CNTL_XTAL32K_AUTO_BACKUP_S = 4
const RTC_CNTL_XTAL32K_EXT_CLK_FO_V = 0x1
const RTC_CNTL_XTAL32K_EXT_CLK_FO_S = 3
const RTC_CNTL_XTAL32K_WDT_RESET_V = 0x1
const RTC_CNTL_XTAL32K_WDT_RESET_S = 2
const RTC_CNTL_XTAL32K_WDT_CLK_FO_V = 0x1
const RTC_CNTL_XTAL32K_WDT_CLK_FO_S = 1
const RTC_CNTL_XTAL32K_WDT_EN_V = 0x1
const RTC_CNTL_XTAL32K_WDT_EN_S = 0
const RTC_CNTL_GPIO_WAKEUP_FILTER_V = 0x1
const RTC_CNTL_GPIO_WAKEUP_FILTER_S = 31
const RTC_CNTL_DEEP_SLP_REJECT_EN_V = 0x1
const RTC_CNTL_DEEP_SLP_REJECT_EN_S = 31
const RTC_CNTL_LIGHT_SLP_REJECT_EN_V = 0x1
const RTC_CNTL_LIGHT_SLP_REJECT_EN_S = 30
const RTC_CNTL_SLEEP_REJECT_ENA = 0x0003FFFF
const RTC_CNTL_SLEEP_REJECT_ENA_V = 0x3FFFF
const RTC_CNTL_SLEEP_REJECT_ENA_S = 12
const RTC_CNTL_CPUPERIOD_SEL = 0x00000003
const RTC_CNTL_CPUPERIOD_SEL_V = 0x3
const RTC_CNTL_CPUPERIOD_SEL_S = 30
const RTC_CNTL_CPUSEL_CONF_V = 0x1
const RTC_CNTL_CPUSEL_CONF_S = 29
const RTC_CNTL_ANA_CLK_RTC_SEL = 0x00000003
const RTC_CNTL_ANA_CLK_RTC_SEL_V = 0x3
const RTC_CNTL_ANA_CLK_RTC_SEL_S = 30
const RTC_CNTL_FAST_CLK_RTC_SEL_V = 0x1
const RTC_CNTL_FAST_CLK_RTC_SEL_S = 29
const RTC_CNTL_XTAL_GLOBAL_FORCE_NOGATING_V = 0x1
const RTC_CNTL_XTAL_GLOBAL_FORCE_NOGATING_S = 28
const RTC_CNTL_XTAL_GLOBAL_FORCE_GATING_V = 0x1
const RTC_CNTL_XTAL_GLOBAL_FORCE_GATING_S = 27
const RTC_CNTL_CK8M_FORCE_PU_V = 0x1
const RTC_CNTL_CK8M_FORCE_PU_S = 26
const RTC_CNTL_CK8M_FORCE_PD_V = 0x1
const RTC_CNTL_CK8M_FORCE_PD_S = 25
const RTC_CNTL_CK8M_DFREQ = 0x000000FF
const RTC_CNTL_CK8M_DFREQ_V = 0xFF
const RTC_CNTL_CK8M_DFREQ_S = 17
const RTC_CNTL_CK8M_FORCE_NOGATING_V = 0x1
const RTC_CNTL_CK8M_FORCE_NOGATING_S = 16
const RTC_CNTL_XTAL_FORCE_NOGATING_V = 0x1
const RTC_CNTL_XTAL_FORCE_NOGATING_S = 15
const RTC_CNTL_CK8M_DIV_SEL = 0x00000007
const RTC_CNTL_CK8M_DIV_SEL_V = 0x7
const RTC_CNTL_CK8M_DIV_SEL_S = 12
const RTC_CNTL_DIG_CLK8M_EN_V = 0x1
const RTC_CNTL_DIG_CLK8M_EN_S = 10
const RTC_CNTL_DIG_CLK8M_D256_EN_V = 0x1
const RTC_CNTL_DIG_CLK8M_D256_EN_S = 9
const RTC_CNTL_DIG_XTAL32K_EN_V = 0x1
const RTC_CNTL_DIG_XTAL32K_EN_S = 8
const RTC_CNTL_ENB_CK8M_DIV_V = 0x1
const RTC_CNTL_ENB_CK8M_DIV_S = 7
const RTC_CNTL_ENB_CK8M_V = 0x1
const RTC_CNTL_ENB_CK8M_S = 6
const RTC_CNTL_CK8M_DIV = 0x00000003
const RTC_CNTL_CK8M_DIV_V = 0x3
const RTC_CNTL_CK8M_DIV_S = 4
const RTC_CNTL_CK8M_DIV_SEL_VLD_V = 0x1
const RTC_CNTL_CK8M_DIV_SEL_VLD_S = 3
const RTC_CNTL_EFUSE_CLK_FORCE_NOGATING_V = 0x1
const RTC_CNTL_EFUSE_CLK_FORCE_NOGATING_S = 2
const RTC_CNTL_EFUSE_CLK_FORCE_GATING_V = 0x1
const RTC_CNTL_EFUSE_CLK_FORCE_GATING_S = 1
const RTC_CNTL_SLOW_CLK_NEXT_EDGE_V = 0x1
const RTC_CNTL_SLOW_CLK_NEXT_EDGE_S = 31
const RTC_CNTL_ANA_CLK_DIV = 0x000000FF
const RTC_CNTL_ANA_CLK_DIV_V = 0xFF
const RTC_CNTL_ANA_CLK_DIV_S = 23
const RTC_CNTL_ANA_CLK_DIV_VLD_V = 0x1
const RTC_CNTL_ANA_CLK_DIV_VLD_S = 22
const RTC_CNTL_XPD_SDIO_REG_V = 0x1
const RTC_CNTL_XPD_SDIO_REG_S = 31
const RTC_CNTL_DREFH_SDIO = 0x00000003
const RTC_CNTL_DREFH_SDIO_V = 0x3
const RTC_CNTL_DREFH_SDIO_S = 29
const RTC_CNTL_DREFM_SDIO = 0x00000003
const RTC_CNTL_DREFM_SDIO_V = 0x3
const RTC_CNTL_DREFM_SDIO_S = 27
const RTC_CNTL_DREFL_SDIO = 0x00000003
const RTC_CNTL_DREFL_SDIO_V = 0x3
const RTC_CNTL_DREFL_SDIO_S = 25
const RTC_CNTL_REG1P8_READY_V = 0x1
const RTC_CNTL_REG1P8_READY_S = 24
const RTC_CNTL_SDIO_TIEH_V = 0x1
const RTC_CNTL_SDIO_TIEH_S = 23
const RTC_CNTL_SDIO_FORCE_V = 0x1
const RTC_CNTL_SDIO_FORCE_S = 22
const RTC_CNTL_SDIO_PD_EN_V = 0x1
const RTC_CNTL_SDIO_PD_EN_S = 21
const RTC_CNTL_SDIO_ENCURLIM_V = 0x1
const RTC_CNTL_SDIO_ENCURLIM_S = 20
const RTC_CNTL_SDIO_MODECURLIM_V = 0x1
const RTC_CNTL_SDIO_MODECURLIM_S = 19
const RTC_CNTL_SDIO_DCURLIM = 0x00000007
const RTC_CNTL_SDIO_DCURLIM_V = 0x7
const RTC_CNTL_SDIO_DCURLIM_S = 16
const RTC_CNTL_SDIO_EN_INITI_V = 0x1
const RTC_CNTL_SDIO_EN_INITI_S = 15
const RTC_CNTL_SDIO_INITI = 0x00000003
const RTC_CNTL_SDIO_INITI_V = 0x3
const RTC_CNTL_SDIO_INITI_S = 13
const RTC_CNTL_SDIO_DCAP = 0x00000003
const RTC_CNTL_SDIO_DCAP_V = 0x3
const RTC_CNTL_SDIO_DCAP_S = 11
const RTC_CNTL_SDIO_DTHDRV = 0x00000003
const RTC_CNTL_SDIO_DTHDRV_V = 0x3
const RTC_CNTL_SDIO_DTHDRV_S = 9
const RTC_CNTL_SDIO_TIMER_TARGET = 0x000000FF
const RTC_CNTL_SDIO_TIMER_TARGET_V = 0xFF
const RTC_CNTL_SDIO_TIMER_TARGET_S = 0
const RTC_CNTL_DBG_ATTEN_MONITOR = 0x0000000F
const RTC_CNTL_DBG_ATTEN_MONITOR_V = 0xF
const RTC_CNTL_DBG_ATTEN_MONITOR_S = 22
const RTC_CNTL_DBG_ATTEN_DEEP_SLP = 0x0000000F
const RTC_CNTL_DBG_ATTEN_DEEP_SLP_V = 0xF
const RTC_CNTL_DBG_ATTEN_DEEP_SLP_S = 18
const RTC_CNTL_BIAS_SLEEP_MONITOR_V = 0x1
const RTC_CNTL_BIAS_SLEEP_MONITOR_S = 17
const RTC_CNTL_BIAS_SLEEP_DEEP_SLP_V = 0x1
const RTC_CNTL_BIAS_SLEEP_DEEP_SLP_S = 16
const RTC_CNTL_PD_CUR_MONITOR_V = 0x1
const RTC_CNTL_PD_CUR_MONITOR_S = 15
const RTC_CNTL_PD_CUR_DEEP_SLP_V = 0x1
const RTC_CNTL_PD_CUR_DEEP_SLP_S = 14
const RTC_CNTL_BIAS_BUF_MONITOR_V = 0x1
const RTC_CNTL_BIAS_BUF_MONITOR_S = 13
const RTC_CNTL_BIAS_BUF_DEEP_SLP_V = 0x1
const RTC_CNTL_BIAS_BUF_DEEP_SLP_S = 12
const RTC_CNTL_BIAS_BUF_WAKE_V = 0x1
const RTC_CNTL_BIAS_BUF_WAKE_S = 11
const RTC_CNTL_BIAS_BUF_IDLE_V = 0x1
const RTC_CNTL_BIAS_BUF_IDLE_S = 10
const RTC_CNTL_DG_VDD_DRV_B_SLP_EN_V = 0x1
const RTC_CNTL_DG_VDD_DRV_B_SLP_EN_S = 8
const RTC_CNTL_DG_VDD_DRV_B_SLP = 0x000000FF
const RTC_CNTL_DG_VDD_DRV_B_SLP_V = 0xFF
const RTC_CNTL_DG_VDD_DRV_B_SLP_S = 0
const RTC_CNTL_REGULATOR_FORCE_PU_V = 0x1
const RTC_CNTL_REGULATOR_FORCE_PU_S = 31
const RTC_CNTL_REGULATOR_FORCE_PD_V = 0x1
const RTC_CNTL_REGULATOR_FORCE_PD_S = 30
const RTC_CNTL_DBOOST_FORCE_PU_V = 0x1
const RTC_CNTL_DBOOST_FORCE_PU_S = 29
const RTC_CNTL_DBOOST_FORCE_PD_V = 0x1
const RTC_CNTL_DBOOST_FORCE_PD_S = 28
const RTC_CNTL_SCK_DCAP = 0x000000FF
const RTC_CNTL_SCK_DCAP_V = 0xFF
const RTC_CNTL_SCK_DCAP_S = 14
const RTC_CNTL_DIG_CAL_EN_V = 0x1
const RTC_CNTL_DIG_CAL_EN_S = 7
const RTC_CNTL_PAD_FORCE_HOLD_V = 0x1
const RTC_CNTL_PAD_FORCE_HOLD_S = 21
const RTC_CNTL_DG_WRAP_PD_EN_V = 0x1
const RTC_CNTL_DG_WRAP_PD_EN_S = 31
const RTC_CNTL_WIFI_PD_EN_V = 0x1
const RTC_CNTL_WIFI_PD_EN_S = 30
const RTC_CNTL_CPU_TOP_PD_EN_V = 0x1
const RTC_CNTL_CPU_TOP_PD_EN_S = 29
const RTC_CNTL_DG_PERI_PD_EN_V = 0x1
const RTC_CNTL_DG_PERI_PD_EN_S = 28
const RTC_CNTL_BT_PD_EN_V = 0x1
const RTC_CNTL_BT_PD_EN_S = 27
const RTC_CNTL_CPU_TOP_FORCE_PU_V = 0x1
const RTC_CNTL_CPU_TOP_FORCE_PU_S = 22
const RTC_CNTL_CPU_TOP_FORCE_PD_V = 0x1
const RTC_CNTL_CPU_TOP_FORCE_PD_S = 21
const RTC_CNTL_DG_WRAP_FORCE_PU_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_PU_S = 20
const RTC_CNTL_DG_WRAP_FORCE_PD_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_PD_S = 19
const RTC_CNTL_WIFI_FORCE_PU_V = 0x1
const RTC_CNTL_WIFI_FORCE_PU_S = 18
const RTC_CNTL_WIFI_FORCE_PD_V = 0x1
const RTC_CNTL_WIFI_FORCE_PD_S = 17
const RTC_CNTL_FASTMEM_FORCE_LPU_V = 0x1
const RTC_CNTL_FASTMEM_FORCE_LPU_S = 16
const RTC_CNTL_FASTMEM_FORCE_LPD_V = 0x1
const RTC_CNTL_FASTMEM_FORCE_LPD_S = 15
const RTC_CNTL_DG_PERI_FORCE_PU_V = 0x1
const RTC_CNTL_DG_PERI_FORCE_PU_S = 14
const RTC_CNTL_DG_PERI_FORCE_PD_V = 0x1
const RTC_CNTL_DG_PERI_FORCE_PD_S = 13
const RTC_CNTL_BT_FORCE_PU_V = 0x1
const RTC_CNTL_BT_FORCE_PU_S = 12
const RTC_CNTL_BT_FORCE_PD_V = 0x1
const RTC_CNTL_BT_FORCE_PD_S = 11
const RTC_CNTL_LSLP_MEM_FORCE_PU_V = 0x1
const RTC_CNTL_LSLP_MEM_FORCE_PU_S = 4
const RTC_CNTL_LSLP_MEM_FORCE_PD_V = 0x1
const RTC_CNTL_LSLP_MEM_FORCE_PD_S = 3
const RTC_CNTL_VDD_SPI_PWR_FORCE_V = 0x1
const RTC_CNTL_VDD_SPI_PWR_FORCE_S = 2
const RTC_CNTL_VDD_SPI_PWR_DRV = 0x00000003
const RTC_CNTL_VDD_SPI_PWR_DRV_V = 0x3
const RTC_CNTL_VDD_SPI_PWR_DRV_S = 0
const RTC_CNTL_DG_WRAP_FORCE_NOISO_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_NOISO_S = 31
const RTC_CNTL_DG_WRAP_FORCE_ISO_V = 0x1
const RTC_CNTL_DG_WRAP_FORCE_ISO_S = 30
const RTC_CNTL_WIFI_FORCE_NOISO_V = 0x1
const RTC_CNTL_WIFI_FORCE_NOISO_S = 29
const RTC_CNTL_WIFI_FORCE_ISO_V = 0x1
const RTC_CNTL_WIFI_FORCE_ISO_S = 28
const RTC_CNTL_CPU_TOP_FORCE_NOISO_V = 0x1
const RTC_CNTL_CPU_TOP_FORCE_NOISO_S = 27
const RTC_CNTL_CPU_TOP_FORCE_ISO_V = 0x1
const RTC_CNTL_CPU_TOP_FORCE_ISO_S = 26
const RTC_CNTL_DG_PERI_FORCE_NOISO_V = 0x1
const RTC_CNTL_DG_PERI_FORCE_NOISO_S = 25
const RTC_CNTL_DG_PERI_FORCE_ISO_V = 0x1
const RTC_CNTL_DG_PERI_FORCE_ISO_S = 24
const RTC_CNTL_BT_FORCE_NOISO_V = 0x1
const RTC_CNTL_BT_FORCE_NOISO_S = 23
const RTC_CNTL_BT_FORCE_ISO_V = 0x1
const RTC_CNTL_BT_FORCE_ISO_S = 22
const RTC_CNTL_DG_PAD_FORCE_HOLD_V = 0x1
const RTC_CNTL_DG_PAD_FORCE_HOLD_S = 15
const RTC_CNTL_DG_PAD_FORCE_UNHOLD_V = 0x1
const RTC_CNTL_DG_PAD_FORCE_UNHOLD_S = 14
const RTC_CNTL_DG_PAD_FORCE_ISO_V = 0x1
const RTC_CNTL_DG_PAD_FORCE_ISO_S = 13
const RTC_CNTL_DG_PAD_FORCE_NOISO_V = 0x1
const RTC_CNTL_DG_PAD_FORCE_NOISO_S = 12
const RTC_CNTL_DG_PAD_AUTOHOLD_EN_V = 0x1
const RTC_CNTL_DG_PAD_AUTOHOLD_EN_S = 11
const RTC_CNTL_CLR_DG_PAD_AUTOHOLD_V = 0x1
const RTC_CNTL_CLR_DG_PAD_AUTOHOLD_S = 10
const RTC_CNTL_DG_PAD_AUTOHOLD_V = 0x1
const RTC_CNTL_DG_PAD_AUTOHOLD_S = 9
const RTC_CNTL_DIG_ISO_FORCE_ON_V = 0x1
const RTC_CNTL_DIG_ISO_FORCE_ON_S = 8
const RTC_CNTL_DIG_ISO_FORCE_OFF_V = 0x1
const RTC_CNTL_DIG_ISO_FORCE_OFF_S = 7
const RTC_CNTL_WDT_EN_V = 0x1
const RTC_CNTL_WDT_EN_S = 31
const RTC_CNTL_WDT_STG0 = 0x00000007
const RTC_CNTL_WDT_STG0_V = 0x7
const RTC_CNTL_WDT_STG0_S = 28
const RTC_CNTL_WDT_STG1 = 0x00000007
const RTC_CNTL_WDT_STG1_V = 0x7
const RTC_CNTL_WDT_STG1_S = 25
const RTC_CNTL_WDT_STG2 = 0x00000007
const RTC_CNTL_WDT_STG2_V = 0x7
const RTC_CNTL_WDT_STG2_S = 22
const RTC_CNTL_WDT_STG3 = 0x00000007
const RTC_CNTL_WDT_STG3_V = 0x7
const RTC_CNTL_WDT_STG3_S = 19
const RTC_WDT_STG_SEL_OFF = 0
const RTC_WDT_STG_SEL_INT = 1
const RTC_WDT_STG_SEL_RESET_CPU = 2
const RTC_WDT_STG_SEL_RESET_SYSTEM = 3
const RTC_WDT_STG_SEL_RESET_RTC = 4
const RTC_CNTL_WDT_CPU_RESET_LENGTH = 0x00000007
const RTC_CNTL_WDT_CPU_RESET_LENGTH_V = 0x7
const RTC_CNTL_WDT_CPU_RESET_LENGTH_S = 16
const RTC_CNTL_WDT_SYS_RESET_LENGTH = 0x00000007
const RTC_CNTL_WDT_SYS_RESET_LENGTH_V = 0x7
const RTC_CNTL_WDT_SYS_RESET_LENGTH_S = 13
const RTC_CNTL_WDT_FLASHBOOT_MOD_EN_V = 0x1
const RTC_CNTL_WDT_FLASHBOOT_MOD_EN_S = 12
const RTC_CNTL_WDT_PROCPU_RESET_EN_V = 0x1
const RTC_CNTL_WDT_PROCPU_RESET_EN_S = 11
const RTC_CNTL_WDT_APPCPU_RESET_EN_V = 0x1
const RTC_CNTL_WDT_APPCPU_RESET_EN_S = 10
const RTC_CNTL_WDT_PAUSE_IN_SLP_V = 0x1
const RTC_CNTL_WDT_PAUSE_IN_SLP_S = 9
const RTC_CNTL_WDT_CHIP_RESET_EN_V = 0x1
const RTC_CNTL_WDT_CHIP_RESET_EN_S = 8
const RTC_CNTL_WDT_CHIP_RESET_WIDTH = 0x000000FF
const RTC_CNTL_WDT_CHIP_RESET_WIDTH_V = 0xFF
const RTC_CNTL_WDT_CHIP_RESET_WIDTH_S = 0
const RTC_CNTL_WDT_STG0_HOLD = 0xFFFFFFFF
const RTC_CNTL_WDT_STG0_HOLD_V = 0xFFFFFFFF
const RTC_CNTL_WDT_STG0_HOLD_S = 0
const RTC_CNTL_WDT_STG1_HOLD = 0xFFFFFFFF
const RTC_CNTL_WDT_STG1_HOLD_V = 0xFFFFFFFF
const RTC_CNTL_WDT_STG1_HOLD_S = 0
const RTC_CNTL_WDT_STG2_HOLD = 0xFFFFFFFF
const RTC_CNTL_WDT_STG2_HOLD_V = 0xFFFFFFFF
const RTC_CNTL_WDT_STG2_HOLD_S = 0
const RTC_CNTL_WDT_STG3_HOLD = 0xFFFFFFFF
const RTC_CNTL_WDT_STG3_HOLD_V = 0xFFFFFFFF
const RTC_CNTL_WDT_STG3_HOLD_S = 0
const RTC_CNTL_WDT_FEED_V = 0x1
const RTC_CNTL_WDT_FEED_S = 31
const RTC_CNTL_WDT_WKEY = 0xFFFFFFFF
const RTC_CNTL_WDT_WKEY_V = 0xFFFFFFFF
const RTC_CNTL_WDT_WKEY_S = 0
const RTC_CNTL_SWD_AUTO_FEED_EN_V = 0x1
const RTC_CNTL_SWD_AUTO_FEED_EN_S = 31
const RTC_CNTL_SWD_DISABLE_V = 0x1
const RTC_CNTL_SWD_DISABLE_S = 30
const RTC_CNTL_SWD_FEED_V = 0x1
const RTC_CNTL_SWD_FEED_S = 29
const RTC_CNTL_SWD_RST_FLAG_CLR_V = 0x1
const RTC_CNTL_SWD_RST_FLAG_CLR_S = 28
const RTC_CNTL_SWD_SIGNAL_WIDTH = 0x000003FF
const RTC_CNTL_SWD_SIGNAL_WIDTH_V = 0x3FF
const RTC_CNTL_SWD_SIGNAL_WIDTH_S = 18
const RTC_CNTL_SWD_BYPASS_RST_V = 0x1
const RTC_CNTL_SWD_BYPASS_RST_S = 17
const RTC_CNTL_SWD_FEED_INT_V = 0x1
const RTC_CNTL_SWD_FEED_INT_S = 1
const RTC_CNTL_SWD_RESET_FLAG_V = 0x1
const RTC_CNTL_SWD_RESET_FLAG_S = 0
const RTC_CNTL_SWD_WKEY = 0xFFFFFFFF
const RTC_CNTL_SWD_WKEY_V = 0xFFFFFFFF
const RTC_CNTL_SWD_WKEY_S = 0
const RTC_CNTL_SW_STALL_PROCPU_C1 = 0x0000003F
const RTC_CNTL_SW_STALL_PROCPU_C1_V = 0x3F
const RTC_CNTL_SW_STALL_PROCPU_C1_S = 26
const RTC_CNTL_SW_STALL_APPCPU_C1 = 0x0000003F
const RTC_CNTL_SW_STALL_APPCPU_C1_V = 0x3F
const RTC_CNTL_SW_STALL_APPCPU_C1_S = 20
const RTC_CNTL_SCRATCH4 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH4_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH4_S = 0
const RTC_CNTL_SCRATCH5 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH5_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH5_S = 0
const RTC_CNTL_SCRATCH6 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH6_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH6_S = 0
const RTC_CNTL_SCRATCH7 = 0xFFFFFFFF
const RTC_CNTL_SCRATCH7_V = 0xFFFFFFFF
const RTC_CNTL_SCRATCH7_S = 0
const RTC_CNTL_MAIN_STATE = 0x0000000F
const RTC_CNTL_MAIN_STATE_V = 0xF
const RTC_CNTL_MAIN_STATE_S = 28
const RTC_CNTL_MAIN_STATE_IN_IDLE_V = 0x1
const RTC_CNTL_MAIN_STATE_IN_IDLE_S = 27
const RTC_CNTL_MAIN_STATE_IN_SLP_V = 0x1
const RTC_CNTL_MAIN_STATE_IN_SLP_S = 26
const RTC_CNTL_MAIN_STATE_IN_WAIT_XTL_V = 0x1
const RTC_CNTL_MAIN_STATE_IN_WAIT_XTL_S = 25
const RTC_CNTL_MAIN_STATE_IN_WAIT_PLL_V = 0x1
const RTC_CNTL_MAIN_STATE_IN_WAIT_PLL_S = 24
const RTC_CNTL_MAIN_STATE_IN_WAIT_8M_V = 0x1
const RTC_CNTL_MAIN_STATE_IN_WAIT_8M_S = 23
const RTC_CNTL_IN_LOW_POWER_STATE_V = 0x1
const RTC_CNTL_IN_LOW_POWER_STATE_S = 22
const RTC_CNTL_IN_WAKEUP_STATE_V = 0x1
const RTC_CNTL_IN_WAKEUP_STATE_S = 21
const RTC_CNTL_MAIN_STATE_WAIT_END_V = 0x1
const RTC_CNTL_MAIN_STATE_WAIT_END_S = 20
const RTC_CNTL_RDY_FOR_WAKEUP_V = 0x1
const RTC_CNTL_RDY_FOR_WAKEUP_S = 19
const RTC_CNTL_MAIN_STATE_PLL_ON_V = 0x1
const RTC_CNTL_MAIN_STATE_PLL_ON_S = 18
const RTC_CNTL_MAIN_STATE_XTAL_ISO_V = 0x1
const RTC_CNTL_MAIN_STATE_XTAL_ISO_S = 17
const RTC_CNTL_COCPU_STATE_DONE_V = 0x1
const RTC_CNTL_COCPU_STATE_DONE_S = 16
const RTC_CNTL_COCPU_STATE_SLP_V = 0x1
const RTC_CNTL_COCPU_STATE_SLP_S = 15
const RTC_CNTL_COCPU_STATE_SWITCH_V = 0x1
const RTC_CNTL_COCPU_STATE_SWITCH_S = 14
const RTC_CNTL_COCPU_STATE_START_V = 0x1
const RTC_CNTL_COCPU_STATE_START_S = 13
const RTC_CNTL_TOUCH_STATE_DONE_V = 0x1
const RTC_CNTL_TOUCH_STATE_DONE_S = 12
const RTC_CNTL_TOUCH_STATE_SLP_V = 0x1
const RTC_CNTL_TOUCH_STATE_SLP_S = 11
const RTC_CNTL_TOUCH_STATE_SWITCH_V = 0x1
const RTC_CNTL_TOUCH_STATE_SWITCH_S = 10
const RTC_CNTL_TOUCH_STATE_START_V = 0x1
const RTC_CNTL_TOUCH_STATE_START_S = 9
const RTC_CNTL_XPD_DIG_V = 0x1
const RTC_CNTL_XPD_DIG_S = 8
const RTC_CNTL_DIG_ISO_V = 0x1
const RTC_CNTL_DIG_ISO_S = 7
const RTC_CNTL_XPD_WIFI_V = 0x1
const RTC_CNTL_XPD_WIFI_S = 6
const RTC_CNTL_WIFI_ISO_V = 0x1
const RTC_CNTL_WIFI_ISO_S = 5
const RTC_CNTL_XPD_RTC_PERI_V = 0x1
const RTC_CNTL_XPD_RTC_PERI_S = 4
const RTC_CNTL_PERI_ISO_V = 0x1
const RTC_CNTL_PERI_ISO_S = 3
const RTC_CNTL_XPD_DIG_DCDC_V = 0x1
const RTC_CNTL_XPD_DIG_DCDC_S = 2
const RTC_CNTL_XPD_ROM0_V = 0x1
const RTC_CNTL_XPD_ROM0_S = 0
const RTC_CNTL_LOW_POWER_DIAG1 = 0xFFFFFFFF
const RTC_CNTL_LOW_POWER_DIAG1_V = 0xFFFFFFFF
const RTC_CNTL_LOW_POWER_DIAG1_S = 0
const RTC_CNTL_GPIO_PIN5_HOLD_V = 0x1
const RTC_CNTL_GPIO_PIN5_HOLD_S = 5
const RTC_CNTL_GPIO_PIN4_HOLD_V = 0x1
const RTC_CNTL_GPIO_PIN4_HOLD_S = 4
const RTC_CNTL_GPIO_PIN3_HOLD_V = 0x1
const RTC_CNTL_GPIO_PIN3_HOLD_S = 3
const RTC_CNTL_GPIO_PIN2_HOLD_V = 0x1
const RTC_CNTL_GPIO_PIN2_HOLD_S = 2
const RTC_CNTL_GPIO_PIN1_HOLD_V = 0x1
const RTC_CNTL_GPIO_PIN1_HOLD_S = 1
const RTC_CNTL_GPIO_PIN0_HOLD_V = 0x1
const RTC_CNTL_GPIO_PIN0_HOLD_S = 0
const RTC_CNTL_DIG_PAD_HOLD = 0xFFFFFFFF
const RTC_CNTL_DIG_PAD_HOLD_V = 0xFFFFFFFF
const RTC_CNTL_DIG_PAD_HOLD_S = 0
const RTC_CNTL_BROWN_OUT_DET_V = 0x1
const RTC_CNTL_BROWN_OUT_DET_S = 31
const RTC_CNTL_BROWN_OUT_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT_ENA_S = 30
const RTC_CNTL_BROWN_OUT_CNT_CLR_V = 0x1
const RTC_CNTL_BROWN_OUT_CNT_CLR_S = 29
const RTC_CNTL_BROWN_OUT_ANA_RST_EN_V = 0x1
const RTC_CNTL_BROWN_OUT_ANA_RST_EN_S = 28
const RTC_CNTL_BROWN_OUT_RST_SEL_V = 0x1
const RTC_CNTL_BROWN_OUT_RST_SEL_S = 27
const RTC_CNTL_BROWN_OUT_RST_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT_RST_ENA_S = 26
const RTC_CNTL_BROWN_OUT_RST_WAIT = 0x000003FF
const RTC_CNTL_BROWN_OUT_RST_WAIT_V = 0x3FF
const RTC_CNTL_BROWN_OUT_RST_WAIT_S = 16
const RTC_CNTL_BROWN_OUT_PD_RF_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT_PD_RF_ENA_S = 15
const RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA_V = 0x1
const RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA_S = 14
const RTC_CNTL_BROWN_OUT_INT_WAIT = 0x000003FF
const RTC_CNTL_BROWN_OUT_INT_WAIT_V = 0x3FF
const RTC_CNTL_BROWN_OUT_INT_WAIT_S = 4
const RTC_CNTL_TIMER_VALUE1_LOW = 0xFFFFFFFF
const RTC_CNTL_TIMER_VALUE1_LOW_V = 0xFFFFFFFF
const RTC_CNTL_TIMER_VALUE1_LOW_S = 0
const RTC_CNTL_TIMER_VALUE1_HIGH = 0x0000FFFF
const RTC_CNTL_TIMER_VALUE1_HIGH_V = 0xFFFF
const RTC_CNTL_TIMER_VALUE1_HIGH_S = 0
const RTC_CNTL_XTAL32K_CLK_FACTOR = 0xFFFFFFFF
const RTC_CNTL_XTAL32K_CLK_FACTOR_V = 0xFFFFFFFF
const RTC_CNTL_XTAL32K_CLK_FACTOR_S = 0
const RTC_CNTL_XTAL32K_STABLE_THRES = 0x0000000F
const RTC_CNTL_XTAL32K_STABLE_THRES_V = 0xF
const RTC_CNTL_XTAL32K_STABLE_THRES_S = 28
const RTC_CNTL_XTAL32K_WDT_TIMEOUT = 0x000000FF
const RTC_CNTL_XTAL32K_WDT_TIMEOUT_V = 0xFF
const RTC_CNTL_XTAL32K_WDT_TIMEOUT_S = 20
const RTC_CNTL_XTAL32K_RESTART_WAIT = 0x0000FFFF
const RTC_CNTL_XTAL32K_RESTART_WAIT_V = 0xFFFF
const RTC_CNTL_XTAL32K_RESTART_WAIT_S = 4
const RTC_CNTL_XTAL32K_RETURN_WAIT = 0x0000000F
const RTC_CNTL_XTAL32K_RETURN_WAIT_V = 0xF
const RTC_CNTL_XTAL32K_RETURN_WAIT_S = 0
const RTC_CNTL_IO_MUX_RESET_DISABLE_V = 0x1
const RTC_CNTL_IO_MUX_RESET_DISABLE_S = 18
const RTC_CNTL_REJECT_CAUSE = 0x0003FFFF
const RTC_CNTL_REJECT_CAUSE_V = 0x3FFFF
const RTC_CNTL_REJECT_CAUSE_S = 0
const RTC_CNTL_FORCE_DOWNLOAD_BOOT_V = 0x1
const RTC_CNTL_FORCE_DOWNLOAD_BOOT_S = 0
const RTC_CNTL_WAKEUP_CAUSE = 0x0001FFFF
const RTC_CNTL_WAKEUP_CAUSE_V = 0x1FFFF
const RTC_CNTL_WAKEUP_CAUSE_S = 0
const RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE = 0x00FFFFFF
const RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_V = 0xFFFFFF
const RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_S = 8
const RTC_CNTL_BBPLL_CAL_INT_ENA_W1TS_V = 0x1
const RTC_CNTL_BBPLL_CAL_INT_ENA_W1TS_S = 20
const RTC_CNTL_GLITCH_DET_INT_ENA_W1TS_V = 0x1
const RTC_CNTL_GLITCH_DET_INT_ENA_W1TS_S = 19
const RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TS_V = 0x1
const RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TS_S = 16
const RTC_CNTL_SWD_INT_ENA_W1TS_V = 0x1
const RTC_CNTL_SWD_INT_ENA_W1TS_S = 15
const RTC_CNTL_MAIN_TIMER_INT_ENA_W1TS_V = 0x1
const RTC_CNTL_MAIN_TIMER_INT_ENA_W1TS_S = 10
const RTC_CNTL_BROWN_OUT_INT_ENA_W1TS_V = 0x1
const RTC_CNTL_BROWN_OUT_INT_ENA_W1TS_S = 9
const RTC_CNTL_WDT_INT_ENA_W1TS_V = 0x1
const RTC_CNTL_WDT_INT_ENA_W1TS_S = 3
const RTC_CNTL_SLP_REJECT_INT_ENA_W1TS_V = 0x1
const RTC_CNTL_SLP_REJECT_INT_ENA_W1TS_S = 1
const RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TS_V = 0x1
const RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TS_S = 0
const RTC_CNTL_BBPLL_CAL_INT_ENA_W1TC_V = 0x1
const RTC_CNTL_BBPLL_CAL_INT_ENA_W1TC_S = 20
const RTC_CNTL_GLITCH_DET_INT_ENA_W1TC_V = 0x1
const RTC_CNTL_GLITCH_DET_INT_ENA_W1TC_S = 19
const RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TC_V = 0x1
const RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TC_S = 16
const RTC_CNTL_SWD_INT_ENA_W1TC_V = 0x1
const RTC_CNTL_SWD_INT_ENA_W1TC_S = 15
const RTC_CNTL_MAIN_TIMER_INT_ENA_W1TC_V = 0x1
const RTC_CNTL_MAIN_TIMER_INT_ENA_W1TC_S = 10
const RTC_CNTL_BROWN_OUT_INT_ENA_W1TC_V = 0x1
const RTC_CNTL_BROWN_OUT_INT_ENA_W1TC_S = 9
const RTC_CNTL_WDT_INT_ENA_W1TC_V = 0x1
const RTC_CNTL_WDT_INT_ENA_W1TC_S = 3
const RTC_CNTL_SLP_REJECT_INT_ENA_W1TC_V = 0x1
const RTC_CNTL_SLP_REJECT_INT_ENA_W1TC_S = 1
const RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TC_V = 0x1
const RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TC_S = 0
const RTC_CNTL_RETENTION_WAIT = 0x0000001F
const RTC_CNTL_RETENTION_WAIT_V = 0x1F
const RTC_CNTL_RETENTION_WAIT_S = 27
const RTC_CNTL_RETENTION_EN_V = 0x1
const RTC_CNTL_RETENTION_EN_S = 26
const RTC_CNTL_RETENTION_CLKOFF_WAIT = 0x0000000F
const RTC_CNTL_RETENTION_CLKOFF_WAIT_V = 0xF
const RTC_CNTL_RETENTION_CLKOFF_WAIT_S = 22
const RTC_CNTL_RETENTION_DONE_WAIT = 0x00000007
const RTC_CNTL_RETENTION_DONE_WAIT_V = 0x7
const RTC_CNTL_RETENTION_DONE_WAIT_S = 19
const RTC_CNTL_RETENTION_CLK_SEL_V = 0x1
const RTC_CNTL_RETENTION_CLK_SEL_S = 18
const RTC_CNTL_FIB_SEL = 0x00000007
const RTC_CNTL_FIB_SEL_V = 0x7
const RTC_CNTL_FIB_SEL_S = 0
const RTC_CNTL_GPIO_PIN0_WAKEUP_ENABLE_V = 0x1
const RTC_CNTL_GPIO_PIN0_WAKEUP_ENABLE_S = 31
const RTC_CNTL_GPIO_PIN1_WAKEUP_ENABLE_V = 0x1
const RTC_CNTL_GPIO_PIN1_WAKEUP_ENABLE_S = 30
const RTC_CNTL_GPIO_PIN2_WAKEUP_ENABLE_V = 0x1
const RTC_CNTL_GPIO_PIN2_WAKEUP_ENABLE_S = 29
const RTC_CNTL_GPIO_PIN3_WAKEUP_ENABLE_V = 0x1
const RTC_CNTL_GPIO_PIN3_WAKEUP_ENABLE_S = 28
const RTC_CNTL_GPIO_PIN4_WAKEUP_ENABLE_V = 0x1
const RTC_CNTL_GPIO_PIN4_WAKEUP_ENABLE_S = 27
const RTC_CNTL_GPIO_PIN5_WAKEUP_ENABLE_V = 0x1
const RTC_CNTL_GPIO_PIN5_WAKEUP_ENABLE_S = 26
const RTC_CNTL_GPIO_PIN0_INT_TYPE = 0x00000007
const RTC_CNTL_GPIO_PIN0_INT_TYPE_V = 0x7
const RTC_CNTL_GPIO_PIN0_INT_TYPE_S = 23
const RTC_CNTL_GPIO_PIN1_INT_TYPE = 0x00000007
const RTC_CNTL_GPIO_PIN1_INT_TYPE_V = 0x7
const RTC_CNTL_GPIO_PIN1_INT_TYPE_S = 20
const RTC_CNTL_GPIO_PIN2_INT_TYPE = 0x00000007
const RTC_CNTL_GPIO_PIN2_INT_TYPE_V = 0x7
const RTC_CNTL_GPIO_PIN2_INT_TYPE_S = 17
const RTC_CNTL_GPIO_PIN3_INT_TYPE = 0x00000007
const RTC_CNTL_GPIO_PIN3_INT_TYPE_V = 0x7
const RTC_CNTL_GPIO_PIN3_INT_TYPE_S = 14
const RTC_CNTL_GPIO_PIN4_INT_TYPE = 0x00000007
const RTC_CNTL_GPIO_PIN4_INT_TYPE_V = 0x7
const RTC_CNTL_GPIO_PIN4_INT_TYPE_S = 11
const RTC_CNTL_GPIO_PIN5_INT_TYPE = 0x00000007
const RTC_CNTL_GPIO_PIN5_INT_TYPE_V = 0x7
const RTC_CNTL_GPIO_PIN5_INT_TYPE_S = 8
const RTC_CNTL_GPIO_PIN_CLK_GATE_V = 0x1
const RTC_CNTL_GPIO_PIN_CLK_GATE_S = 7
const RTC_CNTL_GPIO_WAKEUP_STATUS_CLR_V = 0x1
const RTC_CNTL_GPIO_WAKEUP_STATUS_CLR_S = 6
const RTC_CNTL_GPIO_WAKEUP_STATUS = 0x0000003F
const RTC_CNTL_GPIO_WAKEUP_STATUS_V = 0x3F
const RTC_CNTL_GPIO_WAKEUP_STATUS_S = 0
const RTC_CNTL_DEBUG_SEL4 = 0x0000001F
const RTC_CNTL_DEBUG_SEL4_V = 0x1F
const RTC_CNTL_DEBUG_SEL4_S = 27
const RTC_CNTL_DEBUG_SEL3 = 0x0000001F
const RTC_CNTL_DEBUG_SEL3_V = 0x1F
const RTC_CNTL_DEBUG_SEL3_S = 22
const RTC_CNTL_DEBUG_SEL2 = 0x0000001F
const RTC_CNTL_DEBUG_SEL2_V = 0x1F
const RTC_CNTL_DEBUG_SEL2_S = 17
const RTC_CNTL_DEBUG_SEL1 = 0x0000001F
const RTC_CNTL_DEBUG_SEL1_V = 0x1F
const RTC_CNTL_DEBUG_SEL1_S = 12
const RTC_CNTL_DEBUG_SEL0 = 0x0000001F
const RTC_CNTL_DEBUG_SEL0_V = 0x1F
const RTC_CNTL_DEBUG_SEL0_S = 7
const RTC_CNTL_DEBUG_BIT_SEL = 0x0000001F
const RTC_CNTL_DEBUG_BIT_SEL_V = 0x1F
const RTC_CNTL_DEBUG_BIT_SEL_S = 2
const RTC_CNTL_DEBUG_12M_NO_GATING_V = 0x1
const RTC_CNTL_DEBUG_12M_NO_GATING_S = 1
const RTC_CNTL_GPIO_PIN0_FUN_SEL = 0x0000000F
const RTC_CNTL_GPIO_PIN0_FUN_SEL_V = 0xF
const RTC_CNTL_GPIO_PIN0_FUN_SEL_S = 28
const RTC_CNTL_GPIO_PIN1_FUN_SEL = 0x0000000F
const RTC_CNTL_GPIO_PIN1_FUN_SEL_V = 0xF
const RTC_CNTL_GPIO_PIN1_FUN_SEL_S = 24
const RTC_CNTL_GPIO_PIN2_FUN_SEL = 0x0000000F
const RTC_CNTL_GPIO_PIN2_FUN_SEL_V = 0xF
const RTC_CNTL_GPIO_PIN2_FUN_SEL_S = 20
const RTC_CNTL_GPIO_PIN3_FUN_SEL = 0x0000000F
const RTC_CNTL_GPIO_PIN3_FUN_SEL_V = 0xF
const RTC_CNTL_GPIO_PIN3_FUN_SEL_S = 16
const RTC_CNTL_GPIO_PIN4_FUN_SEL = 0x0000000F
const RTC_CNTL_GPIO_PIN4_FUN_SEL_V = 0xF
const RTC_CNTL_GPIO_PIN4_FUN_SEL_S = 12
const RTC_CNTL_GPIO_PIN5_FUN_SEL = 0x0000000F
const RTC_CNTL_GPIO_PIN5_FUN_SEL_V = 0xF
const RTC_CNTL_GPIO_PIN5_FUN_SEL_S = 8
const RTC_CNTL_GPIO_PIN0_MUX_SEL_V = 0x1
const RTC_CNTL_GPIO_PIN0_MUX_SEL_S = 7
const RTC_CNTL_GPIO_PIN1_MUX_SEL_V = 0x1
const RTC_CNTL_GPIO_PIN1_MUX_SEL_S = 6
const RTC_CNTL_GPIO_PIN2_MUX_SEL_V = 0x1
const RTC_CNTL_GPIO_PIN2_MUX_SEL_S = 5
const RTC_CNTL_GPIO_PIN3_MUX_SEL_V = 0x1
const RTC_CNTL_GPIO_PIN3_MUX_SEL_S = 4
const RTC_CNTL_GPIO_PIN4_MUX_SEL_V = 0x1
const RTC_CNTL_GPIO_PIN4_MUX_SEL_S = 3
const RTC_CNTL_GPIO_PIN5_MUX_SEL_V = 0x1
const RTC_CNTL_GPIO_PIN5_MUX_SEL_S = 2
const RTC_CNTL_FORCE_XPD_SAR = 0x00000003
const RTC_CNTL_FORCE_XPD_SAR_V = 0x3
const RTC_CNTL_FORCE_XPD_SAR_S = 30
const RTC_CNTL_SAR2_PWDET_CCT = 0x00000007
const RTC_CNTL_SAR2_PWDET_CCT_V = 0x7
const RTC_CNTL_SAR2_PWDET_CCT_S = 27
const RTC_CNTL_SAR_DEBUG_SEL = 0x0000001F
const RTC_CNTL_SAR_DEBUG_SEL_V = 0x1F
const RTC_CNTL_SAR_DEBUG_SEL_S = 27
const RTC_CNTL_POWER_GLITCH_EN_V = 0x1
const RTC_CNTL_POWER_GLITCH_EN_S = 31
const RTC_CNTL_POWER_GLITCH_EFUSE_SEL_V = 0x1
const RTC_CNTL_POWER_GLITCH_EFUSE_SEL_S = 30
const RTC_CNTL_POWER_GLITCH_FORCE_PU_V = 0x1
const RTC_CNTL_POWER_GLITCH_FORCE_PU_S = 29
const RTC_CNTL_POWER_GLITCH_FORCE_PD_V = 0x1
const RTC_CNTL_POWER_GLITCH_FORCE_PD_S = 28
const RTC_CNTL_POWER_GLITCH_DSENSE = 0x00000003
const RTC_CNTL_POWER_GLITCH_DSENSE_V = 0x3
const RTC_CNTL_POWER_GLITCH_DSENSE_S = 26
const RTC_CNTL_CNTL_DATE = 0x0FFFFFFF
const RTC_CNTL_CNTL_DATE_V = 0xFFFFFFF
const RTC_CNTL_CNTL_DATE_S = 0
const GPIO_ETM_EVENT_EDGE_TYPES = 3
const GPIO_ETM_TASK_ACTION_TYPES = 3
const LOG_ANSI_COLOR_BLACK = "30"
const LOG_ANSI_COLOR_RED = "31"
const LOG_ANSI_COLOR_GREEN = "32"
const LOG_ANSI_COLOR_YELLOW = "33"
const LOG_ANSI_COLOR_BLUE = "34"
const LOG_ANSI_COLOR_MAGENTA = "35"
const LOG_ANSI_COLOR_CYAN = "36"
const LOG_ANSI_COLOR_WHITE = "37"
const LOG_ANSI_COLOR_DEFAULT = "39"
const LOG_ANSI_COLOR_BG_BLACK = "40"
const LOG_ANSI_COLOR_BG_RED = "41"
const LOG_ANSI_COLOR_BG_GREEN = "42"
const LOG_ANSI_COLOR_BG_YELLOW = "43"
const LOG_ANSI_COLOR_BG_BLUE = "44"
const LOG_ANSI_COLOR_BG_MAGENTA = "45"
const LOG_ANSI_COLOR_BG_CYAN = "46"
const LOG_ANSI_COLOR_BG_WHITE = "47"
const LOG_ANSI_COLOR_BG_DEFAULT = "49"
const LOG_ANSI_COLOR_STYLE_RESET = "0"
const LOG_ANSI_COLOR_STYLE_BOLD = "1"
const LOG_ANSI_COLOR_STYLE_ITALIC = "3"
const LOG_ANSI_COLOR_STYLE_UNDERLINE = "4"
const LOG_RESET_COLOR = ""
const LOG_COLOR_E = ""
const LOG_COLOR_W = ""
const LOG_COLOR_I = ""
const LOG_COLOR_D = ""
const LOG_COLOR_V = ""
const ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_ENA_S = 11
const ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_ENA_S = 10
const ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_ENA_S = 9
const ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_ENA_S = 8
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_ENA_S = 7
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_ENA_S = 6
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_ENA_S = 5
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_ENA_S = 4
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_ENA_S = 3
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_ENA_S = 2
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_ENA_S = 1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_ENA_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_ENA_S = 0
const ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_RAW_S = 11
const ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_RAW_S = 10
const ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_RAW_S = 9
const ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_RAW_S = 8
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_RAW_S = 7
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_RAW_S = 6
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_RAW_S = 5
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_RAW_S = 4
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_RAW_S = 3
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_RAW_S = 2
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_RAW_S = 1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_RAW_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_RAW_S = 0
const ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_RLS_S = 11
const ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_RLS_S = 10
const ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_RLS_S = 9
const ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_RLS_S = 8
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_RLS_S = 7
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_RLS_S = 6
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_RLS_S = 5
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_RLS_S = 4
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_RLS_S = 3
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_RLS_S = 2
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_RLS_S = 1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_RLS_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_RLS_S = 0
const ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_CLR_S = 11
const ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_CLR_S = 10
const ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_CLR_S = 9
const ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_CLR_S = 8
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_CLR_S = 7
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_CLR_S = 6
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_CLR_S = 5
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_CLR_S = 4
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_CLR_S = 3
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_CLR_S = 2
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_CLR_S = 1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_CLR_V = 0x1
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_CLR_S = 0
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_S = 0
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_S = 0
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_S = 0
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_S = 0
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_S = 0
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_S = 0
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_S = 0
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_S = 0
const ASSIST_DEBUG_CORE_0_AREA_PC = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_PC_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_PC_S = 0
const ASSIST_DEBUG_CORE_0_AREA_SP = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_SP_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_AREA_SP_S = 0
const ASSIST_DEBUG_CORE_0_SP_MIN = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_SP_MIN_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_SP_MIN_S = 0
const ASSIST_DEBUG_CORE_0_SP_MAX = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_SP_MAX_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_SP_MAX_S = 0
const ASSIST_DEBUG_CORE_0_SP_PC = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_SP_PC_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_SP_PC_S = 0
const ASSIST_DEBUG_CORE_0_RCD_PDEBUGEN_V = 0x1
const ASSIST_DEBUG_CORE_0_RCD_PDEBUGEN_S = 1
const ASSIST_DEBUG_CORE_0_RCD_RECORDEN_V = 0x1
const ASSIST_DEBUG_CORE_0_RCD_RECORDEN_S = 0
const ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_S = 0
const ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_S = 0
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_LOADSTORE_0_V = 0x1
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_LOADSTORE_0_S = 25
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_WR_0_V = 0x1
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_WR_0_S = 24
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_0 = 0x00FFFFFF
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_0_V = 0xFFFFFF
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_0_S = 0
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_LOADSTORE_1_V = 0x1
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_LOADSTORE_1_S = 25
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_WR_1_V = 0x1
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_WR_1_S = 24
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_1 = 0x00FFFFFF
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_1_V = 0xFFFFFF
const ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_1_S = 0
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_0 = 0x0000000F
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_0_V = 0xF
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_0_S = 25
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_WR_0_V = 0x1
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_WR_0_S = 24
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_0 = 0x00FFFFFF
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_0_V = 0xFFFFFF
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_0_S = 0
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_0 = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_0_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_0_S = 0
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_1 = 0x0000000F
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_1_V = 0xF
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_1_S = 25
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_WR_1_V = 0x1
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_WR_1_S = 24
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_1 = 0x00FFFFFF
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_1_V = 0xFFFFFF
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_1_S = 0
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_1 = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_1_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_1_S = 0
const ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0 = 0x000FFFFF
const ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0_V = 0xFFFFF
const ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0_S = 0
const ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1 = 0x000FFFFF
const ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1_V = 0xFFFFF
const ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1_S = 0
const ASSIST_DEBUG_LOG_MEM_LOOP_ENABLE_V = 0x1
const ASSIST_DEBUG_LOG_MEM_LOOP_ENABLE_S = 7
const ASSIST_DEBUG_LOG_MODE = 0x0000000F
const ASSIST_DEBUG_LOG_MODE_V = 0xF
const ASSIST_DEBUG_LOG_MODE_S = 3
const ASSIST_DEBUG_LOG_ENA = 0x00000007
const ASSIST_DEBUG_LOG_ENA_V = 0x7
const ASSIST_DEBUG_LOG_ENA_S = 0
const ASSIST_DEBUG_LOG_DATA_0 = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_DATA_0_V = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_DATA_0_S = 0
const ASSIST_DEBUG_LOG_DATA_SIZE = 0x0000FFFF
const ASSIST_DEBUG_LOG_DATA_SIZE_V = 0xFFFF
const ASSIST_DEBUG_LOG_DATA_SIZE_S = 0
const ASSIST_DEBUG_LOG_MIN = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_MIN_V = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_MIN_S = 0
const ASSIST_DEBUG_LOG_MAX = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_MAX_V = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_MAX_S = 0
const ASSIST_DEBUG_LOG_MEM_START = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_MEM_START_V = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_MEM_START_S = 0
const ASSIST_DEBUG_LOG_MEM_END = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_MEM_END_V = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_MEM_END_S = 0
const ASSIST_DEBUG_LOG_MEM_WRITING_ADDR = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_V = 0xFFFFFFFF
const ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_S = 0
const ASSIST_DEBUG_CLR_LOG_MEM_FULL_FLAG_V = 0x1
const ASSIST_DEBUG_CLR_LOG_MEM_FULL_FLAG_S = 1
const ASSIST_DEBUG_LOG_MEM_FULL_FLAG_V = 0x1
const ASSIST_DEBUG_LOG_MEM_FULL_FLAG_S = 0
const ASSIST_DEBUG_CORE_0_LASTPC_BEFORE_EXC = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_LASTPC_BEFORE_EXC_V = 0xFFFFFFFF
const ASSIST_DEBUG_CORE_0_LASTPC_BEFORE_EXC_S = 0
const ASSIST_DEBUG_CORE_0_DEBUG_MODULE_ACTIVE_V = 0x1
const ASSIST_DEBUG_CORE_0_DEBUG_MODULE_ACTIVE_S = 1
const ASSIST_DEBUG_CORE_0_DEBUG_MODE_V = 0x1
const ASSIST_DEBUG_CORE_0_DEBUG_MODE_S = 0
const ASSIST_DEBUG_DATE = 0x0FFFFFFF
const ASSIST_DEBUG_DATE_V = 0xFFFFFFF
const ASSIST_DEBUG_DATE_S = 0
const INTERRUPT_CORE0_MAC_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_MAC_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_MAC_INTR_MAP_S = 0
const INTERRUPT_CORE0_MAC_NMI_MAP = 0x0000001F
const INTERRUPT_CORE0_MAC_NMI_MAP_V = 0x1F
const INTERRUPT_CORE0_MAC_NMI_MAP_S = 0
const INTERRUPT_CORE0_PWR_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_PWR_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_PWR_INTR_MAP_S = 0
const INTERRUPT_CORE0_BB_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_BB_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_BB_INT_MAP_S = 0
const INTERRUPT_CORE0_BT_MAC_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_BT_MAC_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_BT_MAC_INT_MAP_S = 0
const INTERRUPT_CORE0_BT_BB_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_BT_BB_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_BT_BB_INT_MAP_S = 0
const INTERRUPT_CORE0_BT_BB_NMI_MAP = 0x0000001F
const INTERRUPT_CORE0_BT_BB_NMI_MAP_V = 0x1F
const INTERRUPT_CORE0_BT_BB_NMI_MAP_S = 0
const INTERRUPT_CORE0_RWBT_IRQ_MAP = 0x0000001F
const INTERRUPT_CORE0_RWBT_IRQ_MAP_V = 0x1F
const INTERRUPT_CORE0_RWBT_IRQ_MAP_S = 0
const INTERRUPT_CORE0_RWBLE_IRQ_MAP = 0x0000001F
const INTERRUPT_CORE0_RWBLE_IRQ_MAP_V = 0x1F
const INTERRUPT_CORE0_RWBLE_IRQ_MAP_S = 0
const INTERRUPT_CORE0_RWBT_NMI_MAP = 0x0000001F
const INTERRUPT_CORE0_RWBT_NMI_MAP_V = 0x1F
const INTERRUPT_CORE0_RWBT_NMI_MAP_S = 0
const INTERRUPT_CORE0_RWBLE_NMI_MAP = 0x0000001F
const INTERRUPT_CORE0_RWBLE_NMI_MAP_V = 0x1F
const INTERRUPT_CORE0_RWBLE_NMI_MAP_S = 0
const INTERRUPT_CORE0_I2C_MST_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_I2C_MST_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_I2C_MST_INT_MAP_S = 0
const INTERRUPT_CORE0_SLC0_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_SLC0_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_SLC0_INTR_MAP_S = 0
const INTERRUPT_CORE0_SLC1_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_SLC1_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_SLC1_INTR_MAP_S = 0
const INTERRUPT_CORE0_APB_CTRL_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_APB_CTRL_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_APB_CTRL_INTR_MAP_S = 0
const INTERRUPT_CORE0_UHCI0_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_UHCI0_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_UHCI0_INTR_MAP_S = 0
const INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_MAP = 0x0000001F
const INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_MAP_V = 0x1F
const INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_MAP_S = 0
const INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_NMI_MAP = 0x0000001F
const INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_NMI_MAP_V = 0x1F
const INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_NMI_MAP_S = 0
const INTERRUPT_CORE0_SPI_INTR_1_MAP = 0x0000001F
const INTERRUPT_CORE0_SPI_INTR_1_MAP_V = 0x1F
const INTERRUPT_CORE0_SPI_INTR_1_MAP_S = 0
const INTERRUPT_CORE0_SPI_INTR_2_MAP = 0x0000001F
const INTERRUPT_CORE0_SPI_INTR_2_MAP_V = 0x1F
const INTERRUPT_CORE0_SPI_INTR_2_MAP_S = 0
const INTERRUPT_CORE0_I2S_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_I2S_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_I2S_INT_MAP_S = 0
const INTERRUPT_CORE0_UART_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_UART_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_UART_INTR_MAP_S = 0
const INTERRUPT_CORE0_UART1_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_UART1_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_UART1_INTR_MAP_S = 0
const INTERRUPT_CORE0_LEDC_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_LEDC_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_LEDC_INT_MAP_S = 0
const INTERRUPT_CORE0_EFUSE_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_EFUSE_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_EFUSE_INT_MAP_S = 0
const INTERRUPT_CORE0_CAN_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_CAN_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_CAN_INT_MAP_S = 0
const INTERRUPT_CORE0_USB_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_USB_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_USB_INTR_MAP_S = 0
const INTERRUPT_CORE0_RTC_CORE_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_RTC_CORE_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_RTC_CORE_INTR_MAP_S = 0
const INTERRUPT_CORE0_RMT_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_RMT_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_RMT_INTR_MAP_S = 0
const INTERRUPT_CORE0_I2C_EXT0_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_I2C_EXT0_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_I2C_EXT0_INTR_MAP_S = 0
const INTERRUPT_CORE0_TIMER_INT1_MAP = 0x0000001F
const INTERRUPT_CORE0_TIMER_INT1_MAP_V = 0x1F
const INTERRUPT_CORE0_TIMER_INT1_MAP_S = 0
const INTERRUPT_CORE0_TIMER_INT2_MAP = 0x0000001F
const INTERRUPT_CORE0_TIMER_INT2_MAP_V = 0x1F
const INTERRUPT_CORE0_TIMER_INT2_MAP_S = 0
const INTERRUPT_CORE0_TG_T0_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_TG_T0_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_TG_T0_INT_MAP_S = 0
const INTERRUPT_CORE0_TG_WDT_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_TG_WDT_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_TG_WDT_INT_MAP_S = 0
const INTERRUPT_CORE0_TG1_T0_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_TG1_T0_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_TG1_T0_INT_MAP_S = 0
const INTERRUPT_CORE0_TG1_WDT_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_TG1_WDT_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_TG1_WDT_INT_MAP_S = 0
const INTERRUPT_CORE0_CACHE_IA_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_CACHE_IA_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_CACHE_IA_INT_MAP_S = 0
const INTERRUPT_CORE0_SYSTIMER_TARGET0_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_SYSTIMER_TARGET0_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_SYSTIMER_TARGET0_INT_MAP_S = 0
const INTERRUPT_CORE0_SYSTIMER_TARGET1_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_SYSTIMER_TARGET1_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_SYSTIMER_TARGET1_INT_MAP_S = 0
const INTERRUPT_CORE0_SYSTIMER_TARGET2_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_SYSTIMER_TARGET2_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_SYSTIMER_TARGET2_INT_MAP_S = 0
const INTERRUPT_CORE0_SPI_MEM_REJECT_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_SPI_MEM_REJECT_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_SPI_MEM_REJECT_INTR_MAP_S = 0
const INTERRUPT_CORE0_ICACHE_PRELOAD_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_ICACHE_PRELOAD_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_ICACHE_PRELOAD_INT_MAP_S = 0
const INTERRUPT_CORE0_ICACHE_SYNC_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_ICACHE_SYNC_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_ICACHE_SYNC_INT_MAP_S = 0
const INTERRUPT_CORE0_APB_ADC_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_APB_ADC_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_APB_ADC_INT_MAP_S = 0
const INTERRUPT_CORE0_DMA_CH0_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_DMA_CH0_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_DMA_CH0_INT_MAP_S = 0
const INTERRUPT_CORE0_DMA_CH1_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_DMA_CH1_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_DMA_CH1_INT_MAP_S = 0
const INTERRUPT_CORE0_DMA_CH2_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_DMA_CH2_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_DMA_CH2_INT_MAP_S = 0
const INTERRUPT_CORE0_RSA_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_RSA_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_RSA_INT_MAP_S = 0
const INTERRUPT_CORE0_AES_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_AES_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_AES_INT_MAP_S = 0
const INTERRUPT_CORE0_SHA_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_SHA_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_SHA_INT_MAP_S = 0
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_0_MAP = 0x0000001F
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_0_MAP_V = 0x1F
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_0_MAP_S = 0
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_1_MAP = 0x0000001F
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_1_MAP_V = 0x1F
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_1_MAP_S = 0
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_2_MAP = 0x0000001F
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_2_MAP_V = 0x1F
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_2_MAP_S = 0
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_3_MAP = 0x0000001F
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_3_MAP_V = 0x1F
const INTERRUPT_CORE0_CPU_INTR_FROM_CPU_3_MAP_S = 0
const INTERRUPT_CORE0_ASSIST_DEBUG_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_ASSIST_DEBUG_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_ASSIST_DEBUG_INTR_MAP_S = 0
const INTERRUPT_CORE0_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP_S = 0
const INTERRUPT_CORE0_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_S = 0
const INTERRUPT_CORE0_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_S = 0
const INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP_S = 0
const INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP_S = 0
const INTERRUPT_CORE0_BACKUP_PMS_VIOLATE_INTR_MAP = 0x0000001F
const INTERRUPT_CORE0_BACKUP_PMS_VIOLATE_INTR_MAP_V = 0x1F
const INTERRUPT_CORE0_BACKUP_PMS_VIOLATE_INTR_MAP_S = 0
const INTERRUPT_CORE0_CACHE_CORE0_ACS_INT_MAP = 0x0000001F
const INTERRUPT_CORE0_CACHE_CORE0_ACS_INT_MAP_V = 0x1F
const INTERRUPT_CORE0_CACHE_CORE0_ACS_INT_MAP_S = 0
const INTERRUPT_CORE0_INTR_STATUS_0 = 0xFFFFFFFF
const INTERRUPT_CORE0_INTR_STATUS_0_V = 0xFFFFFFFF
const INTERRUPT_CORE0_INTR_STATUS_0_S = 0
const INTERRUPT_CORE0_INTR_STATUS_1 = 0xFFFFFFFF
const INTERRUPT_CORE0_INTR_STATUS_1_V = 0xFFFFFFFF
const INTERRUPT_CORE0_INTR_STATUS_1_S = 0
const INTERRUPT_CORE0_CLK_EN_V = 0x1
const INTERRUPT_CORE0_CLK_EN_S = 0
const INTERRUPT_CORE0_CPU_INT_ENABLE = 0xFFFFFFFF
const INTERRUPT_CORE0_CPU_INT_ENABLE_V = 0xFFFFFFFF
const INTERRUPT_CORE0_CPU_INT_ENABLE_S = 0
const INTERRUPT_CORE0_CPU_INT_TYPE = 0xFFFFFFFF
const INTERRUPT_CORE0_CPU_INT_TYPE_V = 0xFFFFFFFF
const INTERRUPT_CORE0_CPU_INT_TYPE_S = 0
const INTERRUPT_CORE0_CPU_INT_CLEAR = 0xFFFFFFFF
const INTERRUPT_CORE0_CPU_INT_CLEAR_V = 0xFFFFFFFF
const INTERRUPT_CORE0_CPU_INT_CLEAR_S = 0
const INTERRUPT_CORE0_CPU_INT_EIP_STATUS = 0xFFFFFFFF
const INTERRUPT_CORE0_CPU_INT_EIP_STATUS_V = 0xFFFFFFFF
const INTERRUPT_CORE0_CPU_INT_EIP_STATUS_S = 0
const INTERRUPT_CORE0_CPU_PRI_0_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_0_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_0_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_1_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_1_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_1_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_2_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_2_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_2_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_3_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_3_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_3_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_4_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_4_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_4_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_5_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_5_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_5_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_6_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_6_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_6_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_7_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_7_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_7_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_8_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_8_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_8_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_9_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_9_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_9_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_10_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_10_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_10_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_11_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_11_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_11_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_12_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_12_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_12_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_13_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_13_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_13_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_14_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_14_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_14_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_15_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_15_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_15_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_16_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_16_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_16_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_17_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_17_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_17_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_18_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_18_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_18_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_19_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_19_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_19_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_20_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_20_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_20_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_21_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_21_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_21_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_22_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_22_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_22_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_23_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_23_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_23_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_24_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_24_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_24_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_25_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_25_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_25_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_26_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_26_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_26_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_27_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_27_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_27_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_28_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_28_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_28_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_29_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_29_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_29_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_30_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_30_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_30_MAP_S = 0
const INTERRUPT_CORE0_CPU_PRI_31_MAP = 0x0000000F
const INTERRUPT_CORE0_CPU_PRI_31_MAP_V = 0xF
const INTERRUPT_CORE0_CPU_PRI_31_MAP_S = 0
const INTERRUPT_CORE0_CPU_INT_THRESH = 0x0000000F
const INTERRUPT_CORE0_CPU_INT_THRESH_V = 0xF
const INTERRUPT_CORE0_CPU_INT_THRESH_S = 0
const INTERRUPT_CORE0_INTERRUPT_DATE = 0x0FFFFFFF
const INTERRUPT_CORE0_INTERRUPT_DATE_V = 0xFFFFFFF
const INTERRUPT_CORE0_INTERRUPT_DATE_S = 0
const ARG_MAX = 65536
const CHILD_MAX = 40
const LINK_MAX = 32767
const MAX_CANON = 255
const MAX_INPUT = 255
const NAME_MAX = 255
const NGROUPS_MAX = 16
const OPEN_MAX = 64
const PATH_MAX = 1024
const PIPE_BUF = 512
const IOV_MAX = 1024
const BC_BASE_MAX = 99
const BC_DIM_MAX = 2048
const BC_SCALE_MAX = 99
const BC_STRING_MAX = 1000
const COLL_WEIGHTS_MAX = 0
const EXPR_NEST_MAX = 32
const LINE_MAX = 2048
const RE_DUP_MAX = 255
const X_LITTLE_ENDIAN = 1234
const X_BIG_ENDIAN = 4321
const X_PDP_ENDIAN = 3412
const X_QUAD_HIGHWORD = 1
const X_QUAD_LOWWORD = 0
const NBBY = 8
const MSTATUS_UIE = 0x00000001
const MSTATUS_SIE = 0x00000002
const MSTATUS_HIE = 0x00000004
const MSTATUS_MIE = 0x00000008
const MSTATUS_UPIE = 0x00000010
const MSTATUS_SPIE = 0x00000020
const MSTATUS_HPIE = 0x00000040
const MSTATUS_MPIE = 0x00000080
const MSTATUS_SPP = 0x00000100
const MSTATUS_VS = 0x00000600
const MSTATUS_MPP = 0x00001800
const MSTATUS_FS = 0x00006000
const MSTATUS_XS = 0x00018000
const MSTATUS_MPRV = 0x00020000
const MSTATUS_SUM = 0x00040000
const MSTATUS_MXR = 0x00080000
const MSTATUS_TVM = 0x00100000
const MSTATUS_TW = 0x00200000
const MSTATUS_TSR = 0x00400000
const MSTATUS32_SD = 0x80000000
const MSTATUS_UXL = 0x0000000300000000
const MSTATUS_SXL = 0x0000000C00000000
const MSTATUS64_SD = 0x8000000000000000
const MEXSTATUS_SOFT_RST = 0x00000003
const MEXSTATUS_LPMD = 0x0000000C
const MEXSTATUS_WFFEN = 0x00000010
const MEXSTATUS_EXPT_VLD = 0x00000020
const MEXSTATUS_LOCKUP = 0x00000040
const MEXSTATUS_NMISTS = 0x00000080
const MEXSTATUS_BUSEER = 0x00000100
const SSTATUS_UIE = 0x00000001
const SSTATUS_SIE = 0x00000002
const SSTATUS_UPIE = 0x00000010
const SSTATUS_SPIE = 0x00000020
const SSTATUS_SPP = 0x00000100
const SSTATUS_VS = 0x00000600
const SSTATUS_FS = 0x00006000
const SSTATUS_XS = 0x00018000
const SSTATUS_SUM = 0x00040000
const SSTATUS_MXR = 0x00080000
const SSTATUS32_SD = 0x80000000
const SSTATUS_UXL = 0x0000000300000000
const SSTATUS64_SD = 0x8000000000000000
const USTATUS_UIE = 0x00000001
const USTATUS_UPIE = 0x00000010
const DCSR_CAUSE_NONE = 0
const DCSR_CAUSE_SWBP = 1
const DCSR_CAUSE_HWBP = 2
const DCSR_CAUSE_DEBUGINT = 3
const DCSR_CAUSE_STEP = 4
const DCSR_CAUSE_HALT = 5
const DCSR_CAUSE_GROUP = 6
const MCONTROL_TYPE_NONE = 0
const MCONTROL_TYPE_MATCH = 2
const MCONTROL_ACTION_DEBUG_EXCEPTION = 0
const MCONTROL_ACTION_DEBUG_MODE = 1
const MCONTROL_ACTION_TRACE_START = 2
const MCONTROL_ACTION_TRACE_STOP = 3
const MCONTROL_ACTION_TRACE_EMIT = 4
const MCONTROL_MATCH_EQUAL = 0
const MCONTROL_MATCH_NAPOT = 1
const MCONTROL_MATCH_GE = 2
const MCONTROL_MATCH_LT = 3
const MCONTROL_MATCH_MASK_LOW = 4
const MCONTROL_MATCH_MASK_HIGH = 5
const PRV_U = 0
const PRV_S = 1
const PRV_H = 2
const PRV_M = 3
const SATP32_MODE = 0x80000000
const SATP32_ASID = 0x7FC00000
const SATP32_PPN = 0x003FFFFF
const SATP64_MODE = 0xF000000000000000
const SATP64_ASID = 0x0FFFF00000000000
const SATP64_PPN = 0x00000FFFFFFFFFFF
const SATP_MODE_OFF = 0
const SATP_MODE_SV32 = 1
const SATP_MODE_SV39 = 8
const SATP_MODE_SV48 = 9
const SATP_MODE_SV57 = 10
const SATP_MODE_SV64 = 11
const PMP_R = 0x01
const PMP_W = 0x02
const PMP_X = 0x04
const PMP_A = 0x18
const PMP_L = 0x80
const PMP_SHIFT = 2
const PMP_TOR = 0x08
const PMP_NA4 = 0x10
const PMP_NAPOT = 0x18
const IRQ_U_SOFT = 0
const IRQ_S_SOFT = 1
const IRQ_H_SOFT = 2
const IRQ_M_SOFT = 3
const IRQ_U_TIMER = 4
const IRQ_S_TIMER = 5
const IRQ_H_TIMER = 6
const IRQ_M_TIMER = 7
const IRQ_U_EXT = 8
const IRQ_S_EXT = 9
const IRQ_H_EXT = 10
const IRQ_M_EXT = 11
const IRQ_COP = 12
const IRQ_HOST = 13
const DEFAULT_RSTVEC = 0x00001000
const CLINT_BASE = 0x02000000
const CLINT_SIZE = 0x000c0000
const EXT_IO_BASE = 0x40000000
const DRAM_BASE = 0x80000000
const PTE_V = 0x001
const PTE_R = 0x002
const PTE_W = 0x004
const PTE_X = 0x008
const PTE_U = 0x010
const PTE_G = 0x020
const PTE_A = 0x040
const PTE_D = 0x080
const PTE_SOFT = 0x300
const PTE_PPN_SHIFT = 10
const RISCV_PGLEVEL_BITS = 10
const RISCV_PGSHIFT = 12
const CSR_PMACFG0 = 0xBC0
const CSR_PMAADDR0 = 0xBD0
const PMA_SHIFT = 2
const PMA_TOR = 0x40000000
const PMA_NA4 = 0x80000000
const PMA_NAPOT = 0xC0000000
const CSR_PMPCFG0 = 0x3A0
const CSR_PMPADDR0 = 0x3B0
const PMPADDR_ALL = 0xFFFFFFFF
const MEXSTATUS = 0x7E1
const MHINT = 0x7C5
const LDPC0 = 0xBE0
const LDPC1 = 0xBE1
const STPC0 = 0xBF0
const STPC1 = 0xBF1
const STPC2 = 0xBF2
const RVHAL_INTR_ENABLE_THRESH = 1
const MTVEC_MODE_CSR = 1
const RV_EXTERNAL_INT_COUNT = 32
const RV_EXTERNAL_INT_OFFSET = 0
const CSR_PCER_MACHINE = 0x7e0
const CSR_PCMR_MACHINE = 0x7e1
const CSR_PCCR_MACHINE = 0x7e2
const RVHAL_EXCM_LEVEL = 4
const ESP_SYSTEM_INIT_STAGE_CORE = 0
const ESP_SYSTEM_INIT_STAGE_SECONDARY = 1
const MSPI_FUNC_NUM = 0
const MSPI_IOMUX_PIN_NUM_HD = 12
const MSPI_IOMUX_PIN_NUM_WP = 13
const MSPI_IOMUX_PIN_NUM_CS0 = 14
const MSPI_IOMUX_PIN_NUM_CLK = 15
const MSPI_IOMUX_PIN_NUM_MOSI = 16
const MSPI_IOMUX_PIN_NUM_MISO = 17
const SPI2_FUNC_NUM = 2
const SPI2_IOMUX_PIN_NUM_MISO = 2
const SPI2_IOMUX_PIN_NUM_HD = 4
const SPI2_IOMUX_PIN_NUM_WP = 5
const SPI2_IOMUX_PIN_NUM_CLK = 6
const SPI2_IOMUX_PIN_NUM_MOSI = 7
const SPI2_IOMUX_PIN_NUM_CS = 10
const SPI_USR_V = 0x1
const SPI_USR_S = 24
const SPI_UPDATE_V = 0x1
const SPI_UPDATE_S = 23
const SPI_CONF_BITLEN = 0x0003FFFF
const SPI_CONF_BITLEN_V = 0x3FFFF
const SPI_CONF_BITLEN_S = 0
const SPI_USR_ADDR_VALUE = 0xFFFFFFFF
const SPI_USR_ADDR_VALUE_V = 0xFFFFFFFF
const SPI_USR_ADDR_VALUE_S = 0
const SPI_WR_BIT_ORDER_V = 0x1
const SPI_WR_BIT_ORDER_S = 26
const SPI_RD_BIT_ORDER_V = 0x1
const SPI_RD_BIT_ORDER_S = 25
const SPI_WP_POL_V = 0x1
const SPI_WP_POL_S = 21
const SPI_HOLD_POL_V = 0x1
const SPI_HOLD_POL_S = 20
const SPI_D_POL_V = 0x1
const SPI_D_POL_S = 19
const SPI_Q_POL_V = 0x1
const SPI_Q_POL_S = 18
const SPI_FREAD_QUAD_V = 0x1
const SPI_FREAD_QUAD_S = 15
const SPI_FREAD_DUAL_V = 0x1
const SPI_FREAD_DUAL_S = 14
const SPI_FCMD_QUAD_V = 0x1
const SPI_FCMD_QUAD_S = 9
const SPI_FCMD_DUAL_V = 0x1
const SPI_FCMD_DUAL_S = 8
const SPI_FADDR_QUAD_V = 0x1
const SPI_FADDR_QUAD_S = 6
const SPI_FADDR_DUAL_V = 0x1
const SPI_FADDR_DUAL_S = 5
const SPI_DUMMY_OUT_V = 0x1
const SPI_DUMMY_OUT_S = 3
const SPI_CLK_EQU_SYSCLK_V = 0x1
const SPI_CLK_EQU_SYSCLK_S = 31
const SPI_CLKDIV_PRE = 0x0000000F
const SPI_CLKDIV_PRE_V = 0xF
const SPI_CLKDIV_PRE_S = 18
const SPI_CLKCNT_N = 0x0000003F
const SPI_CLKCNT_N_V = 0x3F
const SPI_CLKCNT_N_S = 12
const SPI_CLKCNT_H = 0x0000003F
const SPI_CLKCNT_H_V = 0x3F
const SPI_CLKCNT_H_S = 6
const SPI_CLKCNT_L = 0x0000003F
const SPI_CLKCNT_L_V = 0x3F
const SPI_CLKCNT_L_S = 0
const SPI_USR_COMMAND_V = 0x1
const SPI_USR_COMMAND_S = 31
const SPI_USR_ADDR_V = 0x1
const SPI_USR_ADDR_S = 30
const SPI_USR_DUMMY_V = 0x1
const SPI_USR_DUMMY_S = 29
const SPI_USR_MISO_V = 0x1
const SPI_USR_MISO_S = 28
const SPI_USR_MOSI_V = 0x1
const SPI_USR_MOSI_S = 27
const SPI_USR_DUMMY_IDLE_V = 0x1
const SPI_USR_DUMMY_IDLE_S = 26
const SPI_USR_MOSI_HIGHPART_V = 0x1
const SPI_USR_MOSI_HIGHPART_S = 25
const SPI_USR_MISO_HIGHPART_V = 0x1
const SPI_USR_MISO_HIGHPART_S = 24
const SPI_SIO_V = 0x1
const SPI_SIO_S = 17
const SPI_USR_CONF_NXT_V = 0x1
const SPI_USR_CONF_NXT_S = 15
const SPI_FWRITE_QUAD_V = 0x1
const SPI_FWRITE_QUAD_S = 13
const SPI_FWRITE_DUAL_V = 0x1
const SPI_FWRITE_DUAL_S = 12
const SPI_CK_OUT_EDGE_V = 0x1
const SPI_CK_OUT_EDGE_S = 9
const SPI_RSCK_I_EDGE_V = 0x1
const SPI_RSCK_I_EDGE_S = 8
const SPI_CS_SETUP_V = 0x1
const SPI_CS_SETUP_S = 7
const SPI_CS_HOLD_V = 0x1
const SPI_CS_HOLD_S = 6
const SPI_TSCK_I_EDGE_V = 0x1
const SPI_TSCK_I_EDGE_S = 5
const SPI_QPI_MODE_V = 0x1
const SPI_QPI_MODE_S = 3
const SPI_DOUTDIN_V = 0x1
const SPI_DOUTDIN_S = 0
const SPI_USR_ADDR_BITLEN = 0x0000001F
const SPI_USR_ADDR_BITLEN_V = 0x1F
const SPI_USR_ADDR_BITLEN_S = 27
const SPI_CS_HOLD_TIME = 0x0000001F
const SPI_CS_HOLD_TIME_V = 0x1F
const SPI_CS_HOLD_TIME_S = 22
const SPI_CS_SETUP_TIME = 0x0000001F
const SPI_CS_SETUP_TIME_V = 0x1F
const SPI_CS_SETUP_TIME_S = 17
const SPI_MST_WFULL_ERR_END_EN_V = 0x1
const SPI_MST_WFULL_ERR_END_EN_S = 16
const SPI_USR_DUMMY_CYCLELEN = 0x000000FF
const SPI_USR_DUMMY_CYCLELEN_V = 0xFF
const SPI_USR_DUMMY_CYCLELEN_S = 0
const SPI_USR_COMMAND_BITLEN = 0x0000000F
const SPI_USR_COMMAND_BITLEN_V = 0xF
const SPI_USR_COMMAND_BITLEN_S = 28
const SPI_MST_REMPTY_ERR_END_EN_V = 0x1
const SPI_MST_REMPTY_ERR_END_EN_S = 27
const SPI_USR_COMMAND_VALUE = 0x0000FFFF
const SPI_USR_COMMAND_VALUE_V = 0xFFFF
const SPI_USR_COMMAND_VALUE_S = 0
const SPI_MS_DATA_BITLEN = 0x0003FFFF
const SPI_MS_DATA_BITLEN_V = 0x3FFFF
const SPI_MS_DATA_BITLEN_S = 0
const SPI_QUAD_DIN_PIN_SWAP_V = 0x1
const SPI_QUAD_DIN_PIN_SWAP_S = 31
const SPI_CS_KEEP_ACTIVE_V = 0x1
const SPI_CS_KEEP_ACTIVE_S = 30
const SPI_CK_IDLE_EDGE_V = 0x1
const SPI_CK_IDLE_EDGE_S = 29
const SPI_SLAVE_CS_POL_V = 0x1
const SPI_SLAVE_CS_POL_S = 23
const SPI_MASTER_CS_POL = 0x0000003F
const SPI_MASTER_CS_POL_V = 0x3F
const SPI_MASTER_CS_POL_S = 7
const SPI_CK_DIS_V = 0x1
const SPI_CK_DIS_S = 6
const SPI_CS5_DIS_V = 0x1
const SPI_CS5_DIS_S = 5
const SPI_CS4_DIS_V = 0x1
const SPI_CS4_DIS_S = 4
const SPI_CS3_DIS_V = 0x1
const SPI_CS3_DIS_S = 3
const SPI_CS2_DIS_V = 0x1
const SPI_CS2_DIS_S = 2
const SPI_CS1_DIS_V = 0x1
const SPI_CS1_DIS_S = 1
const SPI_CS0_DIS_V = 0x1
const SPI_CS0_DIS_S = 0
const SPI_TIMING_HCLK_ACTIVE_V = 0x1
const SPI_TIMING_HCLK_ACTIVE_S = 16
const SPI_DIN3_MODE = 0x00000003
const SPI_DIN3_MODE_V = 0x3
const SPI_DIN3_MODE_S = 6
const SPI_DIN2_MODE = 0x00000003
const SPI_DIN2_MODE_V = 0x3
const SPI_DIN2_MODE_S = 4
const SPI_DIN1_MODE = 0x00000003
const SPI_DIN1_MODE_V = 0x3
const SPI_DIN1_MODE_S = 2
const SPI_DIN0_MODE = 0x00000003
const SPI_DIN0_MODE_V = 0x3
const SPI_DIN0_MODE_S = 0
const SPI_DIN3_NUM = 0x00000003
const SPI_DIN3_NUM_V = 0x3
const SPI_DIN3_NUM_S = 6
const SPI_DIN2_NUM = 0x00000003
const SPI_DIN2_NUM_V = 0x3
const SPI_DIN2_NUM_S = 4
const SPI_DIN1_NUM = 0x00000003
const SPI_DIN1_NUM_V = 0x3
const SPI_DIN1_NUM_S = 2
const SPI_DIN0_NUM = 0x00000003
const SPI_DIN0_NUM_V = 0x3
const SPI_DIN0_NUM_S = 0
const SPI_DOUT3_MODE_V = 0x1
const SPI_DOUT3_MODE_S = 3
const SPI_DOUT2_MODE_V = 0x1
const SPI_DOUT2_MODE_S = 2
const SPI_DOUT1_MODE_V = 0x1
const SPI_DOUT1_MODE_S = 1
const SPI_DOUT0_MODE_V = 0x1
const SPI_DOUT0_MODE_S = 0
const SPI_DMA_AFIFO_RST_V = 0x1
const SPI_DMA_AFIFO_RST_S = 31
const SPI_BUF_AFIFO_RST_V = 0x1
const SPI_BUF_AFIFO_RST_S = 30
const SPI_RX_AFIFO_RST_V = 0x1
const SPI_RX_AFIFO_RST_S = 29
const SPI_DMA_TX_ENA_V = 0x1
const SPI_DMA_TX_ENA_S = 28
const SPI_DMA_RX_ENA_V = 0x1
const SPI_DMA_RX_ENA_S = 27
const SPI_RX_EOF_EN_V = 0x1
const SPI_RX_EOF_EN_S = 21
const SPI_SLV_TX_SEG_TRANS_CLR_EN_V = 0x1
const SPI_SLV_TX_SEG_TRANS_CLR_EN_S = 20
const SPI_SLV_RX_SEG_TRANS_CLR_EN_V = 0x1
const SPI_SLV_RX_SEG_TRANS_CLR_EN_S = 19
const SPI_DMA_SLV_SEG_TRANS_EN_V = 0x1
const SPI_DMA_SLV_SEG_TRANS_EN_S = 18
const SPI_APP1_INT_ENA_V = 0x1
const SPI_APP1_INT_ENA_S = 20
const SPI_APP2_INT_ENA_V = 0x1
const SPI_APP2_INT_ENA_S = 19
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ENA_V = 0x1
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ENA_S = 18
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_ENA_V = 0x1
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_ENA_S = 17
const SPI_SLV_CMD_ERR_INT_ENA_V = 0x1
const SPI_SLV_CMD_ERR_INT_ENA_S = 16
const SPI_SLV_BUF_ADDR_ERR_INT_ENA_V = 0x1
const SPI_SLV_BUF_ADDR_ERR_INT_ENA_S = 15
const SPI_SEG_MAGIC_ERR_INT_ENA_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_ENA_S = 14
const SPI_DMA_SEG_TRANS_DONE_INT_ENA_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_INT_ENA_S = 13
const SPI_TRANS_DONE_INT_ENA_V = 0x1
const SPI_TRANS_DONE_INT_ENA_S = 12
const SPI_SLV_WR_BUF_DONE_INT_ENA_V = 0x1
const SPI_SLV_WR_BUF_DONE_INT_ENA_S = 11
const SPI_SLV_RD_BUF_DONE_INT_ENA_V = 0x1
const SPI_SLV_RD_BUF_DONE_INT_ENA_S = 10
const SPI_SLV_WR_DMA_DONE_INT_ENA_V = 0x1
const SPI_SLV_WR_DMA_DONE_INT_ENA_S = 9
const SPI_SLV_RD_DMA_DONE_INT_ENA_V = 0x1
const SPI_SLV_RD_DMA_DONE_INT_ENA_S = 8
const SPI_SLV_CMDA_INT_ENA_V = 0x1
const SPI_SLV_CMDA_INT_ENA_S = 7
const SPI_SLV_CMD9_INT_ENA_V = 0x1
const SPI_SLV_CMD9_INT_ENA_S = 6
const SPI_SLV_CMD8_INT_ENA_V = 0x1
const SPI_SLV_CMD8_INT_ENA_S = 5
const SPI_SLV_CMD7_INT_ENA_V = 0x1
const SPI_SLV_CMD7_INT_ENA_S = 4
const SPI_SLV_EN_QPI_INT_ENA_V = 0x1
const SPI_SLV_EN_QPI_INT_ENA_S = 3
const SPI_SLV_EX_QPI_INT_ENA_V = 0x1
const SPI_SLV_EX_QPI_INT_ENA_S = 2
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ENA_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ENA_S = 1
const SPI_DMA_INFIFO_FULL_ERR_INT_ENA_V = 0x1
const SPI_DMA_INFIFO_FULL_ERR_INT_ENA_S = 0
const SPI_APP1_INT_CLR_V = 0x1
const SPI_APP1_INT_CLR_S = 20
const SPI_APP2_INT_CLR_V = 0x1
const SPI_APP2_INT_CLR_S = 19
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_CLR_V = 0x1
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_CLR_S = 18
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_CLR_V = 0x1
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_CLR_S = 17
const SPI_SLV_CMD_ERR_INT_CLR_V = 0x1
const SPI_SLV_CMD_ERR_INT_CLR_S = 16
const SPI_SLV_BUF_ADDR_ERR_INT_CLR_V = 0x1
const SPI_SLV_BUF_ADDR_ERR_INT_CLR_S = 15
const SPI_SEG_MAGIC_ERR_INT_CLR_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_CLR_S = 14
const SPI_DMA_SEG_TRANS_DONE_INT_CLR_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_INT_CLR_S = 13
const SPI_TRANS_DONE_INT_CLR_V = 0x1
const SPI_TRANS_DONE_INT_CLR_S = 12
const SPI_SLV_WR_BUF_DONE_INT_CLR_V = 0x1
const SPI_SLV_WR_BUF_DONE_INT_CLR_S = 11
const SPI_SLV_RD_BUF_DONE_INT_CLR_V = 0x1
const SPI_SLV_RD_BUF_DONE_INT_CLR_S = 10
const SPI_SLV_WR_DMA_DONE_INT_CLR_V = 0x1
const SPI_SLV_WR_DMA_DONE_INT_CLR_S = 9
const SPI_SLV_RD_DMA_DONE_INT_CLR_V = 0x1
const SPI_SLV_RD_DMA_DONE_INT_CLR_S = 8
const SPI_SLV_CMDA_INT_CLR_V = 0x1
const SPI_SLV_CMDA_INT_CLR_S = 7
const SPI_SLV_CMD9_INT_CLR_V = 0x1
const SPI_SLV_CMD9_INT_CLR_S = 6
const SPI_SLV_CMD8_INT_CLR_V = 0x1
const SPI_SLV_CMD8_INT_CLR_S = 5
const SPI_SLV_CMD7_INT_CLR_V = 0x1
const SPI_SLV_CMD7_INT_CLR_S = 4
const SPI_SLV_EN_QPI_INT_CLR_V = 0x1
const SPI_SLV_EN_QPI_INT_CLR_S = 3
const SPI_SLV_EX_QPI_INT_CLR_V = 0x1
const SPI_SLV_EX_QPI_INT_CLR_S = 2
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_CLR_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_CLR_S = 1
const SPI_DMA_INFIFO_FULL_ERR_INT_CLR_V = 0x1
const SPI_DMA_INFIFO_FULL_ERR_INT_CLR_S = 0
const SPI_APP1_INT_RAW_V = 0x1
const SPI_APP1_INT_RAW_S = 20
const SPI_APP2_INT_RAW_V = 0x1
const SPI_APP2_INT_RAW_S = 19
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_RAW_V = 0x1
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_RAW_S = 18
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_RAW_V = 0x1
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_RAW_S = 17
const SPI_SLV_CMD_ERR_INT_RAW_V = 0x1
const SPI_SLV_CMD_ERR_INT_RAW_S = 16
const SPI_SLV_BUF_ADDR_ERR_INT_RAW_V = 0x1
const SPI_SLV_BUF_ADDR_ERR_INT_RAW_S = 15
const SPI_SEG_MAGIC_ERR_INT_RAW_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_RAW_S = 14
const SPI_DMA_SEG_TRANS_DONE_INT_RAW_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_INT_RAW_S = 13
const SPI_TRANS_DONE_INT_RAW_V = 0x1
const SPI_TRANS_DONE_INT_RAW_S = 12
const SPI_SLV_WR_BUF_DONE_INT_RAW_V = 0x1
const SPI_SLV_WR_BUF_DONE_INT_RAW_S = 11
const SPI_SLV_RD_BUF_DONE_INT_RAW_V = 0x1
const SPI_SLV_RD_BUF_DONE_INT_RAW_S = 10
const SPI_SLV_WR_DMA_DONE_INT_RAW_V = 0x1
const SPI_SLV_WR_DMA_DONE_INT_RAW_S = 9
const SPI_SLV_RD_DMA_DONE_INT_RAW_V = 0x1
const SPI_SLV_RD_DMA_DONE_INT_RAW_S = 8
const SPI_SLV_CMDA_INT_RAW_V = 0x1
const SPI_SLV_CMDA_INT_RAW_S = 7
const SPI_SLV_CMD9_INT_RAW_V = 0x1
const SPI_SLV_CMD9_INT_RAW_S = 6
const SPI_SLV_CMD8_INT_RAW_V = 0x1
const SPI_SLV_CMD8_INT_RAW_S = 5
const SPI_SLV_CMD7_INT_RAW_V = 0x1
const SPI_SLV_CMD7_INT_RAW_S = 4
const SPI_SLV_EN_QPI_INT_RAW_V = 0x1
const SPI_SLV_EN_QPI_INT_RAW_S = 3
const SPI_SLV_EX_QPI_INT_RAW_V = 0x1
const SPI_SLV_EX_QPI_INT_RAW_S = 2
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_RAW_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_RAW_S = 1
const SPI_DMA_INFIFO_FULL_ERR_INT_RAW_V = 0x1
const SPI_DMA_INFIFO_FULL_ERR_INT_RAW_S = 0
const SPI_APP1_INT_ST_V = 0x1
const SPI_APP1_INT_ST_S = 20
const SPI_APP2_INT_ST_V = 0x1
const SPI_APP2_INT_ST_S = 19
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ST_V = 0x1
const SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ST_S = 18
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_ST_V = 0x1
const SPI_MST_RX_AFIFO_WFULL_ERR_INT_ST_S = 17
const SPI_SLV_CMD_ERR_INT_ST_V = 0x1
const SPI_SLV_CMD_ERR_INT_ST_S = 16
const SPI_SLV_BUF_ADDR_ERR_INT_ST_V = 0x1
const SPI_SLV_BUF_ADDR_ERR_INT_ST_S = 15
const SPI_SEG_MAGIC_ERR_INT_ST_V = 0x1
const SPI_SEG_MAGIC_ERR_INT_ST_S = 14
const SPI_DMA_SEG_TRANS_DONE_INT_ST_V = 0x1
const SPI_DMA_SEG_TRANS_DONE_INT_ST_S = 13
const SPI_TRANS_DONE_INT_ST_V = 0x1
const SPI_TRANS_DONE_INT_ST_S = 12
const SPI_SLV_WR_BUF_DONE_INT_ST_V = 0x1
const SPI_SLV_WR_BUF_DONE_INT_ST_S = 11
const SPI_SLV_RD_BUF_DONE_INT_ST_V = 0x1
const SPI_SLV_RD_BUF_DONE_INT_ST_S = 10
const SPI_SLV_WR_DMA_DONE_INT_ST_V = 0x1
const SPI_SLV_WR_DMA_DONE_INT_ST_S = 9
const SPI_SLV_RD_DMA_DONE_INT_ST_V = 0x1
const SPI_SLV_RD_DMA_DONE_INT_ST_S = 8
const SPI_SLV_CMDA_INT_ST_V = 0x1
const SPI_SLV_CMDA_INT_ST_S = 7
const SPI_SLV_CMD9_INT_ST_V = 0x1
const SPI_SLV_CMD9_INT_ST_S = 6
const SPI_SLV_CMD8_INT_ST_V = 0x1
const SPI_SLV_CMD8_INT_ST_S = 5
const SPI_SLV_CMD7_INT_ST_V = 0x1
const SPI_SLV_CMD7_INT_ST_S = 4
const SPI_SLV_EN_QPI_INT_ST_V = 0x1
const SPI_SLV_EN_QPI_INT_ST_S = 3
const SPI_SLV_EX_QPI_INT_ST_V = 0x1
const SPI_SLV_EX_QPI_INT_ST_S = 2
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ST_V = 0x1
const SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ST_S = 1
const SPI_DMA_INFIFO_FULL_ERR_INT_ST_V = 0x1
const SPI_DMA_INFIFO_FULL_ERR_INT_ST_S = 0
const SPI_BUF0 = 0xFFFFFFFF
const SPI_BUF0_V = 0xFFFFFFFF
const SPI_BUF0_S = 0
const SPI_BUF1 = 0xFFFFFFFF
const SPI_BUF1_V = 0xFFFFFFFF
const SPI_BUF1_S = 0
const SPI_BUF2 = 0xFFFFFFFF
const SPI_BUF2_V = 0xFFFFFFFF
const SPI_BUF2_S = 0
const SPI_BUF3 = 0xFFFFFFFF
const SPI_BUF3_V = 0xFFFFFFFF
const SPI_BUF3_S = 0
const SPI_BUF4 = 0xFFFFFFFF
const SPI_BUF4_V = 0xFFFFFFFF
const SPI_BUF4_S = 0
const SPI_BUF5 = 0xFFFFFFFF
const SPI_BUF5_V = 0xFFFFFFFF
const SPI_BUF5_S = 0
const SPI_BUF6 = 0xFFFFFFFF
const SPI_BUF6_V = 0xFFFFFFFF
const SPI_BUF6_S = 0
const SPI_BUF7 = 0xFFFFFFFF
const SPI_BUF7_V = 0xFFFFFFFF
const SPI_BUF7_S = 0
const SPI_BUF8 = 0xFFFFFFFF
const SPI_BUF8_V = 0xFFFFFFFF
const SPI_BUF8_S = 0
const SPI_BUF9 = 0xFFFFFFFF
const SPI_BUF9_V = 0xFFFFFFFF
const SPI_BUF9_S = 0
const SPI_BUF10 = 0xFFFFFFFF
const SPI_BUF10_V = 0xFFFFFFFF
const SPI_BUF10_S = 0
const SPI_BUF11 = 0xFFFFFFFF
const SPI_BUF11_V = 0xFFFFFFFF
const SPI_BUF11_S = 0
const SPI_BUF12 = 0xFFFFFFFF
const SPI_BUF12_V = 0xFFFFFFFF
const SPI_BUF12_S = 0
const SPI_BUF13 = 0xFFFFFFFF
const SPI_BUF13_V = 0xFFFFFFFF
const SPI_BUF13_S = 0
const SPI_BUF14 = 0xFFFFFFFF
const SPI_BUF14_V = 0xFFFFFFFF
const SPI_BUF14_S = 0
const SPI_BUF15 = 0xFFFFFFFF
const SPI_BUF15_V = 0xFFFFFFFF
const SPI_BUF15_S = 0
const SPI_USR_CONF_V = 0x1
const SPI_USR_CONF_S = 28
const SPI_SOFT_RESET_V = 0x1
const SPI_SOFT_RESET_S = 27
const SPI_SLAVE_MODE_V = 0x1
const SPI_SLAVE_MODE_S = 26
const SPI_DMA_SEG_MAGIC_VALUE = 0x0000000F
const SPI_DMA_SEG_MAGIC_VALUE_V = 0xF
const SPI_DMA_SEG_MAGIC_VALUE_S = 22
const SPI_SLV_WRBUF_BITLEN_EN_V = 0x1
const SPI_SLV_WRBUF_BITLEN_EN_S = 11
const SPI_SLV_RDBUF_BITLEN_EN_V = 0x1
const SPI_SLV_RDBUF_BITLEN_EN_S = 10
const SPI_SLV_WRDMA_BITLEN_EN_V = 0x1
const SPI_SLV_WRDMA_BITLEN_EN_S = 9
const SPI_SLV_RDDMA_BITLEN_EN_V = 0x1
const SPI_SLV_RDDMA_BITLEN_EN_S = 8
const SPI_RSCK_DATA_OUT_V = 0x1
const SPI_RSCK_DATA_OUT_S = 3
const SPI_CLK_MODE_13_V = 0x1
const SPI_CLK_MODE_13_S = 2
const SPI_CLK_MODE = 0x00000003
const SPI_CLK_MODE_V = 0x3
const SPI_CLK_MODE_S = 0
const SPI_SLV_LAST_ADDR = 0x0000003F
const SPI_SLV_LAST_ADDR_V = 0x3F
const SPI_SLV_LAST_ADDR_S = 26
const SPI_SLV_LAST_COMMAND = 0x000000FF
const SPI_SLV_LAST_COMMAND_V = 0xFF
const SPI_SLV_LAST_COMMAND_S = 18
const SPI_SLV_DATA_BITLEN = 0x0003FFFF
const SPI_SLV_DATA_BITLEN_V = 0x3FFFF
const SPI_SLV_DATA_BITLEN_S = 0
const SPI_MST_CLK_SEL_V = 0x1
const SPI_MST_CLK_SEL_S = 2
const SPI_MST_CLK_ACTIVE_V = 0x1
const SPI_MST_CLK_ACTIVE_S = 1
const SPI_CLK_EN_V = 0x1
const SPI_CLK_EN_S = 0
const SPI_DATE = 0x0FFFFFFF
const SPI_DATE_V = 0xFFFFFFF
const SPI_DATE_S = 0
const SPIQ_IN_IDX = 0
const SPIQ_OUT_IDX = 0
const SPID_IN_IDX = 1
const SPID_OUT_IDX = 1
const SPIHD_IN_IDX = 2
const SPIHD_OUT_IDX = 2
const SPIWP_IN_IDX = 3
const SPIWP_OUT_IDX = 3
const SPICLK_OUT_IDX = 4
const SPICS0_OUT_IDX = 5
const U0RXD_IN_IDX = 6
const U0TXD_OUT_IDX = 6
const U0CTS_IN_IDX = 7
const U0RTS_OUT_IDX = 7
const U0DSR_IN_IDX = 8
const U0DTR_OUT_IDX = 8
const U1RXD_IN_IDX = 9
const U1TXD_OUT_IDX = 9
const U1CTS_IN_IDX = 10
const U1RTS_OUT_IDX = 10
const U1DSR_IN_IDX = 11
const U1DTR_OUT_IDX = 11
const I2S_MCLK_IN_IDX = 12
const I2S_MCLK_OUT_IDX = 12
const I2SO_BCK_IN_IDX = 13
const I2SO_BCK_OUT_IDX = 13
const I2SO_WS_IN_IDX = 14
const I2SO_WS_OUT_IDX = 14
const I2SI_SD_IN_IDX = 15
const I2SO_SD_OUT_IDX = 15
const I2SI_BCK_IN_IDX = 16
const I2SI_BCK_OUT_IDX = 16
const I2SI_WS_IN_IDX = 17
const I2SI_WS_OUT_IDX = 17
const GPIO_BT_PRIORITY_IDX = 18
const GPIO_WLAN_PRIO_IDX = 18
const GPIO_BT_ACTIVE_IDX = 19
const GPIO_WLAN_ACTIVE_IDX = 19
const CPU_GPIO_IN0_IDX = 28
const CPU_GPIO_OUT0_IDX = 28
const CPU_GPIO_IN1_IDX = 29
const CPU_GPIO_OUT1_IDX = 29
const CPU_GPIO_IN2_IDX = 30
const CPU_GPIO_OUT2_IDX = 30
const CPU_GPIO_IN3_IDX = 31
const CPU_GPIO_OUT3_IDX = 31
const CPU_GPIO_IN4_IDX = 32
const CPU_GPIO_OUT4_IDX = 32
const CPU_GPIO_IN5_IDX = 33
const CPU_GPIO_OUT5_IDX = 33
const CPU_GPIO_IN6_IDX = 34
const CPU_GPIO_OUT6_IDX = 34
const CPU_GPIO_IN7_IDX = 35
const CPU_GPIO_OUT7_IDX = 35
const USB_JTAG_TCK_OUT_IDX = 36
const USB_JTAG_TMS_OUT_IDX = 37
const USB_JTAG_TDI_OUT_IDX = 38
const USB_JTAG_TDO_OUT_IDX = 39
const USB_EXTPHY_VP_IDX = 40
const USB_EXTPHY_OEN_IDX = 40
const USB_EXTPHY_VM_IDX = 41
const USB_EXTPHY_SPEED_IDX = 41
const USB_EXTPHY_RCV_IDX = 42
const USB_EXTPHY_VPO_IDX = 42
const USB_EXTPHY_VMO_IDX = 43
const USB_EXTPHY_SUSPND_IDX = 44
const EXT_ADC_START_IDX = 45
const LEDC_LS_SIG_OUT0_IDX = 45
const LEDC_LS_SIG_OUT1_IDX = 46
const LEDC_LS_SIG_OUT2_IDX = 47
const LEDC_LS_SIG_OUT3_IDX = 48
const LEDC_LS_SIG_OUT4_IDX = 49
const LEDC_LS_SIG_OUT5_IDX = 50
const RMT_SIG_IN0_IDX = 51
const RMT_SIG_OUT0_IDX = 51
const RMT_SIG_IN1_IDX = 52
const RMT_SIG_OUT1_IDX = 52
const I2CEXT0_SCL_IN_IDX = 53
const I2CEXT0_SCL_OUT_IDX = 53
const I2CEXT0_SDA_IN_IDX = 54
const I2CEXT0_SDA_OUT_IDX = 54
const GPIO_SD0_OUT_IDX = 55
const GPIO_SD1_OUT_IDX = 56
const GPIO_SD2_OUT_IDX = 57
const GPIO_SD3_OUT_IDX = 58
const I2SO_SD1_OUT_IDX = 59
const FSPICLK_IN_IDX = 63
const FSPICLK_OUT_IDX = 63
const FSPIQ_IN_IDX = 64
const FSPIQ_OUT_IDX = 64
const FSPID_IN_IDX = 65
const FSPID_OUT_IDX = 65
const FSPIHD_IN_IDX = 66
const FSPIHD_OUT_IDX = 66
const FSPIWP_IN_IDX = 67
const FSPIWP_OUT_IDX = 67
const FSPICS0_IN_IDX = 68
const FSPICS0_OUT_IDX = 68
const FSPICS1_OUT_IDX = 69
const FSPICS2_OUT_IDX = 70
const FSPICS3_OUT_IDX = 71
const FSPICS4_OUT_IDX = 72
const FSPICS5_OUT_IDX = 73
const TWAI_RX_IDX = 74
const TWAI_TX_IDX = 74
const TWAI_BUS_OFF_ON_IDX = 75
const TWAI_CLKOUT_IDX = 76
const PCMFSYNC_IN_IDX = 77
const BT_AUDIO0_IRQ_IDX = 77
const PCMCLK_IN_IDX = 78
const BT_AUDIO1_IRQ_IDX = 78
const PCMDIN_IDX = 79
const BT_AUDIO2_IRQ_IDX = 79
const RW_WAKEUP_REQ_IDX = 80
const BLE_AUDIO0_IRQ_IDX = 80
const BLE_AUDIO1_IRQ_IDX = 81
const BLE_AUDIO2_IRQ_IDX = 82
const PCMFSYNC_OUT_IDX = 83
const PCMCLK_OUT_IDX = 84
const PCMDOUT_IDX = 85
const BLE_AUDIO_SYNC0_P_IDX = 86
const BLE_AUDIO_SYNC1_P_IDX = 87
const BLE_AUDIO_SYNC2_P_IDX = 88
const ANT_SEL0_IDX = 89
const ANT_SEL1_IDX = 90
const ANT_SEL2_IDX = 91
const ANT_SEL3_IDX = 92
const ANT_SEL4_IDX = 93
const ANT_SEL5_IDX = 94
const ANT_SEL6_IDX = 95
const ANT_SEL7_IDX = 96
const SIG_IN_FUNC_97_IDX = 97
const SIG_IN_FUNC97_IDX = 97
const SIG_IN_FUNC_98_IDX = 98
const SIG_IN_FUNC98_IDX = 98
const SIG_IN_FUNC_99_IDX = 99
const SIG_IN_FUNC99_IDX = 99
const SIG_IN_FUNC_100_IDX = 100
const SIG_IN_FUNC100_IDX = 100
const SYNCERR_IDX = 101
const SYNCFOUND_FLAG_IDX = 102
const EVT_CNTL_IMMEDIATE_ABORT_IDX = 103
const LINKLBL_IDX = 104
const DATA_EN_IDX = 105
const DATA_IDX = 106
const PKT_TX_ON_IDX = 107
const PKT_RX_ON_IDX = 108
const RW_TX_ON_IDX = 109
const RW_RX_ON_IDX = 110
const EVT_REQ_P_IDX = 111
const EVT_STOP_P_IDX = 112
const BT_MODE_ON_IDX = 113
const GPIO_LC_DIAG0_IDX = 114
const GPIO_LC_DIAG1_IDX = 115
const GPIO_LC_DIAG2_IDX = 116
const CH_IDX_IDX = 117
const RX_WINDOW_IDX = 118
const UPDATE_RX_IDX = 119
const RX_STATUS_IDX = 120
const CLK_GPIO_IDX = 121
const NBT_BLE_IDX = 122
const CLK_OUT_OUT1_IDX = 123
const CLK_OUT_OUT2_IDX = 124
const CLK_OUT_OUT3_IDX = 125
const SPICS1_OUT_IDX = 126
const USB_JTAG_TRST_OUT_IDX = 127
const SIG_GPIO_OUT_IDX = 128
const GPIO_MAP_DATE_IDX = 0x2006130
const SPI_MEM_FLASH_READ_V = 0x1
const SPI_MEM_FLASH_READ_S = 31
const SPI_MEM_FLASH_WREN_V = 0x1
const SPI_MEM_FLASH_WREN_S = 30
const SPI_MEM_FLASH_WRDI_V = 0x1
const SPI_MEM_FLASH_WRDI_S = 29
const SPI_MEM_FLASH_RDID_V = 0x1
const SPI_MEM_FLASH_RDID_S = 28
const SPI_MEM_FLASH_RDSR_V = 0x1
const SPI_MEM_FLASH_RDSR_S = 27
const SPI_MEM_FLASH_WRSR_V = 0x1
const SPI_MEM_FLASH_WRSR_S = 26
const SPI_MEM_FLASH_PP_V = 0x1
const SPI_MEM_FLASH_PP_S = 25
const SPI_MEM_FLASH_SE_V = 0x1
const SPI_MEM_FLASH_SE_S = 24
const SPI_MEM_FLASH_BE_V = 0x1
const SPI_MEM_FLASH_BE_S = 23
const SPI_MEM_FLASH_CE_V = 0x1
const SPI_MEM_FLASH_CE_S = 22
const SPI_MEM_FLASH_DP_V = 0x1
const SPI_MEM_FLASH_DP_S = 21
const SPI_MEM_FLASH_RES_V = 0x1
const SPI_MEM_FLASH_RES_S = 20
const SPI_MEM_FLASH_HPM_V = 0x1
const SPI_MEM_FLASH_HPM_S = 19
const SPI_MEM_USR_V = 0x1
const SPI_MEM_USR_S = 18
const SPI_MEM_FLASH_PE_V = 0x1
const SPI_MEM_FLASH_PE_S = 17
const SPI_MEM_SLV_ST = 0x0000000F
const SPI_MEM_SLV_ST_V = 0xF
const SPI_MEM_SLV_ST_S = 4
const SPI_MEM_MST_ST = 0x0000000F
const SPI_MEM_MST_ST_V = 0xF
const SPI_MEM_MST_ST_S = 0
const SPI_MEM_USR_ADDR_VALUE = 0xFFFFFFFF
const SPI_MEM_USR_ADDR_VALUE_V = 0xFFFFFFFF
const SPI_MEM_USR_ADDR_VALUE_S = 0
const SPI_MEM_FREAD_QIO_V = 0x1
const SPI_MEM_FREAD_QIO_S = 24
const SPI_MEM_FREAD_DIO_V = 0x1
const SPI_MEM_FREAD_DIO_S = 23
const SPI_MEM_WRSR_2B_V = 0x1
const SPI_MEM_WRSR_2B_S = 22
const SPI_MEM_WP_REG_V = 0x1
const SPI_MEM_WP_REG_S = 21
const SPI_MEM_FREAD_QUAD_V = 0x1
const SPI_MEM_FREAD_QUAD_S = 20
const SPI_MEM_D_POL_V = 0x1
const SPI_MEM_D_POL_S = 19
const SPI_MEM_Q_POL_V = 0x1
const SPI_MEM_Q_POL_S = 18
const SPI_MEM_RESANDRES_V = 0x1
const SPI_MEM_RESANDRES_S = 15
const SPI_MEM_FREAD_DUAL_V = 0x1
const SPI_MEM_FREAD_DUAL_S = 14
const SPI_MEM_FASTRD_MODE_V = 0x1
const SPI_MEM_FASTRD_MODE_S = 13
const SPI_MEM_TX_CRC_EN_V = 0x1
const SPI_MEM_TX_CRC_EN_S = 11
const SPI_MEM_FCS_CRC_EN_V = 0x1
const SPI_MEM_FCS_CRC_EN_S = 10
const SPI_MEM_FCMD_QUAD_V = 0x1
const SPI_MEM_FCMD_QUAD_S = 8
const SPI_MEM_FCMD_DUAL_V = 0x1
const SPI_MEM_FCMD_DUAL_S = 7
const SPI_MEM_FDUMMY_OUT_V = 0x1
const SPI_MEM_FDUMMY_OUT_S = 3
const SPI_MEM_RXFIFO_WFULL_ERR_V = 0x1
const SPI_MEM_RXFIFO_WFULL_ERR_S = 31
const SPI_MEM_RXFIFO_RST_V = 0x1
const SPI_MEM_RXFIFO_RST_S = 30
const SPI_MEM_CS_HOLD_DLY_RES = 0x000003FF
const SPI_MEM_CS_HOLD_DLY_RES_V = 0x3FF
const SPI_MEM_CS_HOLD_DLY_RES_S = 2
const SPI_MEM_CLK_MODE = 0x00000003
const SPI_MEM_CLK_MODE_V = 0x3
const SPI_MEM_CLK_MODE_S = 0
const SPI_MEM_SYNC_RESET_V = 0x1
const SPI_MEM_SYNC_RESET_S = 31
const SPI_MEM_CS_HOLD_DELAY = 0x0000003F
const SPI_MEM_CS_HOLD_DELAY_V = 0x3F
const SPI_MEM_CS_HOLD_DELAY_S = 25
const SPI_MEM_CS_HOLD_TIME = 0x0000001F
const SPI_MEM_CS_HOLD_TIME_V = 0x1F
const SPI_MEM_CS_HOLD_TIME_S = 5
const SPI_MEM_CS_SETUP_TIME = 0x0000001F
const SPI_MEM_CS_SETUP_TIME_V = 0x1F
const SPI_MEM_CS_SETUP_TIME_S = 0
const SPI_MEM_CLK_EQU_SYSCLK_V = 0x1
const SPI_MEM_CLK_EQU_SYSCLK_S = 31
const SPI_MEM_CLKCNT_N = 0x000000FF
const SPI_MEM_CLKCNT_N_V = 0xFF
const SPI_MEM_CLKCNT_N_S = 16
const SPI_MEM_CLKCNT_H = 0x000000FF
const SPI_MEM_CLKCNT_H_V = 0xFF
const SPI_MEM_CLKCNT_H_S = 8
const SPI_MEM_CLKCNT_L = 0x000000FF
const SPI_MEM_CLKCNT_L_V = 0xFF
const SPI_MEM_CLKCNT_L_S = 0
const SPI_MEM_USR_COMMAND_V = 0x1
const SPI_MEM_USR_COMMAND_S = 31
const SPI_MEM_USR_ADDR_V = 0x1
const SPI_MEM_USR_ADDR_S = 30
const SPI_MEM_USR_DUMMY_V = 0x1
const SPI_MEM_USR_DUMMY_S = 29
const SPI_MEM_USR_MISO_V = 0x1
const SPI_MEM_USR_MISO_S = 28
const SPI_MEM_USR_MOSI_V = 0x1
const SPI_MEM_USR_MOSI_S = 27
const SPI_MEM_USR_DUMMY_IDLE_V = 0x1
const SPI_MEM_USR_DUMMY_IDLE_S = 26
const SPI_MEM_USR_MOSI_HIGHPART_V = 0x1
const SPI_MEM_USR_MOSI_HIGHPART_S = 25
const SPI_MEM_USR_MISO_HIGHPART_V = 0x1
const SPI_MEM_USR_MISO_HIGHPART_S = 24
const SPI_MEM_FWRITE_QIO_V = 0x1
const SPI_MEM_FWRITE_QIO_S = 15
const SPI_MEM_FWRITE_DIO_V = 0x1
const SPI_MEM_FWRITE_DIO_S = 14
const SPI_MEM_FWRITE_QUAD_V = 0x1
const SPI_MEM_FWRITE_QUAD_S = 13
const SPI_MEM_FWRITE_DUAL_V = 0x1
const SPI_MEM_FWRITE_DUAL_S = 12
const SPI_MEM_CK_OUT_EDGE_V = 0x1
const SPI_MEM_CK_OUT_EDGE_S = 9
const SPI_MEM_CS_SETUP_V = 0x1
const SPI_MEM_CS_SETUP_S = 7
const SPI_MEM_CS_HOLD_V = 0x1
const SPI_MEM_CS_HOLD_S = 6
const SPI_MEM_USR_ADDR_BITLEN = 0x0000003F
const SPI_MEM_USR_ADDR_BITLEN_V = 0x3F
const SPI_MEM_USR_ADDR_BITLEN_S = 26
const SPI_MEM_USR_DUMMY_CYCLELEN = 0x0000003F
const SPI_MEM_USR_DUMMY_CYCLELEN_V = 0x3F
const SPI_MEM_USR_DUMMY_CYCLELEN_S = 0
const SPI_MEM_USR_COMMAND_BITLEN = 0x0000000F
const SPI_MEM_USR_COMMAND_BITLEN_V = 0xF
const SPI_MEM_USR_COMMAND_BITLEN_S = 28
const SPI_MEM_USR_COMMAND_VALUE = 0x0000FFFF
const SPI_MEM_USR_COMMAND_VALUE_V = 0xFFFF
const SPI_MEM_USR_COMMAND_VALUE_S = 0
const SPI_MEM_USR_MOSI_DBITLEN = 0x000003FF
const SPI_MEM_USR_MOSI_DBITLEN_V = 0x3FF
const SPI_MEM_USR_MOSI_DBITLEN_S = 0
const SPI_MEM_USR_MISO_DBITLEN = 0x000003FF
const SPI_MEM_USR_MISO_DBITLEN_V = 0x3FF
const SPI_MEM_USR_MISO_DBITLEN_S = 0
const SPI_MEM_WB_MODE = 0x000000FF
const SPI_MEM_WB_MODE_V = 0xFF
const SPI_MEM_WB_MODE_S = 16
const SPI_MEM_STATUS = 0x0000FFFF
const SPI_MEM_STATUS_V = 0xFFFF
const SPI_MEM_STATUS_S = 0
const SPI_MEM_CS_KEEP_ACTIVE_V = 0x1
const SPI_MEM_CS_KEEP_ACTIVE_S = 10
const SPI_MEM_CK_IDLE_EDGE_V = 0x1
const SPI_MEM_CK_IDLE_EDGE_S = 9
const SPI_MEM_SLV_ST_TRANS_END_INT_ENA_V = 0x1
const SPI_MEM_SLV_ST_TRANS_END_INT_ENA_S = 6
const SPI_MEM_SLV_ST_TRANS_END_V = 0x1
const SPI_MEM_SLV_ST_TRANS_END_S = 5
const SPI_MEM_CSPI_ST_TRANS_END_INT_ENA_V = 0x1
const SPI_MEM_CSPI_ST_TRANS_END_INT_ENA_S = 4
const SPI_MEM_CSPI_ST_TRANS_END_V = 0x1
const SPI_MEM_CSPI_ST_TRANS_END_S = 3
const SPI_MEM_TRANS_END_INT_ENA_V = 0x1
const SPI_MEM_TRANS_END_INT_ENA_S = 2
const SPI_MEM_CS1_DIS_V = 0x1
const SPI_MEM_CS1_DIS_S = 1
const SPI_MEM_CS0_DIS_V = 0x1
const SPI_MEM_CS0_DIS_S = 0
const SPI_MEM_TX_CRC_DATA = 0xFFFFFFFF
const SPI_MEM_TX_CRC_DATA_V = 0xFFFFFFFF
const SPI_MEM_TX_CRC_DATA_S = 0
const SPI_MEM_FADDR_QUAD_V = 0x1
const SPI_MEM_FADDR_QUAD_S = 8
const SPI_MEM_FDOUT_QUAD_V = 0x1
const SPI_MEM_FDOUT_QUAD_S = 7
const SPI_MEM_FDIN_QUAD_V = 0x1
const SPI_MEM_FDIN_QUAD_S = 6
const SPI_MEM_FADDR_DUAL_V = 0x1
const SPI_MEM_FADDR_DUAL_S = 5
const SPI_MEM_FDOUT_DUAL_V = 0x1
const SPI_MEM_FDOUT_DUAL_S = 4
const SPI_MEM_FDIN_DUAL_V = 0x1
const SPI_MEM_FDIN_DUAL_S = 3
const SPI_MEM_CACHE_FLASH_USR_CMD_V = 0x1
const SPI_MEM_CACHE_FLASH_USR_CMD_S = 2
const SPI_MEM_CACHE_USR_ADDR_4BYTE_V = 0x1
const SPI_MEM_CACHE_USR_ADDR_4BYTE_S = 1
const SPI_MEM_CACHE_REQ_EN_V = 0x1
const SPI_MEM_CACHE_REQ_EN_S = 0
const SPI_MEM_CSPI_LOCK_DELAY_TIME = 0x0000001F
const SPI_MEM_CSPI_LOCK_DELAY_TIME_V = 0x1F
const SPI_MEM_CSPI_LOCK_DELAY_TIME_S = 7
const SPI_MEM_EM_ST = 0x00000007
const SPI_MEM_EM_ST_V = 0x7
const SPI_MEM_EM_ST_S = 4
const SPI_MEM_CSPI_ST = 0x0000000F
const SPI_MEM_CSPI_ST_V = 0xF
const SPI_MEM_CSPI_ST_S = 0
const SPI_MEM_BUF0 = 0xFFFFFFFF
const SPI_MEM_BUF0_V = 0xFFFFFFFF
const SPI_MEM_BUF0_S = 0
const SPI_MEM_BUF1 = 0xFFFFFFFF
const SPI_MEM_BUF1_V = 0xFFFFFFFF
const SPI_MEM_BUF1_S = 0
const SPI_MEM_BUF2 = 0xFFFFFFFF
const SPI_MEM_BUF2_V = 0xFFFFFFFF
const SPI_MEM_BUF2_S = 0
const SPI_MEM_BUF3 = 0xFFFFFFFF
const SPI_MEM_BUF3_V = 0xFFFFFFFF
const SPI_MEM_BUF3_S = 0
const SPI_MEM_BUF4 = 0xFFFFFFFF
const SPI_MEM_BUF4_V = 0xFFFFFFFF
const SPI_MEM_BUF4_S = 0
const SPI_MEM_BUF5 = 0xFFFFFFFF
const SPI_MEM_BUF5_V = 0xFFFFFFFF
const SPI_MEM_BUF5_S = 0
const SPI_MEM_BUF6 = 0xFFFFFFFF
const SPI_MEM_BUF6_V = 0xFFFFFFFF
const SPI_MEM_BUF6_S = 0
const SPI_MEM_BUF7 = 0xFFFFFFFF
const SPI_MEM_BUF7_V = 0xFFFFFFFF
const SPI_MEM_BUF7_S = 0
const SPI_MEM_BUF8 = 0xFFFFFFFF
const SPI_MEM_BUF8_V = 0xFFFFFFFF
const SPI_MEM_BUF8_S = 0
const SPI_MEM_BUF9 = 0xFFFFFFFF
const SPI_MEM_BUF9_V = 0xFFFFFFFF
const SPI_MEM_BUF9_S = 0
const SPI_MEM_BUF10 = 0xFFFFFFFF
const SPI_MEM_BUF10_V = 0xFFFFFFFF
const SPI_MEM_BUF10_S = 0
const SPI_MEM_BUF11 = 0xFFFFFFFF
const SPI_MEM_BUF11_V = 0xFFFFFFFF
const SPI_MEM_BUF11_S = 0
const SPI_MEM_BUF12 = 0xFFFFFFFF
const SPI_MEM_BUF12_V = 0xFFFFFFFF
const SPI_MEM_BUF12_S = 0
const SPI_MEM_BUF13 = 0xFFFFFFFF
const SPI_MEM_BUF13_V = 0xFFFFFFFF
const SPI_MEM_BUF13_S = 0
const SPI_MEM_BUF14 = 0xFFFFFFFF
const SPI_MEM_BUF14_V = 0xFFFFFFFF
const SPI_MEM_BUF14_S = 0
const SPI_MEM_BUF15 = 0xFFFFFFFF
const SPI_MEM_BUF15_V = 0xFFFFFFFF
const SPI_MEM_BUF15_S = 0
const SPI_MEM_WAITI_DUMMY_CYCLELEN = 0x0000003F
const SPI_MEM_WAITI_DUMMY_CYCLELEN_V = 0x3F
const SPI_MEM_WAITI_DUMMY_CYCLELEN_S = 10
const SPI_MEM_WAITI_CMD = 0x000000FF
const SPI_MEM_WAITI_CMD_V = 0xFF
const SPI_MEM_WAITI_CMD_S = 2
const SPI_MEM_WAITI_DUMMY_V = 0x1
const SPI_MEM_WAITI_DUMMY_S = 1
const SPI_MEM_SUS_TIMEOUT_CNT = 0x0000007F
const SPI_MEM_SUS_TIMEOUT_CNT_V = 0x7F
const SPI_MEM_SUS_TIMEOUT_CNT_S = 25
const SPI_MEM_PES_END_EN_V = 0x1
const SPI_MEM_PES_END_EN_S = 24
const SPI_MEM_PER_END_EN_V = 0x1
const SPI_MEM_PER_END_EN_S = 23
const SPI_MEM_FMEM_RD_SUS_2B_V = 0x1
const SPI_MEM_FMEM_RD_SUS_2B_S = 22
const SPI_MEM_PESR_END_MSK = 0x0000FFFF
const SPI_MEM_PESR_END_MSK_V = 0xFFFF
const SPI_MEM_PESR_END_MSK_S = 6
const SPI_MEM_FLASH_PES_EN_V = 0x1
const SPI_MEM_FLASH_PES_EN_S = 5
const SPI_MEM_PES_PER_EN_V = 0x1
const SPI_MEM_PES_PER_EN_S = 4
const SPI_MEM_FLASH_PES_WAIT_EN_V = 0x1
const SPI_MEM_FLASH_PES_WAIT_EN_S = 3
const SPI_MEM_FLASH_PER_WAIT_EN_V = 0x1
const SPI_MEM_FLASH_PER_WAIT_EN_S = 2
const SPI_MEM_FLASH_PES_V = 0x1
const SPI_MEM_FLASH_PES_S = 1
const SPI_MEM_FLASH_PER_V = 0x1
const SPI_MEM_FLASH_PER_S = 0
const SPI_MEM_WAIT_PESR_COMMAND = 0x0000FFFF
const SPI_MEM_WAIT_PESR_COMMAND_V = 0xFFFF
const SPI_MEM_WAIT_PESR_COMMAND_S = 16
const SPI_MEM_FLASH_PES_COMMAND = 0x000000FF
const SPI_MEM_FLASH_PES_COMMAND_V = 0xFF
const SPI_MEM_FLASH_PES_COMMAND_S = 8
const SPI_MEM_FLASH_PER_COMMAND = 0x000000FF
const SPI_MEM_FLASH_PER_COMMAND_V = 0xFF
const SPI_MEM_FLASH_PER_COMMAND_S = 0
const SPI_MEM_SPI0_LOCK_EN_V = 0x1
const SPI_MEM_SPI0_LOCK_EN_S = 7
const SPI_MEM_FLASH_PES_DLY_128_V = 0x1
const SPI_MEM_FLASH_PES_DLY_128_S = 6
const SPI_MEM_FLASH_PER_DLY_128_V = 0x1
const SPI_MEM_FLASH_PER_DLY_128_S = 5
const SPI_MEM_FLASH_DP_DLY_128_V = 0x1
const SPI_MEM_FLASH_DP_DLY_128_S = 4
const SPI_MEM_FLASH_RES_DLY_128_V = 0x1
const SPI_MEM_FLASH_RES_DLY_128_S = 3
const SPI_MEM_FLASH_HPM_DLY_128_V = 0x1
const SPI_MEM_FLASH_HPM_DLY_128_S = 2
const SPI_MEM_WAIT_PESR_CMD_2B_V = 0x1
const SPI_MEM_WAIT_PESR_CMD_2B_S = 1
const SPI_MEM_FLASH_SUS_V = 0x1
const SPI_MEM_FLASH_SUS_S = 0
const SPI_MEM_EXTRA_DUMMY_CYCLELEN = 0x00000007
const SPI_MEM_EXTRA_DUMMY_CYCLELEN_V = 0x7
const SPI_MEM_EXTRA_DUMMY_CYCLELEN_S = 2
const SPI_MEM_TIMING_CALI_V = 0x1
const SPI_MEM_TIMING_CALI_S = 1
const SPI_MEM_TIMING_CLK_ENA_V = 0x1
const SPI_MEM_TIMING_CLK_ENA_S = 0
const SPI_MEM_DIN3_MODE = 0x00000003
const SPI_MEM_DIN3_MODE_V = 0x3
const SPI_MEM_DIN3_MODE_S = 6
const SPI_MEM_DIN2_MODE = 0x00000003
const SPI_MEM_DIN2_MODE_V = 0x3
const SPI_MEM_DIN2_MODE_S = 4
const SPI_MEM_DIN1_MODE = 0x00000003
const SPI_MEM_DIN1_MODE_V = 0x3
const SPI_MEM_DIN1_MODE_S = 2
const SPI_MEM_DIN0_MODE = 0x00000003
const SPI_MEM_DIN0_MODE_V = 0x3
const SPI_MEM_DIN0_MODE_S = 0
const SPI_MEM_DIN3_NUM = 0x00000003
const SPI_MEM_DIN3_NUM_V = 0x3
const SPI_MEM_DIN3_NUM_S = 6
const SPI_MEM_DIN2_NUM = 0x00000003
const SPI_MEM_DIN2_NUM_V = 0x3
const SPI_MEM_DIN2_NUM_S = 4
const SPI_MEM_DIN1_NUM = 0x00000003
const SPI_MEM_DIN1_NUM_V = 0x3
const SPI_MEM_DIN1_NUM_S = 2
const SPI_MEM_DIN0_NUM = 0x00000003
const SPI_MEM_DIN0_NUM_V = 0x3
const SPI_MEM_DIN0_NUM_S = 0
const SPI_MEM_DOUT3_MODE_V = 0x1
const SPI_MEM_DOUT3_MODE_S = 3
const SPI_MEM_DOUT2_MODE_V = 0x1
const SPI_MEM_DOUT2_MODE_S = 2
const SPI_MEM_DOUT1_MODE_V = 0x1
const SPI_MEM_DOUT1_MODE_S = 1
const SPI_MEM_DOUT0_MODE_V = 0x1
const SPI_MEM_DOUT0_MODE_S = 0
const SPI_MEM_MST_ST_END_INT_ENA_V = 0x1
const SPI_MEM_MST_ST_END_INT_ENA_S = 4
const SPI_MEM_SLV_ST_END_INT_ENA_V = 0x1
const SPI_MEM_SLV_ST_END_INT_ENA_S = 3
const SPI_MEM_WPE_END_INT_ENA_V = 0x1
const SPI_MEM_WPE_END_INT_ENA_S = 2
const SPI_MEM_PES_END_INT_ENA_V = 0x1
const SPI_MEM_PES_END_INT_ENA_S = 1
const SPI_MEM_PER_END_INT_ENA_V = 0x1
const SPI_MEM_PER_END_INT_ENA_S = 0
const SPI_MEM_MST_ST_END_INT_CLR_V = 0x1
const SPI_MEM_MST_ST_END_INT_CLR_S = 4
const SPI_MEM_SLV_ST_END_INT_CLR_V = 0x1
const SPI_MEM_SLV_ST_END_INT_CLR_S = 3
const SPI_MEM_WPE_END_INT_CLR_V = 0x1
const SPI_MEM_WPE_END_INT_CLR_S = 2
const SPI_MEM_PES_END_INT_CLR_V = 0x1
const SPI_MEM_PES_END_INT_CLR_S = 1
const SPI_MEM_PER_END_INT_CLR_V = 0x1
const SPI_MEM_PER_END_INT_CLR_S = 0
const SPI_MEM_MST_ST_END_INT_RAW_V = 0x1
const SPI_MEM_MST_ST_END_INT_RAW_S = 4
const SPI_MEM_SLV_ST_END_INT_RAW_V = 0x1
const SPI_MEM_SLV_ST_END_INT_RAW_S = 3
const SPI_MEM_WPE_END_INT_RAW_V = 0x1
const SPI_MEM_WPE_END_INT_RAW_S = 2
const SPI_MEM_PES_END_INT_RAW_V = 0x1
const SPI_MEM_PES_END_INT_RAW_S = 1
const SPI_MEM_PER_END_INT_RAW_V = 0x1
const SPI_MEM_PER_END_INT_RAW_S = 0
const SPI_MEM_MST_ST_END_INT_ST_V = 0x1
const SPI_MEM_MST_ST_END_INT_ST_S = 4
const SPI_MEM_SLV_ST_END_INT_ST_V = 0x1
const SPI_MEM_SLV_ST_END_INT_ST_S = 3
const SPI_MEM_WPE_END_INT_ST_V = 0x1
const SPI_MEM_WPE_END_INT_ST_S = 2
const SPI_MEM_PES_END_INT_ST_V = 0x1
const SPI_MEM_PES_END_INT_ST_S = 1
const SPI_MEM_PER_END_INT_ST_V = 0x1
const SPI_MEM_PER_END_INT_ST_S = 0
const SPI_MEM_CLK_EN_V = 0x1
const SPI_MEM_CLK_EN_S = 0
const SPI_MEM_SPI01_CLK_SEL = 0x00000003
const SPI_MEM_SPI01_CLK_SEL_V = 0x3
const SPI_MEM_SPI01_CLK_SEL_S = 0
const SPI_MEM_DATE = 0x0FFFFFFF
const SPI_MEM_DATE_V = 0xFFFFFFF
const SPI_MEM_DATE_S = 0
const PdFREERTOS_ERRNO_NONE = 0
const PdFREERTOS_ERRNO_ENOENT = 2
const PdFREERTOS_ERRNO_EINTR = 4
const PdFREERTOS_ERRNO_EIO = 5
const PdFREERTOS_ERRNO_ENXIO = 6
const PdFREERTOS_ERRNO_EBADF = 9
const PdFREERTOS_ERRNO_EAGAIN = 11
const PdFREERTOS_ERRNO_EWOULDBLOCK = 11
const PdFREERTOS_ERRNO_ENOMEM = 12
const PdFREERTOS_ERRNO_EACCES = 13
const PdFREERTOS_ERRNO_EFAULT = 14
const PdFREERTOS_ERRNO_EBUSY = 16
const PdFREERTOS_ERRNO_EEXIST = 17
const PdFREERTOS_ERRNO_EXDEV = 18
const PdFREERTOS_ERRNO_ENODEV = 19
const PdFREERTOS_ERRNO_ENOTDIR = 20
const PdFREERTOS_ERRNO_EISDIR = 21
const PdFREERTOS_ERRNO_EINVAL = 22
const PdFREERTOS_ERRNO_ENOSPC = 28
const PdFREERTOS_ERRNO_ESPIPE = 29
const PdFREERTOS_ERRNO_EROFS = 30
const PdFREERTOS_ERRNO_EUNATCH = 42
const PdFREERTOS_ERRNO_EBADE = 50
const PdFREERTOS_ERRNO_EFTYPE = 79
const PdFREERTOS_ERRNO_ENMFILE = 89
const PdFREERTOS_ERRNO_ENOTEMPTY = 90
const PdFREERTOS_ERRNO_ENAMETOOLONG = 91
const PdFREERTOS_ERRNO_EOPNOTSUPP = 95
const PdFREERTOS_ERRNO_ENOBUFS = 105
const PdFREERTOS_ERRNO_ENOPROTOOPT = 109
const PdFREERTOS_ERRNO_EADDRINUSE = 112
const PdFREERTOS_ERRNO_ETIMEDOUT = 116
const PdFREERTOS_ERRNO_EINPROGRESS = 119
const PdFREERTOS_ERRNO_EALREADY = 120
const PdFREERTOS_ERRNO_EADDRNOTAVAIL = 125
const PdFREERTOS_ERRNO_EISCONN = 127
const PdFREERTOS_ERRNO_ENOTCONN = 128
const PdFREERTOS_ERRNO_ENOMEDIUM = 135
const PdFREERTOS_ERRNO_EILSEQ = 138
const PdFREERTOS_ERRNO_ECANCELED = 140
const PdFREERTOS_LITTLE_ENDIAN = 0
const PdFREERTOS_BIG_ENDIAN = 1
const PORT_OFFSET_PX_STACK = 0x30
const CORE_ID_SIZE = 0
const ESP_IDF_VERSION_MAJOR = 5
const ESP_IDF_VERSION_MINOR = 4
const ESP_IDF_VERSION_PATCH = 2
const X_LIBC_LIMITS_H_ = 1
const NL_ARGMAX = 32
const X_POSIX2_RE_DUP_MAX = 255
const CHAR_MIN = 0
const PortCRITICAL_NESTING_IN_TCB = 0
const PortBYTE_ALIGNMENT = 16
const PortTICK_TYPE_IS_ATOMIC = 1
const PortUSING_MPU_WRAPPERS = 0
const PortNUM_CONFIGURABLE_REGIONS = 1
const PortHAS_STACK_OVERFLOW_CHECKING = 0
const ConfigUSE_C_RUNTIME_TLS_SUPPORT = 1
const INCLUDE_xQueueGetMutexHolder = 0
const ConfigUSE_DAEMON_TASK_STARTUP_HOOK = 0
const ConfigUSE_APPLICATION_TASK_TAG = 0
const ConfigUSE_ALTERNATIVE_API = 0
const ConfigASSERT_DEFINED = 1
const ConfigPRECONDITION_DEFINED = 0
const ConfigUSE_MINI_LIST_ITEM = 1
const ConfigGENERATE_RUN_TIME_STATS = 0
const ConfigUSE_MALLOC_FAILED_HOOK = 0
const ConfigEXPECTED_IDLE_TIME_BEFORE_SLEEP = 2
const ConfigINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS = 0
const ConfigUSE_STATS_FORMATTING_FUNCTIONS = 0
const ConfigUSE_TRACE_FACILITY = 0
const ConfigUSE_POSIX_ERRNO = 0
const ConfigUSE_SB_COMPLETED_CALLBACK = 0
const ConfigINITIAL_TICK_COUNT = 0
const ConfigUSE_TASK_FPU_SUPPORT = 1
const ConfigENABLE_MPU = 0
const ConfigENABLE_FPU = 1
const ConfigENABLE_MVE = 0
const ConfigENABLE_TRUSTZONE = 1
const ConfigRUN_FREERTOS_SECURE_ONLY = 0
const ConfigRUN_ADDITIONAL_TESTS = 0
const TskKERNEL_VERSION_NUMBER = "V10.5.1"
const TskKERNEL_VERSION_MAJOR = 10
const TskKERNEL_VERSION_MINOR = 5
const TskKERNEL_VERSION_BUILD = 1

type X__int8T c.Char
type X__uint8T c.Char
type X__int16T int16
type X__uint16T uint16
type X__int32T c.Int
type X__uint32T c.Uint
type X__int64T c.LongLong
type X__uint64T c.UlongLong
type X__intLeast8T c.Char
type X__uintLeast8T c.Char
type X__intLeast16T int16
type X__uintLeast16T uint16
type X__intLeast32T c.Int
type X__uintLeast32T c.Uint
type X__intLeast64T c.LongLong
type X__uintLeast64T c.UlongLong
type X__intmaxT c.LongLong
type X__uintmaxT c.UlongLong
type X__intptrT c.Int
type X__uintptrT c.Uint
type IntLeast8T X__intLeast8T
type UintLeast8T X__uintLeast8T
type IntLeast16T X__intLeast16T
type UintLeast16T X__uintLeast16T
type IntLeast32T X__intLeast32T
type UintLeast32T X__uintLeast32T
type IntLeast64T X__intLeast64T
type UintLeast64T X__uintLeast64T
type IntFast8T c.Char
type UintFast8T c.Char
type IntFast16T int16
type UintFast16T uint16
type IntFast32T c.Int
type UintFast32T c.Uint
type IntFast64T c.LongLong
type UintFast64T c.UlongLong
type PtrdiffT c.Int
type WcharT c.Int

type MaxAlignT struct {
	X__clangMaxAlignNonce1 c.LongLong
	X__clangMaxAlignNonce2 c.Double
}
type WintT c.Uint
type X__blkcntT c.Long
type X__blksizeT c.Long
type X__fsblkcntT X__uint64T
type X__fsfilcntT X__uint32T
type X_offT c.Long
type X__pidT c.Int
type X__devT int16
type X__uidT uint16
type X__gidT uint16
type X__idT X__uint32T
type X__inoT uint16
type X__modeT X__uint32T
type X_off64T c.LongLong
type X__offT X_offT
type X__loffT X_off64T
type X__keyT c.Long
type X_fposT c.Long
type X__sizeT c.Uint
type X_ssizeT c.Int
type X__ssizeT X_ssizeT

type X_mbstateT struct {
	X__count c.Int
	X__value struct {
		X__wch WintT
	}
}
type X_iconvT c.Pointer
type X__clockT c.Ulong
type X__timeT X__intLeast64T
type X__clockidT c.Ulong
type X__daddrT c.Long
type X__timerT c.Ulong
type X__saFamilyT X__uint8T
type X__socklenT X__uint32T
type X__nlItem c.Int
type X__nlinkT uint16
type X__susecondsT c.Long
type X__usecondsT c.Ulong
type X__vaList c.Pointer
type X__ULong c.Ulong

type X__lock struct {
	Unused [8]uint8
}
type X_LOCKT *X__lock
type X_lockT X_LOCKT
type X_flockT X_LOCKT

type X_reent struct {
	Unused [8]uint8
}

type X__localeT struct {
	Unused [8]uint8
}

type X_Bigint struct {
	X_next   *X_Bigint
	X_k      c.Int
	X_maxwds c.Int
	X_sign   c.Int
	X_wds    c.Int
	X_x      [1]X__ULong
}

type X__tm struct {
	X__tmSec   c.Int
	X__tmMin   c.Int
	X__tmHour  c.Int
	X__tmMday  c.Int
	X__tmMon   c.Int
	X__tmYear  c.Int
	X__tmWday  c.Int
	X__tmYday  c.Int
	X__tmIsdst c.Int
}

type X_onExitArgs struct {
	X_fnargs    [32]c.Pointer
	X_dsoHandle [32]c.Pointer
	X_fntypes   X__ULong
	X_isCxa     X__ULong
}

type X_atexit struct {
	X_next          *X_atexit
	X_ind           c.Int
	X_fns           [32]c.Pointer
	X_onExitArgsPtr *X_onExitArgs
}

type X__sbuf struct {
	X_base *c.Char
	X_size c.Int
}

type X__sFILE struct {
	X_p       *c.Char
	X_r       c.Int
	X_w       c.Int
	X_flags   int16
	X_file    int16
	X_bf      X__sbuf
	X_lbfsize c.Int
	X_data    *X_reent
	X_cookie  c.Pointer
	X_read    c.Pointer
	X_write   c.Pointer
	X_seek    c.Pointer
	X_close   c.Pointer
	X_ub      X__sbuf
	X_up      *c.Char
	X_ur      c.Int
	X_ubuf    [3]c.Char
	X_nbuf    [1]c.Char
	X_lb      X__sbuf
	X_blksize c.Int
	X_offset  X_offT
	X_lock    X_flockT
	X_mbstate X_mbstateT
	X_flags2  c.Int
}
type X__FILE X__sFILE

type X_glue struct {
	X_next  *X_glue
	X_niobs c.Int
	X_iobs  *X__FILE
}

type X_rand48 struct {
	X_seed     [3]uint16
	X_mult     [3]uint16
	X_add      uint16
	X_randNext c.UlongLong
}

type X_mprec struct {
	X_result   *X_Bigint
	X_resultK  c.Int
	X_p5s      *X_Bigint
	X_freelist **X_Bigint
}

type X_miscReent struct {
	X_strtokLast     *c.Char
	X_mblenState     X_mbstateT
	X_wctombState    X_mbstateT
	X_mbtowcState    X_mbstateT
	X_l64aBuf        [8]c.Char
	X_getdateErr     c.Int
	X_mbrlenState    X_mbstateT
	X_mbrtowcState   X_mbstateT
	X_mbsrtowcsState X_mbstateT
	X_wcrtombState   X_mbstateT
	X_wcsrtombsState X_mbstateT
}

type DivT struct {
	Quot c.Int
	Rem  c.Int
}

type LdivT struct {
	Quot c.Long
	Rem  c.Long
}

type LldivT struct {
	Quot c.LongLong
	Rem  c.LongLong
}

// llgo:type C
type X__comparFnT func(c.Pointer, c.Pointer) c.Int
type SocRootClkT c.Int

const (
	SOC_ROOT_CLK_INT_RC_FAST SocRootClkT = 0
	SOC_ROOT_CLK_INT_RC_SLOW SocRootClkT = 1
	SOC_ROOT_CLK_EXT_XTAL    SocRootClkT = 2
	SOC_ROOT_CLK_EXT_XTAL32K SocRootClkT = 3
)

type SocCpuClkSrcT c.Int

const (
	SOC_CPU_CLK_SRC_XTAL    SocCpuClkSrcT = 0
	SOC_CPU_CLK_SRC_PLL     SocCpuClkSrcT = 1
	SOC_CPU_CLK_SRC_RC_FAST SocCpuClkSrcT = 2
	SOC_CPU_CLK_SRC_INVALID SocCpuClkSrcT = 3
)

type SocRtcSlowClkSrcT c.Int

const (
	SOC_RTC_SLOW_CLK_SRC_RC_SLOW      SocRtcSlowClkSrcT = 0
	SOC_RTC_SLOW_CLK_SRC_XTAL32K      SocRtcSlowClkSrcT = 1
	SOC_RTC_SLOW_CLK_SRC_RC_FAST_D256 SocRtcSlowClkSrcT = 2
	SOC_RTC_SLOW_CLK_SRC_INVALID      SocRtcSlowClkSrcT = 3
)

type SocRtcFastClkSrcT c.Int

const (
	SOC_RTC_FAST_CLK_SRC_XTAL_D2  SocRtcFastClkSrcT = 0
	SOC_RTC_FAST_CLK_SRC_XTAL_DIV SocRtcFastClkSrcT = 0
	SOC_RTC_FAST_CLK_SRC_RC_FAST  SocRtcFastClkSrcT = 1
	SOC_RTC_FAST_CLK_SRC_INVALID  SocRtcFastClkSrcT = 2
)

type SocXtalFreqT c.Int

const (
	SOC_XTAL_FREQ_32M SocXtalFreqT = 32
	SOC_XTAL_FREQ_40M SocXtalFreqT = 40
)

type SocModuleClkT c.Int

const (
	SOC_MOD_CLK_CPU          SocModuleClkT = 1
	SOC_MOD_CLK_RTC_FAST     SocModuleClkT = 2
	SOC_MOD_CLK_RTC_SLOW     SocModuleClkT = 3
	SOC_MOD_CLK_APB          SocModuleClkT = 4
	SOC_MOD_CLK_PLL_F80M     SocModuleClkT = 5
	SOC_MOD_CLK_PLL_F160M    SocModuleClkT = 6
	SOC_MOD_CLK_XTAL32K      SocModuleClkT = 7
	SOC_MOD_CLK_RC_FAST      SocModuleClkT = 8
	SOC_MOD_CLK_RC_FAST_D256 SocModuleClkT = 9
	SOC_MOD_CLK_XTAL         SocModuleClkT = 10
	SOC_MOD_CLK_INVALID      SocModuleClkT = 11
)

type SocPeriphSystimerClkSrcT c.Int

const (
	SYSTIMER_CLK_SRC_XTAL    SocPeriphSystimerClkSrcT = 10
	SYSTIMER_CLK_SRC_DEFAULT SocPeriphSystimerClkSrcT = 10
)

type SocPeriphGptimerClkSrcT c.Int

const (
	GPTIMER_CLK_SRC_APB     SocPeriphGptimerClkSrcT = 4
	GPTIMER_CLK_SRC_XTAL    SocPeriphGptimerClkSrcT = 10
	GPTIMER_CLK_SRC_DEFAULT SocPeriphGptimerClkSrcT = 4
)

type SocPeriphTgClkSrcLegacyT c.Int

const (
	TIMER_SRC_CLK_APB     SocPeriphTgClkSrcLegacyT = 4
	TIMER_SRC_CLK_XTAL    SocPeriphTgClkSrcLegacyT = 10
	TIMER_SRC_CLK_DEFAULT SocPeriphTgClkSrcLegacyT = 4
)

type SocPeriphRmtClkSrcT c.Int

const (
	RMT_CLK_SRC_APB     SocPeriphRmtClkSrcT = 4
	RMT_CLK_SRC_RC_FAST SocPeriphRmtClkSrcT = 8
	RMT_CLK_SRC_XTAL    SocPeriphRmtClkSrcT = 10
	RMT_CLK_SRC_DEFAULT SocPeriphRmtClkSrcT = 4
)

type SocPeriphRmtClkSrcLegacyT c.Int

const (
	RMT_BASECLK_APB     SocPeriphRmtClkSrcLegacyT = 4
	RMT_BASECLK_XTAL    SocPeriphRmtClkSrcLegacyT = 10
	RMT_BASECLK_DEFAULT SocPeriphRmtClkSrcLegacyT = 4
)

type SocPeriphTemperatureSensorClkSrcT c.Int

const (
	TEMPERATURE_SENSOR_CLK_SRC_XTAL    SocPeriphTemperatureSensorClkSrcT = 10
	TEMPERATURE_SENSOR_CLK_SRC_RC_FAST SocPeriphTemperatureSensorClkSrcT = 8
	TEMPERATURE_SENSOR_CLK_SRC_DEFAULT SocPeriphTemperatureSensorClkSrcT = 10
)

type SocPeriphUartClkSrcLegacyT c.Int

const (
	UART_SCLK_APB     SocPeriphUartClkSrcLegacyT = 4
	UART_SCLK_RTC     SocPeriphUartClkSrcLegacyT = 8
	UART_SCLK_XTAL    SocPeriphUartClkSrcLegacyT = 10
	UART_SCLK_DEFAULT SocPeriphUartClkSrcLegacyT = 4
)

type SocPeriphI2sClkSrcT c.Int

const (
	I2S_CLK_SRC_DEFAULT  SocPeriphI2sClkSrcT = 6
	I2S_CLK_SRC_PLL_160M SocPeriphI2sClkSrcT = 6
	I2S_CLK_SRC_XTAL     SocPeriphI2sClkSrcT = 10
	I2S_CLK_SRC_EXTERNAL SocPeriphI2sClkSrcT = -1
)

type SocPeriphI2cClkSrcT c.Int

const (
	I2C_CLK_SRC_XTAL    SocPeriphI2cClkSrcT = 10
	I2C_CLK_SRC_RC_FAST SocPeriphI2cClkSrcT = 8
	I2C_CLK_SRC_DEFAULT SocPeriphI2cClkSrcT = 10
)

type SocPeriphSpiClkSrcT c.Int

const (
	SPI_CLK_SRC_DEFAULT SocPeriphSpiClkSrcT = 4
	SPI_CLK_SRC_APB     SocPeriphSpiClkSrcT = 4
	SPI_CLK_SRC_XTAL    SocPeriphSpiClkSrcT = 10
)

type SocPeriphSdmClkSrcT c.Int

const (
	SDM_CLK_SRC_APB     SocPeriphSdmClkSrcT = 4
	SDM_CLK_SRC_DEFAULT SocPeriphSdmClkSrcT = 4
)

type SocPeriphGlitchFilterClkSrcT c.Int

const (
	GLITCH_FILTER_CLK_SRC_APB     SocPeriphGlitchFilterClkSrcT = 4
	GLITCH_FILTER_CLK_SRC_DEFAULT SocPeriphGlitchFilterClkSrcT = 4
)

type SocPeriphTwaiClkSrcT c.Int

const (
	TWAI_CLK_SRC_APB     SocPeriphTwaiClkSrcT = 4
	TWAI_CLK_SRC_DEFAULT SocPeriphTwaiClkSrcT = 4
)

type SocPeriphAdcDigiClkSrcT c.Int

const (
	ADC_DIGI_CLK_SRC_APB     SocPeriphAdcDigiClkSrcT = 4
	ADC_DIGI_CLK_SRC_DEFAULT SocPeriphAdcDigiClkSrcT = 4
)

type SocPeriphMwdtClkSrcT c.Int

const (
	MWDT_CLK_SRC_XTAL    SocPeriphMwdtClkSrcT = 10
	MWDT_CLK_SRC_APB     SocPeriphMwdtClkSrcT = 4
	MWDT_CLK_SRC_DEFAULT SocPeriphMwdtClkSrcT = 10
)

type SocPeriphLedcClkSrcLegacyT c.Int

const (
	LEDC_AUTO_CLK        SocPeriphLedcClkSrcLegacyT = 0
	LEDC_USE_APB_CLK     SocPeriphLedcClkSrcLegacyT = 4
	LEDC_USE_RC_FAST_CLK SocPeriphLedcClkSrcLegacyT = 8
	LEDC_USE_XTAL_CLK    SocPeriphLedcClkSrcLegacyT = 10
	LEDC_USE_RTC8M_CLK   SocPeriphLedcClkSrcLegacyT = 8
)

type SocClkoutSigIdT c.Int

const (
	CLKOUT_SIG_PLL      SocClkoutSigIdT = 1
	CLKOUT_SIG_RC_SLOW  SocClkoutSigIdT = 4
	CLKOUT_SIG_XTAL     SocClkoutSigIdT = 5
	CLKOUT_SIG_PLL_F80M SocClkoutSigIdT = 13
	CLKOUT_SIG_RC_FAST  SocClkoutSigIdT = 14
	CLKOUT_SIG_INVALID  SocClkoutSigIdT = 255
)

type PeriphInterrputT c.Int

const (
	ETS_WIFI_MAC_INTR_SOURCE              PeriphInterrputT = 0
	ETS_WIFI_MAC_NMI_SOURCE               PeriphInterrputT = 1
	ETS_WIFI_PWR_INTR_SOURCE              PeriphInterrputT = 2
	ETS_WIFI_BB_INTR_SOURCE               PeriphInterrputT = 3
	ETS_BT_MAC_INTR_SOURCE                PeriphInterrputT = 4
	ETS_BT_BB_INTR_SOURCE                 PeriphInterrputT = 5
	ETS_BT_BB_NMI_SOURCE                  PeriphInterrputT = 6
	ETS_RWBT_INTR_SOURCE                  PeriphInterrputT = 7
	ETS_RWBLE_INTR_SOURCE                 PeriphInterrputT = 8
	ETS_RWBT_NMI_SOURCE                   PeriphInterrputT = 9
	ETS_RWBLE_NMI_SOURCE                  PeriphInterrputT = 10
	ETS_I2C_MASTER_SOURCE                 PeriphInterrputT = 11
	ETS_SLC0_INTR_SOURCE                  PeriphInterrputT = 12
	ETS_SLC1_INTR_SOURCE                  PeriphInterrputT = 13
	ETS_APB_CTRL_INTR_SOURCE              PeriphInterrputT = 14
	ETS_UHCI0_INTR_SOURCE                 PeriphInterrputT = 15
	ETS_GPIO_INTR_SOURCE                  PeriphInterrputT = 16
	ETS_GPIO_NMI_SOURCE                   PeriphInterrputT = 17
	ETS_SPI1_INTR_SOURCE                  PeriphInterrputT = 18
	ETS_SPI2_INTR_SOURCE                  PeriphInterrputT = 19
	ETS_I2S0_INTR_SOURCE                  PeriphInterrputT = 20
	ETS_UART0_INTR_SOURCE                 PeriphInterrputT = 21
	ETS_UART1_INTR_SOURCE                 PeriphInterrputT = 22
	ETS_LEDC_INTR_SOURCE                  PeriphInterrputT = 23
	ETS_EFUSE_INTR_SOURCE                 PeriphInterrputT = 24
	ETS_TWAI_INTR_SOURCE                  PeriphInterrputT = 25
	ETS_USB_SERIAL_JTAG_INTR_SOURCE       PeriphInterrputT = 26
	ETS_RTC_CORE_INTR_SOURCE              PeriphInterrputT = 27
	ETS_RMT_INTR_SOURCE                   PeriphInterrputT = 28
	ETS_I2C_EXT0_INTR_SOURCE              PeriphInterrputT = 29
	ETS_TIMER1_INTR_SOURCE                PeriphInterrputT = 30
	ETS_TIMER2_INTR_SOURCE                PeriphInterrputT = 31
	ETS_TG0_T0_LEVEL_INTR_SOURCE          PeriphInterrputT = 32
	ETS_TG0_WDT_LEVEL_INTR_SOURCE         PeriphInterrputT = 33
	ETS_TG1_T0_LEVEL_INTR_SOURCE          PeriphInterrputT = 34
	ETS_TG1_WDT_LEVEL_INTR_SOURCE         PeriphInterrputT = 35
	ETS_CACHE_IA_INTR_SOURCE              PeriphInterrputT = 36
	ETS_SYSTIMER_TARGET0_INTR_SOURCE      PeriphInterrputT = 37
	ETS_SYSTIMER_TARGET1_INTR_SOURCE      PeriphInterrputT = 38
	ETS_SYSTIMER_TARGET2_INTR_SOURCE      PeriphInterrputT = 39
	ETS_SYSTIMER_TARGET0_EDGE_INTR_SOURCE PeriphInterrputT = 37
	ETS_SYSTIMER_TARGET1_EDGE_INTR_SOURCE PeriphInterrputT = 38
	ETS_SYSTIMER_TARGET2_EDGE_INTR_SOURCE PeriphInterrputT = 39
	ETS_SPI_MEM_REJECT_CACHE_INTR_SOURCE  PeriphInterrputT = 40
	ETS_ICACHE_PRELOAD0_INTR_SOURCE       PeriphInterrputT = 41
	ETS_ICACHE_SYNC0_INTR_SOURCE          PeriphInterrputT = 42
	ETS_APB_ADC_INTR_SOURCE               PeriphInterrputT = 43
	ETS_DMA_CH0_INTR_SOURCE               PeriphInterrputT = 44
	ETS_DMA_CH1_INTR_SOURCE               PeriphInterrputT = 45
	ETS_DMA_CH2_INTR_SOURCE               PeriphInterrputT = 46
	ETS_RSA_INTR_SOURCE                   PeriphInterrputT = 47
	ETS_AES_INTR_SOURCE                   PeriphInterrputT = 48
	ETS_SHA_INTR_SOURCE                   PeriphInterrputT = 49
	ETS_FROM_CPU_INTR0_SOURCE             PeriphInterrputT = 50
	ETS_FROM_CPU_INTR1_SOURCE             PeriphInterrputT = 51
	ETS_FROM_CPU_INTR2_SOURCE             PeriphInterrputT = 52
	ETS_FROM_CPU_INTR3_SOURCE             PeriphInterrputT = 53
	ETS_ASSIST_DEBUG_INTR_SOURCE          PeriphInterrputT = 54
	ETS_DMA_APBPERI_PMS_INTR_SOURCE       PeriphInterrputT = 55
	ETS_CORE0_IRAM0_PMS_INTR_SOURCE       PeriphInterrputT = 56
	ETS_CORE0_DRAM0_PMS_INTR_SOURCE       PeriphInterrputT = 57
	ETS_CORE0_PIF_PMS_INTR_SOURCE         PeriphInterrputT = 58
	ETS_CORE0_PIF_PMS_SIZE_INTR_SOURCE    PeriphInterrputT = 59
	ETS_BAK_PMS_VIOLATE_INTR_SOURCE       PeriphInterrputT = 60
	ETS_CACHE_CORE0_ACS_INTR_SOURCE       PeriphInterrputT = 61
	ETS_MAX_INTR_SOURCE                   PeriphInterrputT = 62
)

type PeriphModuleT c.Int

const (
	PERIPH_LEDC_MODULE           PeriphModuleT = 0
	PERIPH_UART0_MODULE          PeriphModuleT = 1
	PERIPH_UART1_MODULE          PeriphModuleT = 2
	PERIPH_USB_DEVICE_MODULE     PeriphModuleT = 3
	PERIPH_I2C0_MODULE           PeriphModuleT = 4
	PERIPH_I2S0_MODULE           PeriphModuleT = 5
	PERIPH_TIMG0_MODULE          PeriphModuleT = 6
	PERIPH_TIMG1_MODULE          PeriphModuleT = 7
	PERIPH_UHCI0_MODULE          PeriphModuleT = 8
	PERIPH_RMT_MODULE            PeriphModuleT = 9
	PERIPH_SPI_MODULE            PeriphModuleT = 10
	PERIPH_SPI2_MODULE           PeriphModuleT = 11
	PERIPH_TWAI_MODULE           PeriphModuleT = 12
	PERIPH_RNG_MODULE            PeriphModuleT = 13
	PERIPH_WIFI_MODULE           PeriphModuleT = 14
	PERIPH_BT_MODULE             PeriphModuleT = 15
	PERIPH_WIFI_BT_COMMON_MODULE PeriphModuleT = 16
	PERIPH_BT_BASEBAND_MODULE    PeriphModuleT = 17
	PERIPH_BT_LC_MODULE          PeriphModuleT = 18
	PERIPH_RSA_MODULE            PeriphModuleT = 19
	PERIPH_AES_MODULE            PeriphModuleT = 20
	PERIPH_SHA_MODULE            PeriphModuleT = 21
	PERIPH_HMAC_MODULE           PeriphModuleT = 22
	PERIPH_DS_MODULE             PeriphModuleT = 23
	PERIPH_GDMA_MODULE           PeriphModuleT = 24
	PERIPH_SYSTIMER_MODULE       PeriphModuleT = 25
	PERIPH_SARADC_MODULE         PeriphModuleT = 26
	PERIPH_TEMPSENSOR_MODULE     PeriphModuleT = 27
	PERIPH_ASSIST_DEBUG_MODULE   PeriphModuleT = 28
	PERIPH_MODULE_MAX            PeriphModuleT = 29
)

/*
-------------------------------------------------------------------------------

	INTERRUPT/EXCEPTION STACK FRAME FOR A EXCEPTION OR NESTED INTERRUPT

-------------------------------------------------------------------------------
*/
type RvExcFrame struct {
	Mepc    c.Long
	Ra      c.Long
	Sp      c.Long
	Gp      c.Long
	Tp      c.Long
	T0      c.Long
	T1      c.Long
	T2      c.Long
	S0      c.Long
	S1      c.Long
	A0      c.Long
	A1      c.Long
	A2      c.Long
	A3      c.Long
	A4      c.Long
	A5      c.Long
	A6      c.Long
	A7      c.Long
	S2      c.Long
	S3      c.Long
	S4      c.Long
	S5      c.Long
	S6      c.Long
	S7      c.Long
	S8      c.Long
	S9      c.Long
	S10     c.Long
	S11     c.Long
	T3      c.Long
	T4      c.Long
	T5      c.Long
	T6      c.Long
	Mstatus c.Long
	Mtvec   c.Long
	Mcause  c.Long
	Mtval   c.Long
	Mhartid c.Long
}

type ImaxdivT struct {
	Quot c.IntmaxT
	Rem  c.IntmaxT
}
type X__gnucVaList c.Pointer
type SocResetReasonT c.Int

const (
	RESET_REASON_CHIP_POWER_ON   SocResetReasonT = 1
	RESET_REASON_CHIP_BROWN_OUT  SocResetReasonT = 1
	RESET_REASON_CHIP_SUPER_WDT  SocResetReasonT = 1
	RESET_REASON_CORE_SW         SocResetReasonT = 3
	RESET_REASON_CORE_DEEP_SLEEP SocResetReasonT = 5
	RESET_REASON_CORE_MWDT0      SocResetReasonT = 7
	RESET_REASON_CORE_MWDT1      SocResetReasonT = 8
	RESET_REASON_CORE_RTC_WDT    SocResetReasonT = 9
	RESET_REASON_CPU0_MWDT0      SocResetReasonT = 11
	RESET_REASON_CPU0_SW         SocResetReasonT = 12
	RESET_REASON_CPU0_RTC_WDT    SocResetReasonT = 13
	RESET_REASON_SYS_BROWN_OUT   SocResetReasonT = 15
	RESET_REASON_SYS_RTC_WDT     SocResetReasonT = 16
	RESET_REASON_CPU0_MWDT1      SocResetReasonT = 17
	RESET_REASON_SYS_SUPER_WDT   SocResetReasonT = 18
	RESET_REASON_SYS_CLK_GLITCH  SocResetReasonT = 19
	RESET_REASON_CORE_EFUSE_CRC  SocResetReasonT = 20
	RESET_REASON_CORE_USB_UART   SocResetReasonT = 21
	RESET_REASON_CORE_USB_JTAG   SocResetReasonT = 22
	RESET_REASON_CORE_PWR_GLITCH SocResetReasonT = 23
)

type FposT X_fposT
type OffT X__offT

// llgo:type C
type CookieReadFunctionT func(c.Pointer, *c.Char, c.SizeT) c.SsizeT

// llgo:type C
type CookieWriteFunctionT func(c.Pointer, *c.Char, c.SizeT) c.SsizeT

// llgo:type C
type CookieSeekFunctionT func(c.Pointer, *OffT, c.Int) c.Int

// llgo:type C
type CookieCloseFunctionT func(c.Pointer) c.Int

type CookieIoFunctionsT struct {
	Read  *CookieReadFunctionT
	Write *CookieWriteFunctionT
	Seek  *CookieSeekFunctionT
	Close *CookieCloseFunctionT
}
type EspErrT c.Int
type DwGdmaBlockTransferTypeT c.Int

const (
	DW_GDMA_BLOCK_TRANSFER_CONTIGUOUS DwGdmaBlockTransferTypeT = 0
	DW_GDMA_BLOCK_TRANSFER_RELOAD     DwGdmaBlockTransferTypeT = 1
	DW_GDMA_BLOCK_TRANSFER_SHADOW     DwGdmaBlockTransferTypeT = 2
	DW_GDMA_BLOCK_TRANSFER_LIST       DwGdmaBlockTransferTypeT = 3
)

type DwGdmaFlowControllerT c.Int

const (
	DW_GDMA_FLOW_CTRL_SELF DwGdmaFlowControllerT = 0
	DW_GDMA_FLOW_CTRL_SRC  DwGdmaFlowControllerT = 1
	DW_GDMA_FLOW_CTRL_DST  DwGdmaFlowControllerT = 2
)

type DwGdmaHandshakeTypeT c.Int

const (
	DW_GDMA_HANDSHAKE_HW DwGdmaHandshakeTypeT = 0
	DW_GDMA_HANDSHAKE_SW DwGdmaHandshakeTypeT = 1
)

type DwGdmaRoleT c.Int

const (
	DW_GDMA_ROLE_MEM        DwGdmaRoleT = 0
	DW_GDMA_ROLE_PERIPH_DSI DwGdmaRoleT = 1
	DW_GDMA_ROLE_PERIPH_CSI DwGdmaRoleT = 2
	DW_GDMA_ROLE_PERIPH_ISP DwGdmaRoleT = 3
)

type DwGdmaLockLevelT c.Int

const (
	DW_GDMA_LOCK_LEVEL_FULL_TRANS  DwGdmaLockLevelT = 0
	DW_GDMA_LOCK_LEVEL_BLOCK_TRANS DwGdmaLockLevelT = 1
)

type DwGdmaTransferWidthT c.Int

const (
	DW_GDMA_TRANS_WIDTH_8   DwGdmaTransferWidthT = 0
	DW_GDMA_TRANS_WIDTH_16  DwGdmaTransferWidthT = 1
	DW_GDMA_TRANS_WIDTH_32  DwGdmaTransferWidthT = 2
	DW_GDMA_TRANS_WIDTH_64  DwGdmaTransferWidthT = 3
	DW_GDMA_TRANS_WIDTH_128 DwGdmaTransferWidthT = 4
	DW_GDMA_TRANS_WIDTH_256 DwGdmaTransferWidthT = 5
	DW_GDMA_TRANS_WIDTH_512 DwGdmaTransferWidthT = 6
)

type DwGdmaBurstModeT c.Int

const (
	DW_GDMA_BURST_MODE_INCREMENT DwGdmaBurstModeT = 0
	DW_GDMA_BURST_MODE_FIXED     DwGdmaBurstModeT = 1
)

type DwGdmaBurstItemsT c.Int

const (
	DW_GDMA_BURST_ITEMS_1    DwGdmaBurstItemsT = 0
	DW_GDMA_BURST_ITEMS_4    DwGdmaBurstItemsT = 1
	DW_GDMA_BURST_ITEMS_8    DwGdmaBurstItemsT = 2
	DW_GDMA_BURST_ITEMS_16   DwGdmaBurstItemsT = 3
	DW_GDMA_BURST_ITEMS_32   DwGdmaBurstItemsT = 4
	DW_GDMA_BURST_ITEMS_64   DwGdmaBurstItemsT = 5
	DW_GDMA_BURST_ITEMS_128  DwGdmaBurstItemsT = 6
	DW_GDMA_BURST_ITEMS_256  DwGdmaBurstItemsT = 7
	DW_GDMA_BURST_ITEMS_512  DwGdmaBurstItemsT = 8
	DW_GDMA_BURST_ITEMS_1024 DwGdmaBurstItemsT = 9
)

type LdoUnitT c.Int

const (
	LDO_UNIT_1 LdoUnitT = 1
	LDO_UNIT_2 LdoUnitT = 2
	LDO_UNIT_3 LdoUnitT = 3
	LDO_UNIT_4 LdoUnitT = 4
)

type DebugProbeSplitU16T c.Int

const (
	DEBUG_PROBE_SPLIT_LOWER16 DebugProbeSplitU16T = 0
	DEBUG_PROBE_SPLIT_UPPER16 DebugProbeSplitU16T = 1
)

type GdmaTriggerPeripheralT c.Int

const (
	GDMA_TRIG_PERIPH_M2M    GdmaTriggerPeripheralT = 0
	GDMA_TRIG_PERIPH_UHCI   GdmaTriggerPeripheralT = 1
	GDMA_TRIG_PERIPH_SPI    GdmaTriggerPeripheralT = 2
	GDMA_TRIG_PERIPH_I2S    GdmaTriggerPeripheralT = 3
	GDMA_TRIG_PERIPH_AES    GdmaTriggerPeripheralT = 4
	GDMA_TRIG_PERIPH_SHA    GdmaTriggerPeripheralT = 5
	GDMA_TRIG_PERIPH_ADC    GdmaTriggerPeripheralT = 6
	GDMA_TRIG_PERIPH_DAC    GdmaTriggerPeripheralT = 7
	GDMA_TRIG_PERIPH_LCD    GdmaTriggerPeripheralT = 8
	GDMA_TRIG_PERIPH_CAM    GdmaTriggerPeripheralT = 9
	GDMA_TRIG_PERIPH_RMT    GdmaTriggerPeripheralT = 10
	GDMA_TRIG_PERIPH_PARLIO GdmaTriggerPeripheralT = 11
	GDMA_TRIG_PERIPH_I3C    GdmaTriggerPeripheralT = 12
)

type GdmaChannelDirectionT c.Int

const (
	GDMA_CHANNEL_DIRECTION_TX GdmaChannelDirectionT = 0
	GDMA_CHANNEL_DIRECTION_RX GdmaChannelDirectionT = 1
)

type GdmaEtmEventTypeT c.Int

const (
	GDMA_ETM_EVENT_EOF GdmaEtmEventTypeT = 0
	GDMA_ETM_EVENT_MAX GdmaEtmEventTypeT = 1
)

type GdmaEtmTaskTypeT c.Int

const (
	GDMA_ETM_TASK_START GdmaEtmTaskTypeT = 0
	GDMA_ETM_TASK_MAX   GdmaEtmTaskTypeT = 1
)

type MultiHeapInfo struct {
	Unused [8]uint8
}
type MultiHeapHandleT *MultiHeapInfo

/** @brief Structure to access heap metadata via multi_heap_get_info */

type MultiHeapInfoT struct {
	TotalFreeBytes      c.SizeT
	TotalAllocatedBytes c.SizeT
	LargestFreeBlock    c.SizeT
	MinimumFreeBytes    c.SizeT
	AllocatedBlocks     c.SizeT
	FreeBlocks          c.SizeT
	TotalBlocks         c.SizeT
}

// llgo:type C
type MultiHeapWalkerCbT func(c.Pointer, c.SizeT, c.Int, c.Pointer) bool

// llgo:type C
type EspAllocFailedHookT func(c.SizeT, c.Uint32T, *c.Char)

/**
 * @brief Structure used to store heap related data passed to
 * the walker callback function
 */

type WalkerHeapInfo struct {
	Start c.IntptrT
	End   c.IntptrT
}
type WalkerHeapIntoT WalkerHeapInfo

/**
 * @brief Structure used to store block related data passed to
 * the walker callback function
 */

type WalkerBlockInfo struct {
	Ptr  c.Pointer
	Size c.SizeT
	Used bool
}
type WalkerBlockInfoT WalkerBlockInfo

// llgo:type C
type HeapCapsWalkerCbT func(WalkerHeapIntoT, WalkerBlockInfoT, c.Pointer) bool

/**
 * @brief CPU clock configuration structure
 */

type RtcCpuFreqConfigS struct {
	Source        SocCpuClkSrcT
	SourceFreqMhz c.Uint32T
	Div           c.Uint32T
	FreqMhz       c.Uint32T
}
type RtcCpuFreqConfigT RtcCpuFreqConfigS
type RtcCalSelT c.Int

const (
	RTC_CAL_RTC_MUX      RtcCalSelT = 0
	RTC_CAL_8MD256       RtcCalSelT = 1
	RTC_CAL_32K_XTAL     RtcCalSelT = 2
	RTC_CAL_INTERNAL_OSC RtcCalSelT = 3
)

/**
 * Initialization parameters for rtc_clk_init
 */

type RtcClkConfigT struct {
	XtalFreq     SocXtalFreqT
	CpuFreqMhz   c.Uint32T
	FastClkSrc   SocRtcFastClkSrcT
	SlowClkSrc   SocRtcSlowClkSrcT
	ClkRtcClkDiv c.Uint32T
	Clk8mClkDiv  c.Uint32T
	SlowClkDcap  c.Uint32T
	Clk8mDfreq   c.Uint32T
}

type RtcInitConfigT struct {
	WifiPowerupCycles   c.Uint16T
	WifiWaitCycles      c.Uint16T
	BtPowerupCycles     c.Uint16T
	BtWaitCycles        c.Uint16T
	CpuTopPowerupCycles c.Uint16T
	CpuTopWaitCycles    c.Uint16T
	DgWrapPowerupCycles c.Uint16T
	DgWrapWaitCycles    c.Uint16T
	DgPeriPowerupCycles c.Uint16T
	DgPeriWaitCycles    c.Uint16T
}

/**
 * @brief Power down flags for rtc_sleep_pd function
 */

type RtcSleepPuConfigT struct {
	DigFpu    c.Uint32T
	RtcFpu    c.Uint32T
	CpuFpu    c.Uint32T
	I2sFpu    c.Uint32T
	BbFpu     c.Uint32T
	NrxFpu    c.Uint32T
	FeFpu     c.Uint32T
	SramFpu   c.Uint32T
	RomRamFpu c.Uint32T
}

/**
 * @brief sleep configuration for rtc_sleep_init function
 */

type RtcSleepConfigT struct {
	LslpMemInfFpu      c.Uint32T
	RtcMemInfFollowCpu c.Uint32T
	RtcFastmemPdEn     c.Uint32T
	RtcSlowmemPdEn     c.Uint32T
	RtcPeriPdEn        c.Uint32T
	WifiPdEn           c.Uint32T
	BtPdEn             c.Uint32T
	CpuPdEn            c.Uint32T
	Int8mPdEn          c.Uint32T
	DigPeriPdEn        c.Uint32T
	DeepSlp            c.Uint32T
	WdtFlashbootModEn  c.Uint32T
	DigDbiasSlp        c.Uint32T
	RtcDbiasSlp        c.Uint32T
	DbgAttenSlp        c.Uint32T
	BiasSleepSlp       c.Uint32T
	PdCurSlp           c.Uint32T
	VddsdioPdEn        c.Uint32T
	XtalFpu            c.Uint32T
	RtcRegulatorFpu    c.Uint32T
	DeepSlpReject      c.Uint32T
	LightSlpReject     c.Uint32T
}

/**
 * RTC power and clock control initialization settings
 */

type RtcConfigT struct {
	Ck8mWait        c.Uint32T
	XtalWait        c.Uint32T
	PllWait         c.Uint32T
	ClkctlInit      c.Uint32T
	PwrctlInit      c.Uint32T
	RtcDboostFpd    c.Uint32T
	XtalFpu         c.Uint32T
	BbpllFpu        c.Uint32T
	CpuWaitiClkGate c.Uint32T
	CaliOcode       c.Uint32T
}
type RtcCpuFreqSrcT SocCpuClkSrcT
type RtcSlowFreqT SocRtcSlowClkSrcT
type RtcFastFreqT SocRtcFastClkSrcT
type RtcXtalFreqT SocXtalFreqT
type GpioNumT c.Int

const (
	GPIO_NUM_NC  GpioNumT = -1
	GPIO_NUM_0   GpioNumT = 0
	GPIO_NUM_1   GpioNumT = 1
	GPIO_NUM_2   GpioNumT = 2
	GPIO_NUM_3   GpioNumT = 3
	GPIO_NUM_4   GpioNumT = 4
	GPIO_NUM_5   GpioNumT = 5
	GPIO_NUM_6   GpioNumT = 6
	GPIO_NUM_7   GpioNumT = 7
	GPIO_NUM_8   GpioNumT = 8
	GPIO_NUM_9   GpioNumT = 9
	GPIO_NUM_10  GpioNumT = 10
	GPIO_NUM_11  GpioNumT = 11
	GPIO_NUM_12  GpioNumT = 12
	GPIO_NUM_13  GpioNumT = 13
	GPIO_NUM_14  GpioNumT = 14
	GPIO_NUM_15  GpioNumT = 15
	GPIO_NUM_16  GpioNumT = 16
	GPIO_NUM_17  GpioNumT = 17
	GPIO_NUM_18  GpioNumT = 18
	GPIO_NUM_19  GpioNumT = 19
	GPIO_NUM_20  GpioNumT = 20
	GPIO_NUM_21  GpioNumT = 21
	GPIO_NUM_MAX GpioNumT = 22
)

type AdcUnitT c.Int

const (
	ADC_UNIT_1 AdcUnitT = 0
	ADC_UNIT_2 AdcUnitT = 1
)

type AdcChannelT c.Int

const (
	ADC_CHANNEL_0 AdcChannelT = 0
	ADC_CHANNEL_1 AdcChannelT = 1
	ADC_CHANNEL_2 AdcChannelT = 2
	ADC_CHANNEL_3 AdcChannelT = 3
	ADC_CHANNEL_4 AdcChannelT = 4
	ADC_CHANNEL_5 AdcChannelT = 5
	ADC_CHANNEL_6 AdcChannelT = 6
	ADC_CHANNEL_7 AdcChannelT = 7
	ADC_CHANNEL_8 AdcChannelT = 8
	ADC_CHANNEL_9 AdcChannelT = 9
)

type AdcAttenT c.Int

const (
	ADC_ATTEN_DB_0   AdcAttenT = 0
	ADC_ATTEN_DB_2_5 AdcAttenT = 1
	ADC_ATTEN_DB_6   AdcAttenT = 2
	ADC_ATTEN_DB_12  AdcAttenT = 3
	ADC_ATTEN_DB_11  AdcAttenT = 3
)

type AdcBitwidthT c.Int

const (
	ADC_BITWIDTH_DEFAULT AdcBitwidthT = 0
	ADC_BITWIDTH_9       AdcBitwidthT = 9
	ADC_BITWIDTH_10      AdcBitwidthT = 10
	ADC_BITWIDTH_11      AdcBitwidthT = 11
	ADC_BITWIDTH_12      AdcBitwidthT = 12
	ADC_BITWIDTH_13      AdcBitwidthT = 13
)

type AdcUlpModeT c.Int

const (
	ADC_ULP_MODE_DISABLE AdcUlpModeT = 0
	ADC_ULP_MODE_FSM     AdcUlpModeT = 1
	ADC_ULP_MODE_RISCV   AdcUlpModeT = 2
)

type AdcDigiConvertModeT c.Int

const (
	ADC_CONV_SINGLE_UNIT_1 AdcDigiConvertModeT = 1
	ADC_CONV_SINGLE_UNIT_2 AdcDigiConvertModeT = 2
	ADC_CONV_BOTH_UNIT     AdcDigiConvertModeT = 3
	ADC_CONV_ALTER_UNIT    AdcDigiConvertModeT = 7
)

type AdcDigiOutputFormatT c.Int

const (
	ADC_DIGI_OUTPUT_FORMAT_TYPE1 AdcDigiOutputFormatT = 0
	ADC_DIGI_OUTPUT_FORMAT_TYPE2 AdcDigiOutputFormatT = 1
)

type AdcOneshotClkSrcT SocPeriphAdcDigiClkSrcT
type AdcContinuousClkSrcT SocPeriphAdcDigiClkSrcT

/**
 * @brief ADC digital controller pattern configuration
 */

type AdcDigiPatternConfigT struct {
	Atten    c.Uint8T
	Channel  c.Uint8T
	Unit     c.Uint8T
	BitWidth c.Uint8T
}
type AdcDigiIirFilterT c.Int

const (
	ADC_DIGI_IIR_FILTER_0 AdcDigiIirFilterT = 0
	ADC_DIGI_IIR_FILTER_1 AdcDigiIirFilterT = 1
)

type AdcDigiIirFilterCoeffT c.Int

const (
	ADC_DIGI_IIR_FILTER_COEFF_2  AdcDigiIirFilterCoeffT = 0
	ADC_DIGI_IIR_FILTER_COEFF_4  AdcDigiIirFilterCoeffT = 1
	ADC_DIGI_IIR_FILTER_COEFF_8  AdcDigiIirFilterCoeffT = 2
	ADC_DIGI_IIR_FILTER_COEFF_16 AdcDigiIirFilterCoeffT = 3
	ADC_DIGI_IIR_FILTER_COEFF_32 AdcDigiIirFilterCoeffT = 4
	ADC_DIGI_IIR_FILTER_COEFF_64 AdcDigiIirFilterCoeffT = 5
)

type AdcMonitorIdT c.Int

const (
	ADC_MONITOR_0 AdcMonitorIdT = 0
	ADC_MONITOR_1 AdcMonitorIdT = 1
)

type AdcMonitorModeT c.Int

const (
	ADC_MONITOR_MODE_HIGH AdcMonitorModeT = 0
	ADC_MONITOR_MODE_LOW  AdcMonitorModeT = 1
)

/**
 * @brief ADC digital controller (DMA mode) output data format.
 *        Used to analyze the acquired ADC (DMA) data.
 */

type AdcDigiOutputDataT struct {
	Unused [8]uint8
}
type ColorSpaceT c.Int

const (
	COLOR_SPACE_RAW   ColorSpaceT = 1
	COLOR_SPACE_RGB   ColorSpaceT = 2
	COLOR_SPACE_YUV   ColorSpaceT = 3
	COLOR_SPACE_GRAY  ColorSpaceT = 4
	COLOR_SPACE_ARGB  ColorSpaceT = 5
	COLOR_SPACE_ALPHA ColorSpaceT = 6
	COLOR_SPACE_CLUT  ColorSpaceT = 7
)

type ColorPixelRawFormatT c.Int

const (
	COLOR_PIXEL_RAW8  ColorPixelRawFormatT = 0
	COLOR_PIXEL_RAW10 ColorPixelRawFormatT = 1
	COLOR_PIXEL_RAW12 ColorPixelRawFormatT = 2
)

type ColorPixelRgbFormatT c.Int

const (
	COLOR_PIXEL_RGB888 ColorPixelRgbFormatT = 0
	COLOR_PIXEL_RGB666 ColorPixelRgbFormatT = 1
	COLOR_PIXEL_RGB565 ColorPixelRgbFormatT = 2
)

type ColorPixelYuvFormatT c.Int

const (
	COLOR_PIXEL_YUV444 ColorPixelYuvFormatT = 0
	COLOR_PIXEL_YUV422 ColorPixelYuvFormatT = 1
	COLOR_PIXEL_YUV420 ColorPixelYuvFormatT = 2
	COLOR_PIXEL_YUV411 ColorPixelYuvFormatT = 3
)

type ColorPixelGrayFormatT c.Int

const (
	COLOR_PIXEL_GRAY4 ColorPixelGrayFormatT = 0
	COLOR_PIXEL_GRAY8 ColorPixelGrayFormatT = 1
)

type ColorPixelArgbFormatT c.Int

const COLOR_PIXEL_ARGB8888 ColorPixelArgbFormatT = 0

type ColorPixelAlphaFormatT c.Int

const (
	COLOR_PIXEL_A4 ColorPixelAlphaFormatT = 0
	COLOR_PIXEL_A8 ColorPixelAlphaFormatT = 1
)

type ColorPixelClutFormatT c.Int

const (
	COLOR_PIXEL_L4 ColorPixelClutFormatT = 0
	COLOR_PIXEL_L8 ColorPixelClutFormatT = 1
)

/**
 * @brief Color Space Info Structure
 */

type ColorSpacePixelFormatT struct {
	ColorTypeId c.Uint32T
}
type ColorRangeT c.Int

const (
	COLOR_RANGE_LIMIT ColorRangeT = 0
	COLOR_RANGE_FULL  ColorRangeT = 1
)

type ColorConvStdRgbYuvT c.Int

const (
	COLOR_CONV_STD_RGB_YUV_BT601 ColorConvStdRgbYuvT = 0
	COLOR_CONV_STD_RGB_YUV_BT709 ColorConvStdRgbYuvT = 1
)

type ColorRawElementOrderT c.Int

const (
	COLOR_RAW_ELEMENT_ORDER_BGGR ColorRawElementOrderT = 0
	COLOR_RAW_ELEMENT_ORDER_GBRG ColorRawElementOrderT = 1
	COLOR_RAW_ELEMENT_ORDER_GRBG ColorRawElementOrderT = 2
	COLOR_RAW_ELEMENT_ORDER_RGGB ColorRawElementOrderT = 3
)

type ColorRgbElementOrderT c.Int

const (
	COLOR_RGB_ELEMENT_ORDER_RGB ColorRgbElementOrderT = 0
	COLOR_RGB_ELEMENT_ORDER_BGR ColorRgbElementOrderT = 1
)

/**
 * @brief Data structure for ARGB8888 pixel unit
 */

type ColorPixelArgb8888DataT struct {
	Val c.Uint32T
}

/**
 * @brief Data structure for RGB888 pixel unit
 */

type ColorPixelRgb888DataT struct {
	B c.Uint8T
	G c.Uint8T
	R c.Uint8T
}

/**
 * @brief Data structure for RGB565 pixel unit
 */

type ColorPixelRgb565DataT struct {
	Val c.Uint16T
}
type ColorComponentT c.Int

const (
	COLOR_COMPONENT_R       ColorComponentT = 0
	COLOR_COMPONENT_G       ColorComponentT = 1
	COLOR_COMPONENT_B       ColorComponentT = 2
	COLOR_COMPONENT_INVALID ColorComponentT = 3
)

type ColorYuv422PackOrderT c.Int

const (
	COLOR_YUV422_PACK_ORDER_YUYV ColorYuv422PackOrderT = 0
	COLOR_YUV422_PACK_ORDER_YVYU ColorYuv422PackOrderT = 1
	COLOR_YUV422_PACK_ORDER_UYVY ColorYuv422PackOrderT = 2
	COLOR_YUV422_PACK_ORDER_VYUY ColorYuv422PackOrderT = 3
)

type Dma2dDescriptorAlign8S struct {
	Unused [8]uint8
}
type Dma2dDescriptorAlign8T Dma2dDescriptorAlign8S
type Dma2dDescriptorT Dma2dDescriptorAlign8T
type Dma2dTriggerPeripheralT c.Int

const (
	DMA2D_TRIG_PERIPH_M2M          Dma2dTriggerPeripheralT = 0
	DMA2D_TRIG_PERIPH_JPEG_ENCODER Dma2dTriggerPeripheralT = 1
	DMA2D_TRIG_PERIPH_JPEG_DECODER Dma2dTriggerPeripheralT = 2
	DMA2D_TRIG_PERIPH_PPA_SRM      Dma2dTriggerPeripheralT = 3
	DMA2D_TRIG_PERIPH_PPA_BLEND    Dma2dTriggerPeripheralT = 4
)

type Dma2dChannelDirectionT c.Int

const (
	DMA2D_CHANNEL_DIRECTION_TX Dma2dChannelDirectionT = 0
	DMA2D_CHANNEL_DIRECTION_RX Dma2dChannelDirectionT = 1
)

type Dma2dDataBurstLengthT c.Int

const (
	DMA2D_DATA_BURST_LENGTH_8       Dma2dDataBurstLengthT = 1
	DMA2D_DATA_BURST_LENGTH_16      Dma2dDataBurstLengthT = 2
	DMA2D_DATA_BURST_LENGTH_32      Dma2dDataBurstLengthT = 3
	DMA2D_DATA_BURST_LENGTH_64      Dma2dDataBurstLengthT = 4
	DMA2D_DATA_BURST_LENGTH_128     Dma2dDataBurstLengthT = 5
	DMA2D_DATA_BURST_LENGTH_INVALID Dma2dDataBurstLengthT = 6
)

type Dma2dMacroBlockSizeT c.Int

const (
	DMA2D_MACRO_BLOCK_SIZE_NONE    Dma2dMacroBlockSizeT = 0
	DMA2D_MACRO_BLOCK_SIZE_8_8     Dma2dMacroBlockSizeT = 1
	DMA2D_MACRO_BLOCK_SIZE_8_16    Dma2dMacroBlockSizeT = 2
	DMA2D_MACRO_BLOCK_SIZE_16_16   Dma2dMacroBlockSizeT = 3
	DMA2D_MACRO_BLOCK_SIZE_INVALID Dma2dMacroBlockSizeT = 4
)

type Dma2dScrambleOrderT c.Int

const (
	DMA2D_SCRAMBLE_ORDER_BYTE2_1_0 Dma2dScrambleOrderT = 0
	DMA2D_SCRAMBLE_ORDER_BYTE2_0_1 Dma2dScrambleOrderT = 1
	DMA2D_SCRAMBLE_ORDER_BYTE1_0_2 Dma2dScrambleOrderT = 2
	DMA2D_SCRAMBLE_ORDER_BYTE1_2_0 Dma2dScrambleOrderT = 3
	DMA2D_SCRAMBLE_ORDER_BYTE0_2_1 Dma2dScrambleOrderT = 4
	DMA2D_SCRAMBLE_ORDER_BYTE0_1_2 Dma2dScrambleOrderT = 5
	DMA2D_SCRAMBLE_ORDER_INVALID   Dma2dScrambleOrderT = 6
)

type Dma2dCscTxOptionT c.Int

const (
	DMA2D_CSC_TX_NONE                 Dma2dCscTxOptionT = 0
	DMA2D_CSC_TX_SCRAMBLE             Dma2dCscTxOptionT = 1
	DMA2D_CSC_TX_RGB888_TO_RGB565     Dma2dCscTxOptionT = 2
	DMA2D_CSC_TX_RGB565_TO_RGB888     Dma2dCscTxOptionT = 3
	DMA2D_CSC_TX_RGB888_TO_YUV444_601 Dma2dCscTxOptionT = 4
	DMA2D_CSC_TX_RGB888_TO_YUV444_709 Dma2dCscTxOptionT = 5
	DMA2D_CSC_TX_RGB888_TO_YUV422_601 Dma2dCscTxOptionT = 6
	DMA2D_CSC_TX_RGB888_TO_YUV422_709 Dma2dCscTxOptionT = 7
	DMA2D_CSC_TX_YUV444_TO_RGB888_601 Dma2dCscTxOptionT = 8
	DMA2D_CSC_TX_YUV444_TO_RGB888_709 Dma2dCscTxOptionT = 9
	DMA2D_CSC_TX_YUV422_TO_RGB888_601 Dma2dCscTxOptionT = 10
	DMA2D_CSC_TX_YUV422_TO_RGB888_709 Dma2dCscTxOptionT = 11
	DMA2D_CSC_TX_INVALID              Dma2dCscTxOptionT = 12
)

type Dma2dCscRxOptionT c.Int

const (
	DMA2D_CSC_RX_NONE                 Dma2dCscRxOptionT = 0
	DMA2D_CSC_RX_SCRAMBLE             Dma2dCscRxOptionT = 1
	DMA2D_CSC_RX_YUV422_TO_YUV444     Dma2dCscRxOptionT = 2
	DMA2D_CSC_RX_YUV420_TO_YUV444     Dma2dCscRxOptionT = 3
	DMA2D_CSC_RX_YUV420_TO_RGB888_601 Dma2dCscRxOptionT = 4
	DMA2D_CSC_RX_YUV420_TO_RGB565_601 Dma2dCscRxOptionT = 5
	DMA2D_CSC_RX_YUV420_TO_RGB888_709 Dma2dCscRxOptionT = 6
	DMA2D_CSC_RX_YUV420_TO_RGB565_709 Dma2dCscRxOptionT = 7
	DMA2D_CSC_RX_YUV422_TO_RGB888_601 Dma2dCscRxOptionT = 8
	DMA2D_CSC_RX_YUV422_TO_RGB565_601 Dma2dCscRxOptionT = 9
	DMA2D_CSC_RX_YUV422_TO_RGB888_709 Dma2dCscRxOptionT = 10
	DMA2D_CSC_RX_YUV422_TO_RGB565_709 Dma2dCscRxOptionT = 11
	DMA2D_CSC_RX_YUV444_TO_RGB888_601 Dma2dCscRxOptionT = 12
	DMA2D_CSC_RX_YUV444_TO_RGB565_601 Dma2dCscRxOptionT = 13
	DMA2D_CSC_RX_YUV444_TO_RGB888_709 Dma2dCscRxOptionT = 14
	DMA2D_CSC_RX_YUV444_TO_RGB565_709 Dma2dCscRxOptionT = 15
	DMA2D_CSC_RX_INVALID              Dma2dCscRxOptionT = 16
)

type ModemClockDomainT c.Int

const (
	MODEM_CLOCK_DOMAIN_MODEM_APB    ModemClockDomainT = 0
	MODEM_CLOCK_DOMAIN_MODEM_PERIPH ModemClockDomainT = 1
	MODEM_CLOCK_DOMAIN_WIFI         ModemClockDomainT = 2
	MODEM_CLOCK_DOMAIN_BT           ModemClockDomainT = 3
	MODEM_CLOCK_DOMAIN_MODEM_FE     ModemClockDomainT = 4
	MODEM_CLOCK_DOMAIN_IEEE802154   ModemClockDomainT = 5
	MODEM_CLOCK_DOMAIN_LP_APB       ModemClockDomainT = 6
	MODEM_CLOCK_DOMAIN_I2C_MASTER   ModemClockDomainT = 7
	MODEM_CLOCK_DOMAIN_COEX         ModemClockDomainT = 8
	MODEM_CLOCK_DOMAIN_WIFIPWR      ModemClockDomainT = 9
	MODEM_CLOCK_DOMAIN_MAX          ModemClockDomainT = 10
)

type ModemClockLpclkSrcT c.Int

const (
	MODEM_CLOCK_LPCLK_SRC_INVALID   ModemClockLpclkSrcT = -1
	MODEM_CLOCK_LPCLK_SRC_RC_SLOW   ModemClockLpclkSrcT = 0
	MODEM_CLOCK_LPCLK_SRC_RC_FAST   ModemClockLpclkSrcT = 1
	MODEM_CLOCK_LPCLK_SRC_MAIN_XTAL ModemClockLpclkSrcT = 2
	MODEM_CLOCK_LPCLK_SRC_RC32K     ModemClockLpclkSrcT = 3
	MODEM_CLOCK_LPCLK_SRC_XTAL32K   ModemClockLpclkSrcT = 4
	MODEM_CLOCK_LPCLK_SRC_EXT32K    ModemClockLpclkSrcT = 5
	MODEM_CLOCK_LPCLK_SRC_MAX       ModemClockLpclkSrcT = 6
)

type TouchPadT c.Int

const (
	TOUCH_PAD_NUM0 TouchPadT = 0
	TOUCH_PAD_NUM1 TouchPadT = 1
	TOUCH_PAD_NUM2 TouchPadT = 2
	TOUCH_PAD_NUM3 TouchPadT = 3
	TOUCH_PAD_NUM4 TouchPadT = 4
	TOUCH_PAD_NUM5 TouchPadT = 5
	TOUCH_PAD_NUM6 TouchPadT = 6
	TOUCH_PAD_NUM7 TouchPadT = 7
	TOUCH_PAD_NUM8 TouchPadT = 8
	TOUCH_PAD_NUM9 TouchPadT = 9
	TOUCH_PAD_MAX  TouchPadT = 10
)

type TouchHighVoltT c.Int

const (
	TOUCH_HVOLT_KEEP TouchHighVoltT = -1
	TOUCH_HVOLT_2V4  TouchHighVoltT = 0
	TOUCH_HVOLT_2V5  TouchHighVoltT = 1
	TOUCH_HVOLT_2V6  TouchHighVoltT = 2
	TOUCH_HVOLT_2V7  TouchHighVoltT = 3
	TOUCH_HVOLT_MAX  TouchHighVoltT = 4
)

type TouchLowVoltT c.Int

const (
	TOUCH_LVOLT_KEEP TouchLowVoltT = -1
	TOUCH_LVOLT_0V5  TouchLowVoltT = 0
	TOUCH_LVOLT_0V6  TouchLowVoltT = 1
	TOUCH_LVOLT_0V7  TouchLowVoltT = 2
	TOUCH_LVOLT_0V8  TouchLowVoltT = 3
	TOUCH_LVOLT_MAX  TouchLowVoltT = 4
)

type TouchVoltAttenT c.Int

const (
	TOUCH_HVOLT_ATTEN_KEEP TouchVoltAttenT = -1
	TOUCH_HVOLT_ATTEN_1V5  TouchVoltAttenT = 0
	TOUCH_HVOLT_ATTEN_1V   TouchVoltAttenT = 1
	TOUCH_HVOLT_ATTEN_0V5  TouchVoltAttenT = 2
	TOUCH_HVOLT_ATTEN_0V   TouchVoltAttenT = 3
	TOUCH_HVOLT_ATTEN_MAX  TouchVoltAttenT = 4
)

type TouchCntSlopeT c.Int

const (
	TOUCH_PAD_SLOPE_0   TouchCntSlopeT = 0
	TOUCH_PAD_SLOPE_1   TouchCntSlopeT = 1
	TOUCH_PAD_SLOPE_2   TouchCntSlopeT = 2
	TOUCH_PAD_SLOPE_3   TouchCntSlopeT = 3
	TOUCH_PAD_SLOPE_4   TouchCntSlopeT = 4
	TOUCH_PAD_SLOPE_5   TouchCntSlopeT = 5
	TOUCH_PAD_SLOPE_6   TouchCntSlopeT = 6
	TOUCH_PAD_SLOPE_7   TouchCntSlopeT = 7
	TOUCH_PAD_SLOPE_MAX TouchCntSlopeT = 8
)

type TouchTieOptT c.Int

const (
	TOUCH_PAD_TIE_OPT_LOW   TouchTieOptT = 0
	TOUCH_PAD_TIE_OPT_HIGH  TouchTieOptT = 1
	TOUCH_PAD_TIE_OPT_FLOAT TouchTieOptT = 2
	TOUCH_PAD_TIE_OPT_MAX   TouchTieOptT = 3
)

type TouchFsmModeT c.Int

const (
	TOUCH_FSM_MODE_TIMER TouchFsmModeT = 0
	TOUCH_FSM_MODE_SW    TouchFsmModeT = 1
	TOUCH_FSM_MODE_MAX   TouchFsmModeT = 2
)

type TouchTriggerModeT c.Int

const (
	TOUCH_TRIGGER_BELOW TouchTriggerModeT = 0
	TOUCH_TRIGGER_ABOVE TouchTriggerModeT = 1
	TOUCH_TRIGGER_MAX   TouchTriggerModeT = 2
)

type TouchTriggerSrcT c.Int

const (
	TOUCH_TRIGGER_SOURCE_BOTH TouchTriggerSrcT = 0
	TOUCH_TRIGGER_SOURCE_SET1 TouchTriggerSrcT = 1
	TOUCH_TRIGGER_SOURCE_MAX  TouchTriggerSrcT = 2
)

type TouchPadIntrMaskT c.Int

const (
	TOUCH_PAD_INTR_MASK_DONE      TouchPadIntrMaskT = 1
	TOUCH_PAD_INTR_MASK_ACTIVE    TouchPadIntrMaskT = 2
	TOUCH_PAD_INTR_MASK_INACTIVE  TouchPadIntrMaskT = 4
	TOUCH_PAD_INTR_MASK_SCAN_DONE TouchPadIntrMaskT = 8
	TOUCH_PAD_INTR_MASK_TIMEOUT   TouchPadIntrMaskT = 16
	TOUCH_PAD_INTR_MASK_MAX       TouchPadIntrMaskT = 17
)

type TouchPadDenoiseGradeT c.Int

const (
	TOUCH_PAD_DENOISE_BIT12 TouchPadDenoiseGradeT = 0
	TOUCH_PAD_DENOISE_BIT10 TouchPadDenoiseGradeT = 1
	TOUCH_PAD_DENOISE_BIT8  TouchPadDenoiseGradeT = 2
	TOUCH_PAD_DENOISE_BIT4  TouchPadDenoiseGradeT = 3
	TOUCH_PAD_DENOISE_MAX   TouchPadDenoiseGradeT = 4
)

type TouchPadDenoiseCapT c.Int

const (
	TOUCH_PAD_DENOISE_CAP_L0  TouchPadDenoiseCapT = 0
	TOUCH_PAD_DENOISE_CAP_L1  TouchPadDenoiseCapT = 1
	TOUCH_PAD_DENOISE_CAP_L2  TouchPadDenoiseCapT = 2
	TOUCH_PAD_DENOISE_CAP_L3  TouchPadDenoiseCapT = 3
	TOUCH_PAD_DENOISE_CAP_L4  TouchPadDenoiseCapT = 4
	TOUCH_PAD_DENOISE_CAP_L5  TouchPadDenoiseCapT = 5
	TOUCH_PAD_DENOISE_CAP_L6  TouchPadDenoiseCapT = 6
	TOUCH_PAD_DENOISE_CAP_L7  TouchPadDenoiseCapT = 7
	TOUCH_PAD_DENOISE_CAP_MAX TouchPadDenoiseCapT = 8
)

/** Touch sensor denoise configuration */

type TouchPadDenoise struct {
	Grade    TouchPadDenoiseGradeT
	CapLevel TouchPadDenoiseCapT
}
type TouchPadDenoiseT TouchPadDenoise
type TouchPadShieldDriverT c.Int

const (
	TOUCH_PAD_SHIELD_DRV_L0  TouchPadShieldDriverT = 0
	TOUCH_PAD_SHIELD_DRV_L1  TouchPadShieldDriverT = 1
	TOUCH_PAD_SHIELD_DRV_L2  TouchPadShieldDriverT = 2
	TOUCH_PAD_SHIELD_DRV_L3  TouchPadShieldDriverT = 3
	TOUCH_PAD_SHIELD_DRV_L4  TouchPadShieldDriverT = 4
	TOUCH_PAD_SHIELD_DRV_L5  TouchPadShieldDriverT = 5
	TOUCH_PAD_SHIELD_DRV_L6  TouchPadShieldDriverT = 6
	TOUCH_PAD_SHIELD_DRV_L7  TouchPadShieldDriverT = 7
	TOUCH_PAD_SHIELD_DRV_MAX TouchPadShieldDriverT = 8
)

/** Touch sensor waterproof configuration */

type TouchPadWaterproof struct {
	GuardRingPad TouchPadT
	ShieldDriver TouchPadShieldDriverT
}
type TouchPadWaterproofT TouchPadWaterproof
type TouchPadConnTypeT c.Int

const (
	TOUCH_PAD_CONN_HIGHZ TouchPadConnTypeT = 0
	TOUCH_PAD_CONN_GND   TouchPadConnTypeT = 1
	TOUCH_PAD_CONN_MAX   TouchPadConnTypeT = 2
)

type TouchFilterModeT c.Int

const (
	TOUCH_PAD_FILTER_IIR_4   TouchFilterModeT = 0
	TOUCH_PAD_FILTER_IIR_8   TouchFilterModeT = 1
	TOUCH_PAD_FILTER_IIR_16  TouchFilterModeT = 2
	TOUCH_PAD_FILTER_IIR_32  TouchFilterModeT = 3
	TOUCH_PAD_FILTER_IIR_64  TouchFilterModeT = 4
	TOUCH_PAD_FILTER_IIR_128 TouchFilterModeT = 5
	TOUCH_PAD_FILTER_IIR_256 TouchFilterModeT = 6
	TOUCH_PAD_FILTER_JITTER  TouchFilterModeT = 7
	TOUCH_PAD_FILTER_MAX     TouchFilterModeT = 8
)

type TouchSmoothModeT c.Int

const (
	TOUCH_PAD_SMOOTH_OFF   TouchSmoothModeT = 0
	TOUCH_PAD_SMOOTH_IIR_2 TouchSmoothModeT = 1
	TOUCH_PAD_SMOOTH_IIR_4 TouchSmoothModeT = 2
	TOUCH_PAD_SMOOTH_IIR_8 TouchSmoothModeT = 3
	TOUCH_PAD_SMOOTH_MAX   TouchSmoothModeT = 4
)

/** Touch sensor filter configuration */

type TouchFilterConfig struct {
	Mode        TouchFilterModeT
	DebounceCnt c.Uint32T
	NoiseThr    c.Uint32T
	JitterStep  c.Uint32T
	SmhLvl      TouchSmoothModeT
}
type TouchFilterConfigT TouchFilterConfig

/** Touch sensor channel sleep configuration */

type TouchPadSleepChannelT struct {
	TouchNum    TouchPadT
	EnProximity bool
}
type GpioPortT c.Int

const (
	GPIO_PORT_0   GpioPortT = 0
	GPIO_PORT_MAX GpioPortT = 1
)

type GpioIntTypeT c.Int

const (
	GPIO_INTR_DISABLE    GpioIntTypeT = 0
	GPIO_INTR_POSEDGE    GpioIntTypeT = 1
	GPIO_INTR_NEGEDGE    GpioIntTypeT = 2
	GPIO_INTR_ANYEDGE    GpioIntTypeT = 3
	GPIO_INTR_LOW_LEVEL  GpioIntTypeT = 4
	GPIO_INTR_HIGH_LEVEL GpioIntTypeT = 5
	GPIO_INTR_MAX        GpioIntTypeT = 6
)

type GpioModeT c.Int

const (
	GPIO_MODE_DISABLE         GpioModeT = 0
	GPIO_MODE_INPUT           GpioModeT = 1
	GPIO_MODE_OUTPUT          GpioModeT = 2
	GPIO_MODE_OUTPUT_OD       GpioModeT = 6
	GPIO_MODE_INPUT_OUTPUT_OD GpioModeT = 7
	GPIO_MODE_INPUT_OUTPUT    GpioModeT = 3
)

type GpioPullupT c.Int

const (
	GPIO_PULLUP_DISABLE GpioPullupT = 0
	GPIO_PULLUP_ENABLE  GpioPullupT = 1
)

type GpioPulldownT c.Int

const (
	GPIO_PULLDOWN_DISABLE GpioPulldownT = 0
	GPIO_PULLDOWN_ENABLE  GpioPulldownT = 1
)

type GpioPullModeT c.Int

const (
	GPIO_PULLUP_ONLY     GpioPullModeT = 0
	GPIO_PULLDOWN_ONLY   GpioPullModeT = 1
	GPIO_PULLUP_PULLDOWN GpioPullModeT = 2
	GPIO_FLOATING        GpioPullModeT = 3
)

type GpioDriveCapT c.Int

const (
	GPIO_DRIVE_CAP_0       GpioDriveCapT = 0
	GPIO_DRIVE_CAP_1       GpioDriveCapT = 1
	GPIO_DRIVE_CAP_2       GpioDriveCapT = 2
	GPIO_DRIVE_CAP_DEFAULT GpioDriveCapT = 2
	GPIO_DRIVE_CAP_3       GpioDriveCapT = 3
	GPIO_DRIVE_CAP_MAX     GpioDriveCapT = 4
)

type ConstrainRegFieldsT struct {
	Val c.Uint32T
}
type MemprotHalErrT c.Int

const (
	MEMP_HAL_OK                          MemprotHalErrT = 0
	MEMP_HAL_ERR_SPLIT_ADDR_OUT_OF_RANGE MemprotHalErrT = 2
	MEMP_HAL_ERR_SPLIT_ADDR_INVALID      MemprotHalErrT = 2
	MEMP_HAL_ERR_SPLIT_ADDR_UNALIGNED    MemprotHalErrT = 3
	MEMP_HAL_ERR_UNI_BLOCK_INVALID       MemprotHalErrT = 4
	MEMP_HAL_ERR_AREA_INVALID            MemprotHalErrT = 5
	MEMP_HAL_ERR_WORLD_INVALID           MemprotHalErrT = 6
	MEMP_HAL_ERR_CORE_INVALID            MemprotHalErrT = 7
	MEMP_HAL_FAIL                        MemprotHalErrT = -1
)

type MemprotHalWorldT c.Int

const (
	MEMP_HAL_WORLD_NONE MemprotHalWorldT = 0
	MEMP_HAL_WORLD_0    MemprotHalWorldT = 1
	MEMP_HAL_WORLD_1    MemprotHalWorldT = 16
)

type MemprotHalAreaT c.Int

const (
	MEMP_HAL_AREA_NONE MemprotHalAreaT = 0
	MEMP_HAL_AREA_LOW  MemprotHalAreaT = 1
	MEMP_HAL_AREA_HIGH MemprotHalAreaT = 2
)

/*
 * SPDX-FileCopyrightText: 2020-2022 Espressif Systems (Shanghai) CO LTD
 *
 * SPDX-License-Identifier: Apache-2.0
 */

type RtcCntlDevS struct {
	Options0 struct {
		Val c.Uint32T
	}
	SlpTimer0 c.Uint32T
	SlpTimer1 struct {
		Val c.Uint32T
	}
	TimeUpdate struct {
		Val c.Uint32T
	}
	TimeLow0  c.Uint32T
	TimeHigh0 struct {
		Val c.Uint32T
	}
	State0 struct {
		Val c.Uint32T
	}
	Timer1 struct {
		Val c.Uint32T
	}
	Timer2 struct {
		Val c.Uint32T
	}
	Timer3 struct {
		Val c.Uint32T
	}
	Timer4 struct {
		Val c.Uint32T
	}
	Timer5 struct {
		Val c.Uint32T
	}
	Timer6 struct {
		Val c.Uint32T
	}
	AnaConf struct {
		Val c.Uint32T
	}
	ResetState struct {
		Val c.Uint32T
	}
	WakeupState struct {
		Val c.Uint32T
	}
	IntEna struct {
		Val c.Uint32T
	}
	IntRaw struct {
		Val c.Uint32T
	}
	IntSt struct {
		Val c.Uint32T
	}
	IntClr struct {
		Val c.Uint32T
	}
	Store      [4]c.Uint32T
	ExtXtlConf struct {
		Val c.Uint32T
	}
	ExtWakeupConf struct {
		Val c.Uint32T
	}
	SlpRejectConf struct {
		Val c.Uint32T
	}
	CpuPeriodConf struct {
		Val c.Uint32T
	}
	ClkConf struct {
		Val c.Uint32T
	}
	SlowClkConf struct {
		Val c.Uint32T
	}
	SdioConf struct {
		Val c.Uint32T
	}
	BiasConf struct {
		Val c.Uint32T
	}
	Rtc struct {
		Val c.Uint32T
	}
	RtcPwc struct {
		Val c.Uint32T
	}
	DigPwc struct {
		Val c.Uint32T
	}
	DigIso struct {
		Val c.Uint32T
	}
	WdtConfig0 struct {
		Val c.Uint32T
	}
	WdtConfig1 c.Uint32T
	WdtConfig2 c.Uint32T
	WdtConfig3 c.Uint32T
	WdtConfig4 c.Uint32T
	WdtFeed    struct {
		Val c.Uint32T
	}
	WdtWprotect c.Uint32T
	SwdConf     struct {
		Val c.Uint32T
	}
	SwdWprotect c.Uint32T
	SwCpuStall  struct {
		Val c.Uint32T
	}
	Store4     c.Uint32T
	Store5     c.Uint32T
	Store6     c.Uint32T
	Store7     c.Uint32T
	LowPowerSt struct {
		Val c.Uint32T
	}
	Diag0   c.Uint32T
	PadHold struct {
		Val c.Uint32T
	}
	DigPadHold c.Uint32T
	BrownOut   struct {
		Val c.Uint32T
	}
	TimeLow1  c.Uint32T
	TimeHigh1 struct {
		Val c.Uint32T
	}
	Xtal32kClkFactor c.Uint32T
	Xtal32kConf      struct {
		Val c.Uint32T
	}
	UsbConf struct {
		Val c.Uint32T
	}
	SlpRejectCause struct {
		Val c.Uint32T
	}
	Option1 struct {
		Val c.Uint32T
	}
	SlpWakeupCause struct {
		Val c.Uint32T
	}
	UlpCpTimer1 struct {
		Val c.Uint32T
	}
	IntEnaW1ts struct {
		Val c.Uint32T
	}
	IntEnaW1tc struct {
		Val c.Uint32T
	}
	RetentionCtrl struct {
		Val c.Uint32T
	}
	FibSel struct {
		Val c.Uint32T
	}
	GpioWakeup struct {
		Val c.Uint32T
	}
	DbgSel struct {
		Val c.Uint32T
	}
	DbgMap struct {
		Val c.Uint32T
	}
	SensorCtrl struct {
		Val c.Uint32T
	}
	DbgSarSel struct {
		Val c.Uint32T
	}
	PgCtrl struct {
		Val c.Uint32T
	}
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	Reserved14c c.Uint32T
	Reserved150 c.Uint32T
	Reserved154 c.Uint32T
	Reserved158 c.Uint32T
	Reserved15c c.Uint32T
	Reserved160 c.Uint32T
	Reserved164 c.Uint32T
	Reserved168 c.Uint32T
	Reserved16c c.Uint32T
	Reserved170 c.Uint32T
	Reserved174 c.Uint32T
	Reserved178 c.Uint32T
	Reserved17c c.Uint32T
	Reserved180 c.Uint32T
	Reserved184 c.Uint32T
	Reserved188 c.Uint32T
	Reserved18c c.Uint32T
	Reserved190 c.Uint32T
	Reserved194 c.Uint32T
	Reserved198 c.Uint32T
	Reserved19c c.Uint32T
	Reserved1a0 c.Uint32T
	Reserved1a4 c.Uint32T
	Reserved1a8 c.Uint32T
	Reserved1ac c.Uint32T
	Reserved1b0 c.Uint32T
	Reserved1b4 c.Uint32T
	Reserved1b8 c.Uint32T
	Reserved1bc c.Uint32T
	Reserved1c0 c.Uint32T
	Reserved1c4 c.Uint32T
	Reserved1c8 c.Uint32T
	Reserved1cc c.Uint32T
	Reserved1d0 c.Uint32T
	Reserved1d4 c.Uint32T
	Reserved1d8 c.Uint32T
	Reserved1dc c.Uint32T
	Reserved1e0 c.Uint32T
	Reserved1e4 c.Uint32T
	Reserved1e8 c.Uint32T
	Reserved1ec c.Uint32T
	Reserved1f0 c.Uint32T
	Reserved1f4 c.Uint32T
	Reserved1f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type RtcCntlDevT RtcCntlDevS
type GpioEtmEventEdgeT c.Int

const (
	GPIO_ETM_EVENT_EDGE_POS GpioEtmEventEdgeT = 1
	GPIO_ETM_EVENT_EDGE_NEG GpioEtmEventEdgeT = 2
	GPIO_ETM_EVENT_EDGE_ANY GpioEtmEventEdgeT = 3
)

/**
 * @brief GPIO ETM event configuration
 *
 * If more than one kind of ETM edge event want to be triggered on the same GPIO pin, you can configure them together.
 * It helps to save GPIO ETM event channel resources for other GPIOs.
 */

type GpioEtmEventConfigT struct {
	Unused [8]uint8
}
type GpioEtmTaskActionT c.Int

const (
	GPIO_ETM_TASK_ACTION_SET GpioEtmTaskActionT = 1
	GPIO_ETM_TASK_ACTION_CLR GpioEtmTaskActionT = 2
	GPIO_ETM_TASK_ACTION_TOG GpioEtmTaskActionT = 3
)

/**
 * @brief GPIO ETM task configuration
 *
 * If multiple actions wants to be added to the same GPIO pin, you have to configure all the GPIO ETM tasks together.
 */

type GpioEtmTaskConfigT struct {
	Unused [8]uint8
}
type GpioIsrHandleT IntrHandleT

// llgo:type C
type GpioIsrT func(c.Pointer)

/**
 * @brief Configuration parameters of GPIO pad for gpio_config function
 */

type GpioConfigT struct {
	PinBitMask c.Uint64T
	Mode       GpioModeT
	PullUpEn   GpioPullupT
	PullDownEn GpioPulldownT
	IntrType   GpioIntTypeT
}
type EspLogLevelT c.Int

const (
	ESP_LOG_NONE    EspLogLevelT = 0
	ESP_LOG_ERROR   EspLogLevelT = 1
	ESP_LOG_WARN    EspLogLevelT = 2
	ESP_LOG_INFO    EspLogLevelT = 3
	ESP_LOG_DEBUG   EspLogLevelT = 4
	ESP_LOG_VERBOSE EspLogLevelT = 5
	ESP_LOG_MAX     EspLogLevelT = 6
)

// llgo:type C
type VprintfLikeT func(*c.Char, c.VaList) c.Int
type IntrType c.Int

const (
	INTR_TYPE_LEVEL IntrType = 0
	INTR_TYPE_EDGE  IntrType = 1
)

// llgo:type C
type SysStartupFnT func()

/**
 * Internal structure describing ESP_SYSTEM_INIT_FN startup functions
 */

type EspSystemInitFnT struct {
	Fn    c.Pointer
	Cores c.Uint16T
	Stage c.Uint16T
}
type SpiHostDeviceT c.Int

const (
	SPI1_HOST    SpiHostDeviceT = 0
	SPI2_HOST    SpiHostDeviceT = 1
	SPI_HOST_MAX SpiHostDeviceT = 2
)

type SpiClockSourceT SocPeriphSpiClkSrcT
type SpiEventT c.Int

const (
	SPI_EV_BUF_TX         SpiEventT = 1
	SPI_EV_BUF_RX         SpiEventT = 2
	SPI_EV_SEND_DMA_READY SpiEventT = 4
	SPI_EV_SEND           SpiEventT = 8
	SPI_EV_RECV_DMA_READY SpiEventT = 16
	SPI_EV_RECV           SpiEventT = 32
	SPI_EV_CMD9           SpiEventT = 64
	SPI_EV_CMDA           SpiEventT = 128
	SPI_EV_TRANS          SpiEventT = 256
)

/**
 * @brief Line mode of SPI transaction phases: CMD, ADDR, DOUT/DIN.
 */

type SpiLineModeT struct {
	CmdLines  c.Uint8T
	AddrLines c.Uint8T
	DataLines c.Uint8T
}
type SpiCommandT c.Int

const (
	SPI_CMD_HD_WRBUF   SpiCommandT = 1
	SPI_CMD_HD_RDBUF   SpiCommandT = 2
	SPI_CMD_HD_WRDMA   SpiCommandT = 4
	SPI_CMD_HD_RDDMA   SpiCommandT = 8
	SPI_CMD_HD_SEG_END SpiCommandT = 16
	SPI_CMD_HD_EN_QPI  SpiCommandT = 32
	SPI_CMD_HD_WR_END  SpiCommandT = 64
	SPI_CMD_HD_INT0    SpiCommandT = 128
	SPI_CMD_HD_INT1    SpiCommandT = 256
	SPI_CMD_HD_INT2    SpiCommandT = 512
)

type SpiSamplingPointT c.Int

const (
	SPI_SAMPLING_POINT_PHASE_0 SpiSamplingPointT = 0
	SPI_SAMPLING_POINT_PHASE_1 SpiSamplingPointT = 1
)

/*
 * SPDX-FileCopyrightText: 2020-2022 Espressif Systems (Shanghai) CO LTD
 *
 * SPDX-License-Identifier: Apache-2.0
 */

type SpiDevS struct {
	Cmd struct {
		Val c.Uint32T
	}
	Addr c.Uint32T
	Ctrl struct {
		Val c.Uint32T
	}
	Clock struct {
		Val c.Uint32T
	}
	User struct {
		Val c.Uint32T
	}
	User1 struct {
		Val c.Uint32T
	}
	User2 struct {
		Val c.Uint32T
	}
	MsDlen struct {
		Val c.Uint32T
	}
	Misc struct {
		Val c.Uint32T
	}
	DinMode struct {
		Val c.Uint32T
	}
	DinNum struct {
		Val c.Uint32T
	}
	DoutMode struct {
		Val c.Uint32T
	}
	DmaConf struct {
		Val c.Uint32T
	}
	DmaIntEna struct {
		Val c.Uint32T
	}
	DmaIntClr struct {
		Val c.Uint32T
	}
	DmaIntRaw struct {
		Val c.Uint32T
	}
	DmaIntSt struct {
		Val c.Uint32T
	}
	Reserved44 c.Uint32T
	Reserved48 c.Uint32T
	Reserved4c c.Uint32T
	Reserved50 c.Uint32T
	Reserved54 c.Uint32T
	Reserved58 c.Uint32T
	Reserved5c c.Uint32T
	Reserved60 c.Uint32T
	Reserved64 c.Uint32T
	Reserved68 c.Uint32T
	Reserved6c c.Uint32T
	Reserved70 c.Uint32T
	Reserved74 c.Uint32T
	Reserved78 c.Uint32T
	Reserved7c c.Uint32T
	Reserved80 c.Uint32T
	Reserved84 c.Uint32T
	Reserved88 c.Uint32T
	Reserved8c c.Uint32T
	Reserved90 c.Uint32T
	Reserved94 c.Uint32T
	DataBuf    [16]c.Uint32T
	ReservedD8 c.Uint32T
	ReservedDc c.Uint32T
	Slave      struct {
		Val c.Uint32T
	}
	Slave1 struct {
		Val c.Uint32T
	}
	ClkGate struct {
		Val c.Uint32T
	}
	ReservedEc c.Uint32T
	Date       struct {
		Val c.Uint32T
	}
}
type SpiDevT SpiDevS

/*
 * SPDX-FileCopyrightText: 2020-2022 Espressif Systems (Shanghai) CO LTD
 *
 * SPDX-License-Identifier: Apache-2.0
 */

type SpiMemDevS struct {
	Cmd struct {
		Val c.Uint32T
	}
	Addr c.Uint32T
	Ctrl struct {
		Val c.Uint32T
	}
	Ctrl1 struct {
		Val c.Uint32T
	}
	Ctrl2 struct {
		Val c.Uint32T
	}
	Clock struct {
		Val c.Uint32T
	}
	User struct {
		Val c.Uint32T
	}
	User1 struct {
		Val c.Uint32T
	}
	User2 struct {
		Val c.Uint32T
	}
	MosiDlen struct {
		Val c.Uint32T
	}
	MisoDlen struct {
		Val c.Uint32T
	}
	RdStatus struct {
		Val c.Uint32T
	}
	Reserved30 c.Uint32T
	Misc       struct {
		Val c.Uint32T
	}
	TxCrc      c.Uint32T
	CacheFctrl struct {
		Val c.Uint32T
	}
	Reserved40 c.Uint32T
	Reserved44 c.Uint32T
	Reserved48 c.Uint32T
	Reserved4c c.Uint32T
	Reserved50 c.Uint32T
	Fsm        struct {
		Val c.Uint32T
	}
	DataBuf        [16]c.Uint32T
	FlashWaitiCtrl struct {
		Val c.Uint32T
	}
	FlashSusCtrl struct {
		Val c.Uint32T
	}
	FlashSusCmd struct {
		Val c.Uint32T
	}
	SusStatus struct {
		Val c.Uint32T
	}
	TimingCali struct {
		Val c.Uint32T
	}
	DinMode struct {
		Val c.Uint32T
	}
	DinNum struct {
		Val c.Uint32T
	}
	DoutMode struct {
		Val c.Uint32T
	}
	ReservedB8 c.Uint32T
	ReservedBc c.Uint32T
	IntEna     struct {
		Val c.Uint32T
	}
	IntClr struct {
		Val c.Uint32T
	}
	IntRaw struct {
		Val c.Uint32T
	}
	IntSt struct {
		Val c.Uint32T
	}
	ReservedD0 c.Uint32T
	ReservedD4 c.Uint32T
	ReservedD8 c.Uint32T
	ClockGate  struct {
		Val c.Uint32T
	}
	CoreClkSel struct {
		Val c.Uint32T
	}
	ReservedE4  c.Uint32T
	ReservedE8  c.Uint32T
	ReservedEc  c.Uint32T
	ReservedF0  c.Uint32T
	ReservedF4  c.Uint32T
	ReservedF8  c.Uint32T
	ReservedFc  c.Uint32T
	Reserved100 c.Uint32T
	Reserved104 c.Uint32T
	Reserved108 c.Uint32T
	Reserved10c c.Uint32T
	Reserved110 c.Uint32T
	Reserved114 c.Uint32T
	Reserved118 c.Uint32T
	Reserved11c c.Uint32T
	Reserved120 c.Uint32T
	Reserved124 c.Uint32T
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	Reserved14c c.Uint32T
	Reserved150 c.Uint32T
	Reserved154 c.Uint32T
	Reserved158 c.Uint32T
	Reserved15c c.Uint32T
	Reserved160 c.Uint32T
	Reserved164 c.Uint32T
	Reserved168 c.Uint32T
	Reserved16c c.Uint32T
	Reserved170 c.Uint32T
	Reserved174 c.Uint32T
	Reserved178 c.Uint32T
	Reserved17c c.Uint32T
	Reserved180 c.Uint32T
	Reserved184 c.Uint32T
	Reserved188 c.Uint32T
	Reserved18c c.Uint32T
	Reserved190 c.Uint32T
	Reserved194 c.Uint32T
	Reserved198 c.Uint32T
	Reserved19c c.Uint32T
	Reserved1a0 c.Uint32T
	Reserved1a4 c.Uint32T
	Reserved1a8 c.Uint32T
	Reserved1ac c.Uint32T
	Reserved1b0 c.Uint32T
	Reserved1b4 c.Uint32T
	Reserved1b8 c.Uint32T
	Reserved1bc c.Uint32T
	Reserved1c0 c.Uint32T
	Reserved1c4 c.Uint32T
	Reserved1c8 c.Uint32T
	Reserved1cc c.Uint32T
	Reserved1d0 c.Uint32T
	Reserved1d4 c.Uint32T
	Reserved1d8 c.Uint32T
	Reserved1dc c.Uint32T
	Reserved1e0 c.Uint32T
	Reserved1e4 c.Uint32T
	Reserved1e8 c.Uint32T
	Reserved1ec c.Uint32T
	Reserved1f0 c.Uint32T
	Reserved1f4 c.Uint32T
	Reserved1f8 c.Uint32T
	Reserved1fc c.Uint32T
	Reserved200 c.Uint32T
	Reserved204 c.Uint32T
	Reserved208 c.Uint32T
	Reserved20c c.Uint32T
	Reserved210 c.Uint32T
	Reserved214 c.Uint32T
	Reserved218 c.Uint32T
	Reserved21c c.Uint32T
	Reserved220 c.Uint32T
	Reserved224 c.Uint32T
	Reserved228 c.Uint32T
	Reserved22c c.Uint32T
	Reserved230 c.Uint32T
	Reserved234 c.Uint32T
	Reserved238 c.Uint32T
	Reserved23c c.Uint32T
	Reserved240 c.Uint32T
	Reserved244 c.Uint32T
	Reserved248 c.Uint32T
	Reserved24c c.Uint32T
	Reserved250 c.Uint32T
	Reserved254 c.Uint32T
	Reserved258 c.Uint32T
	Reserved25c c.Uint32T
	Reserved260 c.Uint32T
	Reserved264 c.Uint32T
	Reserved268 c.Uint32T
	Reserved26c c.Uint32T
	Reserved270 c.Uint32T
	Reserved274 c.Uint32T
	Reserved278 c.Uint32T
	Reserved27c c.Uint32T
	Reserved280 c.Uint32T
	Reserved284 c.Uint32T
	Reserved288 c.Uint32T
	Reserved28c c.Uint32T
	Reserved290 c.Uint32T
	Reserved294 c.Uint32T
	Reserved298 c.Uint32T
	Reserved29c c.Uint32T
	Reserved2a0 c.Uint32T
	Reserved2a4 c.Uint32T
	Reserved2a8 c.Uint32T
	Reserved2ac c.Uint32T
	Reserved2b0 c.Uint32T
	Reserved2b4 c.Uint32T
	Reserved2b8 c.Uint32T
	Reserved2bc c.Uint32T
	Reserved2c0 c.Uint32T
	Reserved2c4 c.Uint32T
	Reserved2c8 c.Uint32T
	Reserved2cc c.Uint32T
	Reserved2d0 c.Uint32T
	Reserved2d4 c.Uint32T
	Reserved2d8 c.Uint32T
	Reserved2dc c.Uint32T
	Reserved2e0 c.Uint32T
	Reserved2e4 c.Uint32T
	Reserved2e8 c.Uint32T
	Reserved2ec c.Uint32T
	Reserved2f0 c.Uint32T
	Reserved2f4 c.Uint32T
	Reserved2f8 c.Uint32T
	Reserved2fc c.Uint32T
	Reserved300 c.Uint32T
	Reserved304 c.Uint32T
	Reserved308 c.Uint32T
	Reserved30c c.Uint32T
	Reserved310 c.Uint32T
	Reserved314 c.Uint32T
	Reserved318 c.Uint32T
	Reserved31c c.Uint32T
	Reserved320 c.Uint32T
	Reserved324 c.Uint32T
	Reserved328 c.Uint32T
	Reserved32c c.Uint32T
	Reserved330 c.Uint32T
	Reserved334 c.Uint32T
	Reserved338 c.Uint32T
	Reserved33c c.Uint32T
	Reserved340 c.Uint32T
	Reserved344 c.Uint32T
	Reserved348 c.Uint32T
	Reserved34c c.Uint32T
	Reserved350 c.Uint32T
	Reserved354 c.Uint32T
	Reserved358 c.Uint32T
	Reserved35c c.Uint32T
	Reserved360 c.Uint32T
	Reserved364 c.Uint32T
	Reserved368 c.Uint32T
	Reserved36c c.Uint32T
	Reserved370 c.Uint32T
	Reserved374 c.Uint32T
	Reserved378 c.Uint32T
	Reserved37c c.Uint32T
	Reserved380 c.Uint32T
	Reserved384 c.Uint32T
	Reserved388 c.Uint32T
	Reserved38c c.Uint32T
	Reserved390 c.Uint32T
	Reserved394 c.Uint32T
	Reserved398 c.Uint32T
	Reserved39c c.Uint32T
	Reserved3a0 c.Uint32T
	Reserved3a4 c.Uint32T
	Reserved3a8 c.Uint32T
	Reserved3ac c.Uint32T
	Reserved3b0 c.Uint32T
	Reserved3b4 c.Uint32T
	Reserved3b8 c.Uint32T
	Reserved3bc c.Uint32T
	Reserved3c0 c.Uint32T
	Reserved3c4 c.Uint32T
	Reserved3c8 c.Uint32T
	Reserved3cc c.Uint32T
	Reserved3d0 c.Uint32T
	Reserved3d4 c.Uint32T
	Reserved3d8 c.Uint32T
	Reserved3dc c.Uint32T
	Reserved3e0 c.Uint32T
	Reserved3e4 c.Uint32T
	Reserved3e8 c.Uint32T
	Reserved3ec c.Uint32T
	Reserved3f0 c.Uint32T
	Reserved3f4 c.Uint32T
	Reserved3f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type SpiMemDevT SpiMemDevS

/*
Stores a bunch of per-spi-peripheral data.
*/
type SpiSignalConnT struct {
	SpiclkOut      c.Uint8T
	SpiclkIn       c.Uint8T
	SpidOut        c.Uint8T
	SpiqOut        c.Uint8T
	SpiwpOut       c.Uint8T
	SpihdOut       c.Uint8T
	SpidIn         c.Uint8T
	SpiqIn         c.Uint8T
	SpiwpIn        c.Uint8T
	SpihdIn        c.Uint8T
	SpicsOut       [6]c.Uint8T
	SpicsIn        c.Uint8T
	SpidqsOut      c.Uint8T
	SpicdOut       c.Uint8T
	SpiclkIomuxPin c.Uint8T
	SpidIomuxPin   c.Uint8T
	SpiqIomuxPin   c.Uint8T
	SpiwpIomuxPin  c.Uint8T
	SpihdIomuxPin  c.Uint8T
	Spics0IomuxPin c.Uint8T
	Irq            c.Uint8T
	IrqDma         c.Uint8T
	Func           c.Int
	Hw             *SpiDevT
}

type GpioDevS struct {
	BtSelect c.Uint32T
	Out      struct {
		Val c.Uint32T
	}
	OutW1ts struct {
		Val c.Uint32T
	}
	OutW1tc struct {
		Val c.Uint32T
	}
	Reserved10 c.Uint32T
	Reserved14 c.Uint32T
	Reserved18 c.Uint32T
	SdioSelect struct {
		Val c.Uint32T
	}
	Enable struct {
		Val c.Uint32T
	}
	EnableW1ts struct {
		Val c.Uint32T
	}
	EnableW1tc struct {
		Val c.Uint32T
	}
	Reserved2c c.Uint32T
	Reserved30 c.Uint32T
	Reserved34 c.Uint32T
	Strap      struct {
		Val c.Uint32T
	}
	In struct {
		Val c.Uint32T
	}
	Reserved40 c.Uint32T
	Status     struct {
		Val c.Uint32T
	}
	StatusW1ts struct {
		Val c.Uint32T
	}
	StatusW1tc struct {
		Val c.Uint32T
	}
	Reserved50 c.Uint32T
	Reserved54 c.Uint32T
	Reserved58 c.Uint32T
	PcpuInt    struct {
		Val c.Uint32T
	}
	PcpuNmiInt struct {
		Val c.Uint32T
	}
	CpusdioInt struct {
		Val c.Uint32T
	}
	Reserved68 c.Uint32T
	Reserved6c c.Uint32T
	Reserved70 c.Uint32T
	Pin        [26]struct {
		Val c.Uint32T
	}
	ReservedDc  c.Uint32T
	ReservedE0  c.Uint32T
	ReservedE4  c.Uint32T
	ReservedE8  c.Uint32T
	ReservedEc  c.Uint32T
	ReservedF0  c.Uint32T
	ReservedF4  c.Uint32T
	ReservedF8  c.Uint32T
	ReservedFc  c.Uint32T
	Reserved100 c.Uint32T
	Reserved104 c.Uint32T
	Reserved108 c.Uint32T
	Reserved10c c.Uint32T
	Reserved110 c.Uint32T
	Reserved114 c.Uint32T
	Reserved118 c.Uint32T
	Reserved11c c.Uint32T
	Reserved120 c.Uint32T
	Reserved124 c.Uint32T
	Reserved128 c.Uint32T
	Reserved12c c.Uint32T
	Reserved130 c.Uint32T
	Reserved134 c.Uint32T
	Reserved138 c.Uint32T
	Reserved13c c.Uint32T
	Reserved140 c.Uint32T
	Reserved144 c.Uint32T
	Reserved148 c.Uint32T
	StatusNext  struct {
		Val c.Uint32T
	}
	Reserved150  c.Uint32T
	FuncInSelCfg [128]struct {
		Val c.Uint32T
	}
	Reserved354   c.Uint32T
	Reserved358   c.Uint32T
	Reserved35c   c.Uint32T
	Reserved360   c.Uint32T
	Reserved364   c.Uint32T
	Reserved368   c.Uint32T
	Reserved36c   c.Uint32T
	Reserved370   c.Uint32T
	Reserved374   c.Uint32T
	Reserved378   c.Uint32T
	Reserved37c   c.Uint32T
	Reserved380   c.Uint32T
	Reserved384   c.Uint32T
	Reserved388   c.Uint32T
	Reserved38c   c.Uint32T
	Reserved390   c.Uint32T
	Reserved394   c.Uint32T
	Reserved398   c.Uint32T
	Reserved39c   c.Uint32T
	Reserved3a0   c.Uint32T
	Reserved3a4   c.Uint32T
	Reserved3a8   c.Uint32T
	Reserved3ac   c.Uint32T
	Reserved3b0   c.Uint32T
	Reserved3b4   c.Uint32T
	Reserved3b8   c.Uint32T
	Reserved3bc   c.Uint32T
	Reserved3c0   c.Uint32T
	Reserved3c4   c.Uint32T
	Reserved3c8   c.Uint32T
	Reserved3cc   c.Uint32T
	Reserved3d0   c.Uint32T
	Reserved3d4   c.Uint32T
	Reserved3d8   c.Uint32T
	Reserved3dc   c.Uint32T
	Reserved3e0   c.Uint32T
	Reserved3e4   c.Uint32T
	Reserved3e8   c.Uint32T
	Reserved3ec   c.Uint32T
	Reserved3f0   c.Uint32T
	Reserved3f4   c.Uint32T
	Reserved3f8   c.Uint32T
	Reserved3fc   c.Uint32T
	Reserved400   c.Uint32T
	Reserved404   c.Uint32T
	Reserved408   c.Uint32T
	Reserved40c   c.Uint32T
	Reserved410   c.Uint32T
	Reserved414   c.Uint32T
	Reserved418   c.Uint32T
	Reserved41c   c.Uint32T
	Reserved420   c.Uint32T
	Reserved424   c.Uint32T
	Reserved428   c.Uint32T
	Reserved42c   c.Uint32T
	Reserved430   c.Uint32T
	Reserved434   c.Uint32T
	Reserved438   c.Uint32T
	Reserved43c   c.Uint32T
	Reserved440   c.Uint32T
	Reserved444   c.Uint32T
	Reserved448   c.Uint32T
	Reserved44c   c.Uint32T
	Reserved450   c.Uint32T
	Reserved454   c.Uint32T
	Reserved458   c.Uint32T
	Reserved45c   c.Uint32T
	Reserved460   c.Uint32T
	Reserved464   c.Uint32T
	Reserved468   c.Uint32T
	Reserved46c   c.Uint32T
	Reserved470   c.Uint32T
	Reserved474   c.Uint32T
	Reserved478   c.Uint32T
	Reserved47c   c.Uint32T
	Reserved480   c.Uint32T
	Reserved484   c.Uint32T
	Reserved488   c.Uint32T
	Reserved48c   c.Uint32T
	Reserved490   c.Uint32T
	Reserved494   c.Uint32T
	Reserved498   c.Uint32T
	Reserved49c   c.Uint32T
	Reserved4a0   c.Uint32T
	Reserved4a4   c.Uint32T
	Reserved4a8   c.Uint32T
	Reserved4ac   c.Uint32T
	Reserved4b0   c.Uint32T
	Reserved4b4   c.Uint32T
	Reserved4b8   c.Uint32T
	Reserved4bc   c.Uint32T
	Reserved4c0   c.Uint32T
	Reserved4c4   c.Uint32T
	Reserved4c8   c.Uint32T
	Reserved4cc   c.Uint32T
	Reserved4d0   c.Uint32T
	Reserved4d4   c.Uint32T
	Reserved4d8   c.Uint32T
	Reserved4dc   c.Uint32T
	Reserved4e0   c.Uint32T
	Reserved4e4   c.Uint32T
	Reserved4e8   c.Uint32T
	Reserved4ec   c.Uint32T
	Reserved4f0   c.Uint32T
	Reserved4f4   c.Uint32T
	Reserved4f8   c.Uint32T
	Reserved4fc   c.Uint32T
	Reserved500   c.Uint32T
	Reserved504   c.Uint32T
	Reserved508   c.Uint32T
	Reserved50c   c.Uint32T
	Reserved510   c.Uint32T
	Reserved514   c.Uint32T
	Reserved518   c.Uint32T
	Reserved51c   c.Uint32T
	Reserved520   c.Uint32T
	Reserved524   c.Uint32T
	Reserved528   c.Uint32T
	Reserved52c   c.Uint32T
	Reserved530   c.Uint32T
	Reserved534   c.Uint32T
	Reserved538   c.Uint32T
	Reserved53c   c.Uint32T
	Reserved540   c.Uint32T
	Reserved544   c.Uint32T
	Reserved548   c.Uint32T
	Reserved54c   c.Uint32T
	Reserved550   c.Uint32T
	FuncOutSelCfg [26]struct {
		Val c.Uint32T
	}
	Reserved5bc c.Uint32T
	Reserved5c0 c.Uint32T
	Reserved5c4 c.Uint32T
	Reserved5c8 c.Uint32T
	Reserved5cc c.Uint32T
	Reserved5d0 c.Uint32T
	Reserved5d4 c.Uint32T
	Reserved5d8 c.Uint32T
	Reserved5dc c.Uint32T
	Reserved5e0 c.Uint32T
	Reserved5e4 c.Uint32T
	Reserved5e8 c.Uint32T
	Reserved5ec c.Uint32T
	Reserved5f0 c.Uint32T
	Reserved5f4 c.Uint32T
	Reserved5f8 c.Uint32T
	Reserved5fc c.Uint32T
	Reserved600 c.Uint32T
	Reserved604 c.Uint32T
	Reserved608 c.Uint32T
	Reserved60c c.Uint32T
	Reserved610 c.Uint32T
	Reserved614 c.Uint32T
	Reserved618 c.Uint32T
	Reserved61c c.Uint32T
	Reserved620 c.Uint32T
	Reserved624 c.Uint32T
	Reserved628 c.Uint32T
	ClockGate   struct {
		Val c.Uint32T
	}
	Reserved630 c.Uint32T
	Reserved634 c.Uint32T
	Reserved638 c.Uint32T
	Reserved63c c.Uint32T
	Reserved640 c.Uint32T
	Reserved644 c.Uint32T
	Reserved648 c.Uint32T
	Reserved64c c.Uint32T
	Reserved650 c.Uint32T
	Reserved654 c.Uint32T
	Reserved658 c.Uint32T
	Reserved65c c.Uint32T
	Reserved660 c.Uint32T
	Reserved664 c.Uint32T
	Reserved668 c.Uint32T
	Reserved66c c.Uint32T
	Reserved670 c.Uint32T
	Reserved674 c.Uint32T
	Reserved678 c.Uint32T
	Reserved67c c.Uint32T
	Reserved680 c.Uint32T
	Reserved684 c.Uint32T
	Reserved688 c.Uint32T
	Reserved68c c.Uint32T
	Reserved690 c.Uint32T
	Reserved694 c.Uint32T
	Reserved698 c.Uint32T
	Reserved69c c.Uint32T
	Reserved6a0 c.Uint32T
	Reserved6a4 c.Uint32T
	Reserved6a8 c.Uint32T
	Reserved6ac c.Uint32T
	Reserved6b0 c.Uint32T
	Reserved6b4 c.Uint32T
	Reserved6b8 c.Uint32T
	Reserved6bc c.Uint32T
	Reserved6c0 c.Uint32T
	Reserved6c4 c.Uint32T
	Reserved6c8 c.Uint32T
	Reserved6cc c.Uint32T
	Reserved6d0 c.Uint32T
	Reserved6d4 c.Uint32T
	Reserved6d8 c.Uint32T
	Reserved6dc c.Uint32T
	Reserved6e0 c.Uint32T
	Reserved6e4 c.Uint32T
	Reserved6e8 c.Uint32T
	Reserved6ec c.Uint32T
	Reserved6f0 c.Uint32T
	Reserved6f4 c.Uint32T
	Reserved6f8 c.Uint32T
	Date        struct {
		Val c.Uint32T
	}
}
type GpioDevT GpioDevS

// llgo:type C
type TaskFunctionT func(c.Pointer)
type EspResetReasonT c.Int

const (
	ESP_RST_UNKNOWN    EspResetReasonT = 0
	ESP_RST_POWERON    EspResetReasonT = 1
	ESP_RST_EXT        EspResetReasonT = 2
	ESP_RST_SW         EspResetReasonT = 3
	ESP_RST_PANIC      EspResetReasonT = 4
	ESP_RST_INT_WDT    EspResetReasonT = 5
	ESP_RST_TASK_WDT   EspResetReasonT = 6
	ESP_RST_WDT        EspResetReasonT = 7
	ESP_RST_DEEPSLEEP  EspResetReasonT = 8
	ESP_RST_BROWNOUT   EspResetReasonT = 9
	ESP_RST_SDIO       EspResetReasonT = 10
	ESP_RST_USB        EspResetReasonT = 11
	ESP_RST_JTAG       EspResetReasonT = 12
	ESP_RST_EFUSE      EspResetReasonT = 13
	ESP_RST_PWR_GLITCH EspResetReasonT = 14
	ESP_RST_CPU_LOCKUP EspResetReasonT = 15
)

// llgo:type C
type ShutdownHandlerT func()
type StackTypeT c.Uint8T
type BaseTypeT c.Int
type UBaseTypeT c.Uint
type TickTypeT c.Uint32T
type PortMUXTYPE SpinlockT

/* Used by heap_5.c to define the start address and size of each memory region
 * that together comprise the total FreeRTOS heap space. */

type HeapRegion struct {
	PucStartAddress *c.Uint8T
	XSizeInBytes    c.SizeT
}
type HeapRegionT HeapRegion

/* Used to pass information about the heap out of vPortGetHeapStats(). */

type XHeapStats struct {
	XAvailableHeapSpaceInBytes      c.SizeT
	XSizeOfLargestFreeBlockInBytes  c.SizeT
	XSizeOfSmallestFreeBlockInBytes c.SizeT
	XNumberOfFreeBlocks             c.SizeT
	XMinimumEverFreeBytesRemaining  c.SizeT
	XNumberOfSuccessfulAllocations  c.SizeT
	XNumberOfSuccessfulFrees        c.SizeT
}
type HeapStatsT XHeapStats

type Stat struct {
	Unused [8]uint8
}

type Tms struct {
	Unused [8]uint8
}

type Timeval struct {
	Unused [8]uint8
}

type Timezone struct {
	Unused [8]uint8
}

/*
 * In line with software engineering best practice, FreeRTOS implements a strict
 * data hiding policy, so the real structures used by FreeRTOS to maintain the
 * state of tasks, queues, semaphores, etc. are not accessible to the application
 * code.  However, if the application writer wants to statically allocate such
 * an object then the size of the object needs to be known.  Dummy structures
 * that are guaranteed to have the same size and alignment requirements of the
 * real objects are used for this purpose.  The dummy list and list item
 * structures below are used for inclusion in such a dummy structure.
 */

type XSTATICLISTITEM struct {
	XDummy2  TickTypeT
	PvDummy3 [4]c.Pointer
}
type StaticListItemT XSTATICLISTITEM

/* See the comments above the struct xSTATIC_LIST_ITEM definition. */

type XSTATICMINILISTITEM struct {
	XDummy2  TickTypeT
	PvDummy3 [2]c.Pointer
}
type StaticMiniListItemT XSTATICMINILISTITEM

/* See the comments above the struct xSTATIC_LIST_ITEM definition. */

type XSTATICLIST struct {
	UxDummy2 UBaseTypeT
	PvDummy3 c.Pointer
	XDummy4  StaticMiniListItemT
}
type StaticListT XSTATICLIST

/*
 * In line with software engineering best practice, especially when supplying a
 * library that is likely to change in future versions, FreeRTOS implements a
 * strict data hiding policy.  This means the Task structure used internally by
 * FreeRTOS is not accessible to application code.  However, if the application
 * writer wants to statically allocate the memory required to create a task then
 * the size of the task object needs to be known.  The StaticTask_t structure
 * below is provided for this purpose.  Its sizes and alignment requirements are
 * guaranteed to match those of the genuine structure, no matter which
 * architecture is being used, and no matter how the values in FreeRTOSConfig.h
 * are set.  Its contents are somewhat obfuscated in the hope users will
 * recognise that it would be unwise to make direct use of the structure members.
 */

type XSTATICTCB struct {
	PxDummy1  c.Pointer
	XDummy3   [2]StaticListItemT
	UxDummy5  UBaseTypeT
	PxDummy6  c.Pointer
	UcDummy7  [16]c.Uint8T
	PxDummy8  c.Pointer
	UxDummy12 [2]UBaseTypeT
	PvDummy15 [2]c.Pointer
	XDummy17  X_reent
	UlDummy18 [1]c.Uint32T
	UcDummy19 [1]c.Uint8T
	UxDummy20 c.Uint8T
	UcDummy21 c.Uint8T
}
type StaticTaskT XSTATICTCB

/*
 * In line with software engineering best practice, especially when supplying a
 * library that is likely to change in future versions, FreeRTOS implements a
 * strict data hiding policy.  This means the Queue structure used internally by
 * FreeRTOS is not accessible to application code.  However, if the application
 * writer wants to statically allocate the memory required to create a queue
 * then the size of the queue object needs to be known.  The StaticQueue_t
 * structure below is provided for this purpose.  Its sizes and alignment
 * requirements are guaranteed to match those of the genuine structure, no
 * matter which architecture is being used, and no matter how the values in
 * FreeRTOSConfig.h are set.  Its contents are somewhat obfuscated in the hope
 * users will recognise that it would be unwise to make direct use of the
 * structure members.
 */

type XSTATICQUEUE struct {
	PvDummy1 [3]c.Pointer
	U        struct {
		PvDummy2 c.Pointer
	}
	XDummy3         [2]StaticListT
	UxDummy4        [3]UBaseTypeT
	UcDummy5        [2]c.Uint8T
	UcDummy6        c.Uint8T
	PvDummy7        c.Pointer
	XDummyQueueLock PortMUXTYPE
}
type StaticQueueT XSTATICQUEUE
type StaticSemaphoreT StaticQueueT

/*
 * In line with software engineering best practice, especially when supplying a
 * library that is likely to change in future versions, FreeRTOS implements a
 * strict data hiding policy.  This means the event group structure used
 * internally by FreeRTOS is not accessible to application code.  However, if
 * the application writer wants to statically allocate the memory required to
 * create an event group then the size of the event group object needs to be
 * know.  The StaticEventGroup_t structure below is provided for this purpose.
 * Its sizes and alignment requirements are guaranteed to match those of the
 * genuine structure, no matter which architecture is being used, and no matter
 * how the values in FreeRTOSConfig.h are set.  Its contents are somewhat
 * obfuscated in the hope users will recognise that it would be unwise to make
 * direct use of the structure members.
 */

type XSTATICEVENTGROUP struct {
	XDummy1              TickTypeT
	XDummy2              StaticListT
	UcDummy4             c.Uint8T
	XDummyEventGroupLock PortMUXTYPE
}
type StaticEventGroupT XSTATICEVENTGROUP

/*
 * In line with software engineering best practice, especially when supplying a
 * library that is likely to change in future versions, FreeRTOS implements a
 * strict data hiding policy.  This means the software timer structure used
 * internally by FreeRTOS is not accessible to application code.  However, if
 * the application writer wants to statically allocate the memory required to
 * create a software timer then the size of the queue object needs to be known.
 * The StaticTimer_t structure below is provided for this purpose.  Its sizes
 * and alignment requirements are guaranteed to match those of the genuine
 * structure, no matter which architecture is being used, and no matter how the
 * values in FreeRTOSConfig.h are set.  Its contents are somewhat obfuscated in
 * the hope users will recognise that it would be unwise to make direct use of
 * the structure members.
 */

type XSTATICTIMER struct {
	PvDummy1 c.Pointer
	XDummy2  StaticListItemT
	XDummy3  TickTypeT
	PvDummy5 c.Pointer
	PvDummy6 TaskFunctionT
	UcDummy8 c.Uint8T
}
type StaticTimerT XSTATICTIMER

/*
 * In line with software engineering best practice, especially when supplying a
 * library that is likely to change in future versions, FreeRTOS implements a
 * strict data hiding policy.  This means the stream buffer structure used
 * internally by FreeRTOS is not accessible to application code.  However, if
 * the application writer wants to statically allocate the memory required to
 * create a stream buffer then the size of the stream buffer object needs to be
 * known.  The StaticStreamBuffer_t structure below is provided for this
 * purpose.  Its size and alignment requirements are guaranteed to match those
 * of the genuine structure, no matter which architecture is being used, and
 * no matter how the values in FreeRTOSConfig.h are set.  Its contents are
 * somewhat obfuscated in the hope users will recognise that it would be unwise
 * to make direct use of the structure members.
 */

type XSTATICSTREAMBUFFER struct {
	UxDummy1               [4]c.SizeT
	PvDummy2               [3]c.Pointer
	UcDummy3               c.Uint8T
	XDummyStreamBufferLock PortMUXTYPE
}
type StaticStreamBufferT XSTATICSTREAMBUFFER
type StaticMessageBufferT StaticStreamBufferT

/*
 * Definition of the only type of object that a list can contain.
 */

type XLIST struct {
	Unused [8]uint8
}

type XLISTITEM struct {
	XItemValue  TickTypeT
	PxNext      *XLISTITEM
	PxPrevious  *XLISTITEM
	PvOwner     c.Pointer
	PxContainer *XLIST
}
type ListItemT XLISTITEM

type XMINILISTITEM struct {
	XItemValue TickTypeT
	PxNext     *XLISTITEM
	PxPrevious *XLISTITEM
}
type MiniListItemT XMINILISTITEM
type ListT XLIST

/**
 *
 * Type by which tasks are referenced.  For example, a call to xTaskCreate
 * returns (via a pointer parameter) an TaskHandle_t variable that can then
 * be used as a parameter to vTaskDelete to delete the task.
 *
 * \ingroup Tasks
 */

type TskTaskControlBlock struct {
	Unused [8]uint8
}
type TaskHandleT *TskTaskControlBlock

// llgo:type C
type TaskHookFunctionT func(c.Pointer) BaseTypeT
type ETaskState c.Int

const (
	ERunning   ETaskState = 0
	EReady     ETaskState = 1
	EBlocked   ETaskState = 2
	ESuspended ETaskState = 3
	EDeleted   ETaskState = 4
	EInvalid   ETaskState = 5
)

type ENotifyAction c.Int

const (
	ENoAction                 ENotifyAction = 0
	ESetBits                  ENotifyAction = 1
	EIncrement                ENotifyAction = 2
	ESetValueWithOverwrite    ENotifyAction = 3
	ESetValueWithoutOverwrite ENotifyAction = 4
)

/*
 * Used internally only.
 */

type XTIMEOUT struct {
	XOverflowCount  BaseTypeT
	XTimeOnEntering TickTypeT
}
type TimeOutT XTIMEOUT

/*
 * Defines the memory ranges allocated to the task when an MPU is used.
 */

type XMEMORYREGION struct {
	PvBaseAddress   c.Pointer
	UlLengthInBytes c.Uint32T
	UlParameters    c.Uint32T
}
type MemoryRegionT XMEMORYREGION

/*
 * Parameters required to create an MPU protected task.
 */

type XTASKPARAMETERS struct {
	PvTaskCode     TaskFunctionT
	PcName         *c.Char
	UsStackDepth   c.Uint32T
	PvParameters   c.Pointer
	UxPriority     UBaseTypeT
	PuxStackBuffer *StackTypeT
	XRegions       [1]MemoryRegionT
}
type TaskParametersT XTASKPARAMETERS

/** Used with the uxTaskGetSystemState() function to return the state of each task
 * in the system. */

type XTASKSTATUS struct {
	XHandle              TaskHandleT
	PcTaskName           *c.Char
	XTaskNumber          UBaseTypeT
	ECurrentState        ETaskState
	UxCurrentPriority    UBaseTypeT
	UxBasePriority       UBaseTypeT
	UlRunTimeCounter     c.Uint32T
	PxStackBase          *StackTypeT
	UsStackHighWaterMark c.Uint32T
}
type TaskStatusT XTASKSTATUS
type ESleepModeStatus c.Int

const (
	EAbortSleep            ESleepModeStatus = 0
	EStandardSleep         ESleepModeStatus = 1
	ENoTasksWaitingTimeout ESleepModeStatus = 2
)

/**
 * Type by which queues are referenced.  For example, a call to xQueueCreate()
 * returns an QueueHandle_t variable that can then be used as a parameter to
 * xQueueSend(), xQueueReceive(), etc.
 */

type QueueDefinition struct {
	Unused [8]uint8
}
type QueueHandleT *QueueDefinition
type QueueSetHandleT *QueueDefinition
type QueueSetMemberHandleT *QueueDefinition
type SemaphoreHandleT QueueHandleT

/**
 * Type by which stream buffers are referenced.  For example, a call to
 * xStreamBufferCreate() returns an StreamBufferHandle_t variable that can
 * then be used as a parameter to xStreamBufferSend(), xStreamBufferReceive(),
 * etc.
 */

type StreamBufferDefT struct {
	Unused [8]uint8
}
type StreamBufferHandleT *StreamBufferDefT

// llgo:type C
type StreamBufferCallbackFunctionT func(StreamBufferHandleT, BaseTypeT, *BaseTypeT)
type MessageBufferHandleT StreamBufferHandleT

/**
 * Type by which software timers are referenced.  For example, a call to
 * xTimerCreate() returns an TimerHandle_t variable that can then be used to
 * reference the subject timer in calls to other software timer API functions
 * (for example, xTimerStart(), xTimerReset(), etc.).
 */

type TmrTimerControl struct {
	Unused [8]uint8
}
type TimerHandleT *TmrTimerControl

// llgo:type C
type TimerCallbackFunctionT func(TimerHandleT)

// llgo:type C
type PendedFunctionT func(c.Pointer, c.Uint32T)

/**
 *
 * Type by which event groups are referenced.  For example, a call to
 * xEventGroupCreate() returns an EventGroupHandle_t variable that can then
 * be used as a parameter to other event group functions.
 *
 * \ingroup EventGroup
 */

type EventGroupDefT struct {
	Unused [8]uint8
}
type EventGroupHandleT *EventGroupDefT
type EventBitsT TickTypeT

// llgo:type C
type TlsDeleteCallbackFunctionT func(c.Int, c.Pointer)
