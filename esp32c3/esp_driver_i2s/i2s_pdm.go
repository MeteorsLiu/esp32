package esp_driver_i2s

import (
	"github.com/goplus/lib/c"
	_ "unsafe"
)

/**
 * @brief I2S slot configuration for PDM TX mode
 */

type I2sPdmTxSlotConfigT struct {
	DataBitWidth   I2sDataBitWidthT
	SlotBitWidth   I2sSlotBitWidthT
	SlotMode       I2sSlotModeT
	SdPrescale     c.Uint32T
	SdScale        I2sPdmSigScaleT
	HpScale        I2sPdmSigScaleT
	LpScale        I2sPdmSigScaleT
	SincScale      I2sPdmSigScaleT
	LineMode       I2sPdmTxLineModeT
	HpEn           bool
	HpCutOffFreqHz c.Float
	SdDither       c.Uint32T
	SdDither2      c.Uint32T
}

/**
 * @brief I2S clock configuration for PDM TX mode
 */

type I2sPdmTxClkConfigT struct {
	SampleRateHz c.Uint32T
	ClkSrc       I2sClockSrcT
	MclkMultiple I2sMclkMultipleT
	UpSampleFp   c.Uint32T
	UpSampleFs   c.Uint32T
	BclkDiv      c.Uint32T
}

/**
 * @brief I2S PDM TX mode GPIO pins configuration
 */

type I2sPdmTxGpioConfigT struct {
	Clk         GpioNumT
	Dout        GpioNumT
	Dout2       GpioNumT
	InvertFlags struct {
		ClkInv c.Uint32T
	}
}

/**
 * @brief I2S PDM TX mode major configuration that including clock/slot/GPIO configuration
 */

type I2sPdmTxConfigT struct {
	ClkCfg  I2sPdmTxClkConfigT
	SlotCfg I2sPdmTxSlotConfigT
	GpioCfg I2sPdmTxGpioConfigT
}

/**
 * @brief Initialize I2S channel to PDM TX mode
 * @note  Only allowed to be called when the channel state is REGISTERED, (i.e., channel has been allocated, but not initialized)
 *        and the state will be updated to READY if initialization success, otherwise the state will return to REGISTERED.
 *
 * @param[in]   handle      I2S TX channel handler
 * @param[in]   pdm_tx_cfg  Configurations for PDM TX mode, including clock, slot and GPIO
 *                          The clock configuration can be generated by the helper macro `I2S_PDM_TX_CLK_DEFAULT_CONFIG`
 *                          The slot configuration can be generated by the helper macro `I2S_PDM_TX_SLOT_DEFAULT_CONFIG`
 *
 * @return
 *      - ESP_OK    Initialize successfully
 *      - ESP_ERR_NO_MEM        No memory for storing the channel information
 *      - ESP_ERR_INVALID_ARG   NULL pointer or invalid configuration
 *      - ESP_ERR_INVALID_STATE This channel is not registered
 */
//go:linkname I2sChannelInitPdmTxMode C.i2s_channel_init_pdm_tx_mode
func I2sChannelInitPdmTxMode(handle I2sChanHandleT, pdm_tx_cfg *I2sPdmTxConfigT) EspErrT

/**
 * @brief Reconfigure the I2S clock for PDM TX mode
 * @note  Only allowed to be called when the channel state is READY, i.e., channel has been initialized, but not started
 *        this function won't change the state. `i2s_channel_disable` should be called before calling this function if I2S has started.
 * @note  The input channel handle has to be initialized to PDM TX mode, i.e., `i2s_channel_init_pdm_tx_mode` has been called before reconfiguring
 *
 * @param[in]   handle      I2S TX channel handler
 * @param[in]   clk_cfg     PDM TX mode clock configuration, can be generated by `I2S_PDM_TX_CLK_DEFAULT_CONFIG`
 * @return
 *      - ESP_OK    Set clock successfully
 *      - ESP_ERR_INVALID_ARG   NULL pointer, invalid configuration or not PDM mode
 *      - ESP_ERR_INVALID_STATE This channel is not initialized or not stopped
 */
//go:linkname I2sChannelReconfigPdmTxClock C.i2s_channel_reconfig_pdm_tx_clock
func I2sChannelReconfigPdmTxClock(handle I2sChanHandleT, clk_cfg *I2sPdmTxClkConfigT) EspErrT

/**
 * @brief Reconfigure the I2S slot for PDM TX mode
 * @note  Only allowed to be called when the channel state is READY, i.e., channel has been initialized, but not started
 *        this function won't change the state. `i2s_channel_disable` should be called before calling this function if I2S has started.
 * @note  The input channel handle has to be initialized to PDM TX mode, i.e., `i2s_channel_init_pdm_tx_mode` has been called before reconfiguring
 *
 * @param[in]   handle      I2S TX channel handler
 * @param[in]   slot_cfg    PDM TX mode slot configuration, can be generated by `I2S_PDM_TX_SLOT_DEFAULT_CONFIG`
 * @return
 *      - ESP_OK    Set clock successfully
 *      - ESP_ERR_NO_MEM        No memory for DMA buffer
 *      - ESP_ERR_INVALID_ARG   NULL pointer, invalid configuration  or not PDM mode
 *      - ESP_ERR_INVALID_STATE This channel is not initialized or not stopped
 */
//go:linkname I2sChannelReconfigPdmTxSlot C.i2s_channel_reconfig_pdm_tx_slot
func I2sChannelReconfigPdmTxSlot(handle I2sChanHandleT, slot_cfg *I2sPdmTxSlotConfigT) EspErrT

/**
 * @brief Reconfigure the I2S GPIO for PDM TX mode
 * @note  Only allowed to be called when the channel state is READY, i.e., channel has been initialized, but not started
 *        this function won't change the state. `i2s_channel_disable` should be called before calling this function if I2S has started.
 * @note  The input channel handle has to be initialized to PDM TX mode, i.e., `i2s_channel_init_pdm_tx_mode` has been called before reconfiguring
 *
 * @param[in]   handle      I2S TX channel handler
 * @param[in]   gpio_cfg    PDM TX mode GPIO configuration, specified by user
 * @return
 *      - ESP_OK    Set clock successfully
 *      - ESP_ERR_INVALID_ARG   NULL pointer, invalid configuration  or not PDM mode
 *      - ESP_ERR_INVALID_STATE This channel is not initialized or not stopped
 */
//go:linkname I2sChannelReconfigPdmTxGpio C.i2s_channel_reconfig_pdm_tx_gpio
func I2sChannelReconfigPdmTxGpio(handle I2sChanHandleT, gpio_cfg *I2sPdmTxGpioConfigT) EspErrT
